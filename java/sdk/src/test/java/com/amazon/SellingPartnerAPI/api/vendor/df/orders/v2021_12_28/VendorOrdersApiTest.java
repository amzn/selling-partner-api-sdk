/*
 * Selling Partner API for Direct Fulfillment Orders
 * The Selling Partner API for Direct Fulfillment Orders provides programmatic access to a direct fulfillment vendor's order data.
 *
 * OpenAPI spec version: 2021-12-28
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.api.vendor.df.orders.v2021_12_28;

import com.amazon.SellingPartnerAPI.ApiResponse;
import com.amazon.SellingPartnerAPI.api.commons.ApiTest;
import com.amazon.SellingPartnerAPI.models.vendor.df.orders.v2021_12_28.ErrorList;
import org.threeten.bp.OffsetDateTime;
import com.amazon.SellingPartnerAPI.models.vendor.df.orders.v2021_12_28.Order;
import com.amazon.SellingPartnerAPI.models.vendor.df.orders.v2021_12_28.OrderList;
import com.amazon.SellingPartnerAPI.models.vendor.df.orders.v2021_12_28.SubmitAcknowledgementRequest;
import com.amazon.SellingPartnerAPI.models.vendor.df.orders.v2021_12_28.TransactionId;
import org.junit.jupiter.api.Test;

import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

public class VendorOrdersApiTest extends ApiTest {

private final VendorOrdersApi api = new VendorOrdersApi.Builder()
    .lwaAuthorizationCredentials(credentials)
    .endpoint(endpoint)
    .build();

    @Test
    public void getOrderTest() throws Exception {
        instructBackendMock("getOrder", "200");
        String purchaseOrderNumber = "";

        ApiResponse<Order> response = api.getOrderWithHttpInfo(purchaseOrderNumber);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

    @Test
    public void getOrdersTest() throws Exception {
        instructBackendMock("getOrders", "200");
        OffsetDateTime createdAfter = OffsetDateTime.now();OffsetDateTime createdBefore = OffsetDateTime.now();

        ApiResponse<OrderList> response = api.getOrdersWithHttpInfo(createdAfter, createdBefore, null, null, null, null, null, null);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

    @Test
    public void submitAcknowledgementTest() throws Exception {
        instructBackendMock("submitAcknowledgement", "202");
        SubmitAcknowledgementRequest body = new SubmitAcknowledgementRequest();

        ApiResponse<TransactionId> response = api.submitAcknowledgementWithHttpInfo(body);

        assertEquals(202, response.getStatusCode());
        if(202 != 204) assertNotNull(response.getData());
    }

}