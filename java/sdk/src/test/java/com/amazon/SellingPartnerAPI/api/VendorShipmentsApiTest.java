/*
 * Vendor Shipments v1
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.api;

import com.amazon.SellingPartnerAPI.ApiException;
import com.amazon.SellingPartnerAPI.models.GetShipmentDetailsResponse;
import com.amazon.SellingPartnerAPI.models.GetShipmentLabels;
import org.threeten.bp.OffsetDateTime;
import com.amazon.SellingPartnerAPI.models.SubmitShipmentConfirmationsRequest;
import com.amazon.SellingPartnerAPI.models.SubmitShipmentConfirmationsResponse;
import com.amazon.SellingPartnerAPI.models.SubmitShipments;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.amazon.SellingPartnerAPIAA.LWAException;

/**
* API tests for VendorShipmentsApi
*/
@Ignore
public class VendorShipmentsApiTest {

private final VendorShipmentsApi api = new VendorShipmentsApi();

/**
* GetShipmentDetails
*
* Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getShipmentDetailsTest() throws ApiException, LWAException {
    Long limit = null;
    String sortOrder = null;
    String nextToken = null;
    OffsetDateTime createdAfter = null;
    OffsetDateTime createdBefore = null;
    OffsetDateTime shipmentConfirmedBefore = null;
    OffsetDateTime shipmentConfirmedAfter = null;
    OffsetDateTime packageLabelCreatedBefore = null;
    OffsetDateTime packageLabelCreatedAfter = null;
    OffsetDateTime shippedBefore = null;
    OffsetDateTime shippedAfter = null;
    OffsetDateTime estimatedDeliveryBefore = null;
    OffsetDateTime estimatedDeliveryAfter = null;
    OffsetDateTime shipmentDeliveryBefore = null;
    OffsetDateTime shipmentDeliveryAfter = null;
    OffsetDateTime requestedPickUpBefore = null;
    OffsetDateTime requestedPickUpAfter = null;
    OffsetDateTime scheduledPickUpBefore = null;
    OffsetDateTime scheduledPickUpAfter = null;
    String currentShipmentStatus = null;
    String vendorShipmentIdentifier = null;
    String buyerReferenceNumber = null;
    String buyerWarehouseCode = null;
    String sellerWarehouseCode = null;
GetShipmentDetailsResponse response = api.getShipmentDetails(limit, sortOrder, nextToken, createdAfter, createdBefore, shipmentConfirmedBefore, shipmentConfirmedAfter, packageLabelCreatedBefore, packageLabelCreatedAfter, shippedBefore, shippedAfter, estimatedDeliveryBefore, estimatedDeliveryAfter, shipmentDeliveryBefore, shipmentDeliveryAfter, requestedPickUpBefore, requestedPickUpAfter, scheduledPickUpBefore, scheduledPickUpAfter, currentShipmentStatus, vendorShipmentIdentifier, buyerReferenceNumber, buyerWarehouseCode, sellerWarehouseCode);

// TODO: test validations
}
/**
* GetShipmentLabels
*
* Returns transport Labels based on the filters that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getShipmentLabelsTest() throws ApiException, LWAException {
    Long limit = null;
    String sortOrder = null;
    String nextToken = null;
    OffsetDateTime labelCreatedAfter = null;
    OffsetDateTime labelcreatedBefore = null;
    String buyerReferenceNumber = null;
    String vendorShipmentIdentifier = null;
    String sellerWarehouseCode = null;
GetShipmentLabels response = api.getShipmentLabels(limit, sortOrder, nextToken, labelCreatedAfter, labelcreatedBefore, buyerReferenceNumber, vendorShipmentIdentifier, sellerWarehouseCode);

// TODO: test validations
}
/**
* SubmitShipmentConfirmations
*
* Submits one or more shipment confirmations for vendor orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void submitShipmentConfirmationsTest() throws ApiException, LWAException {
    SubmitShipmentConfirmationsRequest body = null;
SubmitShipmentConfirmationsResponse response = api.submitShipmentConfirmations(body);

// TODO: test validations
}
/**
* SubmitShipments
*
* Submits one or more shipment request for vendor Orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void submitShipmentsTest() throws ApiException, LWAException {
    SubmitShipments body = null;
SubmitShipmentConfirmationsResponse response = api.submitShipments(body);

// TODO: test validations
}
}