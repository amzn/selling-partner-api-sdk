/*
 * Selling Partner API for Retail Procurement Orders
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.api.vendor.orders.v1;

import com.amazon.SellingPartnerAPI.ApiResponse;
import com.amazon.SellingPartnerAPI.api.commons.ApiTest;
import com.amazon.SellingPartnerAPI.models.vendor.orders.v1.GetPurchaseOrderResponse;
import com.amazon.SellingPartnerAPI.models.vendor.orders.v1.GetPurchaseOrdersResponse;
import com.amazon.SellingPartnerAPI.models.vendor.orders.v1.GetPurchaseOrdersStatusResponse;
import org.threeten.bp.OffsetDateTime;
import com.amazon.SellingPartnerAPI.models.vendor.orders.v1.SubmitAcknowledgementRequest;
import com.amazon.SellingPartnerAPI.models.vendor.orders.v1.SubmitAcknowledgementResponse;
import org.junit.jupiter.api.Test;

import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

public class VendorOrdersApiTest extends ApiTest {

private final VendorOrdersApi api = new VendorOrdersApi.Builder()
    .lwaAuthorizationCredentials(credentials)
    .endpoint(endpoint)
    .build();

    @Test
    public void getPurchaseOrderTest() throws Exception {
        instructBackendMock("getPurchaseOrder", "200");
        String purchaseOrderNumber = "";

        ApiResponse<GetPurchaseOrderResponse> response = api.getPurchaseOrderWithHttpInfo(purchaseOrderNumber);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

    @Test
    public void getPurchaseOrdersTest() throws Exception {
        instructBackendMock("getPurchaseOrders", "200");
        

        ApiResponse<GetPurchaseOrdersResponse> response = api.getPurchaseOrdersWithHttpInfo(null, null, null, null, null, null, null, null, null, null, null, null);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

    @Test
    public void getPurchaseOrdersStatusTest() throws Exception {
        instructBackendMock("getPurchaseOrdersStatus", "200");
        

        ApiResponse<GetPurchaseOrdersStatusResponse> response = api.getPurchaseOrdersStatusWithHttpInfo(null, null, null, null, null, null, null, null, null, null, null, null, null);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

    @Test
    public void submitAcknowledgementTest() throws Exception {
        instructBackendMock("submitAcknowledgement", "202");
        SubmitAcknowledgementRequest body = new SubmitAcknowledgementRequest();

        ApiResponse<SubmitAcknowledgementResponse> response = api.submitAcknowledgementWithHttpInfo(body);

        assertEquals(202, response.getStatusCode());
        if(202 != 204) assertNotNull(response.getData());
    }

}