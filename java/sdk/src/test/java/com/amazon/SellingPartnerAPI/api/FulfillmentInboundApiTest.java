/*
 * Fulfillment Inbound v2024-03-20
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.api;

import com.amazon.SellingPartnerAPI.ApiException;
import com.amazon.SellingPartnerAPI.models.CancelInboundPlanResponse;
import com.amazon.SellingPartnerAPI.models.CancelSelfShipAppointmentRequest;
import com.amazon.SellingPartnerAPI.models.CancelSelfShipAppointmentResponse;
import com.amazon.SellingPartnerAPI.models.ConfirmDeliveryWindowOptionsResponse;
import com.amazon.SellingPartnerAPI.models.ConfirmPackingOptionResponse;
import com.amazon.SellingPartnerAPI.models.ConfirmPlacementOptionResponse;
import com.amazon.SellingPartnerAPI.models.ConfirmShipmentContentUpdatePreviewResponse;
import com.amazon.SellingPartnerAPI.models.ConfirmTransportationOptionsRequest;
import com.amazon.SellingPartnerAPI.models.ConfirmTransportationOptionsResponse;
import com.amazon.SellingPartnerAPI.models.ContentUpdatePreview;
import com.amazon.SellingPartnerAPI.models.CreateInboundPlanRequest;
import com.amazon.SellingPartnerAPI.models.CreateInboundPlanResponse;
import com.amazon.SellingPartnerAPI.models.CreateMarketplaceItemLabelsRequest;
import com.amazon.SellingPartnerAPI.models.CreateMarketplaceItemLabelsResponse;
import com.amazon.SellingPartnerAPI.models.ErrorList;
import com.amazon.SellingPartnerAPI.models.GenerateDeliveryWindowOptionsResponse;
import com.amazon.SellingPartnerAPI.models.GeneratePackingOptionsResponse;
import com.amazon.SellingPartnerAPI.models.GeneratePlacementOptionsRequest;
import com.amazon.SellingPartnerAPI.models.GeneratePlacementOptionsResponse;
import com.amazon.SellingPartnerAPI.models.GenerateSelfShipAppointmentSlotsRequest;
import com.amazon.SellingPartnerAPI.models.GenerateSelfShipAppointmentSlotsResponse;
import com.amazon.SellingPartnerAPI.models.GenerateShipmentContentUpdatePreviewsRequest;
import com.amazon.SellingPartnerAPI.models.GenerateShipmentContentUpdatePreviewsResponse;
import com.amazon.SellingPartnerAPI.models.GenerateTransportationOptionsRequest;
import com.amazon.SellingPartnerAPI.models.GenerateTransportationOptionsResponse;
import com.amazon.SellingPartnerAPI.models.GetDeliveryChallanDocumentResponse;
import com.amazon.SellingPartnerAPI.models.GetSelfShipAppointmentSlotsResponse;
import com.amazon.SellingPartnerAPI.models.InboundOperationStatus;
import com.amazon.SellingPartnerAPI.models.InboundPlan;
import com.amazon.SellingPartnerAPI.models.ListDeliveryWindowOptionsResponse;
import com.amazon.SellingPartnerAPI.models.ListInboundPlanBoxesResponse;
import com.amazon.SellingPartnerAPI.models.ListInboundPlanItemsResponse;
import com.amazon.SellingPartnerAPI.models.ListInboundPlanPalletsResponse;
import com.amazon.SellingPartnerAPI.models.ListInboundPlansResponse;
import com.amazon.SellingPartnerAPI.models.ListItemComplianceDetailsResponse;
import com.amazon.SellingPartnerAPI.models.ListPackingGroupBoxesResponse;
import com.amazon.SellingPartnerAPI.models.ListPackingGroupItemsResponse;
import com.amazon.SellingPartnerAPI.models.ListPackingOptionsResponse;
import com.amazon.SellingPartnerAPI.models.ListPlacementOptionsResponse;
import com.amazon.SellingPartnerAPI.models.ListPrepDetailsResponse;
import com.amazon.SellingPartnerAPI.models.ListShipmentBoxesResponse;
import com.amazon.SellingPartnerAPI.models.ListShipmentContentUpdatePreviewsResponse;
import com.amazon.SellingPartnerAPI.models.ListShipmentItemsResponse;
import com.amazon.SellingPartnerAPI.models.ListShipmentPalletsResponse;
import com.amazon.SellingPartnerAPI.models.ListTransportationOptionsResponse;
import com.amazon.SellingPartnerAPI.models.ScheduleSelfShipAppointmentRequest;
import com.amazon.SellingPartnerAPI.models.ScheduleSelfShipAppointmentResponse;
import com.amazon.SellingPartnerAPI.models.SetPackingInformationRequest;
import com.amazon.SellingPartnerAPI.models.SetPackingInformationResponse;
import com.amazon.SellingPartnerAPI.models.SetPrepDetailsRequest;
import com.amazon.SellingPartnerAPI.models.SetPrepDetailsResponse;
import com.amazon.SellingPartnerAPI.models.Shipment;
import com.amazon.SellingPartnerAPI.models.UpdateInboundPlanNameRequest;
import com.amazon.SellingPartnerAPI.models.UpdateItemComplianceDetailsRequest;
import com.amazon.SellingPartnerAPI.models.UpdateItemComplianceDetailsResponse;
import com.amazon.SellingPartnerAPI.models.UpdateShipmentNameRequest;
import com.amazon.SellingPartnerAPI.models.UpdateShipmentSourceAddressRequest;
import com.amazon.SellingPartnerAPI.models.UpdateShipmentSourceAddressResponse;
import com.amazon.SellingPartnerAPI.models.UpdateShipmentTrackingDetailsRequest;
import com.amazon.SellingPartnerAPI.models.UpdateShipmentTrackingDetailsResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.amazon.SellingPartnerAPIAA.LWAException;

/**
* API tests for FulfillmentInboundApi
*/
@Ignore
public class FulfillmentInboundApiTest {

private final FulfillmentInboundApi api = new FulfillmentInboundApi();

/**
* cancelInboundPlan
*
* Cancels an Inbound Plan. Charges may apply if the cancellation is performed outside of a void window. The window for Amazon Partnered Carriers is 24 hours for Small Parcel Delivery (SPD) and one hour for Less-Than-Truckload (LTL) carrier shipments.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void cancelInboundPlanTest() throws ApiException, LWAException {
    String inboundPlanId = null;
CancelInboundPlanResponse response = api.cancelInboundPlan(inboundPlanId);

// TODO: test validations
}
/**
* cancelSelfShipAppointment
*
* Cancels a self-ship appointment slot against a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void cancelSelfShipAppointmentTest() throws ApiException, LWAException {
    CancelSelfShipAppointmentRequest body = null;
    String inboundPlanId = null;
    String shipmentId = null;
CancelSelfShipAppointmentResponse response = api.cancelSelfShipAppointment(body, inboundPlanId, shipmentId);

// TODO: test validations
}
/**
* confirmDeliveryWindowOptions
*
* Confirms the delivery window option for chosen shipment within an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new delivery window options cannot be generated, but the chosen delivery window option can be updated before shipment closure. The window is used to provide the expected time when a shipment will arrive at the warehouse. All transportation options which have the program &#x60;CONFIRMED_DELIVERY_WINDOW&#x60; require a delivery window to be confirmed prior to transportation option confirmation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void confirmDeliveryWindowOptionsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
    String deliveryWindowOptionId = null;
ConfirmDeliveryWindowOptionsResponse response = api.confirmDeliveryWindowOptions(inboundPlanId, shipmentId, deliveryWindowOptionId);

// TODO: test validations
}
/**
* confirmPackingOption
*
* Confirms the packing option for an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void confirmPackingOptionTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String packingOptionId = null;
ConfirmPackingOptionResponse response = api.confirmPackingOption(inboundPlanId, packingOptionId);

// TODO: test validations
}
/**
* confirmPlacementOption
*
* Confirms the placement option for an inbound plan. Once confirmed, it cannot be changed for the Inbound Plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void confirmPlacementOptionTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String placementOptionId = null;
ConfirmPlacementOptionResponse response = api.confirmPlacementOption(inboundPlanId, placementOptionId);

// TODO: test validations
}
/**
* confirmShipmentContentUpdatePreview
*
* Confirm a shipment content update preview and accept the changes in transportation cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void confirmShipmentContentUpdatePreviewTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
    String contentUpdatePreviewId = null;
ConfirmShipmentContentUpdatePreviewResponse response = api.confirmShipmentContentUpdatePreview(inboundPlanId, shipmentId, contentUpdatePreviewId);

// TODO: test validations
}
/**
* confirmTransportationOptions
*
* Confirms all the transportation options for an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new transportation options can not be generated or confirmed for the Inbound Plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void confirmTransportationOptionsTest() throws ApiException, LWAException {
    ConfirmTransportationOptionsRequest body = null;
    String inboundPlanId = null;
ConfirmTransportationOptionsResponse response = api.confirmTransportationOptions(body, inboundPlanId);

// TODO: test validations
}
/**
* createInboundPlan
*
* Creates an inbound plan. An inbound plan contains all the necessary information to send shipments into Amazon&#x27;s fufillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void createInboundPlanTest() throws ApiException, LWAException {
    CreateInboundPlanRequest body = null;
CreateInboundPlanResponse response = api.createInboundPlan(body);

// TODO: test validations
}
/**
* createMarketplaceItemLabels
*
* For a given marketplace - creates labels for a list of MSKUs.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void createMarketplaceItemLabelsTest() throws ApiException, LWAException {
    CreateMarketplaceItemLabelsRequest body = null;
CreateMarketplaceItemLabelsResponse response = api.createMarketplaceItemLabels(body);

// TODO: test validations
}
/**
* generateDeliveryWindowOptions
*
* Generates available delivery window options for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void generateDeliveryWindowOptionsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
GenerateDeliveryWindowOptionsResponse response = api.generateDeliveryWindowOptions(inboundPlanId, shipmentId);

// TODO: test validations
}
/**
* generatePackingOptions
*
* Generates available packing options for the inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void generatePackingOptionsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
GeneratePackingOptionsResponse response = api.generatePackingOptions(inboundPlanId);

// TODO: test validations
}
/**
* generatePlacementOptions
*
* Generates placement options for the inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void generatePlacementOptionsTest() throws ApiException, LWAException {
    GeneratePlacementOptionsRequest body = null;
    String inboundPlanId = null;
GeneratePlacementOptionsResponse response = api.generatePlacementOptions(body, inboundPlanId);

// TODO: test validations
}
/**
* generateSelfShipAppointmentSlots
*
* Initiates the process of generating the appointment slots list.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void generateSelfShipAppointmentSlotsTest() throws ApiException, LWAException {
    GenerateSelfShipAppointmentSlotsRequest body = null;
    String inboundPlanId = null;
    String shipmentId = null;
GenerateSelfShipAppointmentSlotsResponse response = api.generateSelfShipAppointmentSlots(body, inboundPlanId, shipmentId);

// TODO: test validations
}
/**
* generateShipmentContentUpdatePreviews
*
* Generate a shipment content update preview given a set of intended boxes and/or items for a shipment with a confirmed carrier. The shipment content update preview will be viewable with the updated costs and contents prior to confirmation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void generateShipmentContentUpdatePreviewsTest() throws ApiException, LWAException {
    GenerateShipmentContentUpdatePreviewsRequest body = null;
    String inboundPlanId = null;
    String shipmentId = null;
GenerateShipmentContentUpdatePreviewsResponse response = api.generateShipmentContentUpdatePreviews(body, inboundPlanId, shipmentId);

// TODO: test validations
}
/**
* generateTransportationOptions
*
* Generates available transportation options for a given placement option.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void generateTransportationOptionsTest() throws ApiException, LWAException {
    GenerateTransportationOptionsRequest body = null;
    String inboundPlanId = null;
GenerateTransportationOptionsResponse response = api.generateTransportationOptions(body, inboundPlanId);

// TODO: test validations
}
/**
* getDeliveryChallanDocument
*
* Provide delivery challan document for PCP transportation in IN marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getDeliveryChallanDocumentTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
GetDeliveryChallanDocumentResponse response = api.getDeliveryChallanDocument(inboundPlanId, shipmentId);

// TODO: test validations
}
/**
* getInboundOperationStatus
*
* Gets the status of the processing of an asynchronous API call.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getInboundOperationStatusTest() throws ApiException, LWAException {
    String operationId = null;
InboundOperationStatus response = api.getInboundOperationStatus(operationId);

// TODO: test validations
}
/**
* getInboundPlan
*
* Fetches the top level information about an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getInboundPlanTest() throws ApiException, LWAException {
    String inboundPlanId = null;
InboundPlan response = api.getInboundPlan(inboundPlanId);

// TODO: test validations
}
/**
* getSelfShipAppointmentSlots
*
* Retrieves a list of available self-ship appointment slots used to drop off a shipment at a warehouse.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getSelfShipAppointmentSlotsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
    Integer pageSize = null;
    String paginationToken = null;
GetSelfShipAppointmentSlotsResponse response = api.getSelfShipAppointmentSlots(inboundPlanId, shipmentId, pageSize, paginationToken);

// TODO: test validations
}
/**
* getShipment
*
* Provides the full details for a specific shipment within an inbound plan. The &#x60;transportationOptionId&#x60; inside &#x60;acceptedTransportationSelection&#x60; can be used to retrieve the transportation details for the shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getShipmentTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
Shipment response = api.getShipment(inboundPlanId, shipmentId);

// TODO: test validations
}
/**
* getShipmentContentUpdatePreview
*
* Retrieve a shipment content update preview which provides a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getShipmentContentUpdatePreviewTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
    String contentUpdatePreviewId = null;
ContentUpdatePreview response = api.getShipmentContentUpdatePreview(inboundPlanId, shipmentId, contentUpdatePreviewId);

// TODO: test validations
}
/**
* listDeliveryWindowOptions
*
* Retrieves all delivery window options for a shipment. Delivery window options must first be generated by the &#x60;generateDeliveryWindowOptions&#x60; operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listDeliveryWindowOptionsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListDeliveryWindowOptionsResponse response = api.listDeliveryWindowOptions(inboundPlanId, shipmentId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listInboundPlanBoxes
*
* Provides a paginated list of box packages in an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listInboundPlanBoxesTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListInboundPlanBoxesResponse response = api.listInboundPlanBoxes(inboundPlanId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listInboundPlanItems
*
* Provides a paginated list of item packages in an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listInboundPlanItemsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListInboundPlanItemsResponse response = api.listInboundPlanItems(inboundPlanId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listInboundPlanPallets
*
* Provides a paginated list of pallet packages in an inbound plan. An inbound plan will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listInboundPlanPalletsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListInboundPlanPalletsResponse response = api.listInboundPlanPallets(inboundPlanId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listInboundPlans
*
* Provides a list of inbound plans with minimal information.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listInboundPlansTest() throws ApiException, LWAException {
    Integer pageSize = null;
    String paginationToken = null;
    String status = null;
    String sortBy = null;
    String sortOrder = null;
ListInboundPlansResponse response = api.listInboundPlans(pageSize, paginationToken, status, sortBy, sortOrder);

// TODO: test validations
}
/**
* listItemComplianceDetails
*
* List the inbound compliance details for MSKUs in a given marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listItemComplianceDetailsTest() throws ApiException, LWAException {
    List<String> mskus = null;
    String marketplaceId = null;
ListItemComplianceDetailsResponse response = api.listItemComplianceDetails(mskus, marketplaceId);

// TODO: test validations
}
/**
* listPackingGroupBoxes
*
* Retrieves a page of boxes from a given packing group. These boxes were previously provided through the &#x60;setPackingInformation&#x60; operation. This API is used for workflows where boxes are packed before Amazon determines shipment splits.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listPackingGroupBoxesTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String packingGroupId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListPackingGroupBoxesResponse response = api.listPackingGroupBoxes(inboundPlanId, packingGroupId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listPackingGroupItems
*
* Retrieves a page of items in a given packing group. Packing options must first be generated by the corresponding operation before packing group items can be listed.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listPackingGroupItemsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String packingGroupId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListPackingGroupItemsResponse response = api.listPackingGroupItems(inboundPlanId, packingGroupId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listPackingOptions
*
* Retrieves a list of all packing options for an inbound plan. Packing options must first be generated by the corresponding operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listPackingOptionsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListPackingOptionsResponse response = api.listPackingOptions(inboundPlanId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listPlacementOptions
*
* Provides a list of all placement options for an inbound plan. Placement options must first be generated by the corresponding operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listPlacementOptionsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListPlacementOptionsResponse response = api.listPlacementOptions(inboundPlanId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listPrepDetails
*
* Get preparation details for a list of MSKUs in a specified marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listPrepDetailsTest() throws ApiException, LWAException {
    String marketplaceId = null;
    List<String> mskus = null;
ListPrepDetailsResponse response = api.listPrepDetails(marketplaceId, mskus);

// TODO: test validations
}
/**
* listShipmentBoxes
*
* Provides a paginated list of box packages in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listShipmentBoxesTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListShipmentBoxesResponse response = api.listShipmentBoxes(inboundPlanId, shipmentId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listShipmentContentUpdatePreviews
*
* Retrieve a paginated list of shipment content update previews for a given shipment. The shipment content update preview is a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listShipmentContentUpdatePreviewsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListShipmentContentUpdatePreviewsResponse response = api.listShipmentContentUpdatePreviews(inboundPlanId, shipmentId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listShipmentItems
*
* Provides a paginated list of item packages in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listShipmentItemsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListShipmentItemsResponse response = api.listShipmentItems(inboundPlanId, shipmentId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listShipmentPallets
*
* Provides a paginated list of pallet packages in a shipment. A palletized shipment will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listShipmentPalletsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    String shipmentId = null;
    Integer pageSize = null;
    String paginationToken = null;
ListShipmentPalletsResponse response = api.listShipmentPallets(inboundPlanId, shipmentId, pageSize, paginationToken);

// TODO: test validations
}
/**
* listTransportationOptions
*
* Retrieves all transportation options for a shipment. Transportation options must first be generated by the &#x60;generateTransportationOptions&#x60; operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listTransportationOptionsTest() throws ApiException, LWAException {
    String inboundPlanId = null;
    Integer pageSize = null;
    String paginationToken = null;
    String placementOptionId = null;
    String shipmentId = null;
ListTransportationOptionsResponse response = api.listTransportationOptions(inboundPlanId, pageSize, paginationToken, placementOptionId, shipmentId);

// TODO: test validations
}
/**
* scheduleSelfShipAppointment
*
* Confirms or reschedules a self-ship appointment slot against a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void scheduleSelfShipAppointmentTest() throws ApiException, LWAException {
    ScheduleSelfShipAppointmentRequest body = null;
    String inboundPlanId = null;
    String shipmentId = null;
    String slotId = null;
ScheduleSelfShipAppointmentResponse response = api.scheduleSelfShipAppointment(body, inboundPlanId, shipmentId, slotId);

// TODO: test validations
}
/**
* setPackingInformation
*
* Sets packing information for an inbound plan. This should be called after an inbound plan is created to populate the box level information required for planning and transportation estimates.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void setPackingInformationTest() throws ApiException, LWAException {
    SetPackingInformationRequest body = null;
    String inboundPlanId = null;
SetPackingInformationResponse response = api.setPackingInformation(body, inboundPlanId);

// TODO: test validations
}
/**
* setPrepDetails
*
* Set the preparation details for a list of MSKUs in a specified marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void setPrepDetailsTest() throws ApiException, LWAException {
    SetPrepDetailsRequest body = null;
SetPrepDetailsResponse response = api.setPrepDetails(body);

// TODO: test validations
}
/**
* updateInboundPlanName
*
* Updates the name of an existing inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void updateInboundPlanNameTest() throws ApiException, LWAException {
    UpdateInboundPlanNameRequest body = null;
    String inboundPlanId = null;
api.updateInboundPlanName(body, inboundPlanId);

// TODO: test validations
}
/**
* updateItemComplianceDetails
*
* Update compliance details for a list of MSKUs. The details provided here are only used for the India (IN - A21TJRUUN4KGV) marketplace compliance validation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void updateItemComplianceDetailsTest() throws ApiException, LWAException {
    UpdateItemComplianceDetailsRequest body = null;
    String marketplaceId = null;
UpdateItemComplianceDetailsResponse response = api.updateItemComplianceDetails(body, marketplaceId);

// TODO: test validations
}
/**
* updateShipmentName
*
* Updates the name of an existing shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void updateShipmentNameTest() throws ApiException, LWAException {
    UpdateShipmentNameRequest body = null;
    String inboundPlanId = null;
    String shipmentId = null;
api.updateShipmentName(body, inboundPlanId, shipmentId);

// TODO: test validations
}
/**
* updateShipmentSourceAddress
*
* Updates the source address of an existing shipment. The shipment source address can only be updated prior to the confirmation of the shipment carriers. As a result of the updated source address, existing transportation options will be invalidated and will need to be regenerated to capture the potential difference in transportation options and quotes due to the new source address.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void updateShipmentSourceAddressTest() throws ApiException, LWAException {
    UpdateShipmentSourceAddressRequest body = null;
    String inboundPlanId = null;
    String shipmentId = null;
UpdateShipmentSourceAddressResponse response = api.updateShipmentSourceAddress(body, inboundPlanId, shipmentId);

// TODO: test validations
}
/**
* updateShipmentTrackingDetails
*
* Updates a shipment&#x27;s tracking details.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void updateShipmentTrackingDetailsTest() throws ApiException, LWAException {
    UpdateShipmentTrackingDetailsRequest body = null;
    String inboundPlanId = null;
    String shipmentId = null;
UpdateShipmentTrackingDetailsResponse response = api.updateShipmentTrackingDetails(body, inboundPlanId, shipmentId);

// TODO: test validations
}
}