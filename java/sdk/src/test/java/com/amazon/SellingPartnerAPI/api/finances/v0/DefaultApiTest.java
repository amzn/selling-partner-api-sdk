/*
 * Selling Partner API for Finances
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.api.finances.v0;

import com.amazon.SellingPartnerAPI.ApiResponse;
import com.amazon.SellingPartnerAPI.api.commons.ApiTest;
import com.amazon.SellingPartnerAPI.models.finances.v0.ListFinancialEventGroupsResponse;
import com.amazon.SellingPartnerAPI.models.finances.v0.ListFinancialEventsResponse;
import org.threeten.bp.OffsetDateTime;
import org.junit.jupiter.api.Test;

import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

public class DefaultApiTest extends ApiTest {

private final DefaultApi api = new DefaultApi.Builder()
    .lwaAuthorizationCredentials(credentials)
    .endpoint(endpoint)
    .build();

    @Test
    public void listFinancialEventGroupsTest() throws Exception {
        instructBackendMock("listFinancialEventGroups", "200");
        

        ApiResponse<ListFinancialEventGroupsResponse> response = api.listFinancialEventGroupsWithHttpInfo(null, null, null, null);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

    @Test
    public void listFinancialEventsTest() throws Exception {
        instructBackendMock("listFinancialEvents", "200");
        

        ApiResponse<ListFinancialEventsResponse> response = api.listFinancialEventsWithHttpInfo(null, null, null, null);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

    @Test
    public void listFinancialEventsByGroupIdTest() throws Exception {
        instructBackendMock("listFinancialEventsByGroupId", "200");
        String eventGroupId = "";

        ApiResponse<ListFinancialEventsResponse> response = api.listFinancialEventsByGroupIdWithHttpInfo(eventGroupId, null, null, null, null);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

    @Test
    public void listFinancialEventsByOrderIdTest() throws Exception {
        instructBackendMock("listFinancialEventsByOrderId", "200");
        String orderId = "";

        ApiResponse<ListFinancialEventsResponse> response = api.listFinancialEventsByOrderIdWithHttpInfo(orderId, null, null);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

}