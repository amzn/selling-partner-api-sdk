/*
 * Selling Partner API for Supply Sources
 * Manage configurations and capabilities of seller supply sources.
 *
 * OpenAPI spec version: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.api;

import com.amazon.SellingPartnerAPI.ApiException;
import java.math.BigDecimal;
import com.amazon.SellingPartnerAPI.models.CreateSupplySourceRequest;
import com.amazon.SellingPartnerAPI.models.CreateSupplySourceResponse;
import com.amazon.SellingPartnerAPI.models.ErrorList;
import com.amazon.SellingPartnerAPI.models.GetSupplySourcesResponse;
import com.amazon.SellingPartnerAPI.models.SupplySource;
import com.amazon.SellingPartnerAPI.models.UpdateSupplySourceRequest;
import com.amazon.SellingPartnerAPI.models.UpdateSupplySourceStatusRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.amazon.SellingPartnerAPIAA.LWAException;

/**
* API tests for SupplySourcesApi
*/
@Ignore
public class SupplySourcesApiTest {

private final SupplySourcesApi api = new SupplySourcesApi();

/**
* 
*
* Archive a supply source, making it inactive. Cannot be undone.
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void archiveSupplySourceTest() throws ApiException, LWAException {
    String supplySourceId = null;
ErrorList response = api.archiveSupplySource(supplySourceId);

// TODO: test validations
}
/**
* 
*
* Create a new supply source.
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void createSupplySourceTest() throws ApiException, LWAException {
    CreateSupplySourceRequest body = null;
CreateSupplySourceResponse response = api.createSupplySource(body);

// TODO: test validations
}
/**
* 
*
* Retrieve a supply source.
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getSupplySourceTest() throws ApiException, LWAException {
    String supplySourceId = null;
SupplySource response = api.getSupplySource(supplySourceId);

// TODO: test validations
}
/**
* 
*
* The path to retrieve paginated supply sources.
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getSupplySourcesTest() throws ApiException, LWAException {
    String nextPageToken = null;
    BigDecimal pageSize = null;
GetSupplySourcesResponse response = api.getSupplySources(nextPageToken, pageSize);

// TODO: test validations
}
/**
* 
*
* Update the configuration and capabilities of a supply source.
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void updateSupplySourceTest() throws ApiException, LWAException {
    String supplySourceId = null;
    UpdateSupplySourceRequest body = null;
ErrorList response = api.updateSupplySource(supplySourceId, body);

// TODO: test validations
}
/**
* 
*
* Update the status of a supply source.
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void updateSupplySourceStatusTest() throws ApiException, LWAException {
    String supplySourceId = null;
    UpdateSupplySourceStatusRequest body = null;
ErrorList response = api.updateSupplySourceStatus(supplySourceId, body);

// TODO: test validations
}
}