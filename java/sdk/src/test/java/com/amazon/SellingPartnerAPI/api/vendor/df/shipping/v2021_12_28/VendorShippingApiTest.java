/*
 * Selling Partner API for Direct Fulfillment Shipping
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: 2021-12-28
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.api.vendor.df.shipping.v2021_12_28;

import com.amazon.SellingPartnerAPI.ApiResponse;
import com.amazon.SellingPartnerAPI.api.commons.ApiTest;
import com.amazon.SellingPartnerAPI.models.vendor.df.shipping.v2021_12_28.ErrorList;
import org.threeten.bp.OffsetDateTime;
import com.amazon.SellingPartnerAPI.models.vendor.df.shipping.v2021_12_28.PackingSlip;
import com.amazon.SellingPartnerAPI.models.vendor.df.shipping.v2021_12_28.PackingSlipList;
import com.amazon.SellingPartnerAPI.models.vendor.df.shipping.v2021_12_28.SubmitShipmentConfirmationsRequest;
import com.amazon.SellingPartnerAPI.models.vendor.df.shipping.v2021_12_28.SubmitShipmentStatusUpdatesRequest;
import com.amazon.SellingPartnerAPI.models.vendor.df.shipping.v2021_12_28.TransactionReference;
import org.junit.jupiter.api.Test;

import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

public class VendorShippingApiTest extends ApiTest {

private final VendorShippingApi api = new VendorShippingApi.Builder()
    .lwaAuthorizationCredentials(credentials)
    .endpoint(endpoint)
    .build();

    @Test
    public void getPackingSlipTest() throws Exception {
        instructBackendMock("getPackingSlip", "200");
        String purchaseOrderNumber = "";

        ApiResponse<PackingSlip> response = api.getPackingSlipWithHttpInfo(purchaseOrderNumber);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

    @Test
    public void getPackingSlipsTest() throws Exception {
        instructBackendMock("getPackingSlips", "200");
        OffsetDateTime createdAfter = OffsetDateTime.now();OffsetDateTime createdBefore = OffsetDateTime.now();

        ApiResponse<PackingSlipList> response = api.getPackingSlipsWithHttpInfo(createdAfter, createdBefore, null, null, null, null);

        assertEquals(200, response.getStatusCode());
        if(200 != 204) assertNotNull(response.getData());
    }

    @Test
    public void submitShipmentConfirmationsTest() throws Exception {
        instructBackendMock("submitShipmentConfirmations", "202");
        SubmitShipmentConfirmationsRequest body = new SubmitShipmentConfirmationsRequest();

        ApiResponse<TransactionReference> response = api.submitShipmentConfirmationsWithHttpInfo(body);

        assertEquals(202, response.getStatusCode());
        if(202 != 204) assertNotNull(response.getData());
    }

    @Test
    public void submitShipmentStatusUpdatesTest() throws Exception {
        instructBackendMock("submitShipmentStatusUpdates", "202");
        SubmitShipmentStatusUpdatesRequest body = new SubmitShipmentStatusUpdatesRequest();

        ApiResponse<TransactionReference> response = api.submitShipmentStatusUpdatesWithHttpInfo(body);

        assertEquals(202, response.getStatusCode());
        if(202 != 204) assertNotNull(response.getData());
    }

}