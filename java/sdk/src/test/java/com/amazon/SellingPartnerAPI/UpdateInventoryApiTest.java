/*
 * Selling Partner API for Direct Fulfillment Inventory Updates
 * The Selling Partner API for Direct Fulfillment Inventory Updates provides programmatic access to a direct fulfillment vendor's inventory updates.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI;

import com.amazon.SellingPartnerAPI.ApiException;
import com.amazon.SellingPartnerAPI.SubmitInventoryUpdateRequest;
import com.amazon.SellingPartnerAPI.SubmitInventoryUpdateResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.amazon.SellingPartnerAPIAA.LWAException;

/**
* API tests for UpdateInventoryApi
*/
@Ignore
public class UpdateInventoryApiTest {

private final UpdateInventoryApi api = new UpdateInventoryApi();

/**
* 
*
* Submits inventory updates for the specified warehouse for either a partial or full feed of inventory items.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void submitInventoryUpdateTest() throws ApiException, LWAException {
    SubmitInventoryUpdateRequest body = null;
    String warehouseId = null;
SubmitInventoryUpdateResponse response = api.submitInventoryUpdate(body, warehouseId);

// TODO: test validations
}
}