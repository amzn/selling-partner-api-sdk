/*
 * The Selling Partner API for Sellers
 * The Selling Partner API for Sellers lets you retrieve information on behalf of sellers about their seller account, such as the marketplaces they participate in. Along with listing the marketplaces that a seller can sell in, the API also provides additional information about the marketplace such as the default language and the default currency. The API also provides seller-specific information such as whether the seller has suspended listings in that marketplace.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.models.sellers.v1;

import java.util.Objects;
import java.util.Arrays;
import com.amazon.SellingPartnerAPI.models.sellers.v1.Address;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Information about the Seller&#x27;s business. These fields may be omitted if the Seller is registered as an individual.
 */
@Schema(description = "Information about the Seller's business. These fields may be omitted if the Seller is registered as an individual.")


public class Business {
  @SerializedName("name")
  private String name = null;

  @SerializedName("registeredBusinessAddress")
  private Address registeredBusinessAddress = null;

  @SerializedName("companyRegistrationNumber")
  private String companyRegistrationNumber = null;

  @SerializedName("companyTaxIdentificationNumber")
  private String companyTaxIdentificationNumber = null;

  @SerializedName("nonLatinName")
  private String nonLatinName = null;

  public Business name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The registered business name.
   * @return name
  **/
  @Schema(required = true, description = "The registered business name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Business registeredBusinessAddress(Address registeredBusinessAddress) {
    this.registeredBusinessAddress = registeredBusinessAddress;
    return this;
  }

   /**
   * Get registeredBusinessAddress
   * @return registeredBusinessAddress
  **/
  @Schema(required = true, description = "")
  public Address getRegisteredBusinessAddress() {
    return registeredBusinessAddress;
  }

  public void setRegisteredBusinessAddress(Address registeredBusinessAddress) {
    this.registeredBusinessAddress = registeredBusinessAddress;
  }

  public Business companyRegistrationNumber(String companyRegistrationNumber) {
    this.companyRegistrationNumber = companyRegistrationNumber;
    return this;
  }

   /**
   * The seller&#x27;s company registration number, if applicable. This field will be absent for individual sellers and sole proprietorships.
   * @return companyRegistrationNumber
  **/
  @Schema(description = "The seller's company registration number, if applicable. This field will be absent for individual sellers and sole proprietorships.")
  public String getCompanyRegistrationNumber() {
    return companyRegistrationNumber;
  }

  public void setCompanyRegistrationNumber(String companyRegistrationNumber) {
    this.companyRegistrationNumber = companyRegistrationNumber;
  }

  public Business companyTaxIdentificationNumber(String companyTaxIdentificationNumber) {
    this.companyTaxIdentificationNumber = companyTaxIdentificationNumber;
    return this;
  }

   /**
   * The seller&#x27;s company tax identification number, if applicable. This field will be present for certain business types only, such as sole proprietorships.
   * @return companyTaxIdentificationNumber
  **/
  @Schema(description = "The seller's company tax identification number, if applicable. This field will be present for certain business types only, such as sole proprietorships.")
  public String getCompanyTaxIdentificationNumber() {
    return companyTaxIdentificationNumber;
  }

  public void setCompanyTaxIdentificationNumber(String companyTaxIdentificationNumber) {
    this.companyTaxIdentificationNumber = companyTaxIdentificationNumber;
  }

  public Business nonLatinName(String nonLatinName) {
    this.nonLatinName = nonLatinName;
    return this;
  }

   /**
   * The non-Latin script version of the registered business name, if applicable.
   * @return nonLatinName
  **/
  @Schema(description = "The non-Latin script version of the registered business name, if applicable.")
  public String getNonLatinName() {
    return nonLatinName;
  }

  public void setNonLatinName(String nonLatinName) {
    this.nonLatinName = nonLatinName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Business business = (Business) o;
    return Objects.equals(this.name, business.name) &&
        Objects.equals(this.registeredBusinessAddress, business.registeredBusinessAddress) &&
        Objects.equals(this.companyRegistrationNumber, business.companyRegistrationNumber) &&
        Objects.equals(this.companyTaxIdentificationNumber, business.companyTaxIdentificationNumber) &&
        Objects.equals(this.nonLatinName, business.nonLatinName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, registeredBusinessAddress, companyRegistrationNumber, companyTaxIdentificationNumber, nonLatinName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Business {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    registeredBusinessAddress: ").append(toIndentedString(registeredBusinessAddress)).append("\n");
    sb.append("    companyRegistrationNumber: ").append(toIndentedString(companyRegistrationNumber)).append("\n");
    sb.append("    companyTaxIdentificationNumber: ").append(toIndentedString(companyTaxIdentificationNumber)).append("\n");
    sb.append("    nonLatinName: ").append(toIndentedString(nonLatinName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
