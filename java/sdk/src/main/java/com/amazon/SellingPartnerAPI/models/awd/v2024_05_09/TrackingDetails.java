/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory. 
 *
 * OpenAPI spec version: 2024-05-09
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.models.awd.v2024_05_09;

import java.util.Objects;
import java.util.Arrays;
import com.amazon.SellingPartnerAPI.models.awd.v2024_05_09.CarrierCode;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Tracking details for the shipment. If using SPD transportation, this can be for each case. If not using SPD transportation, this is a single tracking entry for the entire shipment.
 */
@Schema(description = "Tracking details for the shipment. If using SPD transportation, this can be for each case. If not using SPD transportation, this is a single tracking entry for the entire shipment.")


public class TrackingDetails {
  @SerializedName("carrierCode")
  private CarrierCode carrierCode = null;

  @SerializedName("shipBy")
  private OffsetDateTime shipBy = null;

  @SerializedName("bookingId")
  private String bookingId = null;

  public TrackingDetails carrierCode(CarrierCode carrierCode) {
    this.carrierCode = carrierCode;
    return this;
  }

   /**
   * Get carrierCode
   * @return carrierCode
  **/
  @Schema(description = "")
  public CarrierCode getCarrierCode() {
    return carrierCode;
  }

  public void setCarrierCode(CarrierCode carrierCode) {
    this.carrierCode = carrierCode;
  }

  public TrackingDetails shipBy(OffsetDateTime shipBy) {
    this.shipBy = shipBy;
    return this;
  }

   /**
   * Timestamp denoting when the shipment will be shipped Date should be in ISO 8601 format as defined by date-time.
   * @return shipBy
  **/
  @Schema(example = "2023-01-12T10:00Z", required = true, description = "Timestamp denoting when the shipment will be shipped Date should be in ISO 8601 format as defined by date-time.")
  public OffsetDateTime getShipBy() {
    return shipBy;
  }

  public void setShipBy(OffsetDateTime shipBy) {
    this.shipBy = shipBy;
  }

  public TrackingDetails bookingId(String bookingId) {
    this.bookingId = bookingId;
    return this;
  }

   /**
   * The identifier that is received from transportation to uniquely identify a booking.
   * @return bookingId
  **/
  @Schema(description = "The identifier that is received from transportation to uniquely identify a booking.")
  public String getBookingId() {
    return bookingId;
  }

  public void setBookingId(String bookingId) {
    this.bookingId = bookingId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrackingDetails trackingDetails = (TrackingDetails) o;
    return Objects.equals(this.carrierCode, trackingDetails.carrierCode) &&
        Objects.equals(this.shipBy, trackingDetails.shipBy) &&
        Objects.equals(this.bookingId, trackingDetails.bookingId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(carrierCode, shipBy, bookingId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrackingDetails {\n");
    
    sb.append("    carrierCode: ").append(toIndentedString(carrierCode)).append("\n");
    sb.append("    shipBy: ").append(toIndentedString(shipBy)).append("\n");
    sb.append("    bookingId: ").append(toIndentedString(bookingId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
