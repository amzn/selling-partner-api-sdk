/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.models.fulfillmentinboundv0;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The freight class of the shipment. For information about determining the freight class, contact the carrier.
 */
@JsonAdapter(SellerFreightClass.Adapter.class)
public enum SellerFreightClass {
  @SerializedName("50")
  _50("50"),
  @SerializedName("55")
  _55("55"),
  @SerializedName("60")
  _60("60"),
  @SerializedName("65")
  _65("65"),
  @SerializedName("70")
  _70("70"),
  @SerializedName("77.5")
  _77_5("77.5"),
  @SerializedName("85")
  _85("85"),
  @SerializedName("92.5")
  _92_5("92.5"),
  @SerializedName("100")
  _100("100"),
  @SerializedName("110")
  _110("110"),
  @SerializedName("125")
  _125("125"),
  @SerializedName("150")
  _150("150"),
  @SerializedName("175")
  _175("175"),
  @SerializedName("200")
  _200("200"),
  @SerializedName("250")
  _250("250"),
  @SerializedName("300")
  _300("300"),
  @SerializedName("400")
  _400("400"),
  @SerializedName("500")
  _500("500");

  private String value;

  SellerFreightClass(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static SellerFreightClass fromValue(String input) {
    for (SellerFreightClass b : SellerFreightClass.values()) {
      if (b.value.equals(input)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<SellerFreightClass> {
    @Override
    public void write(final JsonWriter jsonWriter, final SellerFreightClass enumeration) throws IOException {
      jsonWriter.value(String.valueOf(enumeration.getValue()));
    }

    @Override
    public SellerFreightClass read(final JsonReader jsonReader) throws IOException {
      Object value = jsonReader.nextString();
      return SellerFreightClass.fromValue((String)(value));
    }
  }
}
