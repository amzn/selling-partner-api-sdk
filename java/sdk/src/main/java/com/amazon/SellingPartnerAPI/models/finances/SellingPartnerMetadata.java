/*
 * The Selling Partner API for Finances
 * The Selling Partner API for Finances provides financial information relevant to a seller's business. You can obtain financial events for a given order or date range without having to wait until a statement period closes.
 *
 * OpenAPI spec version: 2024-06-19
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.models.finances;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Metadata that describes the seller.
 */
@Schema(description = "Metadata that describes the seller.")


public class SellingPartnerMetadata {
  @SerializedName("sellingPartnerId")
  private String sellingPartnerId = null;

  @SerializedName("accountType")
  private String accountType = null;

  @SerializedName("marketplaceId")
  private String marketplaceId = null;

  public SellingPartnerMetadata sellingPartnerId(String sellingPartnerId) {
    this.sellingPartnerId = sellingPartnerId;
    return this;
  }

   /**
   * A unique seller identifier.
   * @return sellingPartnerId
  **/
  @Schema(description = "A unique seller identifier.")
  public String getSellingPartnerId() {
    return sellingPartnerId;
  }

  public void setSellingPartnerId(String sellingPartnerId) {
    this.sellingPartnerId = sellingPartnerId;
  }

  public SellingPartnerMetadata accountType(String accountType) {
    this.accountType = accountType;
    return this;
  }

   /**
   * The type of account in the transaction.
   * @return accountType
  **/
  @Schema(description = "The type of account in the transaction.")
  public String getAccountType() {
    return accountType;
  }

  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }

  public SellingPartnerMetadata marketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
    return this;
  }

   /**
   * The identifier of the marketplace where the transaction occurred.
   * @return marketplaceId
  **/
  @Schema(description = "The identifier of the marketplace where the transaction occurred.")
  public String getMarketplaceId() {
    return marketplaceId;
  }

  public void setMarketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SellingPartnerMetadata sellingPartnerMetadata = (SellingPartnerMetadata) o;
    return Objects.equals(this.sellingPartnerId, sellingPartnerMetadata.sellingPartnerId) &&
        Objects.equals(this.accountType, sellingPartnerMetadata.accountType) &&
        Objects.equals(this.marketplaceId, sellingPartnerMetadata.marketplaceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sellingPartnerId, accountType, marketplaceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SellingPartnerMetadata {\n");
    
    sb.append("    sellingPartnerId: ").append(toIndentedString(sellingPartnerId)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    marketplaceId: ").append(toIndentedString(marketplaceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
