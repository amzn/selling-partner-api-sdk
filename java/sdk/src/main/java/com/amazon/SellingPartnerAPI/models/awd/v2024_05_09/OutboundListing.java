/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory. 
 *
 * OpenAPI spec version: 2024-05-09
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.models.awd.v2024_05_09;

import java.util.Objects;
import java.util.Arrays;
import com.amazon.SellingPartnerAPI.models.awd.v2024_05_09.OutboundOrder;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * A list of paginated outbound orders filtered by the attributes passed in the request.
 */
@Schema(description = "A list of paginated outbound orders filtered by the attributes passed in the request.")


public class OutboundListing {
  @SerializedName("nextToken")
  private String nextToken = null;

  @SerializedName("outboundOrders")
  private List<OutboundOrder> outboundOrders = null;

  public OutboundListing nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * TA token that is used to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when the number of results exceeds the specified &#x60;maxResults&#x60; value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages.
   * @return nextToken
  **/
  @Schema(example = "SampleToken", description = "TA token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `maxResults` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public OutboundListing outboundOrders(List<OutboundOrder> outboundOrders) {
    this.outboundOrders = outboundOrders;
    return this;
  }

  public OutboundListing addOutboundOrdersItem(OutboundOrder outboundOrdersItem) {
    if (this.outboundOrders == null) {
      this.outboundOrders = new ArrayList<OutboundOrder>();
    }
    this.outboundOrders.add(outboundOrdersItem);
    return this;
  }

   /**
   * List of outbound orders.
   * @return outboundOrders
  **/
  @Schema(description = "List of outbound orders.")
  public List<OutboundOrder> getOutboundOrders() {
    return outboundOrders;
  }

  public void setOutboundOrders(List<OutboundOrder> outboundOrders) {
    this.outboundOrders = outboundOrders;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutboundListing outboundListing = (OutboundListing) o;
    return Objects.equals(this.nextToken, outboundListing.nextToken) &&
        Objects.equals(this.outboundOrders, outboundListing.outboundOrders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextToken, outboundOrders);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutboundListing {\n");
    
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    outboundOrders: ").append(toIndentedString(outboundOrders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
