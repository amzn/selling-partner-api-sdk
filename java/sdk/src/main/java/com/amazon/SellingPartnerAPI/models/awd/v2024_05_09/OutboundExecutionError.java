/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory. 
 *
 * OpenAPI spec version: 2024-05-09
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.models.awd.v2024_05_09;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Execution errors associated with the outbound order. This field will be populated if the order failed validation.
 */
@Schema(description = "Execution errors associated with the outbound order. This field will be populated if the order failed validation.")


public class OutboundExecutionError {
  @SerializedName("failureCode")
  private String failureCode = null;

  @SerializedName("failureReasons")
  private List<String> failureReasons = new ArrayList<String>();

  @SerializedName("sku")
  private String sku = null;

  public OutboundExecutionError failureCode(String failureCode) {
    this.failureCode = failureCode;
    return this;
  }

   /**
   * Failure code details for the error.
   * @return failureCode
  **/
  @Schema(example = "TestErrorCode", required = true, description = "Failure code details for the error.")
  public String getFailureCode() {
    return failureCode;
  }

  public void setFailureCode(String failureCode) {
    this.failureCode = failureCode;
  }

  public OutboundExecutionError failureReasons(List<String> failureReasons) {
    this.failureReasons = failureReasons;
    return this;
  }

  public OutboundExecutionError addFailureReasonsItem(String failureReasonsItem) {
    this.failureReasons.add(failureReasonsItem);
    return this;
  }

   /**
   * Failure reasons for the error.
   * @return failureReasons
  **/
  @Schema(example = "[\"Test failure reason\"]", required = true, description = "Failure reasons for the error.")
  public List<String> getFailureReasons() {
    return failureReasons;
  }

  public void setFailureReasons(List<String> failureReasons) {
    this.failureReasons = failureReasons;
  }

  public OutboundExecutionError sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * MSKU associated with the error.
   * @return sku
  **/
  @Schema(example = "SampleSKU", description = "MSKU associated with the error.")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutboundExecutionError outboundExecutionError = (OutboundExecutionError) o;
    return Objects.equals(this.failureCode, outboundExecutionError.failureCode) &&
        Objects.equals(this.failureReasons, outboundExecutionError.failureReasons) &&
        Objects.equals(this.sku, outboundExecutionError.sku);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failureCode, failureReasons, sku);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutboundExecutionError {\n");
    
    sb.append("    failureCode: ").append(toIndentedString(failureCode)).append("\n");
    sb.append("    failureReasons: ").append(toIndentedString(failureReasons)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
