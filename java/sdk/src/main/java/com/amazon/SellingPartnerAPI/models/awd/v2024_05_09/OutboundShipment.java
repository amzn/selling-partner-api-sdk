/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory. 
 *
 * OpenAPI spec version: 2024-05-09
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.SellingPartnerAPI.models.awd.v2024_05_09;

import java.util.Objects;
import java.util.Arrays;
import com.amazon.SellingPartnerAPI.models.awd.v2024_05_09.Address;
import com.amazon.SellingPartnerAPI.models.awd.v2024_05_09.DistributionPackageQuantity;
import com.amazon.SellingPartnerAPI.models.awd.v2024_05_09.OutboundShipmentStatus;
import com.amazon.SellingPartnerAPI.models.awd.v2024_05_09.ProductQuantity;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Represents an AWD outbound shipment.
 */
@Schema(description = "Represents an AWD outbound shipment.")


public class OutboundShipment {
  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("destinationAddress")
  private Address destinationAddress = null;

  @SerializedName("orderId")
  private String orderId = null;

  @SerializedName("originAddress")
  private Address originAddress = null;

  @SerializedName("shipmentPackageQuantities")
  private List<DistributionPackageQuantity> shipmentPackageQuantities = null;

  @SerializedName("shipmentId")
  private String shipmentId = null;

  @SerializedName("shipmentProductQuantities")
  private List<ProductQuantity> shipmentProductQuantities = null;

  @SerializedName("shipmentStatus")
  private OutboundShipmentStatus shipmentStatus = null;

  @SerializedName("updatedAt")
  private OffsetDateTime updatedAt = null;

  public OutboundShipment createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp when the shipment was created.
   * @return createdAt
  **/
  @Schema(description = "Timestamp when the shipment was created.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public OutboundShipment destinationAddress(Address destinationAddress) {
    this.destinationAddress = destinationAddress;
    return this;
  }

   /**
   * Get destinationAddress
   * @return destinationAddress
  **/
  @Schema(required = true, description = "")
  public Address getDestinationAddress() {
    return destinationAddress;
  }

  public void setDestinationAddress(Address destinationAddress) {
    this.destinationAddress = destinationAddress;
  }

  public OutboundShipment orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Outbound order ID this outbound shipment belongs to.
   * @return orderId
  **/
  @Schema(required = true, description = "Outbound order ID this outbound shipment belongs to.")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public OutboundShipment originAddress(Address originAddress) {
    this.originAddress = originAddress;
    return this;
  }

   /**
   * Get originAddress
   * @return originAddress
  **/
  @Schema(required = true, description = "")
  public Address getOriginAddress() {
    return originAddress;
  }

  public void setOriginAddress(Address originAddress) {
    this.originAddress = originAddress;
  }

  public OutboundShipment shipmentPackageQuantities(List<DistributionPackageQuantity> shipmentPackageQuantities) {
    this.shipmentPackageQuantities = shipmentPackageQuantities;
    return this;
  }

  public OutboundShipment addShipmentPackageQuantitiesItem(DistributionPackageQuantity shipmentPackageQuantitiesItem) {
    if (this.shipmentPackageQuantities == null) {
      this.shipmentPackageQuantities = new ArrayList<DistributionPackageQuantity>();
    }
    this.shipmentPackageQuantities.add(shipmentPackageQuantitiesItem);
    return this;
  }

   /**
   * Specific distribution packages that are included in the context of this shipment.
   * @return shipmentPackageQuantities
  **/
  @Schema(description = "Specific distribution packages that are included in the context of this shipment.")
  public List<DistributionPackageQuantity> getShipmentPackageQuantities() {
    return shipmentPackageQuantities;
  }

  public void setShipmentPackageQuantities(List<DistributionPackageQuantity> shipmentPackageQuantities) {
    this.shipmentPackageQuantities = shipmentPackageQuantities;
  }

  public OutboundShipment shipmentId(String shipmentId) {
    this.shipmentId = shipmentId;
    return this;
  }

   /**
   * Unique shipment ID.
   * @return shipmentId
  **/
  @Schema(required = true, description = "Unique shipment ID.")
  public String getShipmentId() {
    return shipmentId;
  }

  public void setShipmentId(String shipmentId) {
    this.shipmentId = shipmentId;
  }

  public OutboundShipment shipmentProductQuantities(List<ProductQuantity> shipmentProductQuantities) {
    this.shipmentProductQuantities = shipmentProductQuantities;
    return this;
  }

  public OutboundShipment addShipmentProductQuantitiesItem(ProductQuantity shipmentProductQuantitiesItem) {
    if (this.shipmentProductQuantities == null) {
      this.shipmentProductQuantities = new ArrayList<ProductQuantity>();
    }
    this.shipmentProductQuantities.add(shipmentProductQuantitiesItem);
    return this;
  }

   /**
   * Specific product units that are included in the context of this shipment.
   * @return shipmentProductQuantities
  **/
  @Schema(description = "Specific product units that are included in the context of this shipment.")
  public List<ProductQuantity> getShipmentProductQuantities() {
    return shipmentProductQuantities;
  }

  public void setShipmentProductQuantities(List<ProductQuantity> shipmentProductQuantities) {
    this.shipmentProductQuantities = shipmentProductQuantities;
  }

  public OutboundShipment shipmentStatus(OutboundShipmentStatus shipmentStatus) {
    this.shipmentStatus = shipmentStatus;
    return this;
  }

   /**
   * Get shipmentStatus
   * @return shipmentStatus
  **/
  @Schema(required = true, description = "")
  public OutboundShipmentStatus getShipmentStatus() {
    return shipmentStatus;
  }

  public void setShipmentStatus(OutboundShipmentStatus shipmentStatus) {
    this.shipmentStatus = shipmentStatus;
  }

  public OutboundShipment updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Timestamp when the shipment was updated.
   * @return updatedAt
  **/
  @Schema(description = "Timestamp when the shipment was updated.")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutboundShipment outboundShipment = (OutboundShipment) o;
    return Objects.equals(this.createdAt, outboundShipment.createdAt) &&
        Objects.equals(this.destinationAddress, outboundShipment.destinationAddress) &&
        Objects.equals(this.orderId, outboundShipment.orderId) &&
        Objects.equals(this.originAddress, outboundShipment.originAddress) &&
        Objects.equals(this.shipmentPackageQuantities, outboundShipment.shipmentPackageQuantities) &&
        Objects.equals(this.shipmentId, outboundShipment.shipmentId) &&
        Objects.equals(this.shipmentProductQuantities, outboundShipment.shipmentProductQuantities) &&
        Objects.equals(this.shipmentStatus, outboundShipment.shipmentStatus) &&
        Objects.equals(this.updatedAt, outboundShipment.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, destinationAddress, orderId, originAddress, shipmentPackageQuantities, shipmentId, shipmentProductQuantities, shipmentStatus, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutboundShipment {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    destinationAddress: ").append(toIndentedString(destinationAddress)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    originAddress: ").append(toIndentedString(originAddress)).append("\n");
    sb.append("    shipmentPackageQuantities: ").append(toIndentedString(shipmentPackageQuantities)).append("\n");
    sb.append("    shipmentId: ").append(toIndentedString(shipmentId)).append("\n");
    sb.append("    shipmentProductQuantities: ").append(toIndentedString(shipmentProductQuantities)).append("\n");
    sb.append("    shipmentStatus: ").append(toIndentedString(shipmentStatus)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
