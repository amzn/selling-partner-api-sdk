/*
 * Selling Partner API for Shipment Invoicing
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partnerâ€™s Fulfillment by Amazon (FBA) orders.
 *
 * OpenAPI spec version: v0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.invoicing.v0;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** Payment transaction information */
@Schema(description = "Payment transaction information")
public class PaymentInformation {
    @SerializedName("PaymentMethod")
    private PaymentMethodEnum paymentMethod = null;

    @SerializedName("AcquirerId")
    private String acquirerId = null;

    @SerializedName("CardBrand")
    private String cardBrand = null;

    @SerializedName("PaymentValue")
    private Money paymentValue = null;

    @SerializedName("AuthorizationCode")
    private String authorizationCode = null;

    public PaymentInformation paymentMethod(PaymentMethodEnum paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }

    /**
     * Get paymentMethod
     *
     * @return paymentMethod
     */
    @Schema(description = "")
    public PaymentMethodEnum getPaymentMethod() {
        return paymentMethod;
    }

    public void setPaymentMethod(PaymentMethodEnum paymentMethod) {
        this.paymentMethod = paymentMethod;
    }

    public PaymentInformation acquirerId(String acquirerId) {
        this.acquirerId = acquirerId;
        return this;
    }

    /**
     * Government ID of acquirer
     *
     * @return acquirerId
     */
    @Schema(description = "Government ID of acquirer")
    public String getAcquirerId() {
        return acquirerId;
    }

    public void setAcquirerId(String acquirerId) {
        this.acquirerId = acquirerId;
    }

    public PaymentInformation cardBrand(String cardBrand) {
        this.cardBrand = cardBrand;
        return this;
    }

    /**
     * Credit card brand (if payment method is CreditCard)
     *
     * @return cardBrand
     */
    @Schema(description = "Credit card brand (if payment method is CreditCard)")
    public String getCardBrand() {
        return cardBrand;
    }

    public void setCardBrand(String cardBrand) {
        this.cardBrand = cardBrand;
    }

    public PaymentInformation paymentValue(Money paymentValue) {
        this.paymentValue = paymentValue;
        return this;
    }

    /**
     * Get paymentValue
     *
     * @return paymentValue
     */
    @Schema(description = "")
    public Money getPaymentValue() {
        return paymentValue;
    }

    public void setPaymentValue(Money paymentValue) {
        this.paymentValue = paymentValue;
    }

    public PaymentInformation authorizationCode(String authorizationCode) {
        this.authorizationCode = authorizationCode;
        return this;
    }

    /**
     * Authorization code for this payment
     *
     * @return authorizationCode
     */
    @Schema(description = "Authorization code for this payment")
    public String getAuthorizationCode() {
        return authorizationCode;
    }

    public void setAuthorizationCode(String authorizationCode) {
        this.authorizationCode = authorizationCode;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaymentInformation paymentInformation = (PaymentInformation) o;
        return Objects.equals(this.paymentMethod, paymentInformation.paymentMethod)
                && Objects.equals(this.acquirerId, paymentInformation.acquirerId)
                && Objects.equals(this.cardBrand, paymentInformation.cardBrand)
                && Objects.equals(this.paymentValue, paymentInformation.paymentValue)
                && Objects.equals(this.authorizationCode, paymentInformation.authorizationCode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(paymentMethod, acquirerId, cardBrand, paymentValue, authorizationCode);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PaymentInformation {\n");

        sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
        sb.append("    acquirerId: ").append(toIndentedString(acquirerId)).append("\n");
        sb.append("    cardBrand: ").append(toIndentedString(cardBrand)).append("\n");
        sb.append("    paymentValue: ").append(toIndentedString(paymentValue)).append("\n");
        sb.append("    authorizationCode: ")
                .append(toIndentedString(authorizationCode))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
