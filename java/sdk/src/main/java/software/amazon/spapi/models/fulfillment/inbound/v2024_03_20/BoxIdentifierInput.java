/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.fulfillment.inbound.v2024_03_20;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** Input information for updating a box identifier. */
@Schema(description = "Input information for updating a box identifier.")
public class BoxIdentifierInput {
    @SerializedName("externalContainerIdentifier")
    private String externalContainerIdentifier = null;

    @SerializedName("externalContainerIdentifierType")
    private BoxIdentifierType externalContainerIdentifierType = null;

    @SerializedName("packageId")
    private String packageId = null;

    public BoxIdentifierInput externalContainerIdentifier(String externalContainerIdentifier) {
        this.externalContainerIdentifier = externalContainerIdentifier;
        return this;
    }

    /**
     * The custom identifier for a certain box.
     *
     * @return externalContainerIdentifier
     */
    @Schema(description = "The custom identifier for a certain box.")
    public String getExternalContainerIdentifier() {
        return externalContainerIdentifier;
    }

    public void setExternalContainerIdentifier(String externalContainerIdentifier) {
        this.externalContainerIdentifier = externalContainerIdentifier;
    }

    public BoxIdentifierInput externalContainerIdentifierType(BoxIdentifierType externalContainerIdentifierType) {
        this.externalContainerIdentifierType = externalContainerIdentifierType;
        return this;
    }

    /**
     * Get externalContainerIdentifierType
     *
     * @return externalContainerIdentifierType
     */
    @Schema(required = true, description = "")
    public BoxIdentifierType getExternalContainerIdentifierType() {
        return externalContainerIdentifierType;
    }

    public void setExternalContainerIdentifierType(BoxIdentifierType externalContainerIdentifierType) {
        this.externalContainerIdentifierType = externalContainerIdentifierType;
    }

    public BoxIdentifierInput packageId(String packageId) {
        this.packageId = packageId;
        return this;
    }

    /**
     * Primary key to uniquely identify a Box Package.
     *
     * @return packageId
     */
    @Schema(required = true, description = "Primary key to uniquely identify a Box Package.")
    public String getPackageId() {
        return packageId;
    }

    public void setPackageId(String packageId) {
        this.packageId = packageId;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BoxIdentifierInput boxIdentifierInput = (BoxIdentifierInput) o;
        return Objects.equals(this.externalContainerIdentifier, boxIdentifierInput.externalContainerIdentifier)
                && Objects.equals(
                        this.externalContainerIdentifierType, boxIdentifierInput.externalContainerIdentifierType)
                && Objects.equals(this.packageId, boxIdentifierInput.packageId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(externalContainerIdentifier, externalContainerIdentifierType, packageId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class BoxIdentifierInput {\n");

        sb.append("    externalContainerIdentifier: ")
                .append(toIndentedString(externalContainerIdentifier))
                .append("\n");
        sb.append("    externalContainerIdentifierType: ")
                .append(toIndentedString(externalContainerIdentifierType))
                .append("\n");
        sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
