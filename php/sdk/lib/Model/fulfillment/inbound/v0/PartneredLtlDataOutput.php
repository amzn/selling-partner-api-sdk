<?php
/**
 * PartneredLtlDataOutput
 *
 * PHP version 8.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model\fulfillment\inbound\v0;

use
ArrayAccess;
use OpenAPI\Client\ObjectSerializer;
use OpenAPI\Client\Model\ModelInterface;

/**
 * PartneredLtlDataOutput Class Doc Comment
 *
 * @category Class
 * @description Information returned by Amazon about a Less Than Truckload/Full Truckload (LTL/FTL) shipment by an Amazon-partnered carrier.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class PartneredLtlDataOutput implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'PartneredLtlDataOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $openAPITypes = [
             'contact' => '\OpenAPI\Client\Model\fulfillment\inbound\v0\Contact',
             'box_count' => 'int',
             'seller_freight_class' => '\OpenAPI\Client\Model\fulfillment\inbound\v0\SellerFreightClass',
             'freight_ready_date' => '\DateTime',
             'pallet_list' => '\OpenAPI\Client\Model\fulfillment\inbound\v0\Pallet[]',
             'total_weight' => '\OpenAPI\Client\Model\fulfillment\inbound\v0\Weight',
             'seller_declared_value' => '\OpenAPI\Client\Model\fulfillment\inbound\v0\Amount',
             'amazon_calculated_value' => '\OpenAPI\Client\Model\fulfillment\inbound\v0\Amount',
             'preview_pickup_date' => '\DateTime',
             'preview_delivery_date' => '\DateTime',
             'preview_freight_class' => '\OpenAPI\Client\Model\fulfillment\inbound\v0\SellerFreightClass',
             'amazon_reference_id' => 'string',
             'is_bill_of_lading_available' => 'bool',
             'partnered_estimate' => '\OpenAPI\Client\Model\fulfillment\inbound\v0\PartneredEstimate',
             'carrier_name' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static array $openAPIFormats = [
            'contact' => null,
            'box_count' => 'int64',
            'seller_freight_class' => null,
            'freight_ready_date' => 'date',
            'pallet_list' => null,
            'total_weight' => null,
            'seller_declared_value' => null,
            'amazon_calculated_value' => null,
            'preview_pickup_date' => 'date',
            'preview_delivery_date' => 'date',
            'preview_freight_class' => null,
            'amazon_reference_id' => null,
            'is_bill_of_lading_available' => null,
            'partnered_estimate' => null,
            'carrier_name' => null    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'contact' => false,
        'box_count' => false,
        'seller_freight_class' => true,
        'freight_ready_date' => false,
        'pallet_list' => false,
        'total_weight' => false,
        'seller_declared_value' => true,
        'amazon_calculated_value' => true,
        'preview_pickup_date' => false,
        'preview_delivery_date' => false,
        'preview_freight_class' => false,
        'amazon_reference_id' => false,
        'is_bill_of_lading_available' => false,
        'partnered_estimate' => true,
        'carrier_name' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes(): array
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats(): array
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'contact' => 'Contact',
                'box_count' => 'BoxCount',
                'seller_freight_class' => 'SellerFreightClass',
                'freight_ready_date' => 'FreightReadyDate',
                'pallet_list' => 'PalletList',
                'total_weight' => 'TotalWeight',
                'seller_declared_value' => 'SellerDeclaredValue',
                'amazon_calculated_value' => 'AmazonCalculatedValue',
                'preview_pickup_date' => 'PreviewPickupDate',
                'preview_delivery_date' => 'PreviewDeliveryDate',
                'preview_freight_class' => 'PreviewFreightClass',
                'amazon_reference_id' => 'AmazonReferenceId',
                'is_bill_of_lading_available' => 'IsBillOfLadingAvailable',
                'partnered_estimate' => 'PartneredEstimate',
                'carrier_name' => 'CarrierName'
        
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'contact' => 'setContact',
        'box_count' => 'setBoxCount',
        'seller_freight_class' => 'setSellerFreightClass',
        'freight_ready_date' => 'setFreightReadyDate',
        'pallet_list' => 'setPalletList',
        'total_weight' => 'setTotalWeight',
        'seller_declared_value' => 'setSellerDeclaredValue',
        'amazon_calculated_value' => 'setAmazonCalculatedValue',
        'preview_pickup_date' => 'setPreviewPickupDate',
        'preview_delivery_date' => 'setPreviewDeliveryDate',
        'preview_freight_class' => 'setPreviewFreightClass',
        'amazon_reference_id' => 'setAmazonReferenceId',
        'is_bill_of_lading_available' => 'setIsBillOfLadingAvailable',
        'partnered_estimate' => 'setPartneredEstimate',
        'carrier_name' => 'setCarrierName'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'contact' => 'getContact',
        'box_count' => 'getBoxCount',
        'seller_freight_class' => 'getSellerFreightClass',
        'freight_ready_date' => 'getFreightReadyDate',
        'pallet_list' => 'getPalletList',
        'total_weight' => 'getTotalWeight',
        'seller_declared_value' => 'getSellerDeclaredValue',
        'amazon_calculated_value' => 'getAmazonCalculatedValue',
        'preview_pickup_date' => 'getPreviewPickupDate',
        'preview_delivery_date' => 'getPreviewDeliveryDate',
        'preview_freight_class' => 'getPreviewFreightClass',
        'amazon_reference_id' => 'getAmazonReferenceId',
        'is_bill_of_lading_available' => 'getIsBillOfLadingAvailable',
        'partnered_estimate' => 'getPartneredEstimate',
        'carrier_name' => 'getCarrierName'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap(): array
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters(): array
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters(): array
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName(): string
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var array
     */
    protected array $container = [];

    /**
     * Constructor
     *
     * @param array|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('contact', $data ?? [], null);
        $this->setIfExists('box_count', $data ?? [], null);
        $this->setIfExists('seller_freight_class', $data ?? [], null);
        $this->setIfExists('freight_ready_date', $data ?? [], null);
        $this->setIfExists('pallet_list', $data ?? [], null);
        $this->setIfExists('total_weight', $data ?? [], null);
        $this->setIfExists('seller_declared_value', $data ?? [], null);
        $this->setIfExists('amazon_calculated_value', $data ?? [], null);
        $this->setIfExists('preview_pickup_date', $data ?? [], null);
        $this->setIfExists('preview_delivery_date', $data ?? [], null);
        $this->setIfExists('preview_freight_class', $data ?? [], null);
        $this->setIfExists('amazon_reference_id', $data ?? [], null);
        $this->setIfExists('is_bill_of_lading_available', $data ?? [], null);
        $this->setIfExists('partnered_estimate', $data ?? [], null);
        $this->setIfExists('carrier_name', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties(): array
    {
        $invalidProperties = [];

        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['box_count'] === null) {
            $invalidProperties[] = "'box_count' can't be null";
        }
        if ($this->container['freight_ready_date'] === null) {
            $invalidProperties[] = "'freight_ready_date' can't be null";
        }
        if ($this->container['pallet_list'] === null) {
            $invalidProperties[] = "'pallet_list' can't be null";
        }
        if ($this->container['total_weight'] === null) {
            $invalidProperties[] = "'total_weight' can't be null";
        }
        if ($this->container['preview_pickup_date'] === null) {
            $invalidProperties[] = "'preview_pickup_date' can't be null";
        }
        if ($this->container['preview_delivery_date'] === null) {
            $invalidProperties[] = "'preview_delivery_date' can't be null";
        }
        if ($this->container['preview_freight_class'] === null) {
            $invalidProperties[] = "'preview_freight_class' can't be null";
        }
        if ($this->container['amazon_reference_id'] === null) {
            $invalidProperties[] = "'amazon_reference_id' can't be null";
        }
        if ($this->container['is_bill_of_lading_available'] === null) {
            $invalidProperties[] = "'is_bill_of_lading_available' can't be null";
        }
        if ($this->container['carrier_name'] === null) {
            $invalidProperties[] = "'carrier_name' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid(): bool
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets contact
     *
     * @return \OpenAPI\Client\Model\fulfillment\inbound\v0\Contact
     */
    public function getContact(): \OpenAPI\Client\Model\fulfillment\inbound\v0\Contact
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param \OpenAPI\Client\Model\fulfillment\inbound\v0\Contact $contact contact
     *
     * @return self
     */
    public function setContact(\OpenAPI\Client\Model\fulfillment\inbound\v0\Contact $contact): self
    {
        if (is_null($contact)) {
            throw new \InvalidArgumentException('non-nullable contact cannot be null');
        }
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets box_count
     *
     * @return int
     */
    public function getBoxCount(): int
    {
        return $this->container['box_count'];
    }

    /**
     * Sets box_count
     *
     * @param int $box_count Contains an unsigned integer
     *
     * @return self
     */
    public function setBoxCount(int $box_count): self
    {
        if (is_null($box_count)) {
            throw new \InvalidArgumentException('non-nullable box_count cannot be null');
        }
        $this->container['box_count'] = $box_count;

        return $this;
    }

    /**
     * Gets seller_freight_class
     *
     * @return string|null
     */
    public function getSellerFreightClass(): ?string
    {
        return $this->container['seller_freight_class'];
    }

    /**
     * Sets seller_freight_class
     *
     * @param string|null $seller_freight_class seller_freight_class
     *
     * @return self
     */
    public function setSellerFreightClass(?string $seller_freight_class): self
    {
        if (is_null($seller_freight_class)) {
            array_push($this->openAPINullablesSetToNull, 'seller_freight_class');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('seller_freight_class', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['seller_freight_class'] = $seller_freight_class;

        return $this;
    }

    /**
     * Gets freight_ready_date
     *
     * @return \DateTime
     */
    public function getFreightReadyDate(): \DateTime
    {
        return $this->container['freight_ready_date'];
    }

    /**
     * Sets freight_ready_date
     *
     * @param \DateTime $freight_ready_date Type containing date in string format
     *
     * @return self
     */
    public function setFreightReadyDate(\DateTime $freight_ready_date): self
    {
        if (is_null($freight_ready_date)) {
            throw new \InvalidArgumentException('non-nullable freight_ready_date cannot be null');
        }
        $this->container['freight_ready_date'] = $freight_ready_date;

        return $this;
    }

    /**
     * Gets pallet_list
     *
     * @return array
     */
    public function getPalletList(): array
    {
        return $this->container['pallet_list'];
    }

    /**
     * Sets pallet_list
     *
     * @param array $pallet_list A list of pallet information.
     *
     * @return self
     */
    public function setPalletList(array $pallet_list): self
    {
        if (is_null($pallet_list)) {
            throw new \InvalidArgumentException('non-nullable pallet_list cannot be null');
        }
        $this->container['pallet_list'] = $pallet_list;

        return $this;
    }

    /**
     * Gets total_weight
     *
     * @return \OpenAPI\Client\Model\fulfillment\inbound\v0\Weight
     */
    public function getTotalWeight(): \OpenAPI\Client\Model\fulfillment\inbound\v0\Weight
    {
        return $this->container['total_weight'];
    }

    /**
     * Sets total_weight
     *
     * @param \OpenAPI\Client\Model\fulfillment\inbound\v0\Weight $total_weight total_weight
     *
     * @return self
     */
    public function setTotalWeight(\OpenAPI\Client\Model\fulfillment\inbound\v0\Weight $total_weight): self
    {
        if (is_null($total_weight)) {
            throw new \InvalidArgumentException('non-nullable total_weight cannot be null');
        }
        $this->container['total_weight'] = $total_weight;

        return $this;
    }

    /**
     * Gets seller_declared_value
     *
     * @return \OpenAPI\Client\Model\fulfillment\inbound\v0\Amount|null
     */
    public function getSellerDeclaredValue(): ?\OpenAPI\Client\Model\fulfillment\inbound\v0\Amount
    {
        return $this->container['seller_declared_value'];
    }

    /**
     * Sets seller_declared_value
     *
     * @param \OpenAPI\Client\Model\fulfillment\inbound\v0\Amount|null $seller_declared_value seller_declared_value
     *
     * @return self
     */
    public function setSellerDeclaredValue(?\OpenAPI\Client\Model\fulfillment\inbound\v0\Amount $seller_declared_value): self
    {
        if (is_null($seller_declared_value)) {
            array_push($this->openAPINullablesSetToNull, 'seller_declared_value');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('seller_declared_value', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['seller_declared_value'] = $seller_declared_value;

        return $this;
    }

    /**
     * Gets amazon_calculated_value
     *
     * @return \OpenAPI\Client\Model\fulfillment\inbound\v0\Amount|null
     */
    public function getAmazonCalculatedValue(): ?\OpenAPI\Client\Model\fulfillment\inbound\v0\Amount
    {
        return $this->container['amazon_calculated_value'];
    }

    /**
     * Sets amazon_calculated_value
     *
     * @param \OpenAPI\Client\Model\fulfillment\inbound\v0\Amount|null $amazon_calculated_value amazon_calculated_value
     *
     * @return self
     */
    public function setAmazonCalculatedValue(?\OpenAPI\Client\Model\fulfillment\inbound\v0\Amount $amazon_calculated_value): self
    {
        if (is_null($amazon_calculated_value)) {
            array_push($this->openAPINullablesSetToNull, 'amazon_calculated_value');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('amazon_calculated_value', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['amazon_calculated_value'] = $amazon_calculated_value;

        return $this;
    }

    /**
     * Gets preview_pickup_date
     *
     * @return \DateTime
     */
    public function getPreviewPickupDate(): \DateTime
    {
        return $this->container['preview_pickup_date'];
    }

    /**
     * Sets preview_pickup_date
     *
     * @param \DateTime $preview_pickup_date Type containing date in string format
     *
     * @return self
     */
    public function setPreviewPickupDate(\DateTime $preview_pickup_date): self
    {
        if (is_null($preview_pickup_date)) {
            throw new \InvalidArgumentException('non-nullable preview_pickup_date cannot be null');
        }
        $this->container['preview_pickup_date'] = $preview_pickup_date;

        return $this;
    }

    /**
     * Gets preview_delivery_date
     *
     * @return \DateTime
     */
    public function getPreviewDeliveryDate(): \DateTime
    {
        return $this->container['preview_delivery_date'];
    }

    /**
     * Sets preview_delivery_date
     *
     * @param \DateTime $preview_delivery_date Type containing date in string format
     *
     * @return self
     */
    public function setPreviewDeliveryDate(\DateTime $preview_delivery_date): self
    {
        if (is_null($preview_delivery_date)) {
            throw new \InvalidArgumentException('non-nullable preview_delivery_date cannot be null');
        }
        $this->container['preview_delivery_date'] = $preview_delivery_date;

        return $this;
    }

    /**
     * Gets preview_freight_class
     *
     * @return string
     */
    public function getPreviewFreightClass(): string
    {
        return $this->container['preview_freight_class'];
    }

    /**
     * Sets preview_freight_class
     *
     * @param string $preview_freight_class preview_freight_class
     *
     * @return self
     */
    public function setPreviewFreightClass(string $preview_freight_class): self
    {
        if (is_null($preview_freight_class)) {
            throw new \InvalidArgumentException('non-nullable preview_freight_class cannot be null');
        }
        $this->container['preview_freight_class'] = $preview_freight_class;

        return $this;
    }

    /**
     * Gets amazon_reference_id
     *
     * @return string
     */
    public function getAmazonReferenceId(): string
    {
        return $this->container['amazon_reference_id'];
    }

    /**
     * Sets amazon_reference_id
     *
     * @param string $amazon_reference_id A unique identifier created by Amazon that identifies this Amazon-partnered, Less Than Truckload/Full Truckload (LTL/FTL) shipment.
     *
     * @return self
     */
    public function setAmazonReferenceId(string $amazon_reference_id): self
    {
        if (is_null($amazon_reference_id)) {
            throw new \InvalidArgumentException('non-nullable amazon_reference_id cannot be null');
        }
        $this->container['amazon_reference_id'] = $amazon_reference_id;

        return $this;
    }

    /**
     * Gets is_bill_of_lading_available
     *
     * @return bool
     */
    public function getIsBillOfLadingAvailable(): bool
    {
        return $this->container['is_bill_of_lading_available'];
    }

    /**
     * Sets is_bill_of_lading_available
     *
     * @param bool $is_bill_of_lading_available Indicates whether the bill of lading for the shipment is available.
     *
     * @return self
     */
    public function setIsBillOfLadingAvailable(bool $is_bill_of_lading_available): self
    {
        if (is_null($is_bill_of_lading_available)) {
            throw new \InvalidArgumentException('non-nullable is_bill_of_lading_available cannot be null');
        }
        $this->container['is_bill_of_lading_available'] = $is_bill_of_lading_available;

        return $this;
    }

    /**
     * Gets partnered_estimate
     *
     * @return \OpenAPI\Client\Model\fulfillment\inbound\v0\PartneredEstimate|null
     */
    public function getPartneredEstimate(): ?\OpenAPI\Client\Model\fulfillment\inbound\v0\PartneredEstimate
    {
        return $this->container['partnered_estimate'];
    }

    /**
     * Sets partnered_estimate
     *
     * @param \OpenAPI\Client\Model\fulfillment\inbound\v0\PartneredEstimate|null $partnered_estimate partnered_estimate
     *
     * @return self
     */
    public function setPartneredEstimate(?\OpenAPI\Client\Model\fulfillment\inbound\v0\PartneredEstimate $partnered_estimate): self
    {
        if (is_null($partnered_estimate)) {
            array_push($this->openAPINullablesSetToNull, 'partnered_estimate');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('partnered_estimate', $nullablesSetToNull);
            if ($index !== false) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['partnered_estimate'] = $partnered_estimate;

        return $this;
    }

    /**
     * Gets carrier_name
     *
     * @return string
     */
    public function getCarrierName(): string
    {
        return $this->container['carrier_name'];
    }

    /**
     * Sets carrier_name
     *
     * @param string $carrier_name The carrier for the inbound shipment.
     *
     * @return self
     */
    public function setCarrierName(string $carrier_name): self
    {
        if (is_null($carrier_name)) {
            throw new \InvalidArgumentException('non-nullable carrier_name cannot be null');
        }
        $this->container['carrier_name'] = $carrier_name;

        return $this;
    }


    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset): mixed
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, mixed $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize(): mixed
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue(): string
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


