<?php
/**
 * ReturnRetrievalApiTest
 * PHP version 8.3
 *
 * @category Class
 * @package  SpApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Selling Partner API for Amazon External Fulfillment Return Item Processing
 *
 * You can use the Amazon External Fulfillment Return Item Processing API to retrieve, track, and process return items through Amazon's External Fulfillment returns management system.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace SpApi\Test\Api;

use SpApi\ApiException;
use SpApi\Api\externalFulfillment\returns\v2024_09_11\ReturnRetrievalApi;
use SpApi\ObjectSerializer;

/**
 * ReturnRetrievalApiTest Class Doc Comment
 *
 * @category Class
 * @package  SpApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ReturnRetrievalApiTest extends BaseTestCase
{
    private ReturnRetrievalApi $apiInstance;
    public function setUp(): void
    {
        parent::setUp();
        // Initialize parameter value specific to case
        $this->testHelper->setSpecificValue('ReturnRetrievalApi', $this->getName());
        $this->apiInstance = new ReturnRetrievalApi($this->config, null);
        // Change Time Format if it requires
        $specificTimeFormat = $this->testHelper->getDateTimeFormatForCase('ReturnRetrievalApi');
        if ($specificTimeFormat) {
            ObjectSerializer::setDateTimeFormat($specificTimeFormat);
        }
    }

    /**
     * Test case for getReturn_200
     */
    public function testGetReturn200()
    {
        try {
            // Skip test if it is in the skip list
            if ($this->testHelper->shouldSkipTest('testGetReturn200', 'ReturnRetrievalApi')) {
                $this->assertTrue(true);
                return;
            }
            $jsonSchema = '{
  &quot;description&quot; : &quot;Success.&quot;,
  &quot;headers&quot; : {
    &quot;x-amzn-RequestId&quot; : {
      &quot;description&quot; : &quot;Unique request reference identifier.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    },
    &quot;x-amzn-RateLimit-Limit&quot; : {
      &quot;description&quot; : &quot;Your rate limit (requests per second) for this operation.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    }
  },
  &quot;content&quot; : {
    &quot;application/json&quot; : {
      &quot;schema&quot; : {
        &quot;$ref&quot; : &quot;#/components/schemas/Return&quot;
      },
      &quot;example&quot; : {
        &quot;marketplaceChannelDetails&quot; : {
          &quot;channelSku&quot; : &quot;SerialYT1&quot;,
          &quot;customerOrderId&quot; : &quot;107-7727827-8514700&quot;,
          &quot;returnLocationId&quot; : &quot;EDD5&quot;,
          &quot;shipmentId&quot; : &quot;D39CwZpdj&quot;,
          &quot;marketplaceChannel&quot; : {
            &quot;marketplaceName&quot; : &quot;AMAZON_IN$&quot;,
            &quot;channelName&quot; : &quot;FBA&quot;
          }
        },
        &quot;otpDetails&quot; : {
          &quot;otp&quot; : &quot;703669&quot;,
          &quot;validTill&quot; : 1612933142
        },
        &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
        &quot;creationDateTime&quot; : &quot;2021-05-08T01:23:33Z&quot;,
        &quot;fulfillmentLocationId&quot; : &quot;450a6661-1a97-4abd-99e4-45714bcf4439&quot;,
        &quot;id&quot; : &quot;ee39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
        &quot;lastUpdatedDateTime&quot; : &quot;2021-05-08T10:23:38Z&quot;,
        &quot;merchantSku&quot; : &quot;SerialYT1&quot;,
        &quot;numberOfUnits&quot; : 1,
        &quot;returnMetadata&quot; : {
          &quot;invoiceInformation&quot; : {
            &quot;id&quot; : &quot;EDD5-101&quot;
          },
          &quot;returnReason&quot; : &quot;Missed&quot;,
          &quot;rmaId&quot; : &quot;Test&quot;
        },
        &quot;returnShippingInfo&quot; : {
          &quot;forwardTrackingInfo&quot; : {
            &quot;carrierName&quot; : &quot;ATS&quot;,
            &quot;trackingId&quot; : &quot;156121269663&quot;
          },
          &quot;reverseTrackingInfo&quot; : {
            &quot;carrierName&quot; : &quot;ATS&quot;,
            &quot;trackingId&quot; : &quot;19124773658&quot;
          }
        },
        &quot;returnType&quot; : &quot;CUSTOMER&quot;,
        &quot;status&quot; : &quot;CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER&quot;
      }
    }
  },
  &quot;x-amzn-api-sandbox&quot; : {
    &quot;static&quot; : [ {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;returnId&quot; : {
            &quot;value&quot; : &quot;rmaIdOneShipmentOneItemOneQty200&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;id&quot; : &quot;rmaIdOneShipmentOneItemOneQty200&quot;,
        &quot;returnLocationId&quot; : &quot;bdd9cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
        &quot;merchantSku&quot; : &quot;mSku1&quot;,
        &quot;returnType&quot; : &quot;CUSTOMER&quot;,
        &quot;status&quot; : &quot;CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER&quot;,
        &quot;numberOfUnits&quot; : 1,
        &quot;fulfillmentLocationId&quot; : &quot;450a6661-1a97-4abd-99e4-45714bcf4439&quot;,
        &quot;creationDateTime&quot; : &quot;2021-03-18T15:23:58Z&quot;,
        &quot;lastUpdatedDateTime&quot; : &quot;2021-03-18T15:26:59Z&quot;,
        &quot;returnMetadata&quot; : {
          &quot;invoiceInformation&quot; : {
            &quot;id&quot; : &quot;EDD5-101&quot;
          },
          &quot;returnReason&quot; : &quot;Missed&quot;,
          &quot;rmaId&quot; : &quot;Test&quot;
        },
        &quot;returnShippingInfo&quot; : {
          &quot;forwardTrackingInfo&quot; : {
            &quot;carrierName&quot; : &quot;ATS&quot;,
            &quot;trackingId&quot; : &quot;156121269663&quot;
          },
          &quot;reverseTrackingInfo&quot; : {
            &quot;carrierName&quot; : &quot;ATS&quot;,
            &quot;trackingId&quot; : &quot;19124773658&quot;
          }
        },
        &quot;marketplaceChannelDetails&quot; : {
          &quot;channelSku&quot; : &quot;SerialYT1&quot;,
          &quot;customerOrderId&quot; : &quot;107-7727827-8514700&quot;,
          &quot;returnLocationId&quot; : &quot;EDD5&quot;,
          &quot;shipmentId&quot; : &quot;D39CwZpdj&quot;,
          &quot;marketplaceChannel&quot; : {
            &quot;marketplaceName&quot; : &quot;AMAZON_IN&quot;,
            &quot;channelName&quot; : &quot;FBA&quot;
          }
        },
        &quot;otpDetails&quot; : {
          &quot;otp&quot; : &quot;703669&quot;,
          &quot;validTill&quot; : 1612933142
        },
        &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;
      }
    } ]
  }
}';
            $result = $this->testHelper->extractRequestAndResponse(
                $this->apiInstance,
                $jsonSchema,
                'getReturn'
            );
            $requestParams = $result['requestParams'];
            $expectedResponse = $result['expectedResponse'];

            // Change Time Format if it requires
            $specificTimeFormat = $this->testHelper->getDateTimeFormatForCase('ReturnRetrievalApi');
            if ($specificTimeFormat) {
                ObjectSerializer::setDateTimeFormat($specificTimeFormat);
            }

            // Act: Call API
            list($response, $statusCode, $headers) =
                $this->apiInstance->getReturnWithHttpInfo(...array_values($requestParams));

            // Assert the response code
            $this->assertHttpStatusCode(200, $statusCode);

            // Handle different response codes
            $this->handleResponse($response, $statusCode, 200, $expectedResponse);
        } catch (ApiException $e) {
            $this->handleApiException($e, 200);
        } catch (\ReflectionException $e) {
            $this->fail("Reflection exception: " . $e->getMessage());
        }
    }
    /**
     * Test case for getReturn_400
     */
    public function testGetReturn400()
    {
        try {
            // Skip test if it is in the skip list
            if ($this->testHelper->shouldSkipTest('testGetReturn400', 'ReturnRetrievalApi')) {
                $this->assertTrue(true);
                return;
            }
            $jsonSchema = '{
  &quot;description&quot; : &quot;Request has missing or invalid parameters and cannot be parsed.&quot;,
  &quot;headers&quot; : {
    &quot;x-amzn-RequestId&quot; : {
      &quot;description&quot; : &quot;Unique request reference identifier.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    },
    &quot;x-amzn-RateLimit-Limit&quot; : {
      &quot;description&quot; : &quot;Your rate limit (requests per second) for this operation.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    }
  },
  &quot;content&quot; : {
    &quot;application/json&quot; : {
      &quot;schema&quot; : {
        &quot;$ref&quot; : &quot;#/components/schemas/ErrorList&quot;
      }
    }
  },
  &quot;x-amzn-api-sandbox&quot; : {
    &quot;static&quot; : [ {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;returnId&quot; : {
            &quot;value&quot; : &quot;rmaIdInvalid&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;errors&quot; : [ {
          &quot;code&quot; : &quot;InvalidInput&quot;,
          &quot;message&quot; : &quot;Invalid input &#39;rmaIdInvalid&#39; for parameter &#39;returnId&#39;&quot;
        } ]
      }
    } ]
  }
}';
            $result = $this->testHelper->extractRequestAndResponse(
                $this->apiInstance,
                $jsonSchema,
                'getReturn'
            );
            $requestParams = $result['requestParams'];
            $expectedResponse = $result['expectedResponse'];

            // Change Time Format if it requires
            $specificTimeFormat = $this->testHelper->getDateTimeFormatForCase('ReturnRetrievalApi');
            if ($specificTimeFormat) {
                ObjectSerializer::setDateTimeFormat($specificTimeFormat);
            }

            // Act: Call API
            list($response, $statusCode, $headers) =
                $this->apiInstance->getReturnWithHttpInfo(...array_values($requestParams));

            // Assert the response code
            $this->assertHttpStatusCode(400, $statusCode);

            // Handle different response codes
            $this->handleResponse($response, $statusCode, 400, $expectedResponse);
        } catch (ApiException $e) {
            $this->handleApiException($e, 400);
        } catch (\ReflectionException $e) {
            $this->fail("Reflection exception: " . $e->getMessage());
        }
    }
    /**
     * Test case for getReturn_403
     */
    public function testGetReturn403()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for getReturn_404
     */
    public function testGetReturn404()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for getReturn_409
     */
    public function testGetReturn409()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for getReturn_413
     */
    public function testGetReturn413()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for getReturn_415
     */
    public function testGetReturn415()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for getReturn_429
     */
    public function testGetReturn429()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for getReturn_500
     */
    public function testGetReturn500()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for getReturn_503
     */
    public function testGetReturn503()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for listReturns_200
     */
    public function testListReturns200()
    {
        try {
            // Skip test if it is in the skip list
            if ($this->testHelper->shouldSkipTest('testListReturns200', 'ReturnRetrievalApi')) {
                $this->assertTrue(true);
                return;
            }
            $jsonSchema = '{
  &quot;description&quot; : &quot;Success. The response contains a list of return items.&quot;,
  &quot;headers&quot; : {
    &quot;x-amzn-RequestId&quot; : {
      &quot;description&quot; : &quot;Unique request reference identifier.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    },
    &quot;x-amzn-RateLimit-Limit&quot; : {
      &quot;description&quot; : &quot;Your rate limit (requests per second) for this operation.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    }
  },
  &quot;content&quot; : {
    &quot;application/json&quot; : {
      &quot;schema&quot; : {
        &quot;$ref&quot; : &quot;#/components/schemas/ReturnsResponse&quot;
      },
      &quot;example&quot; : {
        &quot;nextToken&quot; : &quot;eyJsYXN0VXBkYXRlZFRpbWVzdGFtcCI6eyJzIjpu&quot;,
        &quot;returns&quot; : [ {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT1&quot;,
            &quot;customerOrderId&quot; : &quot;107-7727827-8514700&quot;,
            &quot;returnLocationId&quot; : &quot;EDD5&quot;,
            &quot;shipmentId&quot; : &quot;D39CwZpdj&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_IN&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:23:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;450a6661-1a97-4abd-99e4-45714bcf4439&quot;,
          &quot;id&quot; : &quot;ee39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-18T20:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT1&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD5-101&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Test&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;10d1db2e-a546-4d64-a5da-577d5bf9420d&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;156121269663&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;status&quot; : &quot;CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;FBA_PERF_BOOK&quot;,
            &quot;customerOrderId&quot; : &quot;107-7727827-8514701&quot;,
            &quot;returnLocationId&quot; : &quot;EDD5&quot;,
            &quot;shipmentId&quot; : &quot;DXPQ1wCCZ&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_IN$&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-04-02T10:13:50Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;450a6661-1a97-4abd-99e4-45714bcf4439&quot;,
          &quot;id&quot; : &quot;add6bfb3-8d15-4c79-8bcf-810fe12b163c&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-04-02T15:23:58Z&quot;,
          &quot;merchantSku&quot; : &quot;FBA_PERF_BOOK&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD5-92&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Test&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;151987126617&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;19124773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        } ]
      }
    }
  },
  &quot;x-amzn-api-sandbox&quot; : {
    &quot;static&quot; : [ {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdOneShipmentOneItemOneQty200&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;returns&quot; : [ {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;1002400773021&quot;,
            &quot;customerOrderId&quot; : &quot;407-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;TEST_CASE_200_FBA_SHIPMENT_ID&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2020-06-09T18:13:18Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;TEST_CASE_200_LOCATION_ID&quot;,
          &quot;id&quot; : &quot;ee39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2020-06-09T23:10:55Z&quot;,
          &quot;merchantSku&quot; : &quot;1002400773021&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;IN-ABCD-124&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;rmaIdOneShipmentOneItemOneQty200&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;11d2dc2e-b678-5e64-a1db-688d5bf9423e&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;267232370774&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;10024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        } ]
      }
    }, {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdOneShipmentMultItemOneQty200&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;returns&quot; : [ {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT1&quot;,
            &quot;customerOrderId&quot; : &quot;207-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;D51EzWkeh&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:23:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;ff40dee3-3bbc-47b6-a5b1-7b6a1c6d45e3&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-18T20:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT1&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-102&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;rmaIdOneShipmentMultItemOneQty200&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;21d2dc2e-b678-5e64-a1db-688d5bf9423f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;367232370885&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;20024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT2&quot;,
            &quot;customerOrderId&quot; : &quot;217-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;D51EzWkeh&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:23:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;fg40dee3-3cbc-47b6-a5b1-7b6a1c6d45e3&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-19T21:14:09Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT2&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-103&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;rmaIdOneShipmentMultItemOneQty200&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;32d3dc4e-b678-5e64-a1db-688d5bf9423f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;367232370832&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;20024773658&quot;
            },
            &quot;deliveryDateTime&quot; : &quot;2021-03-19T18:15:09Z&quot;,
            &quot;pickupDateTime&quot; : &quot;2021-03-20T21:15:09Z&quot;
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        } ]
      }
    }, {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdOneShipmentOneItemMultQty200&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;returns&quot; : [ {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT3&quot;,
            &quot;customerOrderId&quot; : &quot;307-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;B40ExWpdh&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;replanningDetails&quot; : {
            &quot;previousTrackingInfo&quot; : [ {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;377232370329&quot;
            }, {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;377232370330&quot;
            } ]
          },
          &quot;creationDateTime&quot; : &quot;2021-03-16T15:23:59Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;ga54cdd9-9caa-47b6-a5b1-7b6a1c6d43d2&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-18T20:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT3&quot;,
          &quot;numberOfUnits&quot; : 10,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-191&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;rmaIdOneShipmentOneItemMultQty200&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;22f2dc2e-c671-5e64-a1db-688d5bf9423r&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;377232370331&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;30024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        } ]
      }
    }, {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdOneShipmentMultItemMultQty200&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;returns&quot; : [ {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT1&quot;,
            &quot;customerOrderId&quot; : &quot;407-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;R51EzWVee&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:23:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;fz40dee4-3bbc-47b6-a5b1-7b6a1c6d45e3&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-18T20:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT1&quot;,
          &quot;numberOfUnits&quot; : 10,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-106&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;rmaIdOneShipmentMultItemMultQty200&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;21d2dc2e-b678-5e64-a1db-688d5bf9423f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;367232370885&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;40024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT2&quot;,
            &quot;customerOrderId&quot; : &quot;417-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;R51EzWVee&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-19T11:13:28Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;gf40dee3-33bc-47b6-a5b1-7b6a1c6d45e4&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-19T21:13:01Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT2&quot;,
          &quot;numberOfUnits&quot; : 8,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-107&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;rmaIdOneShipmentMultItemMultQty200&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;892d3dc4e-b678-5e64-a1db-688d5bf9422g&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;7672323708009&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;40024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        } ]
      }
    }, {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdMultShipmentMultItemOneQty200&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;returns&quot; : [ {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT1&quot;,
            &quot;customerOrderId&quot; : &quot;507-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;D51EzWkeh&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:34:21Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;bd12dee3-3bbc-47b6-a5b1-7b6a1c6d45a4&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-18T20:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT1&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-192&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;rmaIdMultShipmentMultItemOneQty200&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;32e1cd2e-b678-5e64-a1db-688d5bf9432k&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;2672323708116&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;50024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT2&quot;,
            &quot;customerOrderId&quot; : &quot;517-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;E11DrWkjs&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:23:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;wr41dee3-3bbc-47b6-a5b1-7b6a1c6d45e1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-19T21:14:09Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT2&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-111&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;rmaIdMultShipmentMultItemOneQty200&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;56a3dc4e-b678-5f64-w1db-688d5bf9423f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;367232310831&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;50024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        } ]
      }
    }, {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdMultShipmentMultItemMultQty200&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;returns&quot; : [ {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT1&quot;,
            &quot;customerOrderId&quot; : &quot;607-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;E51FzWkek&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:34:21Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;jk12dee3-3bbc-37b6-a5b1-7b6a1c6d45a6&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-18T20:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT1&quot;,
          &quot;numberOfUnits&quot; : 19,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-199&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;rmaIdMultShipmentMultItemMultQty200&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;32e1cd2e-b678-5e64-a1db-688d5bf9432k&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;2672323708116&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;60024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT2&quot;,
            &quot;customerOrderId&quot; : &quot;617-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;R21RrWkjz&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:23:28Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;fb21dee4-3bbc-47b6-a5b1-7b2a1c6d45e2&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-19T21:14:09Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT2&quot;,
          &quot;numberOfUnits&quot; : 12,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-115&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;rmaIdMultShipmentMultItemMultQty200&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;67b2dc4e-b678-5f64-w1db-688d5bf91fv&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;631232310132&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;60024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        } ]
      }
    }, {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;returnLocationId&quot; : {
            &quot;value&quot; : &quot;testReturnLocationId&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;returns&quot; : [ {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT1&quot;,
            &quot;customerOrderId&quot; : &quot;807-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;D51ExWpdg&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:23:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;aa39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-18T20:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT1&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-140&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;22e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;357232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT2&quot;,
            &quot;customerOrderId&quot; : &quot;817-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;J51ExWpea&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:23:25Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;bb39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-18T20:13:22Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT2&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-141&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;23e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;357232370196&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;DELIVERED&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT3&quot;,
            &quot;customerOrderId&quot; : &quot;827-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;D51ExWpdp&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-22T22:23:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;cc39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-22T23:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT3&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-143&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;24e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;337232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT4&quot;,
            &quot;customerOrderId&quot; : &quot;837-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;E51ExWpdp&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-22T22:24:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;dd39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-22T23:14:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT4&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-142&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;25e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;347232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT5&quot;,
            &quot;customerOrderId&quot; : &quot;847-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;F51ExWpdp&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-22T22:25:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;gg39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-22T23:15:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT5&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-148&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;26e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;367232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        } ]
      }
    }, {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;returnLocationId&quot; : {
            &quot;value&quot; : &quot;testReturnLocationId&quot;
          },
          &quot;status&quot; : {
            &quot;value&quot; : &quot;CREATED&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;returns&quot; : [ {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT1&quot;,
            &quot;customerOrderId&quot; : &quot;807-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;D51ExWpdg&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-18T15:23:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;aa39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-18T20:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT1&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-140&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;22e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;357232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT3&quot;,
            &quot;customerOrderId&quot; : &quot;827-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;D51ExWpdp&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-22T22:23:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;cc39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-22T23:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT3&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-143&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;24e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;337232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT4&quot;,
            &quot;customerOrderId&quot; : &quot;837-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;E51ExWpdp&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-22T22:24:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;dd39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-22T23:14:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT4&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-142&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;25e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;347232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT5&quot;,
            &quot;customerOrderId&quot; : &quot;847-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;F51ExWpdp&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-22T22:25:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;gg39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-22T23:15:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT5&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-148&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;26e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;367232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        } ]
      }
    }, {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;returnLocationId&quot; : {
            &quot;value&quot; : &quot;testReturnLocationId&quot;
          },
          &quot;status&quot; : {
            &quot;value&quot; : &quot;CREATED&quot;
          },
          &quot;lastUpdatedAfter&quot; : {
            &quot;value&quot; : &quot;2021-03-20T00:00:00Z&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;returns&quot; : [ {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT3&quot;,
            &quot;customerOrderId&quot; : &quot;827-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;D51ExWpdp&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-22T22:23:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;cc39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-22T23:13:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT3&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-143&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;24e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;337232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT4&quot;,
            &quot;customerOrderId&quot; : &quot;837-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;E51ExWpdp&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-22T22:24:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;dd39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-22T23:14:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT4&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-142&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;25e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;347232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        }, {
          &quot;marketplaceChannelDetails&quot; : {
            &quot;channelSku&quot; : &quot;SerialYT5&quot;,
            &quot;customerOrderId&quot; : &quot;847-7727827-8514700&quot;,
            &quot;merchantId&quot; : &quot;YOUR_MERCHANT_ID&quot;,
            &quot;returnLocationId&quot; : &quot;EDD9&quot;,
            &quot;shipmentId&quot; : &quot;F51ExWpdp&quot;,
            &quot;marketplaceChannel&quot; : {
              &quot;marketplaceName&quot; : &quot;AMAZON_US&quot;,
              &quot;channelName&quot; : &quot;FBA&quot;
            }
          },
          &quot;otpDetails&quot; : {
            &quot;otp&quot; : &quot;703669&quot;,
            &quot;validTill&quot; : 1612933142
          },
          &quot;packageDeliveryMode&quot; : &quot;WITH_OTP&quot;,
          &quot;creationDateTime&quot; : &quot;2021-03-22T22:25:58Z&quot;,
          &quot;fulfillmentLocationId&quot; : &quot;43cd8cd4-a944-4fa8-a584-5e3b3efdb045&quot;,
          &quot;id&quot; : &quot;gg39cdd9-9caa-47b6-a5b1-7b6a1c6d43d1&quot;,
          &quot;lastUpdatedDateTime&quot; : &quot;2021-03-22T23:15:08Z&quot;,
          &quot;merchantSku&quot; : &quot;SerialYT5&quot;,
          &quot;numberOfUnits&quot; : 1,
          &quot;returnLocationId&quot; : &quot;testReturnLocationId&quot;,
          &quot;returnMetadata&quot; : {
            &quot;invoiceInformation&quot; : {
              &quot;id&quot; : &quot;EDD9-148&quot;
            },
            &quot;returnReason&quot; : &quot;Missed&quot;,
            &quot;rmaId&quot; : &quot;Es1ZkjzkRRMA&quot;,
            &quot;fulfillmentOrderId&quot; : &quot;26e2dc2e-b678-5e64-a1db-688d5bf9434f&quot;
          },
          &quot;returnShippingInfo&quot; : {
            &quot;forwardTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;ATS&quot;,
              &quot;trackingId&quot; : &quot;367232370195&quot;
            },
            &quot;reverseTrackingInfo&quot; : {
              &quot;carrierName&quot; : &quot;UPSN&quot;,
              &quot;trackingId&quot; : &quot;70024773658&quot;
            }
          },
          &quot;returnType&quot; : &quot;CUSTOMER&quot;,
          &quot;returnSubType&quot; : &quot;NORMAL&quot;,
          &quot;status&quot; : &quot;CREATED&quot;
        } ]
      }
    } ]
  }
}';
            $result = $this->testHelper->extractRequestAndResponse(
                $this->apiInstance,
                $jsonSchema,
                'listReturns'
            );
            $requestParams = $result['requestParams'];
            $expectedResponse = $result['expectedResponse'];

            // Change Time Format if it requires
            $specificTimeFormat = $this->testHelper->getDateTimeFormatForCase('ReturnRetrievalApi');
            if ($specificTimeFormat) {
                ObjectSerializer::setDateTimeFormat($specificTimeFormat);
            }

            // Act: Call API
            list($response, $statusCode, $headers) =
                $this->apiInstance->listReturnsWithHttpInfo(...array_values($requestParams));

            // Assert the response code
            $this->assertHttpStatusCode(200, $statusCode);

            // Handle different response codes
            $this->handleResponse($response, $statusCode, 200, $expectedResponse);
        } catch (ApiException $e) {
            $this->handleApiException($e, 200);
        } catch (\ReflectionException $e) {
            $this->fail("Reflection exception: " . $e->getMessage());
        }
    }
    /**
     * Test case for listReturns_400
     */
    public function testListReturns400()
    {
        try {
            // Skip test if it is in the skip list
            if ($this->testHelper->shouldSkipTest('testListReturns400', 'ReturnRetrievalApi')) {
                $this->assertTrue(true);
                return;
            }
            $jsonSchema = '{
  &quot;description&quot; : &quot;Request has missing or invalid parameters and cannot be parsed.&quot;,
  &quot;headers&quot; : {
    &quot;x-amzn-RequestId&quot; : {
      &quot;description&quot; : &quot;Unique request reference identifier.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    },
    &quot;x-amzn-RateLimit-Limit&quot; : {
      &quot;description&quot; : &quot;Your rate limit (requests per second) for this operation.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    }
  },
  &quot;content&quot; : {
    &quot;application/json&quot; : {
      &quot;schema&quot; : {
        &quot;$ref&quot; : &quot;#/components/schemas/ErrorList&quot;
      }
    }
  },
  &quot;x-amzn-api-sandbox&quot; : {
    &quot;static&quot; : [ {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;lastUpdatedAfter&quot; : {
            &quot;value&quot; : &quot;1110-13-89T43:99:99Z&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;errors&quot; : [ {
          &quot;code&quot; : &quot;InvalidInput&quot;,
          &quot;message&quot; : &quot;LastUpdatedAfter value is an not a valid ISO date/time object.&quot;
        } ]
      }
    } ]
  }
}';
            $result = $this->testHelper->extractRequestAndResponse(
                $this->apiInstance,
                $jsonSchema,
                'listReturns'
            );
            $requestParams = $result['requestParams'];
            $expectedResponse = $result['expectedResponse'];

            // Change Time Format if it requires
            $specificTimeFormat = $this->testHelper->getDateTimeFormatForCase('ReturnRetrievalApi');
            if ($specificTimeFormat) {
                ObjectSerializer::setDateTimeFormat($specificTimeFormat);
            }

            // Act: Call API
            list($response, $statusCode, $headers) =
                $this->apiInstance->listReturnsWithHttpInfo(...array_values($requestParams));

            // Assert the response code
            $this->assertHttpStatusCode(400, $statusCode);

            // Handle different response codes
            $this->handleResponse($response, $statusCode, 400, $expectedResponse);
        } catch (ApiException $e) {
            $this->handleApiException($e, 400);
        } catch (\ReflectionException $e) {
            $this->fail("Reflection exception: " . $e->getMessage());
        }
    }
    /**
     * Test case for listReturns_403
     */
    public function testListReturns403()
    {
        try {
            // Skip test if it is in the skip list
            if ($this->testHelper->shouldSkipTest('testListReturns403', 'ReturnRetrievalApi')) {
                $this->assertTrue(true);
                return;
            }
            $jsonSchema = '{
  &quot;description&quot; : &quot;Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.&quot;,
  &quot;headers&quot; : {
    &quot;x-amzn-RequestId&quot; : {
      &quot;description&quot; : &quot;Unique request reference identifier.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    }
  },
  &quot;content&quot; : {
    &quot;application/json&quot; : {
      &quot;schema&quot; : {
        &quot;$ref&quot; : &quot;#/components/schemas/ErrorList&quot;
      }
    }
  },
  &quot;x-amzn-api-sandbox&quot; : {
    &quot;static&quot; : [ {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdTest403&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;errors&quot; : [ {
          &quot;code&quot; : &quot;Forbidden&quot;,
          &quot;message&quot; : &quot;Request is forbidden&quot;
        } ]
      }
    } ]
  }
}';
            $result = $this->testHelper->extractRequestAndResponse(
                $this->apiInstance,
                $jsonSchema,
                'listReturns'
            );
            $requestParams = $result['requestParams'];
            $expectedResponse = $result['expectedResponse'];

            // Change Time Format if it requires
            $specificTimeFormat = $this->testHelper->getDateTimeFormatForCase('ReturnRetrievalApi');
            if ($specificTimeFormat) {
                ObjectSerializer::setDateTimeFormat($specificTimeFormat);
            }

            // Act: Call API
            list($response, $statusCode, $headers) =
                $this->apiInstance->listReturnsWithHttpInfo(...array_values($requestParams));

            // Assert the response code
            $this->assertHttpStatusCode(403, $statusCode);

            // Handle different response codes
            $this->handleResponse($response, $statusCode, 403, $expectedResponse);
        } catch (ApiException $e) {
            $this->handleApiException($e, 403);
        } catch (\ReflectionException $e) {
            $this->fail("Reflection exception: " . $e->getMessage());
        }
    }
    /**
     * Test case for listReturns_404
     */
    public function testListReturns404()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for listReturns_409
     */
    public function testListReturns409()
    {
        try {
            // Skip test if it is in the skip list
            if ($this->testHelper->shouldSkipTest('testListReturns409', 'ReturnRetrievalApi')) {
                $this->assertTrue(true);
                return;
            }
            $jsonSchema = '{
  &quot;description&quot; : &quot;The resource specified conflicts with the current state&quot;,
  &quot;headers&quot; : {
    &quot;x-amzn-RequestId&quot; : {
      &quot;description&quot; : &quot;Unique request reference identifier.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    }
  },
  &quot;content&quot; : {
    &quot;application/json&quot; : {
      &quot;schema&quot; : {
        &quot;$ref&quot; : &quot;#/components/schemas/ErrorList&quot;
      }
    }
  },
  &quot;x-amzn-api-sandbox&quot; : {
    &quot;static&quot; : [ {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdTest409&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;errors&quot; : [ {
          &quot;code&quot; : &quot;DuplicateRequest&quot;,
          &quot;message&quot; : &quot;Duplicate request found for &#39;rmaId&#39; &#39;rmaIdTest409&#39;&quot;
        } ]
      }
    } ]
  }
}';
            $result = $this->testHelper->extractRequestAndResponse(
                $this->apiInstance,
                $jsonSchema,
                'listReturns'
            );
            $requestParams = $result['requestParams'];
            $expectedResponse = $result['expectedResponse'];

            // Change Time Format if it requires
            $specificTimeFormat = $this->testHelper->getDateTimeFormatForCase('ReturnRetrievalApi');
            if ($specificTimeFormat) {
                ObjectSerializer::setDateTimeFormat($specificTimeFormat);
            }

            // Act: Call API
            list($response, $statusCode, $headers) =
                $this->apiInstance->listReturnsWithHttpInfo(...array_values($requestParams));

            // Assert the response code
            $this->assertHttpStatusCode(409, $statusCode);

            // Handle different response codes
            $this->handleResponse($response, $statusCode, 409, $expectedResponse);
        } catch (ApiException $e) {
            $this->handleApiException($e, 409);
        } catch (\ReflectionException $e) {
            $this->fail("Reflection exception: " . $e->getMessage());
        }
    }
    /**
     * Test case for listReturns_413
     */
    public function testListReturns413()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for listReturns_415
     */
    public function testListReturns415()
    {
        // Skip this test
        $this->markTestSkipped('Skip test for this operation.');
    }
    /**
     * Test case for listReturns_429
     */
    public function testListReturns429()
    {
        try {
            // Skip test if it is in the skip list
            if ($this->testHelper->shouldSkipTest('testListReturns429', 'ReturnRetrievalApi')) {
                $this->assertTrue(true);
                return;
            }
            $jsonSchema = '{
  &quot;description&quot; : &quot;The frequency of requests was greater than allowed.&quot;,
  &quot;headers&quot; : {
    &quot;x-amzn-RequestId&quot; : {
      &quot;description&quot; : &quot;Unique request reference identifier.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    }
  },
  &quot;content&quot; : {
    &quot;application/json&quot; : {
      &quot;schema&quot; : {
        &quot;$ref&quot; : &quot;#/components/schemas/ErrorList&quot;
      }
    }
  },
  &quot;x-amzn-api-sandbox&quot; : {
    &quot;static&quot; : [ {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdTest429&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;errors&quot; : [ {
          &quot;code&quot; : &quot;RateLimited&quot;,
          &quot;message&quot; : &quot;Temporary failure occurred, retry operation after some time.&quot;
        } ]
      }
    } ]
  }
}';
            $result = $this->testHelper->extractRequestAndResponse(
                $this->apiInstance,
                $jsonSchema,
                'listReturns'
            );
            $requestParams = $result['requestParams'];
            $expectedResponse = $result['expectedResponse'];

            // Change Time Format if it requires
            $specificTimeFormat = $this->testHelper->getDateTimeFormatForCase('ReturnRetrievalApi');
            if ($specificTimeFormat) {
                ObjectSerializer::setDateTimeFormat($specificTimeFormat);
            }

            // Act: Call API
            list($response, $statusCode, $headers) =
                $this->apiInstance->listReturnsWithHttpInfo(...array_values($requestParams));

            // Assert the response code
            $this->assertHttpStatusCode(429, $statusCode);

            // Handle different response codes
            $this->handleResponse($response, $statusCode, 429, $expectedResponse);
        } catch (ApiException $e) {
            $this->handleApiException($e, 429);
        } catch (\ReflectionException $e) {
            $this->fail("Reflection exception: " . $e->getMessage());
        }
    }
    /**
     * Test case for listReturns_500
     */
    public function testListReturns500()
    {
        try {
            // Skip test if it is in the skip list
            if ($this->testHelper->shouldSkipTest('testListReturns500', 'ReturnRetrievalApi')) {
                $this->assertTrue(true);
                return;
            }
            $jsonSchema = '{
  &quot;description&quot; : &quot;An unexpected condition occurred that prevented the server from fulfilling the request.&quot;,
  &quot;headers&quot; : {
    &quot;x-amzn-RequestId&quot; : {
      &quot;description&quot; : &quot;Unique request reference identifier.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    }
  },
  &quot;content&quot; : {
    &quot;application/json&quot; : {
      &quot;schema&quot; : {
        &quot;$ref&quot; : &quot;#/components/schemas/ErrorList&quot;
      }
    }
  },
  &quot;x-amzn-api-sandbox&quot; : {
    &quot;static&quot; : [ {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdTest500&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;errors&quot; : [ {
          &quot;code&quot; : &quot;InternalFailure&quot;,
          &quot;message&quot; : &quot;Internal failure occurred, contact Amazon support&quot;
        } ]
      }
    } ]
  }
}';
            $result = $this->testHelper->extractRequestAndResponse(
                $this->apiInstance,
                $jsonSchema,
                'listReturns'
            );
            $requestParams = $result['requestParams'];
            $expectedResponse = $result['expectedResponse'];

            // Change Time Format if it requires
            $specificTimeFormat = $this->testHelper->getDateTimeFormatForCase('ReturnRetrievalApi');
            if ($specificTimeFormat) {
                ObjectSerializer::setDateTimeFormat($specificTimeFormat);
            }

            // Act: Call API
            list($response, $statusCode, $headers) =
                $this->apiInstance->listReturnsWithHttpInfo(...array_values($requestParams));

            // Assert the response code
            $this->assertHttpStatusCode(500, $statusCode);

            // Handle different response codes
            $this->handleResponse($response, $statusCode, 500, $expectedResponse);
        } catch (ApiException $e) {
            $this->handleApiException($e, 500);
        } catch (\ReflectionException $e) {
            $this->fail("Reflection exception: " . $e->getMessage());
        }
    }
    /**
     * Test case for listReturns_503
     */
    public function testListReturns503()
    {
        try {
            // Skip test if it is in the skip list
            if ($this->testHelper->shouldSkipTest('testListReturns503', 'ReturnRetrievalApi')) {
                $this->assertTrue(true);
                return;
            }
            $jsonSchema = '{
  &quot;description&quot; : &quot;Temporary overloading or maintenance of the server.&quot;,
  &quot;headers&quot; : {
    &quot;x-amzn-RequestId&quot; : {
      &quot;description&quot; : &quot;Unique request reference identifier.&quot;,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;string&quot;
      }
    }
  },
  &quot;content&quot; : {
    &quot;application/json&quot; : {
      &quot;schema&quot; : {
        &quot;$ref&quot; : &quot;#/components/schemas/ErrorList&quot;
      }
    }
  },
  &quot;x-amzn-api-sandbox&quot; : {
    &quot;static&quot; : [ {
      &quot;request&quot; : {
        &quot;parameters&quot; : {
          &quot;rmaId&quot; : {
            &quot;value&quot; : &quot;rmaIdTest503&quot;
          }
        }
      },
      &quot;response&quot; : {
        &quot;errors&quot; : [ {
          &quot;code&quot; : &quot;ServiceUnavailable&quot;,
          &quot;message&quot; : &quot;Temporary failure occurred, retry operation&quot;
        } ]
      }
    } ]
  }
}';
            $result = $this->testHelper->extractRequestAndResponse(
                $this->apiInstance,
                $jsonSchema,
                'listReturns'
            );
            $requestParams = $result['requestParams'];
            $expectedResponse = $result['expectedResponse'];

            // Change Time Format if it requires
            $specificTimeFormat = $this->testHelper->getDateTimeFormatForCase('ReturnRetrievalApi');
            if ($specificTimeFormat) {
                ObjectSerializer::setDateTimeFormat($specificTimeFormat);
            }

            // Act: Call API
            list($response, $statusCode, $headers) =
                $this->apiInstance->listReturnsWithHttpInfo(...array_values($requestParams));

            // Assert the response code
            $this->assertHttpStatusCode(503, $statusCode);

            // Handle different response codes
            $this->handleResponse($response, $statusCode, 503, $expectedResponse);
        } catch (ApiException $e) {
            $this->handleApiException($e, 503);
        } catch (\ReflectionException $e) {
            $this->fail("Reflection exception: " . $e->getMessage());
        }
    }
}
