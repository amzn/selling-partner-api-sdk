<?php
/**
 * FbaOutboundApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use OpenAPI\Client\Configuration;
use OpenAPI\Client\ApiException;
use PHPUnit\Framework\TestCase;
use OpenAPI\Client\Api\FbaOutboundApi;
use OpenAPI\Client\Test\TestHelper;
use SpApi\AuthAndAuth\LWAAuthorizationCredentials;
use Dotenv\Dotenv;

$dotenv = Dotenv::createImmutable('../../../sdk');
$dotenv->load();

/**
 * FbaOutboundApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FbaOutboundApiTest extends TestCase
{
    private FbaOutboundApi $apiInstance;
    private TestHelper $testHelper;

    public function setUp(): void
    {
        $this->testHelper = new TestHelper();
        $credentialsConfig = [
            "clientId" => $_ENV['SP_API_CLIENT_ID'],
            "clientSecret" => $_ENV['SP_API_CLIENT_SECRET'],
            "refreshToken" => $_ENV['SP_API_REFRESH_TOKEN'],
            "endpoint" => $_ENV['SP_API_ENDPOINT'] ?: "https://api.amazon.com/auth/o2/token"
        ];
        $scopes = $this->testHelper->getScopesForApi($this->getName());
        if (!empty($scopes)) {
            $credentialsConfig['scopes'] = $scopes;
        }
        $lwaAuthorizationCredentials = new LWAAuthorizationCredentials($credentialsConfig);
        $config = new Configuration([], $lwaAuthorizationCredentials);
        $config->setHost($_ENV['SP_API_ENDPOINT_HOST'] ?: 'https://sandbox.sellingpartnerapi-fe.amazon.com');
        $this->apiInstance = new FbaOutboundApi($config, null, null);
    }

    /**
     * Handles the response based on the expected HTTP status code.
     *
     * @param mixed $response The API response.
     * @param int $statusCode The actual HTTP status code.
     * @param int $expectedStatusCode The expected HTTP status code.
     * @throws \ReflectionException
     */
    private function handleResponse(mixed $response, int $statusCode, int $expectedStatusCode, $responseParams): void
    {
        switch ($expectedStatusCode) {
            case 200:
            case 201:
            case 202:
                $actual = json_decode($response, true);
                $this->assertEquals($responseParams, $actual);
                break;

            case 204:
                $this->assertTrue(true);
                echo "Response is empty as expected for status code 204.";
                break;

            case 400:
                $this->assertArrayHasKey('errors', $responseParams);
                $this->assertEquals($responseParams['errors'], $response->getErrors());
                break;

            default:
                $this->fail("Unhandled response code: $expectedStatusCode");
                break;
        }
    }

    /**
     * Handles exceptions thrown during the API call.
     *
     * @param ApiException $e The exception thrown by the API.
     */
    private function handleApiException(ApiException $e, int $expectedCode): void
    {
        if ($e->getCode() == $expectedCode) {
            $this->assertTrue(true);
        } else {
            $this->fail('Unexpected error code: ' . $e->getCode());
        }
    }

    /**
     * Asserts the HTTP status code.
     *
     * @param int $expectedStatusCode
     * @param int $actualStatusCode
     */
    private function assertHttpStatusCode(int $expectedStatusCode, int $actualStatusCode): void
    {
        $this->assertEquals(
            $expectedStatusCode,
            $actualStatusCode,
            "Expected HTTP status code $expectedStatusCode but got $actualStatusCode."
        );
    }

    /**
     * Test case for cancelFulfillmentOrder_200
     * .
     */
    public function testCancelFulfillmentOrder200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for cancelFulfillmentOrder_400
     * .
     */
    public function testCancelFulfillmentOrder400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for cancelFulfillmentOrder_401
     * .
     */
    public function testCancelFulfillmentOrder401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for cancelFulfillmentOrder_403
     * .
     */
    public function testCancelFulfillmentOrder403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for cancelFulfillmentOrder_404
     * .
     */
    public function testCancelFulfillmentOrder404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for cancelFulfillmentOrder_429
     * .
     */
    public function testCancelFulfillmentOrder429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for cancelFulfillmentOrder_500
     * .
     */
    public function testCancelFulfillmentOrder500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for cancelFulfillmentOrder_503
     * .
     */
    public function testCancelFulfillmentOrder503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentOrder_200
     * .
     */
    public function testCreateFulfillmentOrder200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentOrder_400
     * .
     */
    public function testCreateFulfillmentOrder400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentOrder_401
     * .
     */
    public function testCreateFulfillmentOrder401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentOrder_403
     * .
     */
    public function testCreateFulfillmentOrder403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentOrder_404
     * .
     */
    public function testCreateFulfillmentOrder404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentOrder_429
     * .
     */
    public function testCreateFulfillmentOrder429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentOrder_500
     * .
     */
    public function testCreateFulfillmentOrder500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentOrder_503
     * .
     */
    public function testCreateFulfillmentOrder503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentReturn_200
     * .
     */
    public function testCreateFulfillmentReturn200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentReturn_400
     * .
     */
    public function testCreateFulfillmentReturn400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentReturn_401
     * .
     */
    public function testCreateFulfillmentReturn401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentReturn_403
     * .
     */
    public function testCreateFulfillmentReturn403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentReturn_404
     * .
     */
    public function testCreateFulfillmentReturn404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentReturn_429
     * .
     */
    public function testCreateFulfillmentReturn429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentReturn_500
     * .
     */
    public function testCreateFulfillmentReturn500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for createFulfillmentReturn_503
     * .
     */
    public function testCreateFulfillmentReturn503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for deliveryOffers_200
     * .
     */
    public function testDeliveryOffers200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for deliveryOffers_400
     * .
     */
    public function testDeliveryOffers400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for deliveryOffers_401
     * .
     */
    public function testDeliveryOffers401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for deliveryOffers_403
     * .
     */
    public function testDeliveryOffers403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for deliveryOffers_404
     * .
     */
    public function testDeliveryOffers404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for deliveryOffers_429
     * .
     */
    public function testDeliveryOffers429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for deliveryOffers_500
     * .
     */
    public function testDeliveryOffers500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for deliveryOffers_503
     * .
     */
    public function testDeliveryOffers503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureInventory_200
     * .
     */
    public function testGetFeatureInventory200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureInventory_400
     * .
     */
    public function testGetFeatureInventory400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureInventory_401
     * .
     */
    public function testGetFeatureInventory401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureInventory_403
     * .
     */
    public function testGetFeatureInventory403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureInventory_404
     * .
     */
    public function testGetFeatureInventory404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureInventory_429
     * .
     */
    public function testGetFeatureInventory429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureInventory_500
     * .
     */
    public function testGetFeatureInventory500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureInventory_503
     * .
     */
    public function testGetFeatureInventory503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureSKU_200
     * .
     */
    public function testGetFeatureSKU200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureSKU_400
     * .
     */
    public function testGetFeatureSKU400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureSKU_401
     * .
     */
    public function testGetFeatureSKU401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureSKU_403
     * .
     */
    public function testGetFeatureSKU403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureSKU_404
     * .
     */
    public function testGetFeatureSKU404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureSKU_429
     * .
     */
    public function testGetFeatureSKU429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureSKU_500
     * .
     */
    public function testGetFeatureSKU500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatureSKU_503
     * .
     */
    public function testGetFeatureSKU503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatures_200
     * .
     */
    public function testGetFeatures200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatures_400
     * .
     */
    public function testGetFeatures400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatures_401
     * .
     */
    public function testGetFeatures401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatures_403
     * .
     */
    public function testGetFeatures403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatures_404
     * .
     */
    public function testGetFeatures404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatures_429
     * .
     */
    public function testGetFeatures429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatures_500
     * .
     */
    public function testGetFeatures500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFeatures_503
     * .
     */
    public function testGetFeatures503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentOrder_200
     * .
     */
    public function testGetFulfillmentOrder200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentOrder_400
     * .
     */
    public function testGetFulfillmentOrder400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentOrder_401
     * .
     */
    public function testGetFulfillmentOrder401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentOrder_403
     * .
     */
    public function testGetFulfillmentOrder403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentOrder_404
     * .
     */
    public function testGetFulfillmentOrder404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentOrder_429
     * .
     */
    public function testGetFulfillmentOrder429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentOrder_500
     * .
     */
    public function testGetFulfillmentOrder500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentOrder_503
     * .
     */
    public function testGetFulfillmentOrder503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentPreview_200
     * .
     */
    public function testGetFulfillmentPreview200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentPreview_400
     * .
     */
    public function testGetFulfillmentPreview400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentPreview_401
     * .
     */
    public function testGetFulfillmentPreview401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentPreview_403
     * .
     */
    public function testGetFulfillmentPreview403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentPreview_404
     * .
     */
    public function testGetFulfillmentPreview404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentPreview_429
     * .
     */
    public function testGetFulfillmentPreview429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentPreview_500
     * .
     */
    public function testGetFulfillmentPreview500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getFulfillmentPreview_503
     * .
     */
    public function testGetFulfillmentPreview503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getPackageTrackingDetails_200
     * .
     */
    public function testGetPackageTrackingDetails200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getPackageTrackingDetails_400
     * .
     */
    public function testGetPackageTrackingDetails400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getPackageTrackingDetails_401
     * .
     */
    public function testGetPackageTrackingDetails401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getPackageTrackingDetails_403
     * .
     */
    public function testGetPackageTrackingDetails403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getPackageTrackingDetails_404
     * .
     */
    public function testGetPackageTrackingDetails404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getPackageTrackingDetails_429
     * .
     */
    public function testGetPackageTrackingDetails429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getPackageTrackingDetails_500
     * .
     */
    public function testGetPackageTrackingDetails500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for getPackageTrackingDetails_503
     * .
     */
    public function testGetPackageTrackingDetails503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listAllFulfillmentOrders_200
     * .
     */
    public function testListAllFulfillmentOrders200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listAllFulfillmentOrders_400
     * .
     */
    public function testListAllFulfillmentOrders400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listAllFulfillmentOrders_401
     * .
     */
    public function testListAllFulfillmentOrders401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listAllFulfillmentOrders_403
     * .
     */
    public function testListAllFulfillmentOrders403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listAllFulfillmentOrders_404
     * .
     */
    public function testListAllFulfillmentOrders404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listAllFulfillmentOrders_429
     * .
     */
    public function testListAllFulfillmentOrders429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listAllFulfillmentOrders_500
     * .
     */
    public function testListAllFulfillmentOrders500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listAllFulfillmentOrders_503
     * .
     */
    public function testListAllFulfillmentOrders503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listReturnReasonCodes_200
     * .
     */
    public function testListReturnReasonCodes200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listReturnReasonCodes_400
     * .
     */
    public function testListReturnReasonCodes400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listReturnReasonCodes_401
     * .
     */
    public function testListReturnReasonCodes401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listReturnReasonCodes_403
     * .
     */
    public function testListReturnReasonCodes403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listReturnReasonCodes_404
     * .
     */
    public function testListReturnReasonCodes404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listReturnReasonCodes_429
     * .
     */
    public function testListReturnReasonCodes429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listReturnReasonCodes_500
     * .
     */
    public function testListReturnReasonCodes500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for listReturnReasonCodes_503
     * .
     */
    public function testListReturnReasonCodes503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for submitFulfillmentOrderStatusUpdate_200
     * .
     */
    public function testSubmitFulfillmentOrderStatusUpdate200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for submitFulfillmentOrderStatusUpdate_400
     * .
     */
    public function testSubmitFulfillmentOrderStatusUpdate400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for submitFulfillmentOrderStatusUpdate_401
     * .
     */
    public function testSubmitFulfillmentOrderStatusUpdate401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for submitFulfillmentOrderStatusUpdate_403
     * .
     */
    public function testSubmitFulfillmentOrderStatusUpdate403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for submitFulfillmentOrderStatusUpdate_404
     * .
     */
    public function testSubmitFulfillmentOrderStatusUpdate404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for submitFulfillmentOrderStatusUpdate_429
     * .
     */
    public function testSubmitFulfillmentOrderStatusUpdate429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for submitFulfillmentOrderStatusUpdate_500
     * .
     */
    public function testSubmitFulfillmentOrderStatusUpdate500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for submitFulfillmentOrderStatusUpdate_503
     * .
     */
    public function testSubmitFulfillmentOrderStatusUpdate503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for updateFulfillmentOrder_200
     * .
     */
    public function testUpdateFulfillmentOrder200()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for updateFulfillmentOrder_400
     * .
     */
    public function testUpdateFulfillmentOrder400()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for updateFulfillmentOrder_401
     * .
     */
    public function testUpdateFulfillmentOrder401()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for updateFulfillmentOrder_403
     * .
     */
    public function testUpdateFulfillmentOrder403()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for updateFulfillmentOrder_404
     * .
     */
    public function testUpdateFulfillmentOrder404()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for updateFulfillmentOrder_429
     * .
     */
    public function testUpdateFulfillmentOrder429()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for updateFulfillmentOrder_500
     * .
     */
    public function testUpdateFulfillmentOrder500()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
    /**
     * Test case for updateFulfillmentOrder_503
     * .
     */
    public function testUpdateFulfillmentOrder503()
    {
        // Skip this test if no static sandbox extension is present
        $this->markTestSkipped('Static sandbox is not defined for this operation.');
    }
}
