/**
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { DocumentFormat } from './DocumentFormat.js'
import { DocumentType } from './DocumentType.js'

/**
 * The PackageDocument model module.
 * @module shipping_v2/model/PackageDocument
 * @version v2
 */
export class PackageDocument {
  /**
   * Constructs a new <code>PackageDocument</code>.
   * A document related to a package.
   * @alias module:shipping_v2/model/PackageDocument
   * @class
   * @param type {DocumentType}
   * @param format {DocumentFormat}
   * @param contents {String} A Base64 encoded string of the file contents.
   */
  constructor (type, format, contents) {
    this.type = type
    this.format = format
    this.contents = contents
  }

  /**
   * Constructs a <code>PackageDocument</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {PackageDocument} obj Optional instance to populate.
   * @return {PackageDocument} The populated <code>PackageDocument</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new PackageDocument()
      if (data.hasOwnProperty('type')) { obj.type = DocumentType.constructFromObject(data.type) }
      if (data.hasOwnProperty('format')) { obj.format = DocumentFormat.constructFromObject(data.format) }
      if (data.hasOwnProperty('contents')) { obj.contents = ApiClient.convertToType(data.contents, 'String') }
    }
    return obj
  }
}

/**
 * @member {DocumentType} type
 * @type {DocumentType}
 */
PackageDocument.prototype.type = undefined

/**
 * @member {DocumentFormat} format
 * @type {DocumentFormat}
 */
PackageDocument.prototype.format = undefined

/**
 * A Base64 encoded string of the file contents.
 * @member {String} contents
 * @type {String}
 */
PackageDocument.prototype.contents = undefined
