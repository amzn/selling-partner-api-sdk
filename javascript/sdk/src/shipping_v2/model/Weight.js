/**
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'

/**
 * The Weight model module.
 * @module shipping_v2/model/Weight
 * @version v2
 */
export class Weight {
  /**
   * Constructs a new <code>Weight</code>.
   * The weight in the units indicated.
   * @alias module:shipping_v2/model/Weight
   * @class
   * @param unit {String} The unit of measurement.
   * @param value {Number} The measurement value.
   */
  constructor (unit, value) {
    this.unit = unit
    this.value = value
  }

  /**
   * Constructs a <code>Weight</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {Weight} obj Optional instance to populate.
   * @return {Weight} The populated <code>Weight</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new Weight()
      if (data.hasOwnProperty('unit')) { obj.unit = ApiClient.convertToType(data.unit, 'String') }
      if (data.hasOwnProperty('value')) { obj.value = ApiClient.convertToType(data.value, 'Number') }
    }
    return obj
  }
}

/**
 * Allowed values for the <code>unit</code> property.
 * @enum {String}
 * @readonly
 */
Weight.UnitEnum = {

  /**
     * value: "GRAM"
     * @const
     */
  GRAM: 'GRAM',

  /**
     * value: "KILOGRAM"
     * @const
     */
  KILOGRAM: 'KILOGRAM',

  /**
     * value: "OUNCE"
     * @const
     */
  OUNCE: 'OUNCE',

  /**
     * value: "POUND"
     * @const
     */
  POUND: 'POUND'
}
/**
 * The unit of measurement.
 * @member {String} unit
 * @type {String}
 */
Weight.prototype.unit = undefined

/**
 * The measurement value.
 * @member {Number} value
 * @type {Number}
 */
Weight.prototype.value = undefined
