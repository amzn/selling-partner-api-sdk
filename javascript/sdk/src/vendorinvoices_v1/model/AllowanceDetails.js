/**
 * Selling Partner API for Retail Procurement Payments
 * The Selling Partner API for Retail Procurement Payments provides programmatic access to vendors payments data.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { Money } from './Money.js'
import { TaxDetails } from './TaxDetails.js'

/**
 * The AllowanceDetails model module.
 * @module vendorinvoices_v1/model/AllowanceDetails
 * @version v1
 */
export class AllowanceDetails {
  /**
   * Constructs a new <code>AllowanceDetails</code>.
   * Monetary and tax details of the allowance.
   * @alias module:vendorinvoices_v1/model/AllowanceDetails
   * @class
   * @param type {String} Type of the allowance applied.
   * @param allowanceAmount {Money}
   */
  constructor (type, allowanceAmount) {
    this.type = type
    this.allowanceAmount = allowanceAmount
  }

  /**
   * Constructs a <code>AllowanceDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {AllowanceDetails} obj Optional instance to populate.
   * @return {AllowanceDetails} The populated <code>AllowanceDetails</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new AllowanceDetails()
      if (data.hasOwnProperty('type')) { obj.type = ApiClient.convertToType(data.type, 'String') }
      if (data.hasOwnProperty('description')) { obj.description = ApiClient.convertToType(data.description, 'String') }
      if (data.hasOwnProperty('allowanceAmount')) { obj.allowanceAmount = Money.constructFromObject(data.allowanceAmount) }
      if (data.hasOwnProperty('taxDetails')) { obj.taxDetails = ApiClient.convertToType(data.taxDetails, [TaxDetails]) }
    }
    return obj
  }
}

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AllowanceDetails.TypeEnum = {

  /**
     * value: "Discount"
     * @const
     */
  Discount: 'Discount',

  /**
     * value: "DiscountIncentive"
     * @const
     */
  DiscountIncentive: 'DiscountIncentive',

  /**
     * value: "Defective"
     * @const
     */
  Defective: 'Defective',

  /**
     * value: "Promotional"
     * @const
     */
  Promotional: 'Promotional',

  /**
     * value: "UnsaleableMerchandise"
     * @const
     */
  UnsaleableMerchandise: 'UnsaleableMerchandise',

  /**
     * value: "Special"
     * @const
     */
  Special: 'Special'
}

/**
 * Type of the allowance applied.
 * @member {String} type
 * @type {String}
 */
AllowanceDetails.prototype.type = undefined

/**
 * Description of the allowance.
 * @member {String} description
 * @type {String}
 */
AllowanceDetails.prototype.description = undefined

/**
 * @member {Money} allowanceAmount
 * @type {Money}
 */
AllowanceDetails.prototype.allowanceAmount = undefined

/**
 * Tax amount details applied on this allowance.
 * @member {[TaxDetails]} taxDetails
 * @type {[TaxDetails]}
 */
AllowanceDetails.prototype.taxDetails = undefined
