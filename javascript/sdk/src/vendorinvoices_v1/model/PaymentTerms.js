/**
 * Selling Partner API for Retail Procurement Payments
 * The Selling Partner API for Retail Procurement Payments provides programmatic access to vendors payments data.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The PaymentTerms model module.
 * @module vendorinvoices_v1/model/PaymentTerms
 * @version v1
 */
export class PaymentTerms {
  /**
   * Constructs a new <code>PaymentTerms</code>.
   * Terms of the payment for the invoice. The basis of the payment terms is the invoice date.
   * @alias module:vendorinvoices_v1/model/PaymentTerms
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>PaymentTerms</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorinvoices_v1/model/PaymentTerms} obj Optional instance to populate.
   * @return {module:vendorinvoices_v1/model/PaymentTerms} The populated <code>PaymentTerms</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new PaymentTerms();
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('discountPercent'))
        obj.discountPercent = ApiClient.convertToType(data['discountPercent'], 'String');
      if (data.hasOwnProperty('discountDueDays'))
        obj.discountDueDays = ApiClient.convertToType(data['discountDueDays'], 'Number');
      if (data.hasOwnProperty('netDueDays'))
        obj.netDueDays = ApiClient.convertToType(data['netDueDays'], 'Number');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
PaymentTerms['TypeEnum'] = {

    /**
     * value: "Basic"
     * @const
     */
    "Basic": "Basic",

    /**
     * value: "EndOfMonth"
     * @const
     */
    "EndOfMonth": "EndOfMonth",

    /**
     * value: "FixedDate"
     * @const
     */
    "FixedDate": "FixedDate",

    /**
     * value: "Proximo"
     * @const
     */
    "Proximo": "Proximo",

    /**
     * value: "PaymentDueUponReceiptOfInvoice"
     * @const
     */
    "PaymentDueUponReceiptOfInvoice": "PaymentDueUponReceiptOfInvoice",

    /**
     * value: "LetterofCredit"
     * @const
     */
    "LetterofCredit": "LetterofCredit"
};

/**
 * The payment term type for the invoice.
 * @member {module:vendorinvoices_v1/model/PaymentTerms.TypeEnum} type
 */
PaymentTerms.prototype.type = undefined;

/**
 * A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\\d*))(\\.\\d+)?([eE][+-]?\\d+)?$`.
 * @member {String} discountPercent
 */
PaymentTerms.prototype.discountPercent = undefined;

/**
 * The number of calendar days from the Base date (Invoice date) until the discount is no longer valid.
 * @member {Number} discountDueDays
 */
PaymentTerms.prototype.discountDueDays = undefined;

/**
 * The number of calendar days from the base date (invoice date) until the total amount on the invoice is due.
 * @member {Number} netDueDays
 */
PaymentTerms.prototype.netDueDays = undefined;


