/**
 * Selling Partner API for Retail Procurement Payments
 * The Selling Partner API for Retail Procurement Payments provides programmatic access to vendors payments data.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {AllowanceDetails} from './AllowanceDetails.js';
import {ChargeDetails} from './ChargeDetails.js';
import {CreditNoteDetails} from './CreditNoteDetails.js';
import {ItemQuantity} from './ItemQuantity.js';
import {Money} from './Money.js';
import {NetCostUnitOfMeasure} from './NetCostUnitOfMeasure.js';
import {TaxDetails} from './TaxDetails.js';

/**
 * The InvoiceItem model module.
 * @module vendorinvoices_v1/model/InvoiceItem
 * @version v1
 */
export class InvoiceItem {
  /**
   * Constructs a new <code>InvoiceItem</code>.
   * Details of the item being invoiced.
   * @alias module:vendorinvoices_v1/model/InvoiceItem
   * @class
   * @param itemSequenceNumber {Number} Unique number related to this line item.
   * @param invoicedQuantity {module:vendorinvoices_v1/model/ItemQuantity} 
   * @param netCost {module:vendorinvoices_v1/model/Money} 
   */
  constructor(itemSequenceNumber, invoicedQuantity, netCost) {
    this.itemSequenceNumber = itemSequenceNumber;
    this.invoicedQuantity = invoicedQuantity;
    this.netCost = netCost;
  }

  /**
   * Constructs a <code>InvoiceItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorinvoices_v1/model/InvoiceItem} obj Optional instance to populate.
   * @return {module:vendorinvoices_v1/model/InvoiceItem} The populated <code>InvoiceItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new InvoiceItem();
      if (data.hasOwnProperty('itemSequenceNumber'))
        obj.itemSequenceNumber = ApiClient.convertToType(data['itemSequenceNumber'], 'Number');
      if (data.hasOwnProperty('amazonProductIdentifier'))
        obj.amazonProductIdentifier = ApiClient.convertToType(data['amazonProductIdentifier'], 'String');
      if (data.hasOwnProperty('vendorProductIdentifier'))
        obj.vendorProductIdentifier = ApiClient.convertToType(data['vendorProductIdentifier'], 'String');
      if (data.hasOwnProperty('invoicedQuantity'))
        obj.invoicedQuantity = ItemQuantity.constructFromObject(data['invoicedQuantity']);
      if (data.hasOwnProperty('netCost'))
        obj.netCost = Money.constructFromObject(data['netCost']);
      if (data.hasOwnProperty('netCostUnitOfMeasure'))
        obj.netCostUnitOfMeasure = NetCostUnitOfMeasure.constructFromObject(data['netCostUnitOfMeasure']);
      if (data.hasOwnProperty('purchaseOrderNumber'))
        obj.purchaseOrderNumber = ApiClient.convertToType(data['purchaseOrderNumber'], 'String');
      if (data.hasOwnProperty('hsnCode'))
        obj.hsnCode = ApiClient.convertToType(data['hsnCode'], 'String');
      if (data.hasOwnProperty('creditNoteDetails'))
        obj.creditNoteDetails = CreditNoteDetails.constructFromObject(data['creditNoteDetails']);
      if (data.hasOwnProperty('taxDetails'))
        obj.taxDetails = ApiClient.convertToType(data['taxDetails'], [TaxDetails]);
      if (data.hasOwnProperty('chargeDetails'))
        obj.chargeDetails = ApiClient.convertToType(data['chargeDetails'], [ChargeDetails]);
      if (data.hasOwnProperty('allowanceDetails'))
        obj.allowanceDetails = ApiClient.convertToType(data['allowanceDetails'], [AllowanceDetails]);
    }
    return obj;
  }
}

/**
 * Unique number related to this line item.
 * @member {Number} itemSequenceNumber
 */
InvoiceItem.prototype.itemSequenceNumber = undefined;

/**
 * Amazon Standard Identification Number (ASIN) of an item.
 * @member {String} amazonProductIdentifier
 */
InvoiceItem.prototype.amazonProductIdentifier = undefined;

/**
 * The vendor selected product identifier of the item. Should be the same as was provided in the purchase order.
 * @member {String} vendorProductIdentifier
 */
InvoiceItem.prototype.vendorProductIdentifier = undefined;

/**
 * @member {module:vendorinvoices_v1/model/ItemQuantity} invoicedQuantity
 */
InvoiceItem.prototype.invoicedQuantity = undefined;

/**
 * @member {module:vendorinvoices_v1/model/Money} netCost
 */
InvoiceItem.prototype.netCost = undefined;

/**
 * @member {module:vendorinvoices_v1/model/NetCostUnitOfMeasure} netCostUnitOfMeasure
 */
InvoiceItem.prototype.netCostUnitOfMeasure = undefined;

/**
 * The Amazon purchase order number for this invoiced line item. Formatting Notes: 8-character alpha-numeric code. This value is mandatory only when invoiceType is Invoice, and is not required when invoiceType is CreditNote.
 * @member {String} purchaseOrderNumber
 */
InvoiceItem.prototype.purchaseOrderNumber = undefined;

/**
 * HSN Tax code. The HSN number cannot contain alphabets.
 * @member {String} hsnCode
 */
InvoiceItem.prototype.hsnCode = undefined;

/**
 * @member {module:vendorinvoices_v1/model/CreditNoteDetails} creditNoteDetails
 */
InvoiceItem.prototype.creditNoteDetails = undefined;

/**
 * Individual tax details per line item.
 * @member {Array.<module:vendorinvoices_v1/model/TaxDetails>} taxDetails
 */
InvoiceItem.prototype.taxDetails = undefined;

/**
 * Individual charge details per line item.
 * @member {Array.<module:vendorinvoices_v1/model/ChargeDetails>} chargeDetails
 */
InvoiceItem.prototype.chargeDetails = undefined;

/**
 * Individual allowance details per line item.
 * @member {Array.<module:vendorinvoices_v1/model/AllowanceDetails>} allowanceDetails
 */
InvoiceItem.prototype.allowanceDetails = undefined;


