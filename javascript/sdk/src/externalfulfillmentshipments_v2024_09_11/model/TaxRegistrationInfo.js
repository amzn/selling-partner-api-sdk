/**
 * The Selling Partner API for Amazon External Fulfillment Shipments Processing
 * You can use the External Fulfillment Shipments API to retrieve, manage, and track shipments processed through Amazon's external fulfillment network. Use this API to get shipment details, monitor status changes, and access fulfillment requirements.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { Address } from './Address.js'

/**
 * The TaxRegistrationInfo model module.
 * @module externalfulfillmentshipments_v2024_09_11/model/TaxRegistrationInfo
 * @version 2024-09-11
 */
export class TaxRegistrationInfo {
  /**
   * Constructs a new <code>TaxRegistrationInfo</code>.
   * Tax registration details of the entity. Applicable to direct fulfillment shipments.
   * @alias module:externalfulfillmentshipments_v2024_09_11/model/TaxRegistrationInfo
   * @class
   */
  constructor () {
  }

  /**
   * Constructs a <code>TaxRegistrationInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {TaxRegistrationInfo} obj Optional instance to populate.
   * @return {TaxRegistrationInfo} The populated <code>TaxRegistrationInfo</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new TaxRegistrationInfo()
      if (data.hasOwnProperty('type')) { obj.type = ApiClient.convertToType(data.type, 'String') }
      if (data.hasOwnProperty('number')) { obj.number = ApiClient.convertToType(data.number, 'String') }
      if (data.hasOwnProperty('address')) { obj.address = Address.constructFromObject(data.address) }
      if (data.hasOwnProperty('messages')) { obj.messages = ApiClient.convertToType(data.messages, 'String') }
    }
    return obj
  }
}

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
TaxRegistrationInfo.TypeEnum = {

  /**
     * value: "VAT"
     * @const
     */
  VAT: 'VAT',

  /**
     * value: "GST"
     * @const
     */
  GST: 'GST'
}
/**
 * Tax registration type for the entity
 * @member {String} type
 * @type {String}
 */
TaxRegistrationInfo.prototype.type = undefined

/**
 * The tax registration number for the party. For example, their VAT ID.
 * @member {String} number
 * @type {String}
 */
TaxRegistrationInfo.prototype.number = undefined

/**
 * @member {Address} address
 * @type {Address}
 */
TaxRegistrationInfo.prototype.address = undefined

/**
 * Tax registration message that can be used for additional tax related details.
 * @member {String} messages
 * @type {String}
 */
TaxRegistrationInfo.prototype.messages = undefined
