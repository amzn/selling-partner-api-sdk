/**
 * The Selling Partner API for Amazon External Fulfillment Shipments Processing
 * You can use the External Fulfillment Shipments API to retrieve, manage, and track shipments processed through Amazon's external fulfillment network. Use this API to get shipment details, monitor status changes, and access fulfillment requirements.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'

/**
 * The Cancellation model module.
 * @module externalfulfillmentshipments_v2024_09_11/model/Cancellation
 * @version 2024-09-11
 */
export class Cancellation {
  /**
   * Constructs a new <code>Cancellation</code>.
   * A shipment item&#39;s cancellation details.
   * @alias module:externalfulfillmentshipments_v2024_09_11/model/Cancellation
   * @class
   * @param cancelledQuantity {Number} The number of items of this particular item which have been cancelled.
   * @param cancelledTimestamp {String} A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
   * @param cancellationType {String} The type of cancellation of the item in the shipment.
   */
  constructor (cancelledQuantity, cancelledTimestamp, cancellationType) {
    this.cancelledQuantity = cancelledQuantity
    this.cancelledTimestamp = cancelledTimestamp
    this.cancellationType = cancellationType
  }

  /**
   * Constructs a <code>Cancellation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {Cancellation} obj Optional instance to populate.
   * @return {Cancellation} The populated <code>Cancellation</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new Cancellation()
      if (data.hasOwnProperty('cancelledQuantity')) { obj.cancelledQuantity = ApiClient.convertToType(data.cancelledQuantity, 'Number') }
      if (data.hasOwnProperty('cancelledTimestamp')) { obj.cancelledTimestamp = ApiClient.convertToType(data.cancelledTimestamp, 'String') }
      if (data.hasOwnProperty('cancellationType')) { obj.cancellationType = ApiClient.convertToType(data.cancellationType, 'String') }
      if (data.hasOwnProperty('cancellationReason')) { obj.cancellationReason = ApiClient.convertToType(data.cancellationReason, 'String') }
    }
    return obj
  }
}

/**
 * The number of items of this particular item which have been cancelled.
 * @member {Number} cancelledQuantity
 * @type {Number}
 */
Cancellation.prototype.cancelledQuantity = undefined

/**
 * A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
 * @member {String} cancelledTimestamp
 * @type {String}
 */
Cancellation.prototype.cancelledTimestamp = undefined

/**
 * Allowed values for the <code>cancellationType</code> property.
 * @enum {String}
 * @readonly
 */
Cancellation.CancellationTypeEnum = {

  /**
     * value: "SELLER_REJECTED"
     * @const
     */
  SELLER_REJECTED: 'SELLER_REJECTED',

  /**
     * value: "MARKETPLACE_CANCELLED"
     * @const
     */
  MARKETPLACE_CANCELLED: 'MARKETPLACE_CANCELLED',

  /**
     * value: "SYSTEM_CANCELLED"
     * @const
     */
  SYSTEM_CANCELLED: 'SYSTEM_CANCELLED'
}
/**
 * The type of cancellation of the item in the shipment.
 * @member {String} cancellationType
 * @type {String}
 */
Cancellation.prototype.cancellationType = undefined

/**
 * The reason for the cancellation of the shipment.
 * @member {String} cancellationReason
 * @type {String}
 */
Cancellation.prototype.cancellationReason = undefined
