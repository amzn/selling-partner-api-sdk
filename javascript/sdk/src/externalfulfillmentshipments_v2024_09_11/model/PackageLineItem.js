/**
 * The Selling Partner API for Amazon External Fulfillment Shipments Processing
 * You can use the External Fulfillment Shipments API to retrieve, manage, and track shipments processed through Amazon's external fulfillment network. Use this API to get shipment details, monitor status changes, and access fulfillment requirements.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { Amount } from './Amount.js'

/**
 * The PackageLineItem model module.
 * @module externalfulfillmentshipments_v2024_09_11/model/PackageLineItem
 * @version 2024-09-11
 */
export class PackageLineItem {
  /**
   * Constructs a new <code>PackageLineItem</code>.
   * A line item in a package.
   * @alias module:externalfulfillmentshipments_v2024_09_11/model/PackageLineItem
   * @class
   * @param packageLineItemId {String} The line item ID.
   * @param quantity {Number} The number of items of a particular line item of a shipment that are packed into the package.
   */
  constructor (packageLineItemId, quantity) {
    this.packageLineItemId = packageLineItemId
    this.quantity = quantity
  }

  /**
   * Constructs a <code>PackageLineItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {PackageLineItem} obj Optional instance to populate.
   * @return {PackageLineItem} The populated <code>PackageLineItem</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new PackageLineItem()
      if (data.hasOwnProperty('packageLineItemId')) { obj.packageLineItemId = ApiClient.convertToType(data.packageLineItemId, 'String') }
      if (data.hasOwnProperty('quantity')) { obj.quantity = ApiClient.convertToType(data.quantity, 'Number') }
      if (data.hasOwnProperty('serialNumbers')) { obj.serialNumbers = ApiClient.convertToType(data.serialNumbers, ['String']) }
      if (data.hasOwnProperty('pieces')) { obj.pieces = ApiClient.convertToType(data.pieces, 'Number') }
      if (data.hasOwnProperty('countryOfOrigin')) { obj.countryOfOrigin = ApiClient.convertToType(data.countryOfOrigin, 'String') }
      if (data.hasOwnProperty('itemValue')) { obj.itemValue = Amount.constructFromObject(data.itemValue) }
    }
    return obj
  }
}

/**
 * The line item ID.
 * @member {String} packageLineItemId
 * @type {String}
 */
PackageLineItem.prototype.packageLineItemId = undefined

/**
 * The number of items of a particular line item of a shipment that are packed into the package.
 * @member {Number} quantity
 * @type {Number}
 */
PackageLineItem.prototype.quantity = undefined

/**
 * The list of serial numbers of items in the package, if required to be provided.
 * @member {[String]} serialNumbers
 * @type {[String]}
 */
PackageLineItem.prototype.serialNumbers = undefined

/**
 * The number of pieces of a multi-piece item that are in this package. This is applicable only for items that are shipped in multiple pieces.
 * @member {Number} pieces
 * @type {Number}
 */
PackageLineItem.prototype.pieces = undefined

/**
 * A two-letter country code, as defined by the ISO-3166 alpha-2 standard.
 * @member {String} countryOfOrigin
 * @type {String}
 */
PackageLineItem.prototype.countryOfOrigin = undefined

/**
 * @member {Amount} itemValue
 * @type {Amount}
 */
PackageLineItem.prototype.itemValue = undefined
