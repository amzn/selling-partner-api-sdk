/**
 * The Selling Partner API for Amazon External Fulfillment Shipments Processing
 * You can use the External Fulfillment Shipments API to retrieve, manage, and track shipments processed through Amazon's external fulfillment network. Use this API to get shipment details, monitor status changes, and access fulfillment requirements.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { Priority } from './Priority.js'
import { ReplacedShipmentInfo } from './ReplacedShipmentInfo.js'

/**
 * The ShipmentInfo model module.
 * @module externalfulfillmentshipments_v2024_09_11/model/ShipmentInfo
 * @version 2024-09-11
 */
export class ShipmentInfo {
  /**
   * Constructs a new <code>ShipmentInfo</code>.
   * High-level details of the shipment.
   * @alias module:externalfulfillmentshipments_v2024_09_11/model/ShipmentInfo
   * @class
   * @param shipmentType {String} The type of shipment.
   * @param numberOfUnits {Number} Total number of units in the shipment.
   * @param priority {Priority}
   * @param buyerOrderId {String} The buyer's order ID.
   */
  constructor (shipmentType, numberOfUnits, priority, buyerOrderId) {
    this.shipmentType = shipmentType
    this.numberOfUnits = numberOfUnits
    this.priority = priority
    this.buyerOrderId = buyerOrderId
  }

  /**
   * Constructs a <code>ShipmentInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {ShipmentInfo} obj Optional instance to populate.
   * @return {ShipmentInfo} The populated <code>ShipmentInfo</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new ShipmentInfo()
      if (data.hasOwnProperty('shipmentType')) { obj.shipmentType = ApiClient.convertToType(data.shipmentType, 'String') }
      if (data.hasOwnProperty('originalShipmentInfo')) { obj.originalShipmentInfo = ReplacedShipmentInfo.constructFromObject(data.originalShipmentInfo) }
      if (data.hasOwnProperty('numberOfUnits')) { obj.numberOfUnits = ApiClient.convertToType(data.numberOfUnits, 'Number') }
      if (data.hasOwnProperty('priority')) { obj.priority = Priority.constructFromObject(data.priority) }
      if (data.hasOwnProperty('buyerOrderId')) { obj.buyerOrderId = ApiClient.convertToType(data.buyerOrderId, 'String') }
      if (data.hasOwnProperty('orderStatesEligibleForRejection')) { obj.orderStatesEligibleForRejection = ApiClient.convertToType(data.orderStatesEligibleForRejection, ['String']) }
      if (data.hasOwnProperty('orderPlacedTimestamp')) { obj.orderPlacedTimestamp = ApiClient.convertToType(data.orderPlacedTimestamp, 'String') }
      if (data.hasOwnProperty('processingSource')) { obj.processingSource = ApiClient.convertToType(data.processingSource, 'String') }
    }
    return obj
  }
}

/**
 * Allowed values for the <code>shipmentType</code> property.
 * @enum {String}
 * @readonly
 */
ShipmentInfo.ShipmentTypeEnum = {

  /**
     * value: "NEW"
     * @const
     */
  NEW: 'NEW',

  /**
     * value: "EXCHANGE"
     * @const
     */
  EXCHANGE: 'EXCHANGE',

  /**
     * value: "REPLACEMENT"
     * @const
     */
  REPLACEMENT: 'REPLACEMENT'
}
/**
 * The type of shipment.
 * @member {String} shipmentType
 * @type {String}
 */
ShipmentInfo.prototype.shipmentType = undefined

/**
 * @member {ReplacedShipmentInfo} originalShipmentInfo
 * @type {ReplacedShipmentInfo}
 */
ShipmentInfo.prototype.originalShipmentInfo = undefined

/**
 * Total number of units in the shipment.
 * @member {Number} numberOfUnits
 * @type {Number}
 */
ShipmentInfo.prototype.numberOfUnits = undefined

/**
 * @member {Priority} priority
 * @type {Priority}
 */
ShipmentInfo.prototype.priority = undefined

/**
 * The buyer's order ID.
 * @member {String} buyerOrderId
 * @type {String}
 */
ShipmentInfo.prototype.buyerOrderId = undefined

/**
 * A list of order statuses for which the marketplace allows order rejection (seller cancellation). If the order has a status that does not belong to this list, then seller cancellation is not possible.
 * @member {[String]} orderStatesEligibleForRejection
 * @type {[String]}
 */
ShipmentInfo.prototype.orderStatesEligibleForRejection = undefined

/**
 * The timestamp of when the order was placed, in UTC
 * @member {String} orderPlacedTimestamp
 * @type {String}
 */
ShipmentInfo.prototype.orderPlacedTimestamp = undefined

/**
 * Allowed values for the <code>processingSource</code> property.
 * @enum {String}
 * @readonly
 */
ShipmentInfo.ProcessingSourceEnum = {

  /**
     * value: "EXTERNAL_PLATFORM"
     * @const
     */
  EXTERNAL_PLATFORM: 'EXTERNAL_PLATFORM',

  /**
     * value: "INTERNAL_PLATFORM"
     * @const
     */
  INTERNAL_PLATFORM: 'INTERNAL_PLATFORM'
}
/**
 * The source of the order operation.
 * @member {String} processingSource
 * @type {String}
 */
ShipmentInfo.prototype.processingSource = undefined
