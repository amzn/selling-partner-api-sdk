/**
 * The Selling Partner API for Amazon External Fulfillment Shipments Processing
 * You can use the External Fulfillment Shipments API to retrieve, manage, and track shipments processed through Amazon's external fulfillment network. Use this API to get shipment details, monitor status changes, and access fulfillment requirements.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { Address } from './Address.js'
import { TaxRegistrationInfo } from './TaxRegistrationInfo.js'

/**
 * The PartyIdentificationInfo model module.
 * @module externalfulfillmentshipments_v2024_09_11/model/PartyIdentificationInfo
 * @version 2024-09-11
 */
export class PartyIdentificationInfo {
  /**
   * Constructs a new <code>PartyIdentificationInfo</code>.
   * Party identification details for the shipment, applicable to direct fulfillment shipments.
   * @alias module:externalfulfillmentshipments_v2024_09_11/model/PartyIdentificationInfo
   * @class
   * @param partyId {String} Assigned identification for the party. For example, a warehouse code or vendor code.
   * @param partyType {String} Assigned identification for the party. For example, a warehouse code or vendor code.
   */
  constructor (partyId, partyType) {
    this.partyId = partyId
    this.partyType = partyType
  }

  /**
   * Constructs a <code>PartyIdentificationInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {PartyIdentificationInfo} obj Optional instance to populate.
   * @return {PartyIdentificationInfo} The populated <code>PartyIdentificationInfo</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new PartyIdentificationInfo()
      if (data.hasOwnProperty('partyId')) { obj.partyId = ApiClient.convertToType(data.partyId, 'String') }
      if (data.hasOwnProperty('partyType')) { obj.partyType = ApiClient.convertToType(data.partyType, 'String') }
      if (data.hasOwnProperty('address')) { obj.address = Address.constructFromObject(data.address) }
      if (data.hasOwnProperty('taxInfo')) { obj.taxInfo = TaxRegistrationInfo.constructFromObject(data.taxInfo) }
    }
    return obj
  }
}

/**
 * Assigned identification for the party. For example, a warehouse code or vendor code.
 * @member {String} partyId
 * @type {String}
 */
PartyIdentificationInfo.prototype.partyId = undefined

/**
 * Allowed values for the <code>partyType</code> property.
 * @enum {String}
 * @readonly
 */
PartyIdentificationInfo.PartyTypeEnum = {

  /**
     * value: "BILL_TO_PARTY"
     * @const
     */
  BILL_TO_PARTY: 'BILL_TO_PARTY',

  /**
     * value: "SHIP_TO_PARTY"
     * @const
     */
  SHIP_TO_PARTY: 'SHIP_TO_PARTY',

  /**
     * value: "SHIP_FROM_PARTY"
     * @const
     */
  SHIP_FROM_PARTY: 'SHIP_FROM_PARTY',

  /**
     * value: "SELLING_PARTY"
     * @const
     */
  SELLING_PARTY: 'SELLING_PARTY'
}

/**
 * Assigned identification for the party. For example, a warehouse code or vendor code.
 * @member {String} partyType
 * @type {String}
 */
PartyIdentificationInfo.prototype.partyType = undefined

/**
 * @member {Address} address
 * @type {Address}
 */
PartyIdentificationInfo.prototype.address = undefined

/**
 * @member {TaxRegistrationInfo} taxInfo
 * @type {TaxRegistrationInfo}
 */
PartyIdentificationInfo.prototype.taxInfo = undefined
