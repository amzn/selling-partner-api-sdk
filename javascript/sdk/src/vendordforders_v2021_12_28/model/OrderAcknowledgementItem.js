/**
 * Selling Partner API for Direct Fulfillment Orders
 * The Selling Partner API for Direct Fulfillment Orders provides programmatic access to a direct fulfillment vendor's order data.
 *
 * The version of the OpenAPI document: 2021-12-28
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {AcknowledgementStatus} from './AcknowledgementStatus.js';
import {OrderItemAcknowledgement} from './OrderItemAcknowledgement.js';
import {PartyIdentification} from './PartyIdentification.js';

/**
 * The OrderAcknowledgementItem model module.
 * @module vendordforders_v2021_12_28/model/OrderAcknowledgementItem
 * @version 2021-12-28
 */
export class OrderAcknowledgementItem {
  /**
   * Constructs a new <code>OrderAcknowledgementItem</code>.
   * Details of an individual order being acknowledged.
   * @alias module:vendordforders_v2021_12_28/model/OrderAcknowledgementItem
   * @class
   * @param purchaseOrderNumber {String} The purchase order number for this order. Formatting Notes: alpha-numeric code.
   * @param vendorOrderNumber {String} The vendor's order number for this order.
   * @param acknowledgementDate {Date} The date and time when the order is acknowledged, in ISO-8601 date/time format. For example: 2018-07-16T23:00:00Z / 2018-07-16T23:00:00-05:00 / 2018-07-16T23:00:00-08:00.
   * @param acknowledgementStatus {module:vendordforders_v2021_12_28/model/AcknowledgementStatus} 
   * @param sellingParty {module:vendordforders_v2021_12_28/model/PartyIdentification} 
   * @param shipFromParty {module:vendordforders_v2021_12_28/model/PartyIdentification} 
   * @param itemAcknowledgements {Array.<module:vendordforders_v2021_12_28/model/OrderItemAcknowledgement>} Item details including acknowledged quantity.
   */
  constructor(purchaseOrderNumber, vendorOrderNumber, acknowledgementDate, acknowledgementStatus, sellingParty, shipFromParty, itemAcknowledgements) {
    this.purchaseOrderNumber = purchaseOrderNumber;
    this.vendorOrderNumber = vendorOrderNumber;
    this.acknowledgementDate = acknowledgementDate;
    this.acknowledgementStatus = acknowledgementStatus;
    this.sellingParty = sellingParty;
    this.shipFromParty = shipFromParty;
    this.itemAcknowledgements = itemAcknowledgements;
  }

  /**
   * Constructs a <code>OrderAcknowledgementItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendordforders_v2021_12_28/model/OrderAcknowledgementItem} obj Optional instance to populate.
   * @return {module:vendordforders_v2021_12_28/model/OrderAcknowledgementItem} The populated <code>OrderAcknowledgementItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new OrderAcknowledgementItem();
      if (data.hasOwnProperty('purchaseOrderNumber'))
        obj.purchaseOrderNumber = ApiClient.convertToType(data['purchaseOrderNumber'], 'String');
      if (data.hasOwnProperty('vendorOrderNumber'))
        obj.vendorOrderNumber = ApiClient.convertToType(data['vendorOrderNumber'], 'String');
      if (data.hasOwnProperty('acknowledgementDate'))
        obj.acknowledgementDate = ApiClient.convertToType(data['acknowledgementDate'], 'Date');
      if (data.hasOwnProperty('acknowledgementStatus'))
        obj.acknowledgementStatus = AcknowledgementStatus.constructFromObject(data['acknowledgementStatus']);
      if (data.hasOwnProperty('sellingParty'))
        obj.sellingParty = PartyIdentification.constructFromObject(data['sellingParty']);
      if (data.hasOwnProperty('shipFromParty'))
        obj.shipFromParty = PartyIdentification.constructFromObject(data['shipFromParty']);
      if (data.hasOwnProperty('itemAcknowledgements'))
        obj.itemAcknowledgements = ApiClient.convertToType(data['itemAcknowledgements'], [OrderItemAcknowledgement]);
    }
    return obj;
  }
}

/**
 * The purchase order number for this order. Formatting Notes: alpha-numeric code.
 * @member {String} purchaseOrderNumber
 */
OrderAcknowledgementItem.prototype.purchaseOrderNumber = undefined;

/**
 * The vendor's order number for this order.
 * @member {String} vendorOrderNumber
 */
OrderAcknowledgementItem.prototype.vendorOrderNumber = undefined;

/**
 * The date and time when the order is acknowledged, in ISO-8601 date/time format. For example: 2018-07-16T23:00:00Z / 2018-07-16T23:00:00-05:00 / 2018-07-16T23:00:00-08:00.
 * @member {Date} acknowledgementDate
 */
OrderAcknowledgementItem.prototype.acknowledgementDate = undefined;

/**
 * @member {module:vendordforders_v2021_12_28/model/AcknowledgementStatus} acknowledgementStatus
 */
OrderAcknowledgementItem.prototype.acknowledgementStatus = undefined;

/**
 * @member {module:vendordforders_v2021_12_28/model/PartyIdentification} sellingParty
 */
OrderAcknowledgementItem.prototype.sellingParty = undefined;

/**
 * @member {module:vendordforders_v2021_12_28/model/PartyIdentification} shipFromParty
 */
OrderAcknowledgementItem.prototype.shipFromParty = undefined;

/**
 * Item details including acknowledged quantity.
 * @member {Array.<module:vendordforders_v2021_12_28/model/OrderItemAcknowledgement>} itemAcknowledgements
 */
OrderAcknowledgementItem.prototype.itemAcknowledgements = undefined;


