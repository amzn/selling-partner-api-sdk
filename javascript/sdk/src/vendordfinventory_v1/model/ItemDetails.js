/**
 * Selling Partner API for Direct Fulfillment Inventory Updates
 * The Selling Partner API for Direct Fulfillment Inventory Updates provides programmatic access to a direct fulfillment vendor's inventory updates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ItemQuantity} from './ItemQuantity.js';

/**
 * The ItemDetails model module.
 * @module vendordfinventory_v1/model/ItemDetails
 * @version v1
 */
export class ItemDetails {
  /**
   * Constructs a new <code>ItemDetails</code>.
   * Updated inventory details for an item.
   * @alias module:vendordfinventory_v1/model/ItemDetails
   * @class
   * @param availableQuantity {module:vendordfinventory_v1/model/ItemQuantity} 
   */
  constructor(availableQuantity) {
    this.availableQuantity = availableQuantity;
  }

  /**
   * Constructs a <code>ItemDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendordfinventory_v1/model/ItemDetails} obj Optional instance to populate.
   * @return {module:vendordfinventory_v1/model/ItemDetails} The populated <code>ItemDetails</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ItemDetails();
      if (data.hasOwnProperty('buyerProductIdentifier'))
        obj.buyerProductIdentifier = ApiClient.convertToType(data['buyerProductIdentifier'], 'String');
      if (data.hasOwnProperty('vendorProductIdentifier'))
        obj.vendorProductIdentifier = ApiClient.convertToType(data['vendorProductIdentifier'], 'String');
      if (data.hasOwnProperty('availableQuantity'))
        obj.availableQuantity = ItemQuantity.constructFromObject(data['availableQuantity']);
      if (data.hasOwnProperty('isObsolete'))
        obj.isObsolete = ApiClient.convertToType(data['isObsolete'], 'Boolean');
    }
    return obj;
  }
}

/**
 * The buyer selected product identification of the item. Either buyerProductIdentifier or vendorProductIdentifier should be submitted.
 * @member {String} buyerProductIdentifier
 */
ItemDetails.prototype.buyerProductIdentifier = undefined;

/**
 * The vendor selected product identification of the item. Either buyerProductIdentifier or vendorProductIdentifier should be submitted.
 * @member {String} vendorProductIdentifier
 */
ItemDetails.prototype.vendorProductIdentifier = undefined;

/**
 * @member {module:vendordfinventory_v1/model/ItemQuantity} availableQuantity
 */
ItemDetails.prototype.availableQuantity = undefined;

/**
 * When true, the item is permanently unavailable.
 * @member {Boolean} isObsolete
 */
ItemDetails.prototype.isObsolete = undefined;


