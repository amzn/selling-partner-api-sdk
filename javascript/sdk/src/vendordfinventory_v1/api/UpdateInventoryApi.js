/**
 * Selling Partner API for Direct Fulfillment Inventory Updates
 * The Selling Partner API for Direct Fulfillment Inventory Updates provides programmatic access to a direct fulfillment vendor's inventory updates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {SubmitInventoryUpdateRequest} from '../model/SubmitInventoryUpdateRequest.js';
import {SubmitInventoryUpdateResponse} from '../model/SubmitInventoryUpdateResponse.js';

/**
* UpdateInventory service.
* @module vendordfinventory_v1/api/UpdateInventoryApi
* @version v1
*/
export class UpdateInventoryApi {

    /**
    * Constructs a new UpdateInventoryApi. 
    * @alias module:vendordfinventory_v1/api/UpdateInventoryApi
    * @class
    * @param {module:vendordfinventory_v1/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:vendordfinventory_v1/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Submits inventory updates for the specified warehouse for either a partial or full feed of inventory items.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} warehouseId Identifier for the warehouse for which to update inventory.
     * @param {module:vendordfinventory_v1/model/SubmitInventoryUpdateRequest} body The request body containing the inventory update data to submit.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:vendordfinventory_v1/model/SubmitInventoryUpdateResponse} and HTTP response
     */
    submitInventoryUpdateWithHttpInfo(warehouseId, body) {
      let postBody = body;

      // verify the required parameter 'warehouseId' is set
      if (warehouseId === undefined || warehouseId === null) {
        throw new Error("Missing the required parameter 'warehouseId' when calling submitInventoryUpdate");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling submitInventoryUpdate");
      }


      let pathParams = {
        'warehouseId': warehouseId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SubmitInventoryUpdateResponse;

      return this.apiClient.callApi(
        '/vendor/directFulfillment/inventory/v1/warehouses/{warehouseId}/items', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Submits inventory updates for the specified warehouse for either a partial or full feed of inventory items.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} warehouseId Identifier for the warehouse for which to update inventory.
     * @param {module:vendordfinventory_v1/model/SubmitInventoryUpdateRequest} body The request body containing the inventory update data to submit.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:vendordfinventory_v1/model/SubmitInventoryUpdateResponse}
     */
    submitInventoryUpdate(warehouseId, body) {
      return this.submitInventoryUpdateWithHttpInfo(warehouseId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
