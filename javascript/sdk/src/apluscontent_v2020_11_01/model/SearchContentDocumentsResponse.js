/**
 * Selling Partner API for A+ Content Management
 * Use the A+ Content API to build applications that help selling partners add rich marketing content to their Amazon product detail pages. Selling partners can use A+ content to share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners use content modules to add images and text.
 *
 * The version of the OpenAPI document: 2020-11-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { AplusPaginatedResponse } from './AplusPaginatedResponse.js'
import { ContentMetadataRecord } from './ContentMetadataRecord.js'
import { Error } from './Error.js'

/**
 * The SearchContentDocumentsResponse model module.
 * @module apluscontent_v2020_11_01/model/SearchContentDocumentsResponse
 * @version 2020-11-01
 */
export class SearchContentDocumentsResponse {
  /**
   * Constructs a new <code>SearchContentDocumentsResponse</code>.
   * @alias module:apluscontent_v2020_11_01/model/SearchContentDocumentsResponse
   * @class
   * @implements module:apluscontent_v2020_11_01/model/AplusPaginatedResponse
   * @param contentMetadataRecords {[ContentMetadataRecord]} A list of A+ Content metadata records.
   */
  constructor (contentMetadataRecords) {
    AplusPaginatedResponse.call(this)
    this.contentMetadataRecords = contentMetadataRecords
  }

  /**
   * Constructs a <code>SearchContentDocumentsResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {SearchContentDocumentsResponse} obj Optional instance to populate.
   * @return {SearchContentDocumentsResponse} The populated <code>SearchContentDocumentsResponse</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new SearchContentDocumentsResponse()
      AplusPaginatedResponse.constructFromObject(data, obj)
      if (data.hasOwnProperty('warnings')) { obj.warnings = ApiClient.convertToType(data.warnings, [Error]) }
      if (data.hasOwnProperty('nextPageToken')) { obj.nextPageToken = ApiClient.convertToType(data.nextPageToken, 'String') }
      if (data.hasOwnProperty('contentMetadataRecords')) { obj.contentMetadataRecords = ApiClient.convertToType(data.contentMetadataRecords, [ContentMetadataRecord]) }
    }
    return obj
  }
}

/**
 * A set of messages to the user, such as warnings or comments.
 * @member {[Error]} warnings
 * @type {[Error]}
 */
SearchContentDocumentsResponse.prototype.warnings = undefined

/**
 * A token that you use to fetch a specific page when there are multiple pages of results.
 * @member {String} nextPageToken
 * @type {String}
 */
SearchContentDocumentsResponse.prototype.nextPageToken = undefined

/**
 * A list of A+ Content metadata records.
 * @member {[ContentMetadataRecord]} contentMetadataRecords
 * @type {[ContentMetadataRecord]}
 */
SearchContentDocumentsResponse.prototype.contentMetadataRecords = undefined

// Implement AplusPaginatedResponse interface:
/**
 * A set of messages to the user, such as warnings or comments.
 * @member {[Error]} warnings
 * @type {[Error]}
 */
AplusPaginatedResponse.prototype.warnings = undefined

/**
 * A token that you use to fetch a specific page when there are multiple pages of results.
 * @member {String} nextPageToken
 * @type {String}
 */
AplusPaginatedResponse.prototype.nextPageToken = undefined
