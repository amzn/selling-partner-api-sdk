/**
 * Selling Partner API for Retail Procurement Orders
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ItemQuantity} from './ItemQuantity.js';
import {Money} from './Money.js';
import {OrderItemAcknowledgement} from './OrderItemAcknowledgement.js';

/**
 * The OrderAcknowledgementItem model module.
 * @module vendororders_v1/model/OrderAcknowledgementItem
 * @version v1
 */
export class OrderAcknowledgementItem {
  /**
   * Constructs a new <code>OrderAcknowledgementItem</code>.
   * Details of the item being acknowledged.
   * @alias module:vendororders_v1/model/OrderAcknowledgementItem
   * @class
   * @param orderedQuantity {module:vendororders_v1/model/ItemQuantity} 
   * @param itemAcknowledgements {Array.<module:vendororders_v1/model/OrderItemAcknowledgement>} This is used to indicate acknowledged quantity.
   */
  constructor(orderedQuantity, itemAcknowledgements) {
    this.orderedQuantity = orderedQuantity;
    this.itemAcknowledgements = itemAcknowledgements;
  }

  /**
   * Constructs a <code>OrderAcknowledgementItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendororders_v1/model/OrderAcknowledgementItem} obj Optional instance to populate.
   * @return {module:vendororders_v1/model/OrderAcknowledgementItem} The populated <code>OrderAcknowledgementItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new OrderAcknowledgementItem();
      if (data.hasOwnProperty('itemSequenceNumber'))
        obj.itemSequenceNumber = ApiClient.convertToType(data['itemSequenceNumber'], 'String');
      if (data.hasOwnProperty('amazonProductIdentifier'))
        obj.amazonProductIdentifier = ApiClient.convertToType(data['amazonProductIdentifier'], 'String');
      if (data.hasOwnProperty('vendorProductIdentifier'))
        obj.vendorProductIdentifier = ApiClient.convertToType(data['vendorProductIdentifier'], 'String');
      if (data.hasOwnProperty('orderedQuantity'))
        obj.orderedQuantity = ItemQuantity.constructFromObject(data['orderedQuantity']);
      if (data.hasOwnProperty('netCost'))
        obj.netCost = Money.constructFromObject(data['netCost']);
      if (data.hasOwnProperty('listPrice'))
        obj.listPrice = Money.constructFromObject(data['listPrice']);
      if (data.hasOwnProperty('discountMultiplier'))
        obj.discountMultiplier = ApiClient.convertToType(data['discountMultiplier'], 'String');
      if (data.hasOwnProperty('itemAcknowledgements'))
        obj.itemAcknowledgements = ApiClient.convertToType(data['itemAcknowledgements'], [OrderItemAcknowledgement]);
    }
    return obj;
  }
}

/**
 * Line item sequence number for the item.
 * @member {String} itemSequenceNumber
 */
OrderAcknowledgementItem.prototype.itemSequenceNumber = undefined;

/**
 * Amazon Standard Identification Number (ASIN) of an item.
 * @member {String} amazonProductIdentifier
 */
OrderAcknowledgementItem.prototype.amazonProductIdentifier = undefined;

/**
 * The vendor selected product identification of the item. Should be the same as was sent in the purchase order.
 * @member {String} vendorProductIdentifier
 */
OrderAcknowledgementItem.prototype.vendorProductIdentifier = undefined;

/**
 * @member {module:vendororders_v1/model/ItemQuantity} orderedQuantity
 */
OrderAcknowledgementItem.prototype.orderedQuantity = undefined;

/**
 * @member {module:vendororders_v1/model/Money} netCost
 */
OrderAcknowledgementItem.prototype.netCost = undefined;

/**
 * @member {module:vendororders_v1/model/Money} listPrice
 */
OrderAcknowledgementItem.prototype.listPrice = undefined;

/**
 * The discount multiplier that should be applied to the price if a vendor sells books with a list price. This is a multiplier factor to arrive at a final discounted price. A multiplier of .90 would be the factor if a 10% discount is given.
 * @member {String} discountMultiplier
 */
OrderAcknowledgementItem.prototype.discountMultiplier = undefined;

/**
 * This is used to indicate acknowledged quantity.
 * @member {Array.<module:vendororders_v1/model/OrderItemAcknowledgement>} itemAcknowledgements
 */
OrderAcknowledgementItem.prototype.itemAcknowledgements = undefined;


