/**
 * Selling Partner API for Retail Procurement Orders
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ItemQuantity} from './ItemQuantity.js';

/**
 * The OrderItemStatusReceivingStatus model module.
 * @module vendororders_v1/model/OrderItemStatusReceivingStatus
 * @version v1
 */
export class OrderItemStatusReceivingStatus {
  /**
   * Constructs a new <code>OrderItemStatusReceivingStatus</code>.
   * Item receive status at the buyer&#39;s warehouse.
   * @alias module:vendororders_v1/model/OrderItemStatusReceivingStatus
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>OrderItemStatusReceivingStatus</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendororders_v1/model/OrderItemStatusReceivingStatus} obj Optional instance to populate.
   * @return {module:vendororders_v1/model/OrderItemStatusReceivingStatus} The populated <code>OrderItemStatusReceivingStatus</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new OrderItemStatusReceivingStatus();
      if (data.hasOwnProperty('receiveStatus'))
        obj.receiveStatus = ApiClient.convertToType(data['receiveStatus'], 'String');
      if (data.hasOwnProperty('receivedQuantity'))
        obj.receivedQuantity = ItemQuantity.constructFromObject(data['receivedQuantity']);
      if (data.hasOwnProperty('lastReceiveDate'))
        obj.lastReceiveDate = ApiClient.convertToType(data['lastReceiveDate'], 'Date');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>receiveStatus</code> property.
 * @enum {String}
 * @readonly
 */
OrderItemStatusReceivingStatus['ReceiveStatusEnum'] = {

    /**
     * value: "NOT_RECEIVED"
     * @const
     */
    "NOT_RECEIVED": "NOT_RECEIVED",

    /**
     * value: "PARTIALLY_RECEIVED"
     * @const
     */
    "PARTIALLY_RECEIVED": "PARTIALLY_RECEIVED",

    /**
     * value: "RECEIVED"
     * @const
     */
    "RECEIVED": "RECEIVED"
};

/**
 * Receive status of the line item.
 * @member {module:vendororders_v1/model/OrderItemStatusReceivingStatus.ReceiveStatusEnum} receiveStatus
 */
OrderItemStatusReceivingStatus.prototype.receiveStatus = undefined;

/**
 * @member {module:vendororders_v1/model/ItemQuantity} receivedQuantity
 */
OrderItemStatusReceivingStatus.prototype.receivedQuantity = undefined;

/**
 * The date when the most recent item was received at the buyer's warehouse. Must be in ISO-8601 date/time format.
 * @member {Date} lastReceiveDate
 */
OrderItemStatusReceivingStatus.prototype.lastReceiveDate = undefined;


