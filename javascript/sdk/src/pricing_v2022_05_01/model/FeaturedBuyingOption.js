/**
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {SegmentedFeaturedOffer} from './SegmentedFeaturedOffer.js';

/**
 * The FeaturedBuyingOption model module.
 * @module pricing_v2022_05_01/model/FeaturedBuyingOption
 * @version 2022-05-01
 */
export class FeaturedBuyingOption {
  /**
   * Constructs a new <code>FeaturedBuyingOption</code>.
   * Describes a featured buying option, which includes a list of segmented featured offers for a particular item condition.
   * @alias module:pricing_v2022_05_01/model/FeaturedBuyingOption
   * @class
   * @param buyingOptionType {module:pricing_v2022_05_01/model/FeaturedBuyingOption.BuyingOptionTypeEnum} The buying option type for the featured offer. `buyingOptionType` represents the buying options that a customer receives on the detail page, such as `B2B`, `Fresh`, and `Subscribe n Save`. `buyingOptionType` currently supports `NEW` as a value.
   * @param segmentedFeaturedOffers {Array.<module:pricing_v2022_05_01/model/SegmentedFeaturedOffer>} A list of segmented featured offers for the current buying option type. A segment can be considered as a group of regional contexts that all have the same featured offer. A regional context is a combination of factors such as customer type, region, or postal code and buying option.
   */
  constructor(buyingOptionType, segmentedFeaturedOffers) {
    this.buyingOptionType = buyingOptionType;
    this.segmentedFeaturedOffers = segmentedFeaturedOffers;
  }

  /**
   * Constructs a <code>FeaturedBuyingOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:pricing_v2022_05_01/model/FeaturedBuyingOption} obj Optional instance to populate.
   * @return {module:pricing_v2022_05_01/model/FeaturedBuyingOption} The populated <code>FeaturedBuyingOption</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new FeaturedBuyingOption();
      if (data.hasOwnProperty('buyingOptionType'))
        obj.buyingOptionType = ApiClient.convertToType(data['buyingOptionType'], 'String');
      if (data.hasOwnProperty('segmentedFeaturedOffers'))
        obj.segmentedFeaturedOffers = ApiClient.convertToType(data['segmentedFeaturedOffers'], [SegmentedFeaturedOffer]);
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>buyingOptionType</code> property.
 * @enum {String}
 * @readonly
 */
FeaturedBuyingOption['BuyingOptionTypeEnum'] = {

    /**
     * value: "New"
     * @const
     */
    "New": "New"
};

/**
 * The buying option type for the featured offer. `buyingOptionType` represents the buying options that a customer receives on the detail page, such as `B2B`, `Fresh`, and `Subscribe n Save`. `buyingOptionType` currently supports `NEW` as a value.
 * @member {module:pricing_v2022_05_01/model/FeaturedBuyingOption.BuyingOptionTypeEnum} buyingOptionType
 */
FeaturedBuyingOption.prototype.buyingOptionType = undefined;

/**
 * A list of segmented featured offers for the current buying option type. A segment can be considered as a group of regional contexts that all have the same featured offer. A regional context is a combination of factors such as customer type, region, or postal code and buying option.
 * @member {Array.<module:pricing_v2022_05_01/model/SegmentedFeaturedOffer>} segmentedFeaturedOffers
 */
FeaturedBuyingOption.prototype.segmentedFeaturedOffers = undefined;


