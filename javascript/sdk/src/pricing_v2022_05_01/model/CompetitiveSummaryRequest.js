/**
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {CompetitiveSummaryIncludedData} from './CompetitiveSummaryIncludedData.js';
import {HttpMethod} from './HttpMethod.js';
import {LowestPricedOffersInput} from './LowestPricedOffersInput.js';

/**
 * The CompetitiveSummaryRequest model module.
 * @module pricing_v2022_05_01/model/CompetitiveSummaryRequest
 * @version 2022-05-01
 */
export class CompetitiveSummaryRequest {
  /**
   * Constructs a new <code>CompetitiveSummaryRequest</code>.
   * An individual &#x60;competitiveSummary&#x60; request for an ASIN and &#x60;marketplaceId&#x60;.
   * @alias module:pricing_v2022_05_01/model/CompetitiveSummaryRequest
   * @class
   * @param asin {String} The ASIN of the item.
   * @param marketplaceId {String} A marketplace identifier. Specifies the marketplace for which data is returned.
   * @param includedData {Array.<module:pricing_v2022_05_01/model/CompetitiveSummaryIncludedData>} The list of requested competitive pricing data for the product.
   * @param method {module:pricing_v2022_05_01/model/HttpMethod} 
   * @param uri {String} The URI associated with the individual APIs that are called as part of the batch request.
   */
  constructor(asin, marketplaceId, includedData, method, uri) {
    this.asin = asin;
    this.marketplaceId = marketplaceId;
    this.includedData = includedData;
    this.method = method;
    this.uri = uri;
  }

  /**
   * Constructs a <code>CompetitiveSummaryRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:pricing_v2022_05_01/model/CompetitiveSummaryRequest} obj Optional instance to populate.
   * @return {module:pricing_v2022_05_01/model/CompetitiveSummaryRequest} The populated <code>CompetitiveSummaryRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new CompetitiveSummaryRequest();
      if (data.hasOwnProperty('asin'))
        obj.asin = ApiClient.convertToType(data['asin'], 'String');
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['marketplaceId'], 'String');
      if (data.hasOwnProperty('includedData'))
        obj.includedData = ApiClient.convertToType(data['includedData'], [CompetitiveSummaryIncludedData]);
      if (data.hasOwnProperty('lowestPricedOffersInputs'))
        obj.lowestPricedOffersInputs = ApiClient.convertToType(data['lowestPricedOffersInputs'], [LowestPricedOffersInput]);
      if (data.hasOwnProperty('method'))
        obj.method = HttpMethod.constructFromObject(data['method']);
      if (data.hasOwnProperty('uri'))
        obj.uri = ApiClient.convertToType(data['uri'], 'String');
    }
    return obj;
  }
}

/**
 * The ASIN of the item.
 * @member {String} asin
 */
CompetitiveSummaryRequest.prototype.asin = undefined;

/**
 * A marketplace identifier. Specifies the marketplace for which data is returned.
 * @member {String} marketplaceId
 */
CompetitiveSummaryRequest.prototype.marketplaceId = undefined;

/**
 * The list of requested competitive pricing data for the product.
 * @member {Array.<module:pricing_v2022_05_01/model/CompetitiveSummaryIncludedData>} includedData
 */
CompetitiveSummaryRequest.prototype.includedData = undefined;

/**
 * The list of `lowestPricedOffersInput` parameters that are used to build `lowestPricedOffers` in the response. This attribute is only valid if `lowestPricedOffers` is requested in `includedData`
 * @member {Array.<module:pricing_v2022_05_01/model/LowestPricedOffersInput>} lowestPricedOffersInputs
 */
CompetitiveSummaryRequest.prototype.lowestPricedOffersInputs = undefined;

/**
 * @member {module:pricing_v2022_05_01/model/HttpMethod} method
 */
CompetitiveSummaryRequest.prototype.method = undefined;

/**
 * The URI associated with the individual APIs that are called as part of the batch request.
 * @member {String} uri
 */
CompetitiveSummaryRequest.prototype.uri = undefined;


