/**
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';
import {BoxContentsFeeDetails} from './BoxContentsFeeDetails.js';
import {BoxContentsSource} from './BoxContentsSource.js';
import {LabelPrepType} from './LabelPrepType.js';
import {ShipmentStatus} from './ShipmentStatus.js';

/**
 * The InboundShipmentInfo model module.
 * @module fulfillmentinbound_v0/model/InboundShipmentInfo
 * @version v0
 */
export class InboundShipmentInfo {
  /**
   * Constructs a new <code>InboundShipmentInfo</code>.
   * Information about the seller&#39;s inbound shipments. Returned by the listInboundShipments operation.
   * @alias module:fulfillmentinbound_v0/model/InboundShipmentInfo
   * @class
   * @param shipFromAddress {module:fulfillmentinbound_v0/model/Address} 
   * @param areCasesRequired {Boolean} Indicates whether or not an inbound shipment contains case-packed boxes. When AreCasesRequired = true for an inbound shipment, all items in the inbound shipment must be case packed.
   */
  constructor(shipFromAddress, areCasesRequired) {
    this.shipFromAddress = shipFromAddress;
    this.areCasesRequired = areCasesRequired;
  }

  /**
   * Constructs a <code>InboundShipmentInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentinbound_v0/model/InboundShipmentInfo} obj Optional instance to populate.
   * @return {module:fulfillmentinbound_v0/model/InboundShipmentInfo} The populated <code>InboundShipmentInfo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new InboundShipmentInfo();
      if (data.hasOwnProperty('ShipmentId'))
        obj.shipmentId = ApiClient.convertToType(data['ShipmentId'], 'String');
      if (data.hasOwnProperty('ShipmentName'))
        obj.shipmentName = ApiClient.convertToType(data['ShipmentName'], 'String');
      if (data.hasOwnProperty('ShipFromAddress'))
        obj.shipFromAddress = Address.constructFromObject(data['ShipFromAddress']);
      if (data.hasOwnProperty('DestinationFulfillmentCenterId'))
        obj.destinationFulfillmentCenterId = ApiClient.convertToType(data['DestinationFulfillmentCenterId'], 'String');
      if (data.hasOwnProperty('ShipmentStatus'))
        obj.shipmentStatus = ShipmentStatus.constructFromObject(data['ShipmentStatus']);
      if (data.hasOwnProperty('LabelPrepType'))
        obj.labelPrepType = LabelPrepType.constructFromObject(data['LabelPrepType']);
      if (data.hasOwnProperty('AreCasesRequired'))
        obj.areCasesRequired = ApiClient.convertToType(data['AreCasesRequired'], 'Boolean');
      if (data.hasOwnProperty('ConfirmedNeedByDate'))
        obj.confirmedNeedByDate = ApiClient.convertToType(data['ConfirmedNeedByDate'], 'Date');
      if (data.hasOwnProperty('BoxContentsSource'))
        obj.boxContentsSource = BoxContentsSource.constructFromObject(data['BoxContentsSource']);
      if (data.hasOwnProperty('EstimatedBoxContentsFee'))
        obj.estimatedBoxContentsFee = BoxContentsFeeDetails.constructFromObject(data['EstimatedBoxContentsFee']);
    }
    return obj;
  }
}

/**
 * The shipment identifier submitted in the request.
 * @member {String} shipmentId
 */
InboundShipmentInfo.prototype.shipmentId = undefined;

/**
 * The name for the inbound shipment.
 * @member {String} shipmentName
 */
InboundShipmentInfo.prototype.shipmentName = undefined;

/**
 * @member {module:fulfillmentinbound_v0/model/Address} shipFromAddress
 */
InboundShipmentInfo.prototype.shipFromAddress = undefined;

/**
 * An Amazon fulfillment center identifier created by Amazon.
 * @member {String} destinationFulfillmentCenterId
 */
InboundShipmentInfo.prototype.destinationFulfillmentCenterId = undefined;

/**
 * @member {module:fulfillmentinbound_v0/model/ShipmentStatus} shipmentStatus
 */
InboundShipmentInfo.prototype.shipmentStatus = undefined;

/**
 * @member {module:fulfillmentinbound_v0/model/LabelPrepType} labelPrepType
 */
InboundShipmentInfo.prototype.labelPrepType = undefined;

/**
 * Indicates whether or not an inbound shipment contains case-packed boxes. When AreCasesRequired = true for an inbound shipment, all items in the inbound shipment must be case packed.
 * @member {Boolean} areCasesRequired
 */
InboundShipmentInfo.prototype.areCasesRequired = undefined;

/**
 * Type containing date in string format
 * @member {Date} confirmedNeedByDate
 */
InboundShipmentInfo.prototype.confirmedNeedByDate = undefined;

/**
 * @member {module:fulfillmentinbound_v0/model/BoxContentsSource} boxContentsSource
 */
InboundShipmentInfo.prototype.boxContentsSource = undefined;

/**
 * @member {module:fulfillmentinbound_v0/model/BoxContentsFeeDetails} estimatedBoxContentsFee
 */
InboundShipmentInfo.prototype.estimatedBoxContentsFee = undefined;


