/**
 * The Selling Partner API for Automotive.
 * The Selling Partner API for Automotive provides programmatic access to information needed by selling partners to provide compatibility information about their listed products.
 *
 * The version of the OpenAPI document: 2024-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {ErrorList} from '../model/ErrorList.js';
import {VehiclesResponse} from '../model/VehiclesResponse.js';

/**
* Vehicles service.
* @module vehicles_v2024_11_01/api/VehiclesApi
* @version 2024-11-01
*/
export class VehiclesApi {

    /**
    * Constructs a new VehiclesApi. 
    * @alias module:vehicles_v2024_11_01/api/VehiclesApi
    * @class
    * @param {module:vehicles_v2024_11_01/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:vehicles_v2024_11_01/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get the latest collection of vehicles
     * @param {String} marketplaceId An identifier for the marketplace in which the resource operates.
     * @param {module:vehicles_v2024_11_01/model/String} vehicleType An identifier for vehicle type.
     * @param {Object} opts Optional parameters
     * @param {String} opts.pageToken A token to fetch a certain page when there are multiple pages worth of results.
     * @param {String} opts.updatedAfter Date in ISO 8601 format, if provided only vehicles which are modified/added to Amazon&#39;s catalog after this date will be returned.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:vehicles_v2024_11_01/model/VehiclesResponse} and HTTP response
     */
    getVehiclesWithHttpInfo(marketplaceId, vehicleType, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getVehicles");
      }

      // verify the required parameter 'vehicleType' is set
      if (vehicleType === undefined || vehicleType === null) {
        throw new Error("Missing the required parameter 'vehicleType' when calling getVehicles");
      }


      let pathParams = {
      };
      let queryParams = {
        'pageToken': opts['pageToken'],
        'marketplaceId': marketplaceId,
        'vehicleType': vehicleType,
        'updatedAfter': opts['updatedAfter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VehiclesResponse;

      return this.apiClient.callApi(
        '/catalog/2024-11-01/automotive/vehicles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Get the latest collection of vehicles
     * @param {String} marketplaceId An identifier for the marketplace in which the resource operates.
     * @param {module:vehicles_v2024_11_01/model/String} vehicleType An identifier for vehicle type.
     * @param {Object} opts Optional parameters
     * @param {String} opts.pageToken A token to fetch a certain page when there are multiple pages worth of results.
     * @param {String} opts.updatedAfter Date in ISO 8601 format, if provided only vehicles which are modified/added to Amazon&#39;s catalog after this date will be returned.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:vehicles_v2024_11_01/model/VehiclesResponse}
     */
    getVehicles(marketplaceId, vehicleType, opts) {
      return this.getVehiclesWithHttpInfo(marketplaceId, vehicleType, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
