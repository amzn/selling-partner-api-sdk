/**
 * The Selling Partner API for External Fulfillment Inventory Management
 * You can use the Amazon External Fulfillment Inventory API to manage inventory operations in Amazon's External Fulfillment network, including batch inventory updates and retrievals.
 *
 * The version of the OpenAPI document: 2024-09-11
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'

/**
 * The ActionableError model module.
 * @module externalfulfillmentinventory_v2024_09_11/model/ActionableError
 * @version 2024-09-11
 */
export class ActionableError {
  /**
   * Constructs a new <code>ActionableError</code>.
   * Error details you can take action on.
   * @alias module:externalfulfillmentinventory_v2024_09_11/model/ActionableError
   * @class
   */
  constructor () {
  }

  /**
   * Constructs a <code>ActionableError</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {ActionableError} obj Optional instance to populate.
   * @return {ActionableError} The populated <code>ActionableError</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new ActionableError()
      if (data.hasOwnProperty('errorType')) { obj.errorType = ApiClient.convertToType(data.errorType, 'String') }
      if (data.hasOwnProperty('errorSubType')) { obj.errorSubType = ApiClient.convertToType(data.errorSubType, 'String') }
    }
    return obj
  }
}

/**
 * The top level error type that may contain multiple error subtypes.
 * @member {String} errorType
 * @type {String}
 */
ActionableError.prototype.errorType = undefined

/**
 * The secondary level error type.
 * @member {String} errorSubType
 * @type {String}
 */
ActionableError.prototype.errorSubType = undefined
