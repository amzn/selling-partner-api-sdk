/**
 * Selling Partner API for Notifications
 * The Selling Partner API for Notifications lets you subscribe to notifications that are relevant to a selling partner's business. Using this API you can create a destination to receive notifications, subscribe to notifications, delete notification subscriptions, and more.  For more information, refer to the [Notifications Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/notifications-api-v1-use-case-guide).
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from './ApiClient.js';
import {AggregationFilter} from './model/AggregationFilter.js';
import {AggregationSettings} from './model/AggregationSettings.js';
import {AggregationTimePeriod} from './model/AggregationTimePeriod.js';
import {CreateDestinationRequest} from './model/CreateDestinationRequest.js';
import {CreateDestinationResponse} from './model/CreateDestinationResponse.js';
import {CreateSubscriptionRequest} from './model/CreateSubscriptionRequest.js';
import {CreateSubscriptionResponse} from './model/CreateSubscriptionResponse.js';
import {DeleteDestinationResponse} from './model/DeleteDestinationResponse.js';
import {DeleteSubscriptionByIdResponse} from './model/DeleteSubscriptionByIdResponse.js';
import {Destination} from './model/Destination.js';
import {DestinationResource} from './model/DestinationResource.js';
import {DestinationResourceSpecification} from './model/DestinationResourceSpecification.js';
import {Error} from './model/Error.js';
import {EventBridgeResource} from './model/EventBridgeResource.js';
import {EventBridgeResourceSpecification} from './model/EventBridgeResourceSpecification.js';
import {EventFilter} from './model/EventFilter.js';
import {GetDestinationResponse} from './model/GetDestinationResponse.js';
import {GetDestinationsResponse} from './model/GetDestinationsResponse.js';
import {GetSubscriptionByIdResponse} from './model/GetSubscriptionByIdResponse.js';
import {GetSubscriptionResponse} from './model/GetSubscriptionResponse.js';
import {MarketplaceFilter} from './model/MarketplaceFilter.js';
import {OrderChangeTypeEnum} from './model/OrderChangeTypeEnum.js';
import {OrderChangeTypeFilter} from './model/OrderChangeTypeFilter.js';
import {ProcessingDirective} from './model/ProcessingDirective.js';
import {SqsResource} from './model/SqsResource.js';
import {Subscription} from './model/Subscription.js';
import {NotificationsApi} from './api/NotificationsApi.js';


/**
* The Selling Partner API for Notifications lets you subscribe to notifications that are relevant to a selling partner&#39;s business. Using this API you can create a destination to receive notifications, subscribe to notifications, delete notification subscriptions, and more.  For more information, refer to the [Notifications Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/notifications-api-v1-use-case-guide)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* @module notifications_v1/index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:notifications_v1/ApiClient}
     */
    ApiClient,

    /**
     * The AggregationFilter model constructor.
     * @property {module:notifications_v1/model/AggregationFilter}
     */
    AggregationFilter,

    /**
     * The AggregationSettings model constructor.
     * @property {module:notifications_v1/model/AggregationSettings}
     */
    AggregationSettings,

    /**
     * The AggregationTimePeriod model constructor.
     * @property {module:notifications_v1/model/AggregationTimePeriod}
     */
    AggregationTimePeriod,

    /**
     * The CreateDestinationRequest model constructor.
     * @property {module:notifications_v1/model/CreateDestinationRequest}
     */
    CreateDestinationRequest,

    /**
     * The CreateDestinationResponse model constructor.
     * @property {module:notifications_v1/model/CreateDestinationResponse}
     */
    CreateDestinationResponse,

    /**
     * The CreateSubscriptionRequest model constructor.
     * @property {module:notifications_v1/model/CreateSubscriptionRequest}
     */
    CreateSubscriptionRequest,

    /**
     * The CreateSubscriptionResponse model constructor.
     * @property {module:notifications_v1/model/CreateSubscriptionResponse}
     */
    CreateSubscriptionResponse,

    /**
     * The DeleteDestinationResponse model constructor.
     * @property {module:notifications_v1/model/DeleteDestinationResponse}
     */
    DeleteDestinationResponse,

    /**
     * The DeleteSubscriptionByIdResponse model constructor.
     * @property {module:notifications_v1/model/DeleteSubscriptionByIdResponse}
     */
    DeleteSubscriptionByIdResponse,

    /**
     * The Destination model constructor.
     * @property {module:notifications_v1/model/Destination}
     */
    Destination,

    /**
     * The DestinationResource model constructor.
     * @property {module:notifications_v1/model/DestinationResource}
     */
    DestinationResource,

    /**
     * The DestinationResourceSpecification model constructor.
     * @property {module:notifications_v1/model/DestinationResourceSpecification}
     */
    DestinationResourceSpecification,

    /**
     * The Error model constructor.
     * @property {module:notifications_v1/model/Error}
     */
    Error,

    /**
     * The EventBridgeResource model constructor.
     * @property {module:notifications_v1/model/EventBridgeResource}
     */
    EventBridgeResource,

    /**
     * The EventBridgeResourceSpecification model constructor.
     * @property {module:notifications_v1/model/EventBridgeResourceSpecification}
     */
    EventBridgeResourceSpecification,

    /**
     * The EventFilter model constructor.
     * @property {module:notifications_v1/model/EventFilter}
     */
    EventFilter,

    /**
     * The GetDestinationResponse model constructor.
     * @property {module:notifications_v1/model/GetDestinationResponse}
     */
    GetDestinationResponse,

    /**
     * The GetDestinationsResponse model constructor.
     * @property {module:notifications_v1/model/GetDestinationsResponse}
     */
    GetDestinationsResponse,

    /**
     * The GetSubscriptionByIdResponse model constructor.
     * @property {module:notifications_v1/model/GetSubscriptionByIdResponse}
     */
    GetSubscriptionByIdResponse,

    /**
     * The GetSubscriptionResponse model constructor.
     * @property {module:notifications_v1/model/GetSubscriptionResponse}
     */
    GetSubscriptionResponse,

    /**
     * The MarketplaceFilter model constructor.
     * @property {module:notifications_v1/model/MarketplaceFilter}
     */
    MarketplaceFilter,

    /**
     * The OrderChangeTypeEnum model constructor.
     * @property {module:notifications_v1/model/OrderChangeTypeEnum}
     */
    OrderChangeTypeEnum,

    /**
     * The OrderChangeTypeFilter model constructor.
     * @property {module:notifications_v1/model/OrderChangeTypeFilter}
     */
    OrderChangeTypeFilter,

    /**
     * The ProcessingDirective model constructor.
     * @property {module:notifications_v1/model/ProcessingDirective}
     */
    ProcessingDirective,

    /**
     * The SqsResource model constructor.
     * @property {module:notifications_v1/model/SqsResource}
     */
    SqsResource,

    /**
     * The Subscription model constructor.
     * @property {module:notifications_v1/model/Subscription}
     */
    Subscription,

    /**
    * The NotificationsApi service constructor.
    * @property {module:notifications_v1/api/NotificationsApi}
    */
    NotificationsApi
};
