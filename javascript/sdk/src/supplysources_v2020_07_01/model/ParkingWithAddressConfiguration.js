/**
 * Selling Partner API for Supply Sources
 * Manage configurations and capabilities of seller supply sources.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';
import {ParkingConfiguration} from './ParkingConfiguration.js';
import {ParkingCostType} from './ParkingCostType.js';
import {ParkingSpotIdentificationType} from './ParkingSpotIdentificationType.js';

/**
 * The ParkingWithAddressConfiguration model module.
 * @module supplysources_v2020_07_01/model/ParkingWithAddressConfiguration
 * @version 2020-07-01
 */
export class ParkingWithAddressConfiguration {
  /**
   * Constructs a new <code>ParkingWithAddressConfiguration</code>.
   * The parking configuration with the address.
   * @alias module:supplysources_v2020_07_01/model/ParkingWithAddressConfiguration
   * @class
   * @implements module:supplysources_v2020_07_01/model/ParkingConfiguration
   */
  constructor() {
    ParkingConfiguration.call(this);
  }

  /**
   * Constructs a <code>ParkingWithAddressConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:supplysources_v2020_07_01/model/ParkingWithAddressConfiguration} obj Optional instance to populate.
   * @return {module:supplysources_v2020_07_01/model/ParkingWithAddressConfiguration} The populated <code>ParkingWithAddressConfiguration</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ParkingWithAddressConfiguration();
      ParkingConfiguration.constructFromObject(data, obj);
      if (data.hasOwnProperty('parkingCostType'))
        obj.parkingCostType = ParkingCostType.constructFromObject(data['parkingCostType']);
      if (data.hasOwnProperty('parkingSpotIdentificationType'))
        obj.parkingSpotIdentificationType = ParkingSpotIdentificationType.constructFromObject(data['parkingSpotIdentificationType']);
      if (data.hasOwnProperty('numberOfParkingSpots'))
        obj.numberOfParkingSpots = ApiClient.convertToType(data['numberOfParkingSpots'], 'Number');
      if (data.hasOwnProperty('address'))
        obj.address = Address.constructFromObject(data['address']);
    }
    return obj;
  }
}

/**
 * @member {module:supplysources_v2020_07_01/model/ParkingCostType} parkingCostType
 */
ParkingWithAddressConfiguration.prototype.parkingCostType = undefined;

/**
 * @member {module:supplysources_v2020_07_01/model/ParkingSpotIdentificationType} parkingSpotIdentificationType
 */
ParkingWithAddressConfiguration.prototype.parkingSpotIdentificationType = undefined;

/**
 * An unsigned integer that can be only positive or zero.
 * @member {Number} numberOfParkingSpots
 */
ParkingWithAddressConfiguration.prototype.numberOfParkingSpots = undefined;

/**
 * @member {module:supplysources_v2020_07_01/model/Address} address
 */
ParkingWithAddressConfiguration.prototype.address = undefined;

// Implement ParkingConfiguration interface:
/**
 * @member {module:supplysources_v2020_07_01/model/ParkingCostType} parkingCostType
 */
ParkingConfiguration.prototype.parkingCostType = undefined;

/**
 * @member {module:supplysources_v2020_07_01/model/ParkingSpotIdentificationType} parkingSpotIdentificationType
 */
ParkingConfiguration.prototype.parkingSpotIdentificationType = undefined;

/**
 * An unsigned integer that can be only positive or zero.
 * @member {Number} numberOfParkingSpots
 */
ParkingConfiguration.prototype.numberOfParkingSpots = undefined;


