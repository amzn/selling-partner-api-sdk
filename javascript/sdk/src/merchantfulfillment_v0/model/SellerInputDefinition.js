/**
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { AdditionalSellerInput } from './AdditionalSellerInput.js'
import { Constraint } from './Constraint.js'
import { InputTargetType } from './InputTargetType.js'

/**
 * The SellerInputDefinition model module.
 * @module merchantfulfillment_v0/model/SellerInputDefinition
 * @version v0
 */
export class SellerInputDefinition {
  /**
   * Constructs a new <code>SellerInputDefinition</code>.
   * Specifies characteristics that apply to a seller input.
   * @alias module:merchantfulfillment_v0/model/SellerInputDefinition
   * @class
   * @param isRequired {Boolean} When true, the additional input field is required.
   * @param dataType {String} The data type of the additional input field.
   * @param constraints {[Constraint]} List of constraints.
   * @param inputDisplayText {String} The display text for the additional input field.
   * @param storedValue {AdditionalSellerInput}
   */
  constructor (isRequired, dataType, constraints, inputDisplayText, storedValue) {
    this.isRequired = isRequired
    this.dataType = dataType
    this.constraints = constraints
    this.inputDisplayText = inputDisplayText
    this.storedValue = storedValue
  }

  /**
   * Constructs a <code>SellerInputDefinition</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {SellerInputDefinition} obj Optional instance to populate.
   * @return {SellerInputDefinition} The populated <code>SellerInputDefinition</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new SellerInputDefinition()
      if (data.hasOwnProperty('IsRequired')) { obj.isRequired = ApiClient.convertToType(data.IsRequired, 'Boolean') }
      if (data.hasOwnProperty('DataType')) { obj.dataType = ApiClient.convertToType(data.DataType, 'String') }
      if (data.hasOwnProperty('Constraints')) { obj.constraints = ApiClient.convertToType(data.Constraints, [Constraint]) }
      if (data.hasOwnProperty('InputDisplayText')) { obj.inputDisplayText = ApiClient.convertToType(data.InputDisplayText, 'String') }
      if (data.hasOwnProperty('InputTarget')) { obj.inputTarget = InputTargetType.constructFromObject(data.InputTarget) }
      if (data.hasOwnProperty('StoredValue')) { obj.storedValue = AdditionalSellerInput.constructFromObject(data.StoredValue) }
      if (data.hasOwnProperty('RestrictedSetValues')) { obj.restrictedSetValues = ApiClient.convertToType(data.RestrictedSetValues, ['String']) }
    }
    return obj
  }
}

/**
 * When true, the additional input field is required.
 * @member {Boolean} isRequired
 * @type {Boolean}
 */
SellerInputDefinition.prototype.isRequired = undefined

/**
 * The data type of the additional input field.
 * @member {String} dataType
 * @type {String}
 */
SellerInputDefinition.prototype.dataType = undefined

/**
 * List of constraints.
 * @member {[Constraint]} constraints
 * @type {[Constraint]}
 */
SellerInputDefinition.prototype.constraints = undefined

/**
 * The display text for the additional input field.
 * @member {String} inputDisplayText
 * @type {String}
 */
SellerInputDefinition.prototype.inputDisplayText = undefined

/**
 * @member {InputTargetType} inputTarget
 * @type {InputTargetType}
 */
SellerInputDefinition.prototype.inputTarget = undefined

/**
 * @member {AdditionalSellerInput} storedValue
 * @type {AdditionalSellerInput}
 */
SellerInputDefinition.prototype.storedValue = undefined

/**
 * The set of fixed values in an additional seller input.
 * @member {[String]} restrictedSetValues
 * @type {[String]}
 */
SellerInputDefinition.prototype.restrictedSetValues = undefined
