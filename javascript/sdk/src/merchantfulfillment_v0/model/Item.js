/**
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {AdditionalSellerInputs} from './AdditionalSellerInputs.js';
import {DangerousGoodsDetails} from './DangerousGoodsDetails.js';
import {LiquidVolume} from './LiquidVolume.js';
import {Weight} from './Weight.js';

/**
 * The Item model module.
 * @module merchantfulfillment_v0/model/Item
 * @version v0
 */
export class Item {
  /**
   * Constructs a new <code>Item</code>.
   * An Amazon order item identifier and a quantity.
   * @alias module:merchantfulfillment_v0/model/Item
   * @class
   * @param orderItemId {String} An Amazon-defined identifier for an individual item in an order.
   * @param quantity {Number} The number of items.
   */
  constructor(orderItemId, quantity) {
    this.orderItemId = orderItemId;
    this.quantity = quantity;
  }

  /**
   * Constructs a <code>Item</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:merchantfulfillment_v0/model/Item} obj Optional instance to populate.
   * @return {module:merchantfulfillment_v0/model/Item} The populated <code>Item</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Item();
      if (data.hasOwnProperty('OrderItemId'))
        obj.orderItemId = ApiClient.convertToType(data['OrderItemId'], 'String');
      if (data.hasOwnProperty('Quantity'))
        obj.quantity = ApiClient.convertToType(data['Quantity'], 'Number');
      if (data.hasOwnProperty('ItemWeight'))
        obj.itemWeight = Weight.constructFromObject(data['ItemWeight']);
      if (data.hasOwnProperty('ItemDescription'))
        obj.itemDescription = ApiClient.convertToType(data['ItemDescription'], 'String');
      if (data.hasOwnProperty('TransparencyCodeList'))
        obj.transparencyCodeList = ApiClient.convertToType(data['TransparencyCodeList'], ['String']);
      if (data.hasOwnProperty('ItemLevelSellerInputsList'))
        obj.itemLevelSellerInputsList = ApiClient.convertToType(data['ItemLevelSellerInputsList'], [AdditionalSellerInputs]);
      if (data.hasOwnProperty('LiquidVolume'))
        obj.liquidVolume = LiquidVolume.constructFromObject(data['LiquidVolume']);
      if (data.hasOwnProperty('IsHazmat'))
        obj.isHazmat = ApiClient.convertToType(data['IsHazmat'], 'Boolean');
      if (data.hasOwnProperty('DangerousGoodsDetails'))
        obj.dangerousGoodsDetails = DangerousGoodsDetails.constructFromObject(data['DangerousGoodsDetails']);
    }
    return obj;
  }
}

/**
 * An Amazon-defined identifier for an individual item in an order.
 * @member {String} orderItemId
 */
Item.prototype.orderItemId = undefined;

/**
 * The number of items.
 * @member {Number} quantity
 */
Item.prototype.quantity = undefined;

/**
 * @member {module:merchantfulfillment_v0/model/Weight} itemWeight
 */
Item.prototype.itemWeight = undefined;

/**
 * The description of the item.
 * @member {String} itemDescription
 */
Item.prototype.itemDescription = undefined;

/**
 * A list of transparency codes.
 * @member {Array.<String>} transparencyCodeList
 */
Item.prototype.transparencyCodeList = undefined;

/**
 * A list of additional seller input pairs required to purchase shipping.
 * @member {Array.<module:merchantfulfillment_v0/model/AdditionalSellerInputs>} itemLevelSellerInputsList
 */
Item.prototype.itemLevelSellerInputsList = undefined;

/**
 * @member {module:merchantfulfillment_v0/model/LiquidVolume} liquidVolume
 */
Item.prototype.liquidVolume = undefined;

/**
 * When true, the item qualifies as hazardous materials (hazmat). Defaults to false.
 * @member {Boolean} isHazmat
 */
Item.prototype.isHazmat = undefined;

/**
 * @member {module:merchantfulfillment_v0/model/DangerousGoodsDetails} dangerousGoodsDetails
 */
Item.prototype.dangerousGoodsDetails = undefined;


