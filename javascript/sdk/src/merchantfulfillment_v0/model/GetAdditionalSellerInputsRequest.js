/**
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';

/**
 * The GetAdditionalSellerInputsRequest model module.
 * @module merchantfulfillment_v0/model/GetAdditionalSellerInputsRequest
 * @version v0
 */
export class GetAdditionalSellerInputsRequest {
  /**
   * Constructs a new <code>GetAdditionalSellerInputsRequest</code>.
   * Request schema.
   * @alias module:merchantfulfillment_v0/model/GetAdditionalSellerInputsRequest
   * @class
   * @param shippingServiceId {String} An Amazon-defined shipping service identifier.
   * @param shipFromAddress {module:merchantfulfillment_v0/model/Address} 
   * @param orderId {String} An Amazon-defined order identifier, in 3-7-7 format.
   */
  constructor(shippingServiceId, shipFromAddress, orderId) {
    this.shippingServiceId = shippingServiceId;
    this.shipFromAddress = shipFromAddress;
    this.orderId = orderId;
  }

  /**
   * Constructs a <code>GetAdditionalSellerInputsRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:merchantfulfillment_v0/model/GetAdditionalSellerInputsRequest} obj Optional instance to populate.
   * @return {module:merchantfulfillment_v0/model/GetAdditionalSellerInputsRequest} The populated <code>GetAdditionalSellerInputsRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new GetAdditionalSellerInputsRequest();
      if (data.hasOwnProperty('ShippingServiceId'))
        obj.shippingServiceId = ApiClient.convertToType(data['ShippingServiceId'], 'String');
      if (data.hasOwnProperty('ShipFromAddress'))
        obj.shipFromAddress = Address.constructFromObject(data['ShipFromAddress']);
      if (data.hasOwnProperty('OrderId'))
        obj.orderId = ApiClient.convertToType(data['OrderId'], 'String');
    }
    return obj;
  }
}

/**
 * An Amazon-defined shipping service identifier.
 * @member {String} shippingServiceId
 */
GetAdditionalSellerInputsRequest.prototype.shippingServiceId = undefined;

/**
 * @member {module:merchantfulfillment_v0/model/Address} shipFromAddress
 */
GetAdditionalSellerInputsRequest.prototype.shipFromAddress = undefined;

/**
 * An Amazon-defined order identifier, in 3-7-7 format.
 * @member {String} orderId
 */
GetAdditionalSellerInputsRequest.prototype.orderId = undefined;


