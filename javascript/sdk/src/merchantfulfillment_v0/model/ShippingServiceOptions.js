/**
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { CarrierWillPickUpOption } from './CarrierWillPickUpOption.js'
import { CurrencyAmount } from './CurrencyAmount.js'
import { DeliveryExperienceType } from './DeliveryExperienceType.js'
import { LabelFormat } from './LabelFormat.js'

/**
 * The ShippingServiceOptions model module.
 * @module merchantfulfillment_v0/model/ShippingServiceOptions
 * @version v0
 */
export class ShippingServiceOptions {
  /**
   * Constructs a new <code>ShippingServiceOptions</code>.
   * Extra services provided by a carrier.
   * @alias module:merchantfulfillment_v0/model/ShippingServiceOptions
   * @class
   * @param deliveryExperience {DeliveryExperienceType}
   * @param carrierWillPickUp {Boolean} When true, the carrier will pick up the package. Note: Scheduled carrier pickup is available only using Dynamex (US), DPD (UK), and Royal Mail (UK).
   */
  constructor (deliveryExperience, carrierWillPickUp) {
    this.deliveryExperience = deliveryExperience
    this.carrierWillPickUp = carrierWillPickUp
  }

  /**
   * Constructs a <code>ShippingServiceOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {ShippingServiceOptions} obj Optional instance to populate.
   * @return {ShippingServiceOptions} The populated <code>ShippingServiceOptions</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new ShippingServiceOptions()
      if (data.hasOwnProperty('DeliveryExperience')) { obj.deliveryExperience = DeliveryExperienceType.constructFromObject(data.DeliveryExperience) }
      if (data.hasOwnProperty('DeclaredValue')) { obj.declaredValue = CurrencyAmount.constructFromObject(data.DeclaredValue) }
      if (data.hasOwnProperty('CarrierWillPickUp')) { obj.carrierWillPickUp = ApiClient.convertToType(data.CarrierWillPickUp, 'Boolean') }
      if (data.hasOwnProperty('CarrierWillPickUpOption')) { obj.carrierWillPickUpOption = CarrierWillPickUpOption.constructFromObject(data.CarrierWillPickUpOption) }
      if (data.hasOwnProperty('LabelFormat')) { obj.labelFormat = LabelFormat.constructFromObject(data.LabelFormat) }
    }
    return obj
  }
}

/**
 * @member {DeliveryExperienceType} deliveryExperience
 * @type {DeliveryExperienceType}
 */
ShippingServiceOptions.prototype.deliveryExperience = undefined

/**
 * @member {CurrencyAmount} declaredValue
 * @type {CurrencyAmount}
 */
ShippingServiceOptions.prototype.declaredValue = undefined

/**
 * When true, the carrier will pick up the package. Note: Scheduled carrier pickup is available only using Dynamex (US), DPD (UK), and Royal Mail (UK).
 * @member {Boolean} carrierWillPickUp
 * @type {Boolean}
 */
ShippingServiceOptions.prototype.carrierWillPickUp = undefined

/**
 * @member {CarrierWillPickUpOption} carrierWillPickUpOption
 * @type {CarrierWillPickUpOption}
 */
ShippingServiceOptions.prototype.carrierWillPickUpOption = undefined

/**
 * @member {LabelFormat} labelFormat
 * @type {LabelFormat}
 */
ShippingServiceOptions.prototype.labelFormat = undefined
