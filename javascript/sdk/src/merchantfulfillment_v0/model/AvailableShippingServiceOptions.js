/**
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {AvailableCarrierWillPickUpOption} from './AvailableCarrierWillPickUpOption.js';
import {AvailableDeliveryExperienceOption} from './AvailableDeliveryExperienceOption.js';

/**
 * The AvailableShippingServiceOptions model module.
 * @module merchantfulfillment_v0/model/AvailableShippingServiceOptions
 * @version v0
 */
export class AvailableShippingServiceOptions {
  /**
   * Constructs a new <code>AvailableShippingServiceOptions</code>.
   * The available shipping service options.
   * @alias module:merchantfulfillment_v0/model/AvailableShippingServiceOptions
   * @class
   * @param availableCarrierWillPickUpOptions {Array.<module:merchantfulfillment_v0/model/AvailableCarrierWillPickUpOption>} List of available carrier pickup options.
   * @param availableDeliveryExperienceOptions {Array.<module:merchantfulfillment_v0/model/AvailableDeliveryExperienceOption>} List of available delivery experience options.
   */
  constructor(availableCarrierWillPickUpOptions, availableDeliveryExperienceOptions) {
    this.availableCarrierWillPickUpOptions = availableCarrierWillPickUpOptions;
    this.availableDeliveryExperienceOptions = availableDeliveryExperienceOptions;
  }

  /**
   * Constructs a <code>AvailableShippingServiceOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:merchantfulfillment_v0/model/AvailableShippingServiceOptions} obj Optional instance to populate.
   * @return {module:merchantfulfillment_v0/model/AvailableShippingServiceOptions} The populated <code>AvailableShippingServiceOptions</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new AvailableShippingServiceOptions();
      if (data.hasOwnProperty('AvailableCarrierWillPickUpOptions'))
        obj.availableCarrierWillPickUpOptions = ApiClient.convertToType(data['AvailableCarrierWillPickUpOptions'], [AvailableCarrierWillPickUpOption]);
      if (data.hasOwnProperty('AvailableDeliveryExperienceOptions'))
        obj.availableDeliveryExperienceOptions = ApiClient.convertToType(data['AvailableDeliveryExperienceOptions'], [AvailableDeliveryExperienceOption]);
    }
    return obj;
  }
}

/**
 * List of available carrier pickup options.
 * @member {Array.<module:merchantfulfillment_v0/model/AvailableCarrierWillPickUpOption>} availableCarrierWillPickUpOptions
 */
AvailableShippingServiceOptions.prototype.availableCarrierWillPickUpOptions = undefined;

/**
 * List of available delivery experience options.
 * @member {Array.<module:merchantfulfillment_v0/model/AvailableDeliveryExperienceOption>} availableDeliveryExperienceOptions
 */
AvailableShippingServiceOptions.prototype.availableDeliveryExperienceOptions = undefined;


