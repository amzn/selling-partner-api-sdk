/**
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The Address model module.
 * @module merchantfulfillment_v0/model/Address
 * @version v0
 */
export class Address {
  /**
   * Constructs a new <code>Address</code>.
   * The postal address information.
   * @alias module:merchantfulfillment_v0/model/Address
   * @class
   * @param name {String} The name of the addressee, or business name.
   * @param addressLine1 {String} The street address information.
   * @param email {String} The email address.
   * @param city {String} The city.
   * @param postalCode {String} The zip code or postal code.
   * @param countryCode {String} The two-letter country code in [ISO 3166-1 alpha-2](https://www.iban.com/country-codes) format.
   * @param phone {String} The phone number.
   */
  constructor(name, addressLine1, email, city, postalCode, countryCode, phone) {
    this.name = name;
    this.addressLine1 = addressLine1;
    this.email = email;
    this.city = city;
    this.postalCode = postalCode;
    this.countryCode = countryCode;
    this.phone = phone;
  }

  /**
   * Constructs a <code>Address</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:merchantfulfillment_v0/model/Address} obj Optional instance to populate.
   * @return {module:merchantfulfillment_v0/model/Address} The populated <code>Address</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Address();
      if (data.hasOwnProperty('Name'))
        obj.name = ApiClient.convertToType(data['Name'], 'String');
      if (data.hasOwnProperty('AddressLine1'))
        obj.addressLine1 = ApiClient.convertToType(data['AddressLine1'], 'String');
      if (data.hasOwnProperty('AddressLine2'))
        obj.addressLine2 = ApiClient.convertToType(data['AddressLine2'], 'String');
      if (data.hasOwnProperty('AddressLine3'))
        obj.addressLine3 = ApiClient.convertToType(data['AddressLine3'], 'String');
      if (data.hasOwnProperty('DistrictOrCounty'))
        obj.districtOrCounty = ApiClient.convertToType(data['DistrictOrCounty'], 'String');
      if (data.hasOwnProperty('Email'))
        obj.email = ApiClient.convertToType(data['Email'], 'String');
      if (data.hasOwnProperty('City'))
        obj.city = ApiClient.convertToType(data['City'], 'String');
      if (data.hasOwnProperty('StateOrProvinceCode'))
        obj.stateOrProvinceCode = ApiClient.convertToType(data['StateOrProvinceCode'], 'String');
      if (data.hasOwnProperty('PostalCode'))
        obj.postalCode = ApiClient.convertToType(data['PostalCode'], 'String');
      if (data.hasOwnProperty('CountryCode'))
        obj.countryCode = ApiClient.convertToType(data['CountryCode'], 'String');
      if (data.hasOwnProperty('Phone'))
        obj.phone = ApiClient.convertToType(data['Phone'], 'String');
    }
    return obj;
  }
}

/**
 * The name of the addressee, or business name.
 * @member {String} name
 */
Address.prototype.name = undefined;

/**
 * The street address information.
 * @member {String} addressLine1
 */
Address.prototype.addressLine1 = undefined;

/**
 * Additional street address information.
 * @member {String} addressLine2
 */
Address.prototype.addressLine2 = undefined;

/**
 * Additional street address information.
 * @member {String} addressLine3
 */
Address.prototype.addressLine3 = undefined;

/**
 * The district or county.
 * @member {String} districtOrCounty
 */
Address.prototype.districtOrCounty = undefined;

/**
 * The email address.
 * @member {String} email
 */
Address.prototype.email = undefined;

/**
 * The city.
 * @member {String} city
 */
Address.prototype.city = undefined;

/**
 * The state or province code. This is a required field in Canada, US, and UK marketplaces, and for shipments that originate in China.
 * @member {String} stateOrProvinceCode
 */
Address.prototype.stateOrProvinceCode = undefined;

/**
 * The zip code or postal code.
 * @member {String} postalCode
 */
Address.prototype.postalCode = undefined;

/**
 * The two-letter country code in [ISO 3166-1 alpha-2](https://www.iban.com/country-codes) format.
 * @member {String} countryCode
 */
Address.prototype.countryCode = undefined;

/**
 * The phone number.
 * @member {String} phone
 */
Address.prototype.phone = undefined;


