/**
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {FileContents} from './FileContents.js';
import {LabelDimensions} from './LabelDimensions.js';
import {LabelFormat} from './LabelFormat.js';
import {StandardIdForLabel} from './StandardIdForLabel.js';

/**
 * The Label model module.
 * @module merchantfulfillment_v0/model/Label
 * @version v0
 */
export class Label {
  /**
   * Constructs a new <code>Label</code>.
   * Data for creating a shipping label and dimensions for printing the label.
   * @alias module:merchantfulfillment_v0/model/Label
   * @class
   * @param dimensions {module:merchantfulfillment_v0/model/LabelDimensions} 
   * @param fileContents {module:merchantfulfillment_v0/model/FileContents} 
   */
  constructor(dimensions, fileContents) {
    this.dimensions = dimensions;
    this.fileContents = fileContents;
  }

  /**
   * Constructs a <code>Label</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:merchantfulfillment_v0/model/Label} obj Optional instance to populate.
   * @return {module:merchantfulfillment_v0/model/Label} The populated <code>Label</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Label();
      if (data.hasOwnProperty('CustomTextForLabel'))
        obj.customTextForLabel = ApiClient.convertToType(data['CustomTextForLabel'], 'String');
      if (data.hasOwnProperty('Dimensions'))
        obj.dimensions = LabelDimensions.constructFromObject(data['Dimensions']);
      if (data.hasOwnProperty('FileContents'))
        obj.fileContents = FileContents.constructFromObject(data['FileContents']);
      if (data.hasOwnProperty('LabelFormat'))
        obj.labelFormat = LabelFormat.constructFromObject(data['LabelFormat']);
      if (data.hasOwnProperty('StandardIdForLabel'))
        obj.standardIdForLabel = StandardIdForLabel.constructFromObject(data['StandardIdForLabel']);
    }
    return obj;
  }
}

/**
 * Custom text to print on the label. Note: Custom text is only included on labels that are in ZPL format (ZPL203). FedEx does not support `CustomTextForLabel`.
 * @member {String} customTextForLabel
 */
Label.prototype.customTextForLabel = undefined;

/**
 * @member {module:merchantfulfillment_v0/model/LabelDimensions} dimensions
 */
Label.prototype.dimensions = undefined;

/**
 * @member {module:merchantfulfillment_v0/model/FileContents} fileContents
 */
Label.prototype.fileContents = undefined;

/**
 * @member {module:merchantfulfillment_v0/model/LabelFormat} labelFormat
 */
Label.prototype.labelFormat = undefined;

/**
 * @member {module:merchantfulfillment_v0/model/StandardIdForLabel} standardIdForLabel
 */
Label.prototype.standardIdForLabel = undefined;


