/**
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { CancelShipmentResponse } from '../model/CancelShipmentResponse.js'
import { CreateShipmentRequest } from '../model/CreateShipmentRequest.js'
import { CreateShipmentResponse } from '../model/CreateShipmentResponse.js'
import { GetAdditionalSellerInputsRequest } from '../model/GetAdditionalSellerInputsRequest.js'
import { GetAdditionalSellerInputsResponse } from '../model/GetAdditionalSellerInputsResponse.js'
import { GetEligibleShipmentServicesRequest } from '../model/GetEligibleShipmentServicesRequest.js'
import { GetEligibleShipmentServicesResponse } from '../model/GetEligibleShipmentServicesResponse.js'
import { GetShipmentResponse } from '../model/GetShipmentResponse.js'
import { SuperagentRateLimiter } from '../../../helper/SuperagentRateLimiter.mjs'
import { DefaultRateLimitFetcher } from '../../../helper/DefaultRateLimitFetcher.mjs'

/**
* MerchantFulfillment service.
* @module merchantfulfillment_v0/api/MerchantFulfillmentApi
* @version v0
*/
export class MerchantFulfillmentApi {
  // Private memeber stores the default rate limiters
  #defaultRateLimiterMap

  /**
    * Constructs a new MerchantFulfillmentApi.
    * @alias module:merchantfulfillment_v0/api/MerchantFulfillmentApi
    * @class
    * @param {module:merchantfulfillment_v0/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:merchantfulfillment_v0/ApiClient#instance} if unspecified.
    */
  constructor (apiClient) {
    this.apiClient = apiClient || ApiClient.instance
    this.initializeDefaultRateLimiterMap()
  }

  /**
     * Initialize rate limiters for API operations
     */
  initializeDefaultRateLimiterMap () {
    this.#defaultRateLimiterMap = new Map()
    const defaultRateLimitFetcher = new DefaultRateLimitFetcher()
    const operations = [
      'MerchantFulfillmentApi-cancelShipment',
      'MerchantFulfillmentApi-createShipment',
      'MerchantFulfillmentApi-getAdditionalSellerInputs',
      'MerchantFulfillmentApi-getEligibleShipmentServices',
      'MerchantFulfillmentApi-getShipment'
    ]

    for (const operation of operations) {
      const config = defaultRateLimitFetcher.getLimit(operation)
      this.#defaultRateLimiterMap.set(operation, new SuperagentRateLimiter(config))
    }
  }

  /**
     * Get rate limiter for a specific operation
     * @param {String} operation name
     */
  getRateLimiter (operation) {
    return this.#defaultRateLimiterMap.get(operation)
  }

  /**
     * Cancel the shipment indicated by the specified shipment identifier.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The Amazon-defined shipment identifier for the shipment to cancel.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:merchantfulfillment_v0/model/CancelShipmentResponse} and HTTP response
     */
  cancelShipmentWithHttpInfo (shipmentId) {
    const postBody = null

    // verify the required parameter 'shipmentId' is set
    if (shipmentId === undefined || shipmentId === null) {
      throw new Error("Missing the required parameter 'shipmentId' when calling cancelShipment")
    }

    const pathParams = {
      shipmentId
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const contentTypes = []
    const accepts = ['application/json']
    const returnType = CancelShipmentResponse

    return this.apiClient.callApi('MerchantFulfillmentApi-cancelShipment',
      '/mfn/v0/shipments/{shipmentId}', 'DELETE',
      pathParams, queryParams, headerParams, formParams, postBody,
      contentTypes, accepts, returnType, this.getRateLimiter('MerchantFulfillmentApi-cancelShipment')
    )
  }

  /**
     * Cancel the shipment indicated by the specified shipment identifier.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The Amazon-defined shipment identifier for the shipment to cancel.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:merchantfulfillment_v0/model/CancelShipmentResponse}
     */
  cancelShipment (shipmentId) {
    return this.cancelShipmentWithHttpInfo(shipmentId)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }

  /**
     * Create a shipment with the information provided.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/CreateShipmentRequest} body The request schema for the &#x60;CreateShipment&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:merchantfulfillment_v0/model/CreateShipmentResponse} and HTTP response
     */
  createShipmentWithHttpInfo (body) {
    const postBody = body

    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error("Missing the required parameter 'body' when calling createShipment")
    }

    const pathParams = {
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const contentTypes = ['application/json']
    const accepts = ['application/json']
    const returnType = CreateShipmentResponse

    return this.apiClient.callApi('MerchantFulfillmentApi-createShipment',
      '/mfn/v0/shipments', 'POST',
      pathParams, queryParams, headerParams, formParams, postBody,
      contentTypes, accepts, returnType, this.getRateLimiter('MerchantFulfillmentApi-createShipment')
    )
  }

  /**
     * Create a shipment with the information provided.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/CreateShipmentRequest} body The request schema for the &#x60;CreateShipment&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:merchantfulfillment_v0/model/CreateShipmentResponse}
     */
  createShipment (body) {
    return this.createShipmentWithHttpInfo(body)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }

  /**
     * Gets a list of additional seller inputs required for a ship method. This is generally used for international shipping.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/GetAdditionalSellerInputsRequest} body The request schema for the &#x60;GetAdditionalSellerInputs&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:merchantfulfillment_v0/model/GetAdditionalSellerInputsResponse} and HTTP response
     */
  getAdditionalSellerInputsWithHttpInfo (body) {
    const postBody = body

    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error("Missing the required parameter 'body' when calling getAdditionalSellerInputs")
    }

    const pathParams = {
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const contentTypes = ['application/json']
    const accepts = ['application/json']
    const returnType = GetAdditionalSellerInputsResponse

    return this.apiClient.callApi('MerchantFulfillmentApi-getAdditionalSellerInputs',
      '/mfn/v0/additionalSellerInputs', 'POST',
      pathParams, queryParams, headerParams, formParams, postBody,
      contentTypes, accepts, returnType, this.getRateLimiter('MerchantFulfillmentApi-getAdditionalSellerInputs')
    )
  }

  /**
     * Gets a list of additional seller inputs required for a ship method. This is generally used for international shipping.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/GetAdditionalSellerInputsRequest} body The request schema for the &#x60;GetAdditionalSellerInputs&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:merchantfulfillment_v0/model/GetAdditionalSellerInputsResponse}
     */
  getAdditionalSellerInputs (body) {
    return this.getAdditionalSellerInputsWithHttpInfo(body)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }

  /**
     * Returns a list of shipping service offers that satisfy the specified shipment request details.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 6 | 12 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/GetEligibleShipmentServicesRequest} body The request schema for the &#x60;GetEligibleShipmentServices&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:merchantfulfillment_v0/model/GetEligibleShipmentServicesResponse} and HTTP response
     */
  getEligibleShipmentServicesWithHttpInfo (body) {
    const postBody = body

    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error("Missing the required parameter 'body' when calling getEligibleShipmentServices")
    }

    const pathParams = {
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const contentTypes = ['application/json']
    const accepts = ['application/json']
    const returnType = GetEligibleShipmentServicesResponse

    return this.apiClient.callApi('MerchantFulfillmentApi-getEligibleShipmentServices',
      '/mfn/v0/eligibleShippingServices', 'POST',
      pathParams, queryParams, headerParams, formParams, postBody,
      contentTypes, accepts, returnType, this.getRateLimiter('MerchantFulfillmentApi-getEligibleShipmentServices')
    )
  }

  /**
     * Returns a list of shipping service offers that satisfy the specified shipment request details.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 6 | 12 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/GetEligibleShipmentServicesRequest} body The request schema for the &#x60;GetEligibleShipmentServices&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:merchantfulfillment_v0/model/GetEligibleShipmentServicesResponse}
     */
  getEligibleShipmentServices (body) {
    return this.getEligibleShipmentServicesWithHttpInfo(body)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }

  /**
     * Returns the shipment information for an existing shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The Amazon-defined shipment identifier for the shipment.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:merchantfulfillment_v0/model/GetShipmentResponse} and HTTP response
     */
  getShipmentWithHttpInfo (shipmentId) {
    const postBody = null

    // verify the required parameter 'shipmentId' is set
    if (shipmentId === undefined || shipmentId === null) {
      throw new Error("Missing the required parameter 'shipmentId' when calling getShipment")
    }

    const pathParams = {
      shipmentId
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const contentTypes = []
    const accepts = ['application/json']
    const returnType = GetShipmentResponse

    return this.apiClient.callApi('MerchantFulfillmentApi-getShipment',
      '/mfn/v0/shipments/{shipmentId}', 'GET',
      pathParams, queryParams, headerParams, formParams, postBody,
      contentTypes, accepts, returnType, this.getRateLimiter('MerchantFulfillmentApi-getShipment')
    )
  }

  /**
     * Returns the shipment information for an existing shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The Amazon-defined shipment identifier for the shipment.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:merchantfulfillment_v0/model/GetShipmentResponse}
     */
  getShipment (shipmentId) {
    return this.getShipmentWithHttpInfo(shipmentId)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }
}
