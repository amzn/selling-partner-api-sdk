/**
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {CancelShipmentResponse} from '../model/CancelShipmentResponse.js';
import {CreateShipmentRequest} from '../model/CreateShipmentRequest.js';
import {CreateShipmentResponse} from '../model/CreateShipmentResponse.js';
import {GetAdditionalSellerInputsRequest} from '../model/GetAdditionalSellerInputsRequest.js';
import {GetAdditionalSellerInputsResponse} from '../model/GetAdditionalSellerInputsResponse.js';
import {GetEligibleShipmentServicesRequest} from '../model/GetEligibleShipmentServicesRequest.js';
import {GetEligibleShipmentServicesResponse} from '../model/GetEligibleShipmentServicesResponse.js';
import {GetShipmentResponse} from '../model/GetShipmentResponse.js';

/**
* MerchantFulfillment service.
* @module merchantfulfillment_v0/api/MerchantFulfillmentApi
* @version v0
*/
export class MerchantFulfillmentApi {

    /**
    * Constructs a new MerchantFulfillmentApi. 
    * @alias module:merchantfulfillment_v0/api/MerchantFulfillmentApi
    * @class
    * @param {module:merchantfulfillment_v0/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:merchantfulfillment_v0/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Cancel the shipment indicated by the specified shipment identifier.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The Amazon-defined shipment identifier for the shipment to cancel.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:merchantfulfillment_v0/model/CancelShipmentResponse} and HTTP response
     */
    cancelShipmentWithHttpInfo(shipmentId) {
      let postBody = null;

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling cancelShipment");
      }


      let pathParams = {
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CancelShipmentResponse;

      return this.apiClient.callApi(
        '/mfn/v0/shipments/{shipmentId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Cancel the shipment indicated by the specified shipment identifier.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The Amazon-defined shipment identifier for the shipment to cancel.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:merchantfulfillment_v0/model/CancelShipmentResponse}
     */
    cancelShipment(shipmentId) {
      return this.cancelShipmentWithHttpInfo(shipmentId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Create a shipment with the information provided.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/CreateShipmentRequest} body The request schema for the &#x60;CreateShipment&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:merchantfulfillment_v0/model/CreateShipmentResponse} and HTTP response
     */
    createShipmentWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createShipment");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateShipmentResponse;

      return this.apiClient.callApi(
        '/mfn/v0/shipments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Create a shipment with the information provided.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/CreateShipmentRequest} body The request schema for the &#x60;CreateShipment&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:merchantfulfillment_v0/model/CreateShipmentResponse}
     */
    createShipment(body) {
      return this.createShipmentWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Gets a list of additional seller inputs required for a ship method. This is generally used for international shipping.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/GetAdditionalSellerInputsRequest} body The request schema for the &#x60;GetAdditionalSellerInputs&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:merchantfulfillment_v0/model/GetAdditionalSellerInputsResponse} and HTTP response
     */
    getAdditionalSellerInputsWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling getAdditionalSellerInputs");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetAdditionalSellerInputsResponse;

      return this.apiClient.callApi(
        '/mfn/v0/additionalSellerInputs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Gets a list of additional seller inputs required for a ship method. This is generally used for international shipping.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/GetAdditionalSellerInputsRequest} body The request schema for the &#x60;GetAdditionalSellerInputs&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:merchantfulfillment_v0/model/GetAdditionalSellerInputsResponse}
     */
    getAdditionalSellerInputs(body) {
      return this.getAdditionalSellerInputsWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns a list of shipping service offers that satisfy the specified shipment request details.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 6 | 12 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/GetEligibleShipmentServicesRequest} body The request schema for the &#x60;GetEligibleShipmentServices&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:merchantfulfillment_v0/model/GetEligibleShipmentServicesResponse} and HTTP response
     */
    getEligibleShipmentServicesWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling getEligibleShipmentServices");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetEligibleShipmentServicesResponse;

      return this.apiClient.callApi(
        '/mfn/v0/eligibleShippingServices', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Returns a list of shipping service offers that satisfy the specified shipment request details.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 6 | 12 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:merchantfulfillment_v0/model/GetEligibleShipmentServicesRequest} body The request schema for the &#x60;GetEligibleShipmentServices&#x60; operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:merchantfulfillment_v0/model/GetEligibleShipmentServicesResponse}
     */
    getEligibleShipmentServices(body) {
      return this.getEligibleShipmentServicesWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns the shipment information for an existing shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The Amazon-defined shipment identifier for the shipment.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:merchantfulfillment_v0/model/GetShipmentResponse} and HTTP response
     */
    getShipmentWithHttpInfo(shipmentId) {
      let postBody = null;

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling getShipment");
      }


      let pathParams = {
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetShipmentResponse;

      return this.apiClient.callApi(
        '/mfn/v0/shipments/{shipmentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Returns the shipment information for an existing shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The Amazon-defined shipment identifier for the shipment.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:merchantfulfillment_v0/model/GetShipmentResponse}
     */
    getShipment(shipmentId) {
      return this.getShipmentWithHttpInfo(shipmentId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
