/**
 * Selling Partner API for Retail Procurement Transaction Status
 * The Selling Partner API for Retail Procurement Transaction Status provides programmatic access to status information on specific asynchronous POST transactions for vendors.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { Error } from './Error.js'

/**
 * The Transaction model module.
 * @module vendortransactionstatus_v1/model/Transaction
 * @version v1
 */
export class Transaction {
  /**
   * Constructs a new <code>Transaction</code>.
   * The transaction status.
   * @alias module:vendortransactionstatus_v1/model/Transaction
   * @class
   * @param transactionId {String} The unique identifier returned in the 'transactionId' field in response to the post request of a specific transaction.
   * @param status {String} Current processing status of the transaction.
   */
  constructor (transactionId, status) {
    this.transactionId = transactionId
    this.status = status
  }

  /**
   * Constructs a <code>Transaction</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {Transaction} obj Optional instance to populate.
   * @return {Transaction} The populated <code>Transaction</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new Transaction()
      if (data.hasOwnProperty('transactionId')) { obj.transactionId = ApiClient.convertToType(data.transactionId, 'String') }
      if (data.hasOwnProperty('status')) { obj.status = ApiClient.convertToType(data.status, 'String') }
      if (data.hasOwnProperty('errors')) { obj.errors = ApiClient.convertToType(data.errors, [Error]) }
    }
    return obj
  }
}

/**
 * The unique identifier returned in the 'transactionId' field in response to the post request of a specific transaction.
 * @member {String} transactionId
 * @type {String}
 */
Transaction.prototype.transactionId = undefined

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Transaction.StatusEnum = {

  /**
     * value: "Failure"
     * @const
     */
  Failure: 'Failure',

  /**
     * value: "Processing"
     * @const
     */
  Processing: 'Processing',

  /**
     * value: "Success"
     * @const
     */
  Success: 'Success'
}
/**
 * Current processing status of the transaction.
 * @member {String} status
 * @type {String}
 */
Transaction.prototype.status = undefined

/**
 * A list of error responses returned when a request is unsuccessful.
 * @member {[Error]} errors
 * @type {[Error]}
 */
Transaction.prototype.errors = undefined
