/**
 * Selling Partner API for Listings Items
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listings Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/listings-items-api-v2021-08-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2021-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {IssueEnforcementAction} from './IssueEnforcementAction.js';
import {IssueExemption} from './IssueExemption.js';

/**
 * The IssueEnforcements model module.
 * @module listingsitems_v2021_08_01/model/IssueEnforcements
 * @version 2021-08-01
 */
export class IssueEnforcements {
  /**
   * Constructs a new <code>IssueEnforcements</code>.
   * This field provides information about the enforcement actions taken by Amazon that affect the publishing or status of a listing. It also includes details about any associated exemptions.
   * @alias module:listingsitems_v2021_08_01/model/IssueEnforcements
   * @class
   * @param actions {Array.<module:listingsitems_v2021_08_01/model/IssueEnforcementAction>} List of enforcement actions taken by Amazon that affect the publishing or status of a listing.
   * @param exemption {module:listingsitems_v2021_08_01/model/IssueExemption} 
   */
  constructor(actions, exemption) {
    this.actions = actions;
    this.exemption = exemption;
  }

  /**
   * Constructs a <code>IssueEnforcements</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:listingsitems_v2021_08_01/model/IssueEnforcements} obj Optional instance to populate.
   * @return {module:listingsitems_v2021_08_01/model/IssueEnforcements} The populated <code>IssueEnforcements</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new IssueEnforcements();
      if (data.hasOwnProperty('actions'))
        obj.actions = ApiClient.convertToType(data['actions'], [IssueEnforcementAction]);
      if (data.hasOwnProperty('exemption'))
        obj.exemption = IssueExemption.constructFromObject(data['exemption']);
    }
    return obj;
  }
}

/**
 * List of enforcement actions taken by Amazon that affect the publishing or status of a listing.
 * @member {Array.<module:listingsitems_v2021_08_01/model/IssueEnforcementAction>} actions
 */
IssueEnforcements.prototype.actions = undefined;

/**
 * @member {module:listingsitems_v2021_08_01/model/IssueExemption} exemption
 */
IssueEnforcements.prototype.exemption = undefined;


