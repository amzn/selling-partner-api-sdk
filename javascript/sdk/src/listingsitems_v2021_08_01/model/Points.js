/**
 * Selling Partner API for Listings Items
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listings Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/listings-items-api-v2021-08-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2021-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The Points model module.
 * @module listingsitems_v2021_08_01/model/Points
 * @version 2021-08-01
 */
export class Points {
  /**
   * Constructs a new <code>Points</code>.
   * The number of Amazon Points offered with the purchase of an item, and their monetary value. Note that the &#x60;Points&#x60; element is only returned in Japan (JP).
   * @alias module:listingsitems_v2021_08_01/model/Points
   * @class
   * @param pointsNumber {Number} 
   */
  constructor(pointsNumber) {
    this.pointsNumber = pointsNumber;
  }

  /**
   * Constructs a <code>Points</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:listingsitems_v2021_08_01/model/Points} obj Optional instance to populate.
   * @return {module:listingsitems_v2021_08_01/model/Points} The populated <code>Points</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Points();
      if (data.hasOwnProperty('pointsNumber'))
        obj.pointsNumber = ApiClient.convertToType(data['pointsNumber'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {Number} pointsNumber
 */
Points.prototype.pointsNumber = undefined;


