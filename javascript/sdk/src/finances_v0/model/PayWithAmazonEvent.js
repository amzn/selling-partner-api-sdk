/**
 * Selling Partner API for Finances
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ChargeComponent} from './ChargeComponent.js';
import {FeeComponent} from './FeeComponent.js';

/**
 * The PayWithAmazonEvent model module.
 * @module finances_v0/model/PayWithAmazonEvent
 * @version v0
 */
export class PayWithAmazonEvent {
  /**
   * Constructs a new <code>PayWithAmazonEvent</code>.
   * An event related to the seller&#39;s Pay with Amazon account.
   * @alias module:finances_v0/model/PayWithAmazonEvent
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>PayWithAmazonEvent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:finances_v0/model/PayWithAmazonEvent} obj Optional instance to populate.
   * @return {module:finances_v0/model/PayWithAmazonEvent} The populated <code>PayWithAmazonEvent</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new PayWithAmazonEvent();
      if (data.hasOwnProperty('SellerOrderId'))
        obj.sellerOrderId = ApiClient.convertToType(data['SellerOrderId'], 'String');
      if (data.hasOwnProperty('TransactionPostedDate'))
        obj.transactionPostedDate = ApiClient.convertToType(data['TransactionPostedDate'], 'Date');
      if (data.hasOwnProperty('BusinessObjectType'))
        obj.businessObjectType = ApiClient.convertToType(data['BusinessObjectType'], 'String');
      if (data.hasOwnProperty('SalesChannel'))
        obj.salesChannel = ApiClient.convertToType(data['SalesChannel'], 'String');
      if (data.hasOwnProperty('Charge'))
        obj.charge = ChargeComponent.constructFromObject(data['Charge']);
      if (data.hasOwnProperty('FeeList'))
        obj.feeList = ApiClient.convertToType(data['FeeList'], [FeeComponent]);
      if (data.hasOwnProperty('PaymentAmountType'))
        obj.paymentAmountType = ApiClient.convertToType(data['PaymentAmountType'], 'String');
      if (data.hasOwnProperty('AmountDescription'))
        obj.amountDescription = ApiClient.convertToType(data['AmountDescription'], 'String');
      if (data.hasOwnProperty('FulfillmentChannel'))
        obj.fulfillmentChannel = ApiClient.convertToType(data['FulfillmentChannel'], 'String');
      if (data.hasOwnProperty('StoreName'))
        obj.storeName = ApiClient.convertToType(data['StoreName'], 'String');
    }
    return obj;
  }
}

/**
 * An order identifier that is specified by the seller.
 * @member {String} sellerOrderId
 */
PayWithAmazonEvent.prototype.sellerOrderId = undefined;

/**
 * Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).
 * @member {Date} transactionPostedDate
 */
PayWithAmazonEvent.prototype.transactionPostedDate = undefined;

/**
 * The type of business object.
 * @member {String} businessObjectType
 */
PayWithAmazonEvent.prototype.businessObjectType = undefined;

/**
 * The sales channel for the transaction.
 * @member {String} salesChannel
 */
PayWithAmazonEvent.prototype.salesChannel = undefined;

/**
 * @member {module:finances_v0/model/ChargeComponent} charge
 */
PayWithAmazonEvent.prototype.charge = undefined;

/**
 * A list of fee component information.
 * @member {Array.<module:finances_v0/model/FeeComponent>} feeList
 */
PayWithAmazonEvent.prototype.feeList = undefined;

/**
 * The type of payment.  Possible values:  * Sales
 * @member {String} paymentAmountType
 */
PayWithAmazonEvent.prototype.paymentAmountType = undefined;

/**
 * A short description of this payment event.
 * @member {String} amountDescription
 */
PayWithAmazonEvent.prototype.amountDescription = undefined;

/**
 * The fulfillment channel.  Possible values:  * AFN - Amazon Fulfillment Network (Fulfillment by Amazon)  * MFN - Merchant Fulfillment Network (self-fulfilled)
 * @member {String} fulfillmentChannel
 */
PayWithAmazonEvent.prototype.fulfillmentChannel = undefined;

/**
 * The store name where the event occurred.
 * @member {String} storeName
 */
PayWithAmazonEvent.prototype.storeName = undefined;


