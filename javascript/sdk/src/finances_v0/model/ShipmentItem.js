/**
 * Selling Partner API for Finances
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ChargeComponent} from './ChargeComponent.js';
import {Currency} from './Currency.js';
import {FeeComponent} from './FeeComponent.js';
import {Promotion} from './Promotion.js';
import {TaxWithheldComponent} from './TaxWithheldComponent.js';

/**
 * The ShipmentItem model module.
 * @module finances_v0/model/ShipmentItem
 * @version v0
 */
export class ShipmentItem {
  /**
   * Constructs a new <code>ShipmentItem</code>.
   * An item of a shipment, refund, guarantee claim, or chargeback.
   * @alias module:finances_v0/model/ShipmentItem
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ShipmentItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:finances_v0/model/ShipmentItem} obj Optional instance to populate.
   * @return {module:finances_v0/model/ShipmentItem} The populated <code>ShipmentItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ShipmentItem();
      if (data.hasOwnProperty('SellerSKU'))
        obj.sellerSKU = ApiClient.convertToType(data['SellerSKU'], 'String');
      if (data.hasOwnProperty('OrderItemId'))
        obj.orderItemId = ApiClient.convertToType(data['OrderItemId'], 'String');
      if (data.hasOwnProperty('OrderAdjustmentItemId'))
        obj.orderAdjustmentItemId = ApiClient.convertToType(data['OrderAdjustmentItemId'], 'String');
      if (data.hasOwnProperty('QuantityShipped'))
        obj.quantityShipped = ApiClient.convertToType(data['QuantityShipped'], 'Number');
      if (data.hasOwnProperty('ItemChargeList'))
        obj.itemChargeList = ApiClient.convertToType(data['ItemChargeList'], [ChargeComponent]);
      if (data.hasOwnProperty('ItemChargeAdjustmentList'))
        obj.itemChargeAdjustmentList = ApiClient.convertToType(data['ItemChargeAdjustmentList'], [ChargeComponent]);
      if (data.hasOwnProperty('ItemFeeList'))
        obj.itemFeeList = ApiClient.convertToType(data['ItemFeeList'], [FeeComponent]);
      if (data.hasOwnProperty('ItemFeeAdjustmentList'))
        obj.itemFeeAdjustmentList = ApiClient.convertToType(data['ItemFeeAdjustmentList'], [FeeComponent]);
      if (data.hasOwnProperty('ItemTaxWithheldList'))
        obj.itemTaxWithheldList = ApiClient.convertToType(data['ItemTaxWithheldList'], [TaxWithheldComponent]);
      if (data.hasOwnProperty('PromotionList'))
        obj.promotionList = ApiClient.convertToType(data['PromotionList'], [Promotion]);
      if (data.hasOwnProperty('PromotionAdjustmentList'))
        obj.promotionAdjustmentList = ApiClient.convertToType(data['PromotionAdjustmentList'], [Promotion]);
      if (data.hasOwnProperty('CostOfPointsGranted'))
        obj.costOfPointsGranted = Currency.constructFromObject(data['CostOfPointsGranted']);
      if (data.hasOwnProperty('CostOfPointsReturned'))
        obj.costOfPointsReturned = Currency.constructFromObject(data['CostOfPointsReturned']);
    }
    return obj;
  }
}

/**
 * The seller SKU of the item. The seller SKU is qualified by the seller's seller ID, which is included with every call to the Selling Partner API.
 * @member {String} sellerSKU
 */
ShipmentItem.prototype.sellerSKU = undefined;

/**
 * An Amazon-defined order item identifier.
 * @member {String} orderItemId
 */
ShipmentItem.prototype.orderItemId = undefined;

/**
 * An Amazon-defined order adjustment identifier defined for refunds, guarantee claims, and chargeback events.
 * @member {String} orderAdjustmentItemId
 */
ShipmentItem.prototype.orderAdjustmentItemId = undefined;

/**
 * The number of items shipped.
 * @member {Number} quantityShipped
 */
ShipmentItem.prototype.quantityShipped = undefined;

/**
 * A list of charge information on the seller's account.
 * @member {Array.<module:finances_v0/model/ChargeComponent>} itemChargeList
 */
ShipmentItem.prototype.itemChargeList = undefined;

/**
 * A list of charge information on the seller's account.
 * @member {Array.<module:finances_v0/model/ChargeComponent>} itemChargeAdjustmentList
 */
ShipmentItem.prototype.itemChargeAdjustmentList = undefined;

/**
 * A list of fee component information.
 * @member {Array.<module:finances_v0/model/FeeComponent>} itemFeeList
 */
ShipmentItem.prototype.itemFeeList = undefined;

/**
 * A list of fee component information.
 * @member {Array.<module:finances_v0/model/FeeComponent>} itemFeeAdjustmentList
 */
ShipmentItem.prototype.itemFeeAdjustmentList = undefined;

/**
 * A list of information about taxes withheld.
 * @member {Array.<module:finances_v0/model/TaxWithheldComponent>} itemTaxWithheldList
 */
ShipmentItem.prototype.itemTaxWithheldList = undefined;

/**
 * A list of promotions.
 * @member {Array.<module:finances_v0/model/Promotion>} promotionList
 */
ShipmentItem.prototype.promotionList = undefined;

/**
 * A list of promotions.
 * @member {Array.<module:finances_v0/model/Promotion>} promotionAdjustmentList
 */
ShipmentItem.prototype.promotionAdjustmentList = undefined;

/**
 * @member {module:finances_v0/model/Currency} costOfPointsGranted
 */
ShipmentItem.prototype.costOfPointsGranted = undefined;

/**
 * @member {module:finances_v0/model/Currency} costOfPointsReturned
 */
ShipmentItem.prototype.costOfPointsReturned = undefined;


