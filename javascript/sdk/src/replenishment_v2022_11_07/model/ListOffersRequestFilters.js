/**
 * Selling Partner API for Replenishment
 * The Selling Partner API for Replenishment (Replenishment API) provides programmatic access to replenishment program metrics and offers. These programs provide recurring delivery of any replenishable item at a frequency chosen by the customer.  The Replenishment API is available worldwide wherever Amazon Subscribe & Save is available or is supported. The API is available to vendors and FBA selling partners.
 *
 * The version of the OpenAPI document: 2022-11-07
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {EligibilityStatus} from './EligibilityStatus.js';
import {Preference} from './Preference.js';
import {ProgramType} from './ProgramType.js';
import {Promotion} from './Promotion.js';

/**
 * The ListOffersRequestFilters model module.
 * @module replenishment_v2022_11_07/model/ListOffersRequestFilters
 * @version 2022-11-07
 */
export class ListOffersRequestFilters {
  /**
   * Constructs a new <code>ListOffersRequestFilters</code>.
   * Use these parameters to filter results. Any result must match all of the provided parameters. For any parameter that is an array, the result must match at least one element in the provided array.
   * @alias module:replenishment_v2022_11_07/model/ListOffersRequestFilters
   * @class
   * @param marketplaceId {String} The marketplace identifier. The supported marketplaces for both sellers and vendors are US, CA, ES, UK, FR, IT, IN, DE and JP. The supported marketplaces for vendors only are BR, AU, MX, AE and NL. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) to find the identifier for the marketplace.
   * @param programTypes {Array.<module:replenishment_v2022_11_07/model/ProgramType>} A list of replenishment program types.
   */
  constructor(marketplaceId, programTypes) {
    this.marketplaceId = marketplaceId;
    this.programTypes = programTypes;
  }

  /**
   * Constructs a <code>ListOffersRequestFilters</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:replenishment_v2022_11_07/model/ListOffersRequestFilters} obj Optional instance to populate.
   * @return {module:replenishment_v2022_11_07/model/ListOffersRequestFilters} The populated <code>ListOffersRequestFilters</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ListOffersRequestFilters();
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['marketplaceId'], 'String');
      if (data.hasOwnProperty('skus'))
        obj.skus = ApiClient.convertToType(data['skus'], ['String']);
      if (data.hasOwnProperty('asins'))
        obj.asins = ApiClient.convertToType(data['asins'], ['String']);
      if (data.hasOwnProperty('eligibilities'))
        obj.eligibilities = ApiClient.convertToType(data['eligibilities'], [EligibilityStatus]);
      if (data.hasOwnProperty('preferences'))
        obj.preferences = Preference.constructFromObject(data['preferences']);
      if (data.hasOwnProperty('promotions'))
        obj.promotions = Promotion.constructFromObject(data['promotions']);
      if (data.hasOwnProperty('programTypes'))
        obj.programTypes = ApiClient.convertToType(data['programTypes'], [ProgramType]);
    }
    return obj;
  }
}

/**
 * The marketplace identifier. The supported marketplaces for both sellers and vendors are US, CA, ES, UK, FR, IT, IN, DE and JP. The supported marketplaces for vendors only are BR, AU, MX, AE and NL. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) to find the identifier for the marketplace.
 * @member {String} marketplaceId
 */
ListOffersRequestFilters.prototype.marketplaceId = undefined;

/**
 * A list of SKUs to filter. This filter is only supported for sellers and not for vendors.
 * @member {Array.<String>} skus
 */
ListOffersRequestFilters.prototype.skus = undefined;

/**
 * A list of Amazon Standard Identification Numbers (ASINs).
 * @member {Array.<String>} asins
 */
ListOffersRequestFilters.prototype.asins = undefined;

/**
 * A list of eligibilities associated with an offer.
 * @member {Array.<module:replenishment_v2022_11_07/model/EligibilityStatus>} eligibilities
 */
ListOffersRequestFilters.prototype.eligibilities = undefined;

/**
 * @member {module:replenishment_v2022_11_07/model/Preference} preferences
 */
ListOffersRequestFilters.prototype.preferences = undefined;

/**
 * @member {module:replenishment_v2022_11_07/model/Promotion} promotions
 */
ListOffersRequestFilters.prototype.promotions = undefined;

/**
 * A list of replenishment program types.
 * @member {Array.<module:replenishment_v2022_11_07/model/ProgramType>} programTypes
 */
ListOffersRequestFilters.prototype.programTypes = undefined;


