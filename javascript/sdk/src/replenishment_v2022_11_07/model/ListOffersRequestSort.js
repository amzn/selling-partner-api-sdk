/**
 * Selling Partner API for Replenishment
 * The Selling Partner API for Replenishment (Replenishment API) provides programmatic access to replenishment program metrics and offers. These programs provide recurring delivery of any replenishable item at a frequency chosen by the customer.  The Replenishment API is available worldwide wherever Amazon Subscribe & Save is available or is supported. The API is available to vendors and FBA selling partners.
 *
 * The version of the OpenAPI document: 2022-11-07
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ListOffersSortKey} from './ListOffersSortKey.js';
import {SortOrder} from './SortOrder.js';

/**
 * The ListOffersRequestSort model module.
 * @module replenishment_v2022_11_07/model/ListOffersRequestSort
 * @version 2022-11-07
 */
export class ListOffersRequestSort {
  /**
   * Constructs a new <code>ListOffersRequestSort</code>.
   * Use these parameters to sort the response.
   * @alias module:replenishment_v2022_11_07/model/ListOffersRequestSort
   * @class
   * @param order {module:replenishment_v2022_11_07/model/SortOrder} 
   * @param key {module:replenishment_v2022_11_07/model/ListOffersSortKey} 
   */
  constructor(order, key) {
    this.order = order;
    this.key = key;
  }

  /**
   * Constructs a <code>ListOffersRequestSort</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:replenishment_v2022_11_07/model/ListOffersRequestSort} obj Optional instance to populate.
   * @return {module:replenishment_v2022_11_07/model/ListOffersRequestSort} The populated <code>ListOffersRequestSort</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ListOffersRequestSort();
      if (data.hasOwnProperty('order'))
        obj.order = SortOrder.constructFromObject(data['order']);
      if (data.hasOwnProperty('key'))
        obj.key = ListOffersSortKey.constructFromObject(data['key']);
    }
    return obj;
  }
}

/**
 * @member {module:replenishment_v2022_11_07/model/SortOrder} order
 */
ListOffersRequestSort.prototype.order = undefined;

/**
 * @member {module:replenishment_v2022_11_07/model/ListOffersSortKey} key
 */
ListOffersRequestSort.prototype.key = undefined;


