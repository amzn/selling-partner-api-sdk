/**
 * The Selling Partner API for Amazon External Fulfillment Return Item Processing
 * You can use the Amazon External Fulfillment Return Item Processing API to retrieve, track, and process return items through Amazon's External Fulfillment returns management system.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { MarketplaceChannelDetails } from './MarketplaceChannelDetails.js'
import { OtpDetails } from './OtpDetails.js'
import { ReplanningDetails } from './ReplanningDetails.js'
import { ReturnMetadata } from './ReturnMetadata.js'
import { ReturnShippingInfo } from './ReturnShippingInfo.js'

/**
 * The Return model module.
 * @module externalfulfillmentreturns_v2024_09_11/model/Return
 * @version 2024-09-11
 */
export class Return {
  /**
   * Constructs a new <code>Return</code>.
   * Information about the return item.
   * @alias module:externalfulfillmentreturns_v2024_09_11/model/Return
   * @class
   * @param id {String} The return item's ID.
   * @param returnType {String} The type of return.
   * @param status {String} The current status of the return.
   * @param fulfillmentLocationId {String} The ID of the location that fulfilled the order.
   * @param lastUpdatedDateTime {String} A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
   * @param returnMetadata {ReturnMetadata}
   * @param returnShippingInfo {ReturnShippingInfo}
   * @param marketplaceChannelDetails {MarketplaceChannelDetails}
   */
  constructor (id, returnType, status, fulfillmentLocationId, lastUpdatedDateTime, returnMetadata, returnShippingInfo, marketplaceChannelDetails) {
    this.id = id
    this.returnType = returnType
    this.status = status
    this.fulfillmentLocationId = fulfillmentLocationId
    this.lastUpdatedDateTime = lastUpdatedDateTime
    this.returnMetadata = returnMetadata
    this.returnShippingInfo = returnShippingInfo
    this.marketplaceChannelDetails = marketplaceChannelDetails
  }

  /**
   * Constructs a <code>Return</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {Return} obj Optional instance to populate.
   * @return {Return} The populated <code>Return</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new Return()
      if (data.hasOwnProperty('id')) { obj.id = ApiClient.convertToType(data.id, 'String') }
      if (data.hasOwnProperty('returnLocationId')) { obj.returnLocationId = ApiClient.convertToType(data.returnLocationId, 'String') }
      if (data.hasOwnProperty('merchantSku')) { obj.merchantSku = ApiClient.convertToType(data.merchantSku, 'String') }
      if (data.hasOwnProperty('returnType')) { obj.returnType = ApiClient.convertToType(data.returnType, 'String') }
      if (data.hasOwnProperty('returnSubType')) { obj.returnSubType = ApiClient.convertToType(data.returnSubType, 'String') }
      if (data.hasOwnProperty('numberOfUnits')) { obj.numberOfUnits = ApiClient.convertToType(data.numberOfUnits, 'Number') }
      if (data.hasOwnProperty('status')) { obj.status = ApiClient.convertToType(data.status, 'String') }
      if (data.hasOwnProperty('fulfillmentLocationId')) { obj.fulfillmentLocationId = ApiClient.convertToType(data.fulfillmentLocationId, 'String') }
      if (data.hasOwnProperty('creationDateTime')) { obj.creationDateTime = ApiClient.convertToType(data.creationDateTime, 'String') }
      if (data.hasOwnProperty('lastUpdatedDateTime')) { obj.lastUpdatedDateTime = ApiClient.convertToType(data.lastUpdatedDateTime, 'String') }
      if (data.hasOwnProperty('returnMetadata')) { obj.returnMetadata = ReturnMetadata.constructFromObject(data.returnMetadata) }
      if (data.hasOwnProperty('returnShippingInfo')) { obj.returnShippingInfo = ReturnShippingInfo.constructFromObject(data.returnShippingInfo) }
      if (data.hasOwnProperty('marketplaceChannelDetails')) { obj.marketplaceChannelDetails = MarketplaceChannelDetails.constructFromObject(data.marketplaceChannelDetails) }
      if (data.hasOwnProperty('otpDetails')) { obj.otpDetails = OtpDetails.constructFromObject(data.otpDetails) }
      if (data.hasOwnProperty('packageDeliveryMode')) { obj.packageDeliveryMode = ApiClient.convertToType(data.packageDeliveryMode, 'String') }
      if (data.hasOwnProperty('replanningDetails')) { obj.replanningDetails = ReplanningDetails.constructFromObject(data.replanningDetails) }
    }
    return obj
  }
}

/**
 * The return item's ID.
 * @member {String} id
 * @type {String}
 */
Return.prototype.id = undefined

/**
 * The SmartConnect identifier for where the return item was dropped for delivery.
 * @member {String} returnLocationId
 * @type {String}
 */
Return.prototype.returnLocationId = undefined

/**
 * The seller's identifier for the SKU.
 * @member {String} merchantSku
 * @type {String}
 */
Return.prototype.merchantSku = undefined

/**
 * Allowed values for the <code>returnType</code> property.
 * @enum {String}
 * @readonly
 */
Return.ReturnTypeEnum = {

  /**
     * value: "CUSTOMER"
     * @const
     */
  CUSTOMER: 'CUSTOMER',

  /**
     * value: "REJECT"
     * @const
     */
  REJECT: 'REJECT'
}
/**
 * The type of return.
 * @member {String} returnType
 * @type {String}
 */
Return.prototype.returnType = undefined

/**
 * Allowed values for the <code>returnSubType</code> property.
 * @enum {String}
 * @readonly
 */
Return.ReturnSubTypeEnum = {

  /**
     * value: "NORMAL"
     * @const
     */
  NORMAL: 'NORMAL',

  /**
     * value: "REPLACEMENT"
     * @const
     */
  REPLACEMENT: 'REPLACEMENT',

  /**
     * value: "EXCHANGE"
     * @const
     */
  EXCHANGE: 'EXCHANGE'
}
/**
 * The sub-type of return.
 * @member {String} returnSubType
 * @type {String}
 */
Return.prototype.returnSubType = undefined

/**
 * The total number of units in the return.
 * @member {Number} numberOfUnits
 * @type {Number}
 */
Return.prototype.numberOfUnits = undefined

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Return.StatusEnum = {

  /**
     * value: "CREATED"
     * @const
     */
  CREATED: 'CREATED',

  /**
     * value: "CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER"
     * @const
     */
  CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER: 'CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER',

  /**
     * value: "CARRIER_OUT_FOR_PICK_UP_FROM_CUSTOMER"
     * @const
     */
  CARRIER_OUT_FOR_PICK_UP_FROM_CUSTOMER: 'CARRIER_OUT_FOR_PICK_UP_FROM_CUSTOMER',

  /**
     * value: "CUSTOMER_CANCELLED_PICK_UP"
     * @const
     */
  CUSTOMER_CANCELLED_PICK_UP: 'CUSTOMER_CANCELLED_PICK_UP',

  /**
     * value: "CUSTOMER_RESCHEDULED_PICK_UP"
     * @const
     */
  CUSTOMER_RESCHEDULED_PICK_UP: 'CUSTOMER_RESCHEDULED_PICK_UP',

  /**
     * value: "PICKED_FROM_CUSTOMER"
     * @const
     */
  PICKED_FROM_CUSTOMER: 'PICKED_FROM_CUSTOMER',

  /**
     * value: "IN_TRANSIT"
     * @const
     */
  IN_TRANSIT: 'IN_TRANSIT',

  /**
     * value: "OUT_FOR_DELIVERY"
     * @const
     */
  OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY',

  /**
     * value: "DELIVERED"
     * @const
     */
  DELIVERED: 'DELIVERED',

  /**
     * value: "REPLANNED"
     * @const
     */
  REPLANNED: 'REPLANNED',

  /**
     * value: "CUSTOMER_DROPPED_OFF"
     * @const
     */
  CUSTOMER_DROPPED_OFF: 'CUSTOMER_DROPPED_OFF',

  /**
     * value: "PARTIALLY_PROCESSED"
     * @const
     */
  PARTIALLY_PROCESSED: 'PARTIALLY_PROCESSED',

  /**
     * value: "PROCESSED"
     * @const
     */
  PROCESSED: 'PROCESSED',

  /**
     * value: "REJECTED"
     * @const
     */
  REJECTED: 'REJECTED',

  /**
     * value: "CANCELLED"
     * @const
     */
  CANCELLED: 'CANCELLED'
}
/**
 * The current status of the return.
 * @member {String} status
 * @type {String}
 */
Return.prototype.status = undefined

/**
 * The ID of the location that fulfilled the order.
 * @member {String} fulfillmentLocationId
 * @type {String}
 */
Return.prototype.fulfillmentLocationId = undefined

/**
 * A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
 * @member {String} creationDateTime
 * @type {String}
 */
Return.prototype.creationDateTime = undefined

/**
 * A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
 * @member {String} lastUpdatedDateTime
 * @type {String}
 */
Return.prototype.lastUpdatedDateTime = undefined

/**
 * @member {ReturnMetadata} returnMetadata
 * @type {ReturnMetadata}
 */
Return.prototype.returnMetadata = undefined

/**
 * @member {ReturnShippingInfo} returnShippingInfo
 * @type {ReturnShippingInfo}
 */
Return.prototype.returnShippingInfo = undefined

/**
 * @member {MarketplaceChannelDetails} marketplaceChannelDetails
 * @type {MarketplaceChannelDetails}
 */
Return.prototype.marketplaceChannelDetails = undefined

/**
 * @member {OtpDetails} otpDetails
 * @type {OtpDetails}
 */
Return.prototype.otpDetails = undefined

/**
 * Allowed values for the <code>packageDeliveryMode</code> property.
 * @enum {String}
 * @readonly
 */
Return.PackageDeliveryModeEnum = {

  /**
     * value: "WITH_OTP"
     * @const
     */
  WITH_OTP: 'WITH_OTP',

  /**
     * value: "WITHOUT_OTP"
     * @const
     */
  WITHOUT_OTP: 'WITHOUT_OTP'
}
/**
 * The package delivery mode. This indicates whether the return was delivered to the seller with or without a one-time password (OTP).
 * @member {String} packageDeliveryMode
 * @type {String}
 */
Return.prototype.packageDeliveryMode = undefined

/**
 * @member {ReplanningDetails} replanningDetails
 * @type {ReplanningDetails}
 */
Return.prototype.replanningDetails = undefined
