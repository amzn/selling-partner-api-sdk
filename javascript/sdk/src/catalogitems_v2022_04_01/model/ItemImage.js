/**
 * Selling Partner API for Catalog Items
 * Use the Selling Partner API for Catalog Items to retrieve information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The ItemImage model module.
 * @module catalogitems_v2022_04_01/model/ItemImage
 * @version 2022-04-01
 */
export class ItemImage {
  /**
   * Constructs a new <code>ItemImage</code>.
   * Image for an item in the Amazon catalog.
   * @alias module:catalogitems_v2022_04_01/model/ItemImage
   * @class
   * @param variant {module:catalogitems_v2022_04_01/model/ItemImage.VariantEnum} Variant of the image, such as `MAIN` or `PT01`.
   * @param link {String} URL for the image.
   * @param height {Number} Height of the image in pixels.
   * @param width {Number} Width of the image in pixels.
   */
  constructor(variant, link, height, width) {
    this.variant = variant;
    this.link = link;
    this.height = height;
    this.width = width;
  }

  /**
   * Constructs a <code>ItemImage</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:catalogitems_v2022_04_01/model/ItemImage} obj Optional instance to populate.
   * @return {module:catalogitems_v2022_04_01/model/ItemImage} The populated <code>ItemImage</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ItemImage();
      if (data.hasOwnProperty('variant'))
        obj.variant = ApiClient.convertToType(data['variant'], 'String');
      if (data.hasOwnProperty('link'))
        obj.link = ApiClient.convertToType(data['link'], 'String');
      if (data.hasOwnProperty('height'))
        obj.height = ApiClient.convertToType(data['height'], 'Number');
      if (data.hasOwnProperty('width'))
        obj.width = ApiClient.convertToType(data['width'], 'Number');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>variant</code> property.
 * @enum {String}
 * @readonly
 */
ItemImage['VariantEnum'] = {

    /**
     * value: "MAIN"
     * @const
     */
    "MAIN": "MAIN",

    /**
     * value: "PT01"
     * @const
     */
    "PT01": "PT01",

    /**
     * value: "PT02"
     * @const
     */
    "PT02": "PT02",

    /**
     * value: "PT03"
     * @const
     */
    "PT03": "PT03",

    /**
     * value: "PT04"
     * @const
     */
    "PT04": "PT04",

    /**
     * value: "PT05"
     * @const
     */
    "PT05": "PT05",

    /**
     * value: "PT06"
     * @const
     */
    "PT06": "PT06",

    /**
     * value: "PT07"
     * @const
     */
    "PT07": "PT07",

    /**
     * value: "PT08"
     * @const
     */
    "PT08": "PT08",

    /**
     * value: "SWCH"
     * @const
     */
    "SWCH": "SWCH"
};

/**
 * Variant of the image, such as `MAIN` or `PT01`.
 * @member {module:catalogitems_v2022_04_01/model/ItemImage.VariantEnum} variant
 */
ItemImage.prototype.variant = undefined;

/**
 * URL for the image.
 * @member {String} link
 */
ItemImage.prototype.link = undefined;

/**
 * Height of the image in pixels.
 * @member {Number} height
 */
ItemImage.prototype.height = undefined;

/**
 * Width of the image in pixels.
 * @member {Number} width
 */
ItemImage.prototype.width = undefined;


