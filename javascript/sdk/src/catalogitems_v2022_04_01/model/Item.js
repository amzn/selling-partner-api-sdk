/**
 * Selling Partner API for Catalog Items
 * Use the Selling Partner API for Catalog Items to retrieve information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ItemBrowseClassificationsByMarketplace} from './ItemBrowseClassificationsByMarketplace.js';
import {ItemDimensionsByMarketplace} from './ItemDimensionsByMarketplace.js';
import {ItemIdentifiersByMarketplace} from './ItemIdentifiersByMarketplace.js';
import {ItemImagesByMarketplace} from './ItemImagesByMarketplace.js';
import {ItemProductTypeByMarketplace} from './ItemProductTypeByMarketplace.js';
import {ItemRelationshipsByMarketplace} from './ItemRelationshipsByMarketplace.js';
import {ItemSalesRanksByMarketplace} from './ItemSalesRanksByMarketplace.js';
import {ItemSummaryByMarketplace} from './ItemSummaryByMarketplace.js';
import {ItemVendorDetailsByMarketplace} from './ItemVendorDetailsByMarketplace.js';

/**
 * The Item model module.
 * @module catalogitems_v2022_04_01/model/Item
 * @version 2022-04-01
 */
export class Item {
  /**
   * Constructs a new <code>Item</code>.
   * An item in the Amazon catalog.
   * @alias module:catalogitems_v2022_04_01/model/Item
   * @class
   * @param asin {String} The unique identifier of an item in the Amazon catalog.
   */
  constructor(asin) {
    this.asin = asin;
  }

  /**
   * Constructs a <code>Item</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:catalogitems_v2022_04_01/model/Item} obj Optional instance to populate.
   * @return {module:catalogitems_v2022_04_01/model/Item} The populated <code>Item</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Item();
      if (data.hasOwnProperty('asin'))
        obj.asin = ApiClient.convertToType(data['asin'], 'String');
      if (data.hasOwnProperty('attributes'))
        obj.attributes = ApiClient.convertToType(data['attributes'], {'String': Object});
      if (data.hasOwnProperty('classifications'))
        obj.classifications = ApiClient.convertToType(data['classifications'], [ItemBrowseClassificationsByMarketplace]);
      if (data.hasOwnProperty('dimensions'))
        obj.dimensions = ApiClient.convertToType(data['dimensions'], [ItemDimensionsByMarketplace]);
      if (data.hasOwnProperty('identifiers'))
        obj.identifiers = ApiClient.convertToType(data['identifiers'], [ItemIdentifiersByMarketplace]);
      if (data.hasOwnProperty('images'))
        obj.images = ApiClient.convertToType(data['images'], [ItemImagesByMarketplace]);
      if (data.hasOwnProperty('productTypes'))
        obj.productTypes = ApiClient.convertToType(data['productTypes'], [ItemProductTypeByMarketplace]);
      if (data.hasOwnProperty('relationships'))
        obj.relationships = ApiClient.convertToType(data['relationships'], [ItemRelationshipsByMarketplace]);
      if (data.hasOwnProperty('salesRanks'))
        obj.salesRanks = ApiClient.convertToType(data['salesRanks'], [ItemSalesRanksByMarketplace]);
      if (data.hasOwnProperty('summaries'))
        obj.summaries = ApiClient.convertToType(data['summaries'], [ItemSummaryByMarketplace]);
      if (data.hasOwnProperty('vendorDetails'))
        obj.vendorDetails = ApiClient.convertToType(data['vendorDetails'], [ItemVendorDetailsByMarketplace]);
    }
    return obj;
  }
}

/**
 * The unique identifier of an item in the Amazon catalog.
 * @member {String} asin
 */
Item.prototype.asin = undefined;

/**
 * A JSON object containing structured item attribute data that is keyed by attribute name. Catalog item attributes conform to the related Amazon product type definitions that you can get from the [Product Type Definitions API](https://developer-docs.amazon.com/sp-api/docs/product-type-definitions-api-v2020-09-01-reference).
 * @member {Object.<String, Object>} attributes
 */
Item.prototype.attributes = undefined;

/**
 * An array of classifications (browse nodes) that is associated with the item in the Amazon catalog, grouped by `marketplaceId`.
 * @member {Array.<module:catalogitems_v2022_04_01/model/ItemBrowseClassificationsByMarketplace>} classifications
 */
Item.prototype.classifications = undefined;

/**
 * An array of dimensions that are associated with the item in the Amazon catalog, grouped by `marketplaceId`.
 * @member {Array.<module:catalogitems_v2022_04_01/model/ItemDimensionsByMarketplace>} dimensions
 */
Item.prototype.dimensions = undefined;

/**
 * Identifiers associated with the item in the Amazon catalog, such as UPC and EAN identifiers.
 * @member {Array.<module:catalogitems_v2022_04_01/model/ItemIdentifiersByMarketplace>} identifiers
 */
Item.prototype.identifiers = undefined;

/**
 * The images for an item in the Amazon catalog.
 * @member {Array.<module:catalogitems_v2022_04_01/model/ItemImagesByMarketplace>} images
 */
Item.prototype.images = undefined;

/**
 * Product types that are associated with the Amazon catalog item.
 * @member {Array.<module:catalogitems_v2022_04_01/model/ItemProductTypeByMarketplace>} productTypes
 */
Item.prototype.productTypes = undefined;

/**
 * Relationships grouped by `marketplaceId` for an Amazon catalog item (for example, variations).
 * @member {Array.<module:catalogitems_v2022_04_01/model/ItemRelationshipsByMarketplace>} relationships
 */
Item.prototype.relationships = undefined;

/**
 * Sales ranks of an Amazon catalog item.
 * @member {Array.<module:catalogitems_v2022_04_01/model/ItemSalesRanksByMarketplace>} salesRanks
 */
Item.prototype.salesRanks = undefined;

/**
 * Summaries of Amazon catalog items.
 * @member {Array.<module:catalogitems_v2022_04_01/model/ItemSummaryByMarketplace>} summaries
 */
Item.prototype.summaries = undefined;

/**
 * The vendor details that are associated with an Amazon catalog item. Vendor details are only available to vendors.
 * @member {Array.<module:catalogitems_v2022_04_01/model/ItemVendorDetailsByMarketplace>} vendorDetails
 */
Item.prototype.vendorDetails = undefined;


