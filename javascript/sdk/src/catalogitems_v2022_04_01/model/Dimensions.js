/**
 * Selling Partner API for Catalog Items
 * Use the Selling Partner API for Catalog Items to retrieve information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Dimension} from './Dimension.js';

/**
 * The Dimensions model module.
 * @module catalogitems_v2022_04_01/model/Dimensions
 * @version 2022-04-01
 */
export class Dimensions {
  /**
   * Constructs a new <code>Dimensions</code>.
   * Dimensions of an Amazon catalog item or item in its packaging.
   * @alias module:catalogitems_v2022_04_01/model/Dimensions
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Dimensions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:catalogitems_v2022_04_01/model/Dimensions} obj Optional instance to populate.
   * @return {module:catalogitems_v2022_04_01/model/Dimensions} The populated <code>Dimensions</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Dimensions();
      if (data.hasOwnProperty('height'))
        obj.height = Dimension.constructFromObject(data['height']);
      if (data.hasOwnProperty('length'))
        obj.length = Dimension.constructFromObject(data['length']);
      if (data.hasOwnProperty('weight'))
        obj.weight = Dimension.constructFromObject(data['weight']);
      if (data.hasOwnProperty('width'))
        obj.width = Dimension.constructFromObject(data['width']);
    }
    return obj;
  }
}

/**
 * @member {module:catalogitems_v2022_04_01/model/Dimension} height
 */
Dimensions.prototype.height = undefined;

/**
 * @member {module:catalogitems_v2022_04_01/model/Dimension} length
 */
Dimensions.prototype.length = undefined;

/**
 * @member {module:catalogitems_v2022_04_01/model/Dimension} weight
 */
Dimensions.prototype.weight = undefined;

/**
 * @member {module:catalogitems_v2022_04_01/model/Dimension} width
 */
Dimensions.prototype.width = undefined;


