/**
 * Selling Partner API for Shipment Invoicing
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partner’s Fulfillment by Amazon (FBA) orders.
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { Address } from './Address.js'
import { BuyerTaxInfo } from './BuyerTaxInfo.js'
import { MarketplaceTaxInfo } from './MarketplaceTaxInfo.js'
import { ShipmentItem } from './ShipmentItem.js'

/**
 * The ShipmentDetail model module.
 * @module invoicing_v0/model/ShipmentDetail
 * @version v0
 */
export class ShipmentDetail {
  /**
   * Constructs a new <code>ShipmentDetail</code>.
   * The information required by a selling partner to issue a shipment invoice.
   * @alias module:invoicing_v0/model/ShipmentDetail
   * @class
   */
  constructor () {
  }

  /**
   * Constructs a <code>ShipmentDetail</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {ShipmentDetail} obj Optional instance to populate.
   * @return {ShipmentDetail} The populated <code>ShipmentDetail</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new ShipmentDetail()
      if (data.hasOwnProperty('WarehouseId')) { obj.warehouseId = ApiClient.convertToType(data.WarehouseId, 'String') }
      if (data.hasOwnProperty('AmazonOrderId')) { obj.amazonOrderId = ApiClient.convertToType(data.AmazonOrderId, 'String') }
      if (data.hasOwnProperty('AmazonShipmentId')) { obj.amazonShipmentId = ApiClient.convertToType(data.AmazonShipmentId, 'String') }
      if (data.hasOwnProperty('PurchaseDate')) { obj.purchaseDate = ApiClient.convertToType(data.PurchaseDate, 'Date') }
      if (data.hasOwnProperty('ShippingAddress')) { obj.shippingAddress = Address.constructFromObject(data.ShippingAddress) }
      if (data.hasOwnProperty('PaymentMethodDetails')) { obj.paymentMethodDetails = ApiClient.convertToType(data.PaymentMethodDetails, ['String']) }
      if (data.hasOwnProperty('MarketplaceId')) { obj.marketplaceId = ApiClient.convertToType(data.MarketplaceId, 'String') }
      if (data.hasOwnProperty('SellerId')) { obj.sellerId = ApiClient.convertToType(data.SellerId, 'String') }
      if (data.hasOwnProperty('BuyerName')) { obj.buyerName = ApiClient.convertToType(data.BuyerName, 'String') }
      if (data.hasOwnProperty('BuyerCounty')) { obj.buyerCounty = ApiClient.convertToType(data.BuyerCounty, 'String') }
      if (data.hasOwnProperty('BuyerTaxInfo')) { obj.buyerTaxInfo = BuyerTaxInfo.constructFromObject(data.BuyerTaxInfo) }
      if (data.hasOwnProperty('MarketplaceTaxInfo')) { obj.marketplaceTaxInfo = MarketplaceTaxInfo.constructFromObject(data.MarketplaceTaxInfo) }
      if (data.hasOwnProperty('SellerDisplayName')) { obj.sellerDisplayName = ApiClient.convertToType(data.SellerDisplayName, 'String') }
      if (data.hasOwnProperty('ShipmentItems')) { obj.shipmentItems = ApiClient.convertToType(data.ShipmentItems, [ShipmentItem]) }
    }
    return obj
  }
}

/**
 * The Amazon-defined identifier for the warehouse.
 * @member {String} warehouseId
 * @type {String}
 */
ShipmentDetail.prototype.warehouseId = undefined

/**
 * The Amazon-defined identifier for the order.
 * @member {String} amazonOrderId
 * @type {String}
 */
ShipmentDetail.prototype.amazonOrderId = undefined

/**
 * The Amazon-defined identifier for the shipment.
 * @member {String} amazonShipmentId
 * @type {String}
 */
ShipmentDetail.prototype.amazonShipmentId = undefined

/**
 * The date and time when the order was created.
 * @member {Date} purchaseDate
 * @type {Date}
 */
ShipmentDetail.prototype.purchaseDate = undefined

/**
 * @member {Address} shippingAddress
 * @type {Address}
 */
ShipmentDetail.prototype.shippingAddress = undefined

/**
 * The list of payment method details.
 * @member {[String]} paymentMethodDetails
 * @type {[String]}
 */
ShipmentDetail.prototype.paymentMethodDetails = undefined

/**
 * The identifier for the marketplace where the order was placed.
 * @member {String} marketplaceId
 * @type {String}
 */
ShipmentDetail.prototype.marketplaceId = undefined

/**
 * The seller identifier.
 * @member {String} sellerId
 * @type {String}
 */
ShipmentDetail.prototype.sellerId = undefined

/**
 * The name of the buyer.
 * @member {String} buyerName
 * @type {String}
 */
ShipmentDetail.prototype.buyerName = undefined

/**
 * The county of the buyer.
 * @member {String} buyerCounty
 * @type {String}
 */
ShipmentDetail.prototype.buyerCounty = undefined

/**
 * @member {BuyerTaxInfo} buyerTaxInfo
 * @type {BuyerTaxInfo}
 */
ShipmentDetail.prototype.buyerTaxInfo = undefined

/**
 * @member {MarketplaceTaxInfo} marketplaceTaxInfo
 * @type {MarketplaceTaxInfo}
 */
ShipmentDetail.prototype.marketplaceTaxInfo = undefined

/**
 * The seller’s friendly name registered in the marketplace.
 * @member {String} sellerDisplayName
 * @type {String}
 */
ShipmentDetail.prototype.sellerDisplayName = undefined

/**
 * A list of shipment items.
 * @member {[ShipmentItem]} shipmentItems
 * @type {[ShipmentItem]}
 */
ShipmentDetail.prototype.shipmentItems = undefined
