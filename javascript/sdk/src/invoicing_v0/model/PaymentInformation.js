/**
 * Selling Partner API for Shipment Invoicing
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partnerâ€™s Fulfillment by Amazon (FBA) orders.
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { Money } from './Money.js'
import { PaymentMethodEnum } from './PaymentMethodEnum.js'

/**
 * The PaymentInformation model module.
 * @module invoicing_v0/model/PaymentInformation
 * @version v0
 */
export class PaymentInformation {
  /**
   * Constructs a new <code>PaymentInformation</code>.
   * Payment transaction information
   * @alias module:invoicing_v0/model/PaymentInformation
   * @class
   */
  constructor () {
  }

  /**
   * Constructs a <code>PaymentInformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {PaymentInformation} obj Optional instance to populate.
   * @return {PaymentInformation} The populated <code>PaymentInformation</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new PaymentInformation()
      if (data.hasOwnProperty('PaymentMethod')) { obj.paymentMethod = PaymentMethodEnum.constructFromObject(data.PaymentMethod) }
      if (data.hasOwnProperty('AcquirerId')) { obj.acquirerId = ApiClient.convertToType(data.AcquirerId, 'String') }
      if (data.hasOwnProperty('CardBrand')) { obj.cardBrand = ApiClient.convertToType(data.CardBrand, 'String') }
      if (data.hasOwnProperty('PaymentValue')) { obj.paymentValue = Money.constructFromObject(data.PaymentValue) }
      if (data.hasOwnProperty('AuthorizationCode')) { obj.authorizationCode = ApiClient.convertToType(data.AuthorizationCode, 'String') }
    }
    return obj
  }
}

/**
 * @member {PaymentMethodEnum} paymentMethod
 * @type {PaymentMethodEnum}
 */
PaymentInformation.prototype.paymentMethod = undefined

/**
 * Government ID of acquirer
 * @member {String} acquirerId
 * @type {String}
 */
PaymentInformation.prototype.acquirerId = undefined

/**
 * Credit card brand (if payment method is CreditCard)
 * @member {String} cardBrand
 * @type {String}
 */
PaymentInformation.prototype.cardBrand = undefined

/**
 * @member {Money} paymentValue
 * @type {Money}
 */
PaymentInformation.prototype.paymentValue = undefined

/**
 * Authorization code for this payment
 * @member {String} authorizationCode
 * @type {String}
 */
PaymentInformation.prototype.authorizationCode = undefined
