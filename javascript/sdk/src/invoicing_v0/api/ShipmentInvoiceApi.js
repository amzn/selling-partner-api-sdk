/**
 * Selling Partner API for Shipment Invoicing
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partnerâ€™s Fulfillment by Amazon (FBA) orders.
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { GetInvoiceStatusResponse } from '../model/GetInvoiceStatusResponse.js'
import { GetShipmentDetailsResponse } from '../model/GetShipmentDetailsResponse.js'
import { SubmitInvoiceRequest } from '../model/SubmitInvoiceRequest.js'
import { SubmitInvoiceResponse } from '../model/SubmitInvoiceResponse.js'
import { SuperagentRateLimiter } from '../../../helper/SuperagentRateLimiter.mjs'
import { DefaultRateLimitFetcher } from '../../../helper/DefaultRateLimitFetcher.mjs'

/**
* ShipmentInvoice service.
* @module invoicing_v0/api/ShipmentInvoiceApi
* @version v0
*/
export class ShipmentInvoiceApi {
  // Private member stores the default rate limiters
  #defaultRateLimiterMap

  /**
    * Constructs a new ShipmentInvoiceApi.
    * @alias module:invoicing_v0/api/ShipmentInvoiceApi
    * @class
    * @param {ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link ApiClient#instance} if unspecified.
    */
  constructor (apiClient) {
    this.apiClient = apiClient || ApiClient.instance
    this.initializeDefaultRateLimiterMap()
  }

  /**
     * Initialize rate limiters for API operations
     */
  initializeDefaultRateLimiterMap () {
    this.#defaultRateLimiterMap = new Map()
    const defaultRateLimitFetcher = new DefaultRateLimitFetcher()
    const operations = [
      'ShipmentInvoiceApi-getInvoiceStatus',
      'ShipmentInvoiceApi-getShipmentDetails',
      'ShipmentInvoiceApi-submitInvoice'
    ]

    for (const operation of operations) {
      const config = defaultRateLimitFetcher.getLimit(operation)
      this.#defaultRateLimiterMap.set(operation, new SuperagentRateLimiter(config))
    }
  }

  /**
     * Get rate limiter for a specific operation
     * @param {String} operation name
     */
  getRateLimiter (operation) {
    return this.#defaultRateLimiterMap.get(operation)
  }

  /**
     * Returns the invoice status for the shipment you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The shipment identifier for the shipment.
     * @return {Promise<GetInvoiceStatusResponse>}
     */
  getInvoiceStatusWithHttpInfo (shipmentId) {
    const postBody = null

    // verify the required parameter 'shipmentId' is set
    if (shipmentId === undefined || shipmentId === null) {
      throw new Error("Missing the required parameter 'shipmentId' when calling getInvoiceStatus")
    }

    const pathParams = {
      shipmentId
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const contentTypes = []
    const accepts = ['application/json']
    const returnType = GetInvoiceStatusResponse

    return this.apiClient.callApi('ShipmentInvoiceApi-getInvoiceStatus',
      '/fba/outbound/brazil/v0/shipments/{shipmentId}/invoice/status', 'GET',
      pathParams, queryParams, headerParams, formParams, postBody,
      contentTypes, accepts, returnType, this.getRateLimiter('ShipmentInvoiceApi-getInvoiceStatus')
    )
  }

  /**
     * Returns the invoice status for the shipment you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The shipment identifier for the shipment.
     * @return {Promise<GetInvoiceStatusResponse>}
     */
  getInvoiceStatus (shipmentId) {
    return this.getInvoiceStatusWithHttpInfo(shipmentId)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }

  /**
     * Returns the shipment details required to issue an invoice for the specified shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The identifier for the shipment. Get this value from the FBAOutboundShipmentStatus notification. For information about subscribing to notifications, see the [Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
     * @return {Promise<GetShipmentDetailsResponse>}
     */
  getShipmentDetailsWithHttpInfo (shipmentId) {
    const postBody = null

    // verify the required parameter 'shipmentId' is set
    if (shipmentId === undefined || shipmentId === null) {
      throw new Error("Missing the required parameter 'shipmentId' when calling getShipmentDetails")
    }

    const pathParams = {
      shipmentId
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const contentTypes = []
    const accepts = ['application/json']
    const returnType = GetShipmentDetailsResponse

    return this.apiClient.callApi('ShipmentInvoiceApi-getShipmentDetails',
      '/fba/outbound/brazil/v0/shipments/{shipmentId}', 'GET',
      pathParams, queryParams, headerParams, formParams, postBody,
      contentTypes, accepts, returnType, this.getRateLimiter('ShipmentInvoiceApi-getShipmentDetails')
    )
  }

  /**
     * Returns the shipment details required to issue an invoice for the specified shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The identifier for the shipment. Get this value from the FBAOutboundShipmentStatus notification. For information about subscribing to notifications, see the [Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
     * @return {Promise<GetShipmentDetailsResponse>}
     */
  getShipmentDetails (shipmentId) {
    return this.getShipmentDetailsWithHttpInfo(shipmentId)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }

  /**
     * Submits a shipment invoice document for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The identifier for the shipment.
     * @param {SubmitInvoiceRequest} body
     * @return {Promise<SubmitInvoiceResponse>}
     */
  submitInvoiceWithHttpInfo (shipmentId, body) {
    const postBody = body

    // verify the required parameter 'shipmentId' is set
    if (shipmentId === undefined || shipmentId === null) {
      throw new Error("Missing the required parameter 'shipmentId' when calling submitInvoice")
    }

    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error("Missing the required parameter 'body' when calling submitInvoice")
    }

    const pathParams = {
      shipmentId
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const contentTypes = ['application/json']
    const accepts = ['application/json']
    const returnType = SubmitInvoiceResponse

    return this.apiClient.callApi('ShipmentInvoiceApi-submitInvoice',
      '/fba/outbound/brazil/v0/shipments/{shipmentId}/invoice', 'POST',
      pathParams, queryParams, headerParams, formParams, postBody,
      contentTypes, accepts, returnType, this.getRateLimiter('ShipmentInvoiceApi-submitInvoice')
    )
  }

  /**
     * Submits a shipment invoice document for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The identifier for the shipment.
     * @param {SubmitInvoiceRequest} body
     * @return {Promise<SubmitInvoiceResponse>}
     */
  submitInvoice (shipmentId, body) {
    return this.submitInvoiceWithHttpInfo(shipmentId, body)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }
}
