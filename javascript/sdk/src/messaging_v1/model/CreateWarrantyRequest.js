/**
 * Selling Partner API for Messaging
 * With the Messaging API you can build applications that send messages to buyers. You can get a list of message types that are available for an order that you specify, then call an operation that sends a message to the buyer for that order. The Messaging API returns responses that are formed according to the <a href=https://tools.ietf.org/html/draft-kelly-json-hal-08>JSON Hypertext Application Language</a> (HAL) standard.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Attachment} from './Attachment.js';

/**
 * The CreateWarrantyRequest model module.
 * @module messaging_v1/model/CreateWarrantyRequest
 * @version v1
 */
export class CreateWarrantyRequest {
  /**
   * Constructs a new <code>CreateWarrantyRequest</code>.
   * The request schema for the createWarranty operation.
   * @alias module:messaging_v1/model/CreateWarrantyRequest
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>CreateWarrantyRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:messaging_v1/model/CreateWarrantyRequest} obj Optional instance to populate.
   * @return {module:messaging_v1/model/CreateWarrantyRequest} The populated <code>CreateWarrantyRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new CreateWarrantyRequest();
      if (data.hasOwnProperty('attachments'))
        obj.attachments = ApiClient.convertToType(data['attachments'], [Attachment]);
      if (data.hasOwnProperty('coverageStartDate'))
        obj.coverageStartDate = ApiClient.convertToType(data['coverageStartDate'], 'Date');
      if (data.hasOwnProperty('coverageEndDate'))
        obj.coverageEndDate = ApiClient.convertToType(data['coverageEndDate'], 'Date');
    }
    return obj;
  }
}

/**
 * Attachments to include in the message to the buyer. If any text is included in the attachment, the text must be written in the buyer's language of preference, which can be retrieved from the GetAttributes operation.
 * @member {Array.<module:messaging_v1/model/Attachment>} attachments
 */
CreateWarrantyRequest.prototype.attachments = undefined;

/**
 * The start date of the warranty coverage to include in the message to the buyer.
 * @member {Date} coverageStartDate
 */
CreateWarrantyRequest.prototype.coverageStartDate = undefined;

/**
 * The end date of the warranty coverage to include in the message to the buyer.
 * @member {Date} coverageEndDate
 */
CreateWarrantyRequest.prototype.coverageEndDate = undefined;


