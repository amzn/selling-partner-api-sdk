/**
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * The version of the OpenAPI document: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { PaymentPreference } from './PaymentPreference.js'
import { TransactionInstrumentDetails } from './TransactionInstrumentDetails.js'
import { TransactionType } from './TransactionType.js'
import { TransferScheduleInformation } from './TransferScheduleInformation.js'
import { TransferScheduleStatus } from './TransferScheduleStatus.js'

/**
 * The TransferScheduleRequest model module.
 * @module sellerWallet_2024_03_01/model/TransferScheduleRequest
 * @version 2024-03-01
 */
export class TransferScheduleRequest {
  /**
   * Constructs a new <code>TransferScheduleRequest</code>.
   * Request body to initiate a scheduled transfer from a Seller Wallet bank account to another customer-defined bank account.
   * @alias module:sellerWallet_2024_03_01/model/TransferScheduleRequest
   * @class
   * @param sourceAccountId {String} The unique identifier of the source Amazon Seller Wallet bank account from which money is debited.
   * @param sourceCurrencyCode {String} The three-letter currency code of the source payment method country, in ISO 4217 format.
   * @param destinationAccountId {String} The unique identifier of the destination bank account where the money is deposited.
   * @param destinationTransactionInstrument {module:sellerWallet_2024_03_01/model/TransactionInstrumentDetails}
   * @param transactionType {module:sellerWallet_2024_03_01/model/TransactionType}
   * @param transferScheduleInformation {module:sellerWallet_2024_03_01/model/TransferScheduleInformation}
   * @param paymentPreference {module:sellerWallet_2024_03_01/model/PaymentPreference}
   */
  constructor (sourceAccountId, sourceCurrencyCode, destinationAccountId, destinationTransactionInstrument, transactionType, transferScheduleInformation, paymentPreference) {
    this.sourceAccountId = sourceAccountId
    this.sourceCurrencyCode = sourceCurrencyCode
    this.destinationAccountId = destinationAccountId
    this.destinationTransactionInstrument = destinationTransactionInstrument
    this.transactionType = transactionType
    this.transferScheduleInformation = transferScheduleInformation
    this.paymentPreference = paymentPreference
  }

  /**
   * Constructs a <code>TransferScheduleRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:sellerWallet_2024_03_01/model/TransferScheduleRequest} obj Optional instance to populate.
   * @return {module:sellerWallet_2024_03_01/model/TransferScheduleRequest} The populated <code>TransferScheduleRequest</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new TransferScheduleRequest()
      if (data.hasOwnProperty('sourceAccountId')) { obj.sourceAccountId = ApiClient.convertToType(data.sourceAccountId, 'String') }
      if (data.hasOwnProperty('sourceCurrencyCode')) { obj.sourceCurrencyCode = ApiClient.convertToType(data.sourceCurrencyCode, 'String') }
      if (data.hasOwnProperty('destinationAccountId')) { obj.destinationAccountId = ApiClient.convertToType(data.destinationAccountId, 'String') }
      if (data.hasOwnProperty('destinationTransactionInstrument')) { obj.destinationTransactionInstrument = TransactionInstrumentDetails.constructFromObject(data.destinationTransactionInstrument) }
      if (data.hasOwnProperty('transactionType')) { obj.transactionType = TransactionType.constructFromObject(data.transactionType) }
      if (data.hasOwnProperty('transferScheduleInformation')) { obj.transferScheduleInformation = TransferScheduleInformation.constructFromObject(data.transferScheduleInformation) }
      if (data.hasOwnProperty('paymentPreference')) { obj.paymentPreference = PaymentPreference.constructFromObject(data.paymentPreference) }
      if (data.hasOwnProperty('transferScheduleStatus')) { obj.transferScheduleStatus = TransferScheduleStatus.constructFromObject(data.transferScheduleStatus) }
    }
    return obj
  }
}

/**
 * The unique identifier of the source Amazon Seller Wallet bank account from which money is debited.
 * @member {String} sourceAccountId
 */
TransferScheduleRequest.prototype.sourceAccountId = undefined

/**
 * The three-letter currency code of the source payment method country, in ISO 4217 format.
 * @member {String} sourceCurrencyCode
 */
TransferScheduleRequest.prototype.sourceCurrencyCode = undefined

/**
 * The unique identifier of the destination bank account where the money is deposited.
 * @member {String} destinationAccountId
 */
TransferScheduleRequest.prototype.destinationAccountId = undefined

/**
 * @member {module:sellerWallet_2024_03_01/model/TransactionInstrumentDetails} destinationTransactionInstrument
 */
TransferScheduleRequest.prototype.destinationTransactionInstrument = undefined

/**
 * @member {module:sellerWallet_2024_03_01/model/TransactionType} transactionType
 */
TransferScheduleRequest.prototype.transactionType = undefined

/**
 * @member {module:sellerWallet_2024_03_01/model/TransferScheduleInformation} transferScheduleInformation
 */
TransferScheduleRequest.prototype.transferScheduleInformation = undefined

/**
 * @member {module:sellerWallet_2024_03_01/model/PaymentPreference} paymentPreference
 */
TransferScheduleRequest.prototype.paymentPreference = undefined

/**
 * @member {module:sellerWallet_2024_03_01/model/TransferScheduleStatus} transferScheduleStatus
 */
TransferScheduleRequest.prototype.transferScheduleStatus = undefined
