/**
 * Selling Partner API for Direct Fulfillment Shipping
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * The version of the OpenAPI document: 2021-12-28
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { Container } from './Container.js'
import { PartyIdentification } from './PartyIdentification.js'

/**
 * The ShippingLabelRequest model module.
 * @module vendordfshipping_v2021_12_28/model/ShippingLabelRequest
 * @version 2021-12-28
 */
export class ShippingLabelRequest {
  /**
   * Constructs a new <code>ShippingLabelRequest</code>.
   * Represents the request payload for creating a shipping label, containing the purchase order number, selling party, ship from party, and a list of containers or packages in the shipment.
   * @alias module:vendordfshipping_v2021_12_28/model/ShippingLabelRequest
   * @class
   * @param purchaseOrderNumber {String} The purchase order number of the order for which to create a shipping label.
   * @param sellingParty {PartyIdentification}
   * @param shipFromParty {PartyIdentification}
   */
  constructor (purchaseOrderNumber, sellingParty, shipFromParty) {
    this.purchaseOrderNumber = purchaseOrderNumber
    this.sellingParty = sellingParty
    this.shipFromParty = shipFromParty
  }

  /**
   * Constructs a <code>ShippingLabelRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {ShippingLabelRequest} obj Optional instance to populate.
   * @return {ShippingLabelRequest} The populated <code>ShippingLabelRequest</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new ShippingLabelRequest()
      if (data.hasOwnProperty('purchaseOrderNumber')) { obj.purchaseOrderNumber = ApiClient.convertToType(data.purchaseOrderNumber, 'String') }
      if (data.hasOwnProperty('sellingParty')) { obj.sellingParty = PartyIdentification.constructFromObject(data.sellingParty) }
      if (data.hasOwnProperty('shipFromParty')) { obj.shipFromParty = PartyIdentification.constructFromObject(data.shipFromParty) }
      if (data.hasOwnProperty('containers')) { obj.containers = ApiClient.convertToType(data.containers, [Container]) }
    }
    return obj
  }
}

/**
 * The purchase order number of the order for which to create a shipping label.
 * @member {String} purchaseOrderNumber
 * @type {String}
 */
ShippingLabelRequest.prototype.purchaseOrderNumber = undefined

/**
 * @member {PartyIdentification} sellingParty
 * @type {PartyIdentification}
 */
ShippingLabelRequest.prototype.sellingParty = undefined

/**
 * @member {PartyIdentification} shipFromParty
 * @type {PartyIdentification}
 */
ShippingLabelRequest.prototype.shipFromParty = undefined

/**
 * A list of the packages in this shipment.
 * @member {[Container]} containers
 * @type {[Container]}
 */
ShippingLabelRequest.prototype.containers = undefined
