/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Money} from './Money.js';

/**
 * The CODSettings model module.
 * @module fulfillmentoutbound_v2020_07_01/model/CODSettings
 * @version 2020-07-01
 */
export class CODSettings {
  /**
   * Constructs a new <code>CODSettings</code>.
   * The COD (Cash On Delivery) charges that you associate with a COD fulfillment order.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/CODSettings
   * @class
   * @param isCodRequired {Boolean} When true, this fulfillment order requires a COD (Cash On Delivery) payment.
   */
  constructor(isCodRequired) {
    this.isCodRequired = isCodRequired;
  }

  /**
   * Constructs a <code>CODSettings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentoutbound_v2020_07_01/model/CODSettings} obj Optional instance to populate.
   * @return {module:fulfillmentoutbound_v2020_07_01/model/CODSettings} The populated <code>CODSettings</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new CODSettings();
      if (data.hasOwnProperty('isCodRequired'))
        obj.isCodRequired = ApiClient.convertToType(data['isCodRequired'], 'Boolean');
      if (data.hasOwnProperty('codCharge'))
        obj.codCharge = Money.constructFromObject(data['codCharge']);
      if (data.hasOwnProperty('codChargeTax'))
        obj.codChargeTax = Money.constructFromObject(data['codChargeTax']);
      if (data.hasOwnProperty('shippingCharge'))
        obj.shippingCharge = Money.constructFromObject(data['shippingCharge']);
      if (data.hasOwnProperty('shippingChargeTax'))
        obj.shippingChargeTax = Money.constructFromObject(data['shippingChargeTax']);
    }
    return obj;
  }
}

/**
 * When true, this fulfillment order requires a COD (Cash On Delivery) payment.
 * @member {Boolean} isCodRequired
 */
CODSettings.prototype.isCodRequired = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Money} codCharge
 */
CODSettings.prototype.codCharge = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Money} codChargeTax
 */
CODSettings.prototype.codChargeTax = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Money} shippingCharge
 */
CODSettings.prototype.shippingCharge = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Money} shippingChargeTax
 */
CODSettings.prototype.shippingChargeTax = undefined;


