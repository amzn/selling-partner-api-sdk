/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {FulfillmentShipmentItem} from './FulfillmentShipmentItem.js';
import {FulfillmentShipmentPackage} from './FulfillmentShipmentPackage.js';

/**
 * The FulfillmentShipment model module.
 * @module fulfillmentoutbound_v2020_07_01/model/FulfillmentShipment
 * @version 2020-07-01
 */
export class FulfillmentShipment {
  /**
   * Constructs a new <code>FulfillmentShipment</code>.
   * Delivery and item information for a shipment in a fulfillment order.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/FulfillmentShipment
   * @class
   * @param amazonShipmentId {String} A shipment identifier assigned by Amazon.
   * @param fulfillmentCenterId {String} An identifier for the fulfillment center that the shipment will be sent from.
   * @param fulfillmentShipmentStatus {module:fulfillmentoutbound_v2020_07_01/model/FulfillmentShipment.FulfillmentShipmentStatusEnum} The current status of the shipment.
   * @param fulfillmentShipmentItem {Array.<module:fulfillmentoutbound_v2020_07_01/model/FulfillmentShipmentItem>} An array of fulfillment shipment item information.
   */
  constructor(amazonShipmentId, fulfillmentCenterId, fulfillmentShipmentStatus, fulfillmentShipmentItem) {
    this.amazonShipmentId = amazonShipmentId;
    this.fulfillmentCenterId = fulfillmentCenterId;
    this.fulfillmentShipmentStatus = fulfillmentShipmentStatus;
    this.fulfillmentShipmentItem = fulfillmentShipmentItem;
  }

  /**
   * Constructs a <code>FulfillmentShipment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentoutbound_v2020_07_01/model/FulfillmentShipment} obj Optional instance to populate.
   * @return {module:fulfillmentoutbound_v2020_07_01/model/FulfillmentShipment} The populated <code>FulfillmentShipment</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new FulfillmentShipment();
      if (data.hasOwnProperty('amazonShipmentId'))
        obj.amazonShipmentId = ApiClient.convertToType(data['amazonShipmentId'], 'String');
      if (data.hasOwnProperty('fulfillmentCenterId'))
        obj.fulfillmentCenterId = ApiClient.convertToType(data['fulfillmentCenterId'], 'String');
      if (data.hasOwnProperty('fulfillmentShipmentStatus'))
        obj.fulfillmentShipmentStatus = ApiClient.convertToType(data['fulfillmentShipmentStatus'], 'String');
      if (data.hasOwnProperty('shippingDate'))
        obj.shippingDate = ApiClient.convertToType(data['shippingDate'], 'Date');
      if (data.hasOwnProperty('estimatedArrivalDate'))
        obj.estimatedArrivalDate = ApiClient.convertToType(data['estimatedArrivalDate'], 'Date');
      if (data.hasOwnProperty('shippingNotes'))
        obj.shippingNotes = ApiClient.convertToType(data['shippingNotes'], ['String']);
      if (data.hasOwnProperty('fulfillmentShipmentItem'))
        obj.fulfillmentShipmentItem = ApiClient.convertToType(data['fulfillmentShipmentItem'], [FulfillmentShipmentItem]);
      if (data.hasOwnProperty('fulfillmentShipmentPackage'))
        obj.fulfillmentShipmentPackage = ApiClient.convertToType(data['fulfillmentShipmentPackage'], [FulfillmentShipmentPackage]);
    }
    return obj;
  }
}

/**
 * A shipment identifier assigned by Amazon.
 * @member {String} amazonShipmentId
 */
FulfillmentShipment.prototype.amazonShipmentId = undefined;

/**
 * An identifier for the fulfillment center that the shipment will be sent from.
 * @member {String} fulfillmentCenterId
 */
FulfillmentShipment.prototype.fulfillmentCenterId = undefined;

/**
 * Allowed values for the <code>fulfillmentShipmentStatus</code> property.
 * @enum {String}
 * @readonly
 */
FulfillmentShipment['FulfillmentShipmentStatusEnum'] = {

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "SHIPPED"
     * @const
     */
    "SHIPPED": "SHIPPED",

    /**
     * value: "CANCELLED_BY_FULFILLER"
     * @const
     */
    "CANCELLED_BY_FULFILLER": "CANCELLED_BY_FULFILLER",

    /**
     * value: "CANCELLED_BY_SELLER"
     * @const
     */
    "CANCELLED_BY_SELLER": "CANCELLED_BY_SELLER"
};

/**
 * The current status of the shipment.
 * @member {module:fulfillmentoutbound_v2020_07_01/model/FulfillmentShipment.FulfillmentShipmentStatusEnum} fulfillmentShipmentStatus
 */
FulfillmentShipment.prototype.fulfillmentShipmentStatus = undefined;

/**
 * Date timestamp
 * @member {Date} shippingDate
 */
FulfillmentShipment.prototype.shippingDate = undefined;

/**
 * Date timestamp
 * @member {Date} estimatedArrivalDate
 */
FulfillmentShipment.prototype.estimatedArrivalDate = undefined;

/**
 * Provides additional insight into shipment timeline. Primairly used to communicate that actual delivery dates aren't available.
 * @member {Array.<String>} shippingNotes
 */
FulfillmentShipment.prototype.shippingNotes = undefined;

/**
 * An array of fulfillment shipment item information.
 * @member {Array.<module:fulfillmentoutbound_v2020_07_01/model/FulfillmentShipmentItem>} fulfillmentShipmentItem
 */
FulfillmentShipment.prototype.fulfillmentShipmentItem = undefined;

/**
 * An array of fulfillment shipment package information.
 * @member {Array.<module:fulfillmentoutbound_v2020_07_01/model/FulfillmentShipmentPackage>} fulfillmentShipmentPackage
 */
FulfillmentShipment.prototype.fulfillmentShipmentPackage = undefined;


