/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {FeatureSku} from './FeatureSku.js';

/**
 * The GetFeatureSkuResult model module.
 * @module fulfillmentoutbound_v2020_07_01/model/GetFeatureSkuResult
 * @version 2020-07-01
 */
export class GetFeatureSkuResult {
  /**
   * Constructs a new <code>GetFeatureSkuResult</code>.
   * The payload for the &#x60;getFeatureSKU&#x60; operation.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/GetFeatureSkuResult
   * @class
   * @param marketplaceId {String} The requested marketplace.
   * @param featureName {String} The name of the feature.
   * @param isEligible {Boolean} When true, the seller SKU is eligible for the requested feature.
   */
  constructor(marketplaceId, featureName, isEligible) {
    this.marketplaceId = marketplaceId;
    this.featureName = featureName;
    this.isEligible = isEligible;
  }

  /**
   * Constructs a <code>GetFeatureSkuResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentoutbound_v2020_07_01/model/GetFeatureSkuResult} obj Optional instance to populate.
   * @return {module:fulfillmentoutbound_v2020_07_01/model/GetFeatureSkuResult} The populated <code>GetFeatureSkuResult</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new GetFeatureSkuResult();
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['marketplaceId'], 'String');
      if (data.hasOwnProperty('featureName'))
        obj.featureName = ApiClient.convertToType(data['featureName'], 'String');
      if (data.hasOwnProperty('isEligible'))
        obj.isEligible = ApiClient.convertToType(data['isEligible'], 'Boolean');
      if (data.hasOwnProperty('ineligibleReasons'))
        obj.ineligibleReasons = ApiClient.convertToType(data['ineligibleReasons'], ['String']);
      if (data.hasOwnProperty('skuInfo'))
        obj.skuInfo = FeatureSku.constructFromObject(data['skuInfo']);
    }
    return obj;
  }
}

/**
 * The requested marketplace.
 * @member {String} marketplaceId
 */
GetFeatureSkuResult.prototype.marketplaceId = undefined;

/**
 * The name of the feature.
 * @member {String} featureName
 */
GetFeatureSkuResult.prototype.featureName = undefined;

/**
 * When true, the seller SKU is eligible for the requested feature.
 * @member {Boolean} isEligible
 */
GetFeatureSkuResult.prototype.isEligible = undefined;

/**
 * A list of one or more reasons that the seller SKU is ineligibile for the feature.  Possible values: * `MERCHANT_NOT_ENROLLED` - The merchant isn't enrolled for the feature. * `SKU_NOT_ELIGIBLE` - The SKU doesn't reside in a warehouse that supports the feature. * `INVALID_SKU` - There is an issue with the SKU provided.
 * @member {Array.<String>} ineligibleReasons
 */
GetFeatureSkuResult.prototype.ineligibleReasons = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/FeatureSku} skuInfo
 */
GetFeatureSkuResult.prototype.skuInfo = undefined;


