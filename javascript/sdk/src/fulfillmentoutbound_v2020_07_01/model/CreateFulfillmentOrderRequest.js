/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';
import {CODSettings} from './CODSettings.js';
import {CreateFulfillmentOrderItem} from './CreateFulfillmentOrderItem.js';
import {DeliveryPreferences} from './DeliveryPreferences.js';
import {DeliveryWindow} from './DeliveryWindow.js';
import {FeatureSettings} from './FeatureSettings.js';
import {FulfillmentAction} from './FulfillmentAction.js';
import {FulfillmentPolicy} from './FulfillmentPolicy.js';
import {PaymentInformation} from './PaymentInformation.js';
import {ShippingSpeedCategory} from './ShippingSpeedCategory.js';

/**
 * The CreateFulfillmentOrderRequest model module.
 * @module fulfillmentoutbound_v2020_07_01/model/CreateFulfillmentOrderRequest
 * @version 2020-07-01
 */
export class CreateFulfillmentOrderRequest {
  /**
   * Constructs a new <code>CreateFulfillmentOrderRequest</code>.
   * The request body schema for the &#x60;createFulfillmentOrder&#x60; operation.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/CreateFulfillmentOrderRequest
   * @class
   * @param sellerFulfillmentOrderId {String} A fulfillment order identifier that the seller creates to track their fulfillment order. The `SellerFulfillmentOrderId` must be unique for each fulfillment order that a seller creates. If the seller's system already creates unique order identifiers, then these might be good values for them to use.
   * @param displayableOrderId {String} A fulfillment order identifier that the seller creates. This value displays as the order identifier in recipient-facing materials such as the outbound shipment packing slip. The value of `DisplayableOrderId` should match the order identifier that the seller provides to the recipient. The seller can use the `SellerFulfillmentOrderId` for this value or they can specify an alternate value if they want the recipient to reference an alternate order identifier.  The value must be an alpha-numeric or ISO 8859-1 compliant string from one to 40 characters in length. Cannot contain two spaces in a row. Leading and trailing white space is removed.
   * @param displayableOrderDate {Date} Date timestamp
   * @param displayableOrderComment {String} Order-specific text that appears in recipient-facing materials such as the outbound shipment packing slip.
   * @param shippingSpeedCategory {module:fulfillmentoutbound_v2020_07_01/model/ShippingSpeedCategory} 
   * @param destinationAddress {module:fulfillmentoutbound_v2020_07_01/model/Address} 
   * @param items {Array.<module:fulfillmentoutbound_v2020_07_01/model/CreateFulfillmentOrderItem>} An array of item information for creating a fulfillment order.
   */
  constructor(sellerFulfillmentOrderId, displayableOrderId, displayableOrderDate, displayableOrderComment, shippingSpeedCategory, destinationAddress, items) {
    this.sellerFulfillmentOrderId = sellerFulfillmentOrderId;
    this.displayableOrderId = displayableOrderId;
    this.displayableOrderDate = displayableOrderDate;
    this.displayableOrderComment = displayableOrderComment;
    this.shippingSpeedCategory = shippingSpeedCategory;
    this.destinationAddress = destinationAddress;
    this.items = items;
  }

  /**
   * Constructs a <code>CreateFulfillmentOrderRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentoutbound_v2020_07_01/model/CreateFulfillmentOrderRequest} obj Optional instance to populate.
   * @return {module:fulfillmentoutbound_v2020_07_01/model/CreateFulfillmentOrderRequest} The populated <code>CreateFulfillmentOrderRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new CreateFulfillmentOrderRequest();
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['marketplaceId'], 'String');
      if (data.hasOwnProperty('sellerFulfillmentOrderId'))
        obj.sellerFulfillmentOrderId = ApiClient.convertToType(data['sellerFulfillmentOrderId'], 'String');
      if (data.hasOwnProperty('displayableOrderId'))
        obj.displayableOrderId = ApiClient.convertToType(data['displayableOrderId'], 'String');
      if (data.hasOwnProperty('displayableOrderDate'))
        obj.displayableOrderDate = ApiClient.convertToType(data['displayableOrderDate'], 'Date');
      if (data.hasOwnProperty('displayableOrderComment'))
        obj.displayableOrderComment = ApiClient.convertToType(data['displayableOrderComment'], 'String');
      if (data.hasOwnProperty('shippingSpeedCategory'))
        obj.shippingSpeedCategory = ShippingSpeedCategory.constructFromObject(data['shippingSpeedCategory']);
      if (data.hasOwnProperty('deliveryWindow'))
        obj.deliveryWindow = DeliveryWindow.constructFromObject(data['deliveryWindow']);
      if (data.hasOwnProperty('destinationAddress'))
        obj.destinationAddress = Address.constructFromObject(data['destinationAddress']);
      if (data.hasOwnProperty('deliveryPreferences'))
        obj.deliveryPreferences = DeliveryPreferences.constructFromObject(data['deliveryPreferences']);
      if (data.hasOwnProperty('fulfillmentAction'))
        obj.fulfillmentAction = FulfillmentAction.constructFromObject(data['fulfillmentAction']);
      if (data.hasOwnProperty('fulfillmentPolicy'))
        obj.fulfillmentPolicy = FulfillmentPolicy.constructFromObject(data['fulfillmentPolicy']);
      if (data.hasOwnProperty('codSettings'))
        obj.codSettings = CODSettings.constructFromObject(data['codSettings']);
      if (data.hasOwnProperty('shipFromCountryCode'))
        obj.shipFromCountryCode = ApiClient.convertToType(data['shipFromCountryCode'], 'String');
      if (data.hasOwnProperty('notificationEmails'))
        obj.notificationEmails = ApiClient.convertToType(data['notificationEmails'], ['String']);
      if (data.hasOwnProperty('featureConstraints'))
        obj.featureConstraints = ApiClient.convertToType(data['featureConstraints'], [FeatureSettings]);
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], [CreateFulfillmentOrderItem]);
      if (data.hasOwnProperty('paymentInformation'))
        obj.paymentInformation = ApiClient.convertToType(data['paymentInformation'], [PaymentInformation]);
    }
    return obj;
  }
}

/**
 * The marketplace the fulfillment order is placed against.
 * @member {String} marketplaceId
 */
CreateFulfillmentOrderRequest.prototype.marketplaceId = undefined;

/**
 * A fulfillment order identifier that the seller creates to track their fulfillment order. The `SellerFulfillmentOrderId` must be unique for each fulfillment order that a seller creates. If the seller's system already creates unique order identifiers, then these might be good values for them to use.
 * @member {String} sellerFulfillmentOrderId
 */
CreateFulfillmentOrderRequest.prototype.sellerFulfillmentOrderId = undefined;

/**
 * A fulfillment order identifier that the seller creates. This value displays as the order identifier in recipient-facing materials such as the outbound shipment packing slip. The value of `DisplayableOrderId` should match the order identifier that the seller provides to the recipient. The seller can use the `SellerFulfillmentOrderId` for this value or they can specify an alternate value if they want the recipient to reference an alternate order identifier.  The value must be an alpha-numeric or ISO 8859-1 compliant string from one to 40 characters in length. Cannot contain two spaces in a row. Leading and trailing white space is removed.
 * @member {String} displayableOrderId
 */
CreateFulfillmentOrderRequest.prototype.displayableOrderId = undefined;

/**
 * Date timestamp
 * @member {Date} displayableOrderDate
 */
CreateFulfillmentOrderRequest.prototype.displayableOrderDate = undefined;

/**
 * Order-specific text that appears in recipient-facing materials such as the outbound shipment packing slip.
 * @member {String} displayableOrderComment
 */
CreateFulfillmentOrderRequest.prototype.displayableOrderComment = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/ShippingSpeedCategory} shippingSpeedCategory
 */
CreateFulfillmentOrderRequest.prototype.shippingSpeedCategory = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/DeliveryWindow} deliveryWindow
 */
CreateFulfillmentOrderRequest.prototype.deliveryWindow = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Address} destinationAddress
 */
CreateFulfillmentOrderRequest.prototype.destinationAddress = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/DeliveryPreferences} deliveryPreferences
 */
CreateFulfillmentOrderRequest.prototype.deliveryPreferences = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/FulfillmentAction} fulfillmentAction
 */
CreateFulfillmentOrderRequest.prototype.fulfillmentAction = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/FulfillmentPolicy} fulfillmentPolicy
 */
CreateFulfillmentOrderRequest.prototype.fulfillmentPolicy = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/CODSettings} codSettings
 */
CreateFulfillmentOrderRequest.prototype.codSettings = undefined;

/**
 * The two-character country code for the country from which the fulfillment order ships. Must be in ISO 3166-1 alpha-2 format.
 * @member {String} shipFromCountryCode
 */
CreateFulfillmentOrderRequest.prototype.shipFromCountryCode = undefined;

/**
 * A list of email addresses that the seller provides that are used by Amazon to send ship-complete notifications to recipients on behalf of the seller.
 * @member {Array.<String>} notificationEmails
 */
CreateFulfillmentOrderRequest.prototype.notificationEmails = undefined;

/**
 * A list of features and their fulfillment policies to apply to the order.
 * @member {Array.<module:fulfillmentoutbound_v2020_07_01/model/FeatureSettings>} featureConstraints
 */
CreateFulfillmentOrderRequest.prototype.featureConstraints = undefined;

/**
 * An array of item information for creating a fulfillment order.
 * @member {Array.<module:fulfillmentoutbound_v2020_07_01/model/CreateFulfillmentOrderItem>} items
 */
CreateFulfillmentOrderRequest.prototype.items = undefined;

/**
 * An array of various payment attributes related to this fulfillment order.
 * @member {Array.<module:fulfillmentoutbound_v2020_07_01/model/PaymentInformation>} paymentInformation
 */
CreateFulfillmentOrderRequest.prototype.paymentInformation = undefined;


