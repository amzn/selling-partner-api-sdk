/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';

/**
 * The ReturnAuthorization model module.
 * @module fulfillmentoutbound_v2020_07_01/model/ReturnAuthorization
 * @version 2020-07-01
 */
export class ReturnAuthorization {
  /**
   * Constructs a new <code>ReturnAuthorization</code>.
   * Return authorization information for items accepted for return.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/ReturnAuthorization
   * @class
   * @param returnAuthorizationId {String} An identifier for the return authorization. This identifier associates return items with the return authorization used to return them.
   * @param fulfillmentCenterId {String} An identifier for the Amazon fulfillment center that the return items should be sent to.
   * @param returnToAddress {module:fulfillmentoutbound_v2020_07_01/model/Address} 
   * @param amazonRmaId {String} The return merchandise authorization (RMA) that Amazon needs to process the return.
   * @param rmaPageURL {String} A URL for a web page that contains the return authorization barcode and the mailing label. This does not include pre-paid shipping.
   */
  constructor(returnAuthorizationId, fulfillmentCenterId, returnToAddress, amazonRmaId, rmaPageURL) {
    this.returnAuthorizationId = returnAuthorizationId;
    this.fulfillmentCenterId = fulfillmentCenterId;
    this.returnToAddress = returnToAddress;
    this.amazonRmaId = amazonRmaId;
    this.rmaPageURL = rmaPageURL;
  }

  /**
   * Constructs a <code>ReturnAuthorization</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentoutbound_v2020_07_01/model/ReturnAuthorization} obj Optional instance to populate.
   * @return {module:fulfillmentoutbound_v2020_07_01/model/ReturnAuthorization} The populated <code>ReturnAuthorization</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ReturnAuthorization();
      if (data.hasOwnProperty('returnAuthorizationId'))
        obj.returnAuthorizationId = ApiClient.convertToType(data['returnAuthorizationId'], 'String');
      if (data.hasOwnProperty('fulfillmentCenterId'))
        obj.fulfillmentCenterId = ApiClient.convertToType(data['fulfillmentCenterId'], 'String');
      if (data.hasOwnProperty('returnToAddress'))
        obj.returnToAddress = Address.constructFromObject(data['returnToAddress']);
      if (data.hasOwnProperty('amazonRmaId'))
        obj.amazonRmaId = ApiClient.convertToType(data['amazonRmaId'], 'String');
      if (data.hasOwnProperty('rmaPageURL'))
        obj.rmaPageURL = ApiClient.convertToType(data['rmaPageURL'], 'String');
    }
    return obj;
  }
}

/**
 * An identifier for the return authorization. This identifier associates return items with the return authorization used to return them.
 * @member {String} returnAuthorizationId
 */
ReturnAuthorization.prototype.returnAuthorizationId = undefined;

/**
 * An identifier for the Amazon fulfillment center that the return items should be sent to.
 * @member {String} fulfillmentCenterId
 */
ReturnAuthorization.prototype.fulfillmentCenterId = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Address} returnToAddress
 */
ReturnAuthorization.prototype.returnToAddress = undefined;

/**
 * The return merchandise authorization (RMA) that Amazon needs to process the return.
 * @member {String} amazonRmaId
 */
ReturnAuthorization.prototype.amazonRmaId = undefined;

/**
 * A URL for a web page that contains the return authorization barcode and the mailing label. This does not include pre-paid shipping.
 * @member {String} rmaPageURL
 */
ReturnAuthorization.prototype.rmaPageURL = undefined;


