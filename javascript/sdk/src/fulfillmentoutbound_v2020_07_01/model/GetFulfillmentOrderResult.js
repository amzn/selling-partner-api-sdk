/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { FulfillmentOrder } from './FulfillmentOrder.js'
import { FulfillmentOrderItem } from './FulfillmentOrderItem.js'
import { FulfillmentShipment } from './FulfillmentShipment.js'
import { PaymentInformation } from './PaymentInformation.js'
import { ReturnAuthorization } from './ReturnAuthorization.js'
import { ReturnItem } from './ReturnItem.js'

/**
 * The GetFulfillmentOrderResult model module.
 * @module fulfillmentoutbound_v2020_07_01/model/GetFulfillmentOrderResult
 * @version 2020-07-01
 */
export class GetFulfillmentOrderResult {
  /**
   * Constructs a new <code>GetFulfillmentOrderResult</code>.
   * The request for the &#x60;getFulfillmentOrder&#x60; operation.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/GetFulfillmentOrderResult
   * @class
   * @param fulfillmentOrder {FulfillmentOrder}
   * @param fulfillmentOrderItems {[FulfillmentOrderItem]} An array of fulfillment order item information.
   * @param returnItems {[ReturnItem]} An array of items that Amazon accepted for return. Returns empty if no items were accepted for return.
   * @param returnAuthorizations {[ReturnAuthorization]} An array of return authorization information.
   */
  constructor (fulfillmentOrder, fulfillmentOrderItems, returnItems, returnAuthorizations) {
    this.fulfillmentOrder = fulfillmentOrder
    this.fulfillmentOrderItems = fulfillmentOrderItems
    this.returnItems = returnItems
    this.returnAuthorizations = returnAuthorizations
  }

  /**
   * Constructs a <code>GetFulfillmentOrderResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {GetFulfillmentOrderResult} obj Optional instance to populate.
   * @return {GetFulfillmentOrderResult} The populated <code>GetFulfillmentOrderResult</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new GetFulfillmentOrderResult()
      if (data.hasOwnProperty('fulfillmentOrder')) { obj.fulfillmentOrder = FulfillmentOrder.constructFromObject(data.fulfillmentOrder) }
      if (data.hasOwnProperty('fulfillmentOrderItems')) { obj.fulfillmentOrderItems = ApiClient.convertToType(data.fulfillmentOrderItems, [FulfillmentOrderItem]) }
      if (data.hasOwnProperty('fulfillmentShipments')) { obj.fulfillmentShipments = ApiClient.convertToType(data.fulfillmentShipments, [FulfillmentShipment]) }
      if (data.hasOwnProperty('returnItems')) { obj.returnItems = ApiClient.convertToType(data.returnItems, [ReturnItem]) }
      if (data.hasOwnProperty('returnAuthorizations')) { obj.returnAuthorizations = ApiClient.convertToType(data.returnAuthorizations, [ReturnAuthorization]) }
      if (data.hasOwnProperty('paymentInformation')) { obj.paymentInformation = ApiClient.convertToType(data.paymentInformation, [PaymentInformation]) }
    }
    return obj
  }
}

/**
 * @member {FulfillmentOrder} fulfillmentOrder
 * @type {FulfillmentOrder}
 */
GetFulfillmentOrderResult.prototype.fulfillmentOrder = undefined

/**
 * An array of fulfillment order item information.
 * @member {[FulfillmentOrderItem]} fulfillmentOrderItems
 * @type {[FulfillmentOrderItem]}
 */
GetFulfillmentOrderResult.prototype.fulfillmentOrderItems = undefined

/**
 * An array of fulfillment shipment information.
 * @member {[FulfillmentShipment]} fulfillmentShipments
 * @type {[FulfillmentShipment]}
 */
GetFulfillmentOrderResult.prototype.fulfillmentShipments = undefined

/**
 * An array of items that Amazon accepted for return. Returns empty if no items were accepted for return.
 * @member {[ReturnItem]} returnItems
 * @type {[ReturnItem]}
 */
GetFulfillmentOrderResult.prototype.returnItems = undefined

/**
 * An array of return authorization information.
 * @member {[ReturnAuthorization]} returnAuthorizations
 * @type {[ReturnAuthorization]}
 */
GetFulfillmentOrderResult.prototype.returnAuthorizations = undefined

/**
 * An array of various payment attributes related to this fulfillment order.
 * @member {[PaymentInformation]} paymentInformation
 * @type {[PaymentInformation]}
 */
GetFulfillmentOrderResult.prototype.paymentInformation = undefined
