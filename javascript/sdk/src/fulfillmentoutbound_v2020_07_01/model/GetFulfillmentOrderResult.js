/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {FulfillmentOrder} from './FulfillmentOrder.js';
import {FulfillmentOrderItem} from './FulfillmentOrderItem.js';
import {FulfillmentShipment} from './FulfillmentShipment.js';
import {PaymentInformation} from './PaymentInformation.js';
import {ReturnAuthorization} from './ReturnAuthorization.js';
import {ReturnItem} from './ReturnItem.js';

/**
 * The GetFulfillmentOrderResult model module.
 * @module fulfillmentoutbound_v2020_07_01/model/GetFulfillmentOrderResult
 * @version 2020-07-01
 */
export class GetFulfillmentOrderResult {
  /**
   * Constructs a new <code>GetFulfillmentOrderResult</code>.
   * The request for the getFulfillmentOrder operation.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/GetFulfillmentOrderResult
   * @class
   * @param fulfillmentOrder {module:fulfillmentoutbound_v2020_07_01/model/FulfillmentOrder} 
   * @param fulfillmentOrderItems {Array.<module:fulfillmentoutbound_v2020_07_01/model/FulfillmentOrderItem>} An array of fulfillment order item information.
   * @param returnItems {Array.<module:fulfillmentoutbound_v2020_07_01/model/ReturnItem>} An array of items that Amazon accepted for return. Returns empty if no items were accepted for return.
   * @param returnAuthorizations {Array.<module:fulfillmentoutbound_v2020_07_01/model/ReturnAuthorization>} An array of return authorization information.
   */
  constructor(fulfillmentOrder, fulfillmentOrderItems, returnItems, returnAuthorizations) {
    this.fulfillmentOrder = fulfillmentOrder;
    this.fulfillmentOrderItems = fulfillmentOrderItems;
    this.returnItems = returnItems;
    this.returnAuthorizations = returnAuthorizations;
  }

  /**
   * Constructs a <code>GetFulfillmentOrderResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentoutbound_v2020_07_01/model/GetFulfillmentOrderResult} obj Optional instance to populate.
   * @return {module:fulfillmentoutbound_v2020_07_01/model/GetFulfillmentOrderResult} The populated <code>GetFulfillmentOrderResult</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new GetFulfillmentOrderResult();
      if (data.hasOwnProperty('fulfillmentOrder'))
        obj.fulfillmentOrder = FulfillmentOrder.constructFromObject(data['fulfillmentOrder']);
      if (data.hasOwnProperty('fulfillmentOrderItems'))
        obj.fulfillmentOrderItems = ApiClient.convertToType(data['fulfillmentOrderItems'], [FulfillmentOrderItem]);
      if (data.hasOwnProperty('fulfillmentShipments'))
        obj.fulfillmentShipments = ApiClient.convertToType(data['fulfillmentShipments'], [FulfillmentShipment]);
      if (data.hasOwnProperty('returnItems'))
        obj.returnItems = ApiClient.convertToType(data['returnItems'], [ReturnItem]);
      if (data.hasOwnProperty('returnAuthorizations'))
        obj.returnAuthorizations = ApiClient.convertToType(data['returnAuthorizations'], [ReturnAuthorization]);
      if (data.hasOwnProperty('paymentInformation'))
        obj.paymentInformation = ApiClient.convertToType(data['paymentInformation'], [PaymentInformation]);
    }
    return obj;
  }
}

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/FulfillmentOrder} fulfillmentOrder
 */
GetFulfillmentOrderResult.prototype.fulfillmentOrder = undefined;

/**
 * An array of fulfillment order item information.
 * @member {Array.<module:fulfillmentoutbound_v2020_07_01/model/FulfillmentOrderItem>} fulfillmentOrderItems
 */
GetFulfillmentOrderResult.prototype.fulfillmentOrderItems = undefined;

/**
 * An array of fulfillment shipment information.
 * @member {Array.<module:fulfillmentoutbound_v2020_07_01/model/FulfillmentShipment>} fulfillmentShipments
 */
GetFulfillmentOrderResult.prototype.fulfillmentShipments = undefined;

/**
 * An array of items that Amazon accepted for return. Returns empty if no items were accepted for return.
 * @member {Array.<module:fulfillmentoutbound_v2020_07_01/model/ReturnItem>} returnItems
 */
GetFulfillmentOrderResult.prototype.returnItems = undefined;

/**
 * An array of return authorization information.
 * @member {Array.<module:fulfillmentoutbound_v2020_07_01/model/ReturnAuthorization>} returnAuthorizations
 */
GetFulfillmentOrderResult.prototype.returnAuthorizations = undefined;

/**
 * An array of various payment attributes related to this fulfillment order.
 * @member {Array.<module:fulfillmentoutbound_v2020_07_01/model/PaymentInformation>} paymentInformation
 */
GetFulfillmentOrderResult.prototype.paymentInformation = undefined;


