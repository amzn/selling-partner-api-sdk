/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { DateRange } from './DateRange.js'
import { DeliveryPolicy } from './DeliveryPolicy.js'

/**
 * The DeliveryOffering model module.
 * @module fulfillmentoutbound_v2020_07_01/model/DeliveryOffering
 * @version 2020-07-01
 */
export class DeliveryOffering {
  /**
   * Constructs a new <code>DeliveryOffering</code>.
   * An available offering for delivery of a product.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/DeliveryOffering
   * @class
   */
  constructor () {
  }

  /**
   * Constructs a <code>DeliveryOffering</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {DeliveryOffering} obj Optional instance to populate.
   * @return {DeliveryOffering} The populated <code>DeliveryOffering</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new DeliveryOffering()
      if (data.hasOwnProperty('expiresAt')) { obj.expiresAt = ApiClient.convertToType(data.expiresAt, 'Date') }
      if (data.hasOwnProperty('dateRange')) { obj.dateRange = DateRange.constructFromObject(data.dateRange) }
      if (data.hasOwnProperty('policy')) { obj.policy = DeliveryPolicy.constructFromObject(data.policy) }
    }
    return obj
  }
}

/**
 * Date timestamp
 * @member {Date} expiresAt
 * @type {Date}
 */
DeliveryOffering.prototype.expiresAt = undefined

/**
 * @member {DateRange} dateRange
 * @type {DateRange}
 */
DeliveryOffering.prototype.dateRange = undefined

/**
 * @member {DeliveryPolicy} policy
 * @type {DeliveryPolicy}
 */
DeliveryOffering.prototype.policy = undefined
