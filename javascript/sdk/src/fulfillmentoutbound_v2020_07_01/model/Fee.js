/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Money} from './Money.js';

/**
 * The Fee model module.
 * @module fulfillmentoutbound_v2020_07_01/model/Fee
 * @version 2020-07-01
 */
export class Fee {
  /**
   * Constructs a new <code>Fee</code>.
   * Fee type and cost.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/Fee
   * @class
   * @param name {module:fulfillmentoutbound_v2020_07_01/model/Fee.NameEnum} The type of fee.
   * @param amount {module:fulfillmentoutbound_v2020_07_01/model/Money} 
   */
  constructor(name, amount) {
    this.name = name;
    this.amount = amount;
  }

  /**
   * Constructs a <code>Fee</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentoutbound_v2020_07_01/model/Fee} obj Optional instance to populate.
   * @return {module:fulfillmentoutbound_v2020_07_01/model/Fee} The populated <code>Fee</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Fee();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('amount'))
        obj.amount = Money.constructFromObject(data['amount']);
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>name</code> property.
 * @enum {String}
 * @readonly
 */
Fee['NameEnum'] = {

    /**
     * value: "FBAPerUnitFulfillmentFee"
     * @const
     */
    "FBAPerUnitFulfillmentFee": "FBAPerUnitFulfillmentFee",

    /**
     * value: "FBAPerOrderFulfillmentFee"
     * @const
     */
    "FBAPerOrderFulfillmentFee": "FBAPerOrderFulfillmentFee",

    /**
     * value: "FBATransportationFee"
     * @const
     */
    "FBATransportationFee": "FBATransportationFee",

    /**
     * value: "FBAFulfillmentCODFee"
     * @const
     */
    "FBAFulfillmentCODFee": "FBAFulfillmentCODFee"
};

/**
 * The type of fee.
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Fee.NameEnum} name
 */
Fee.prototype.name = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Money} amount
 */
Fee.prototype.amount = undefined;


