/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Money} from './Money.js';

/**
 * The FulfillmentOrderItem model module.
 * @module fulfillmentoutbound_v2020_07_01/model/FulfillmentOrderItem
 * @version 2020-07-01
 */
export class FulfillmentOrderItem {
  /**
   * Constructs a new <code>FulfillmentOrderItem</code>.
   * Item information for a fulfillment order.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/FulfillmentOrderItem
   * @class
   * @param sellerSku {String} The seller SKU of the item.
   * @param sellerFulfillmentOrderItemId {String} A fulfillment order item identifier submitted with a call to the `createFulfillmentOrder` operation.
   * @param quantity {Number} The item quantity.
   * @param cancelledQuantity {Number} The item quantity.
   * @param unfulfillableQuantity {Number} The item quantity.
   */
  constructor(sellerSku, sellerFulfillmentOrderItemId, quantity, cancelledQuantity, unfulfillableQuantity) {
    this.sellerSku = sellerSku;
    this.sellerFulfillmentOrderItemId = sellerFulfillmentOrderItemId;
    this.quantity = quantity;
    this.cancelledQuantity = cancelledQuantity;
    this.unfulfillableQuantity = unfulfillableQuantity;
  }

  /**
   * Constructs a <code>FulfillmentOrderItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentoutbound_v2020_07_01/model/FulfillmentOrderItem} obj Optional instance to populate.
   * @return {module:fulfillmentoutbound_v2020_07_01/model/FulfillmentOrderItem} The populated <code>FulfillmentOrderItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new FulfillmentOrderItem();
      if (data.hasOwnProperty('sellerSku'))
        obj.sellerSku = ApiClient.convertToType(data['sellerSku'], 'String');
      if (data.hasOwnProperty('sellerFulfillmentOrderItemId'))
        obj.sellerFulfillmentOrderItemId = ApiClient.convertToType(data['sellerFulfillmentOrderItemId'], 'String');
      if (data.hasOwnProperty('quantity'))
        obj.quantity = ApiClient.convertToType(data['quantity'], 'Number');
      if (data.hasOwnProperty('giftMessage'))
        obj.giftMessage = ApiClient.convertToType(data['giftMessage'], 'String');
      if (data.hasOwnProperty('displayableComment'))
        obj.displayableComment = ApiClient.convertToType(data['displayableComment'], 'String');
      if (data.hasOwnProperty('fulfillmentNetworkSku'))
        obj.fulfillmentNetworkSku = ApiClient.convertToType(data['fulfillmentNetworkSku'], 'String');
      if (data.hasOwnProperty('orderItemDisposition'))
        obj.orderItemDisposition = ApiClient.convertToType(data['orderItemDisposition'], 'String');
      if (data.hasOwnProperty('cancelledQuantity'))
        obj.cancelledQuantity = ApiClient.convertToType(data['cancelledQuantity'], 'Number');
      if (data.hasOwnProperty('unfulfillableQuantity'))
        obj.unfulfillableQuantity = ApiClient.convertToType(data['unfulfillableQuantity'], 'Number');
      if (data.hasOwnProperty('estimatedShipDate'))
        obj.estimatedShipDate = ApiClient.convertToType(data['estimatedShipDate'], 'Date');
      if (data.hasOwnProperty('estimatedArrivalDate'))
        obj.estimatedArrivalDate = ApiClient.convertToType(data['estimatedArrivalDate'], 'Date');
      if (data.hasOwnProperty('perUnitPrice'))
        obj.perUnitPrice = Money.constructFromObject(data['perUnitPrice']);
      if (data.hasOwnProperty('perUnitTax'))
        obj.perUnitTax = Money.constructFromObject(data['perUnitTax']);
      if (data.hasOwnProperty('perUnitDeclaredValue'))
        obj.perUnitDeclaredValue = Money.constructFromObject(data['perUnitDeclaredValue']);
    }
    return obj;
  }
}

/**
 * The seller SKU of the item.
 * @member {String} sellerSku
 */
FulfillmentOrderItem.prototype.sellerSku = undefined;

/**
 * A fulfillment order item identifier submitted with a call to the `createFulfillmentOrder` operation.
 * @member {String} sellerFulfillmentOrderItemId
 */
FulfillmentOrderItem.prototype.sellerFulfillmentOrderItemId = undefined;

/**
 * The item quantity.
 * @member {Number} quantity
 */
FulfillmentOrderItem.prototype.quantity = undefined;

/**
 * A message to the gift recipient, if applicable.
 * @member {String} giftMessage
 */
FulfillmentOrderItem.prototype.giftMessage = undefined;

/**
 * Item-specific text that displays in recipient-facing materials such as the outbound shipment packing slip.
 * @member {String} displayableComment
 */
FulfillmentOrderItem.prototype.displayableComment = undefined;

/**
 * Amazon's fulfillment network SKU of the item.
 * @member {String} fulfillmentNetworkSku
 */
FulfillmentOrderItem.prototype.fulfillmentNetworkSku = undefined;

/**
 * Indicates whether the item is sellable or unsellable.
 * @member {String} orderItemDisposition
 */
FulfillmentOrderItem.prototype.orderItemDisposition = undefined;

/**
 * The item quantity.
 * @member {Number} cancelledQuantity
 */
FulfillmentOrderItem.prototype.cancelledQuantity = undefined;

/**
 * The item quantity.
 * @member {Number} unfulfillableQuantity
 */
FulfillmentOrderItem.prototype.unfulfillableQuantity = undefined;

/**
 * Date timestamp
 * @member {Date} estimatedShipDate
 */
FulfillmentOrderItem.prototype.estimatedShipDate = undefined;

/**
 * Date timestamp
 * @member {Date} estimatedArrivalDate
 */
FulfillmentOrderItem.prototype.estimatedArrivalDate = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Money} perUnitPrice
 */
FulfillmentOrderItem.prototype.perUnitPrice = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Money} perUnitTax
 */
FulfillmentOrderItem.prototype.perUnitTax = undefined;

/**
 * @member {module:fulfillmentoutbound_v2020_07_01/model/Money} perUnitDeclaredValue
 */
FulfillmentOrderItem.prototype.perUnitDeclaredValue = undefined;


