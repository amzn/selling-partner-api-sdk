/**
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { DeliveryQuantity } from './DeliveryQuantity.js'
import { VariablePrecisionAddress } from './VariablePrecisionAddress.js'

/**
 * The GetDeliveryOfferingsRequest model module.
 * @module fulfillmentoutbound_v2020_07_01/model/GetDeliveryOfferingsRequest
 * @version 2020-07-01
 */
export class GetDeliveryOfferingsRequest {
  /**
   * Constructs a new <code>GetDeliveryOfferingsRequest</code>.
   * The request body schema for the &#x60;getDeliveryOfferings&#x60; operation.
   * @alias module:fulfillmentoutbound_v2020_07_01/model/GetDeliveryOfferingsRequest
   * @class
   * @param destinationAddress {VariablePrecisionAddress}
   * @param shipFromCountryCode {String} The two digit country code the items should ship from. In ISO 3166-1 alpha-2 format.
   * @param sellerSku {String} The seller SKU of the item.
   */
  constructor (destinationAddress, shipFromCountryCode, sellerSku) {
    this.destinationAddress = destinationAddress
    this.shipFromCountryCode = shipFromCountryCode
    this.sellerSku = sellerSku
  }

  /**
   * Constructs a <code>GetDeliveryOfferingsRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {GetDeliveryOfferingsRequest} obj Optional instance to populate.
   * @return {GetDeliveryOfferingsRequest} The populated <code>GetDeliveryOfferingsRequest</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new GetDeliveryOfferingsRequest()
      if (data.hasOwnProperty('destinationAddress')) { obj.destinationAddress = VariablePrecisionAddress.constructFromObject(data.destinationAddress) }
      if (data.hasOwnProperty('shipFromCountryCode')) { obj.shipFromCountryCode = ApiClient.convertToType(data.shipFromCountryCode, 'String') }
      if (data.hasOwnProperty('sellerSku')) { obj.sellerSku = ApiClient.convertToType(data.sellerSku, 'String') }
      if (data.hasOwnProperty('quantity')) { obj.quantity = DeliveryQuantity.constructFromObject(data.quantity) }
    }
    return obj
  }
}

/**
 * @member {VariablePrecisionAddress} destinationAddress
 * @type {VariablePrecisionAddress}
 */
GetDeliveryOfferingsRequest.prototype.destinationAddress = undefined

/**
 * The two digit country code the items should ship from. In ISO 3166-1 alpha-2 format.
 * @member {String} shipFromCountryCode
 * @type {String}
 */
GetDeliveryOfferingsRequest.prototype.shipFromCountryCode = undefined

/**
 * The seller SKU of the item.
 * @member {String} sellerSku
 * @type {String}
 */
GetDeliveryOfferingsRequest.prototype.sellerSku = undefined

/**
 * @member {DeliveryQuantity} quantity
 * @type {DeliveryQuantity}
 */
GetDeliveryOfferingsRequest.prototype.quantity = undefined
