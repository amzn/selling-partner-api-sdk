/**
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The ContainerIdentification model module.
 * @module vendorshipments_v1/model/ContainerIdentification
 * @version v1
 */
export class ContainerIdentification {
  /**
   * Constructs a new <code>ContainerIdentification</code>.
   * A list of carton identifiers.
   * @alias module:vendorshipments_v1/model/ContainerIdentification
   * @class
   * @param containerIdentificationType {module:vendorshipments_v1/model/ContainerIdentification.ContainerIdentificationTypeEnum} The container identification type.
   * @param containerIdentificationNumber {String} Container identification number that adheres to the definition of the container identification type.
   */
  constructor(containerIdentificationType, containerIdentificationNumber) {
    this.containerIdentificationType = containerIdentificationType;
    this.containerIdentificationNumber = containerIdentificationNumber;
  }

  /**
   * Constructs a <code>ContainerIdentification</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorshipments_v1/model/ContainerIdentification} obj Optional instance to populate.
   * @return {module:vendorshipments_v1/model/ContainerIdentification} The populated <code>ContainerIdentification</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ContainerIdentification();
      if (data.hasOwnProperty('containerIdentificationType'))
        obj.containerIdentificationType = ApiClient.convertToType(data['containerIdentificationType'], 'String');
      if (data.hasOwnProperty('containerIdentificationNumber'))
        obj.containerIdentificationNumber = ApiClient.convertToType(data['containerIdentificationNumber'], 'String');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>containerIdentificationType</code> property.
 * @enum {String}
 * @readonly
 */
ContainerIdentification['ContainerIdentificationTypeEnum'] = {

    /**
     * value: "SSCC"
     * @const
     */
    "SSCC": "SSCC",

    /**
     * value: "AMZNCC"
     * @const
     */
    "AMZNCC": "AMZNCC",

    /**
     * value: "GTIN"
     * @const
     */
    "GTIN": "GTIN",

    /**
     * value: "BPS"
     * @const
     */
    "BPS": "BPS",

    /**
     * value: "CID"
     * @const
     */
    "CID": "CID"
};

/**
 * The container identification type.
 * @member {module:vendorshipments_v1/model/ContainerIdentification.ContainerIdentificationTypeEnum} containerIdentificationType
 */
ContainerIdentification.prototype.containerIdentificationType = undefined;

/**
 * Container identification number that adheres to the definition of the container identification type.
 * @member {String} containerIdentificationNumber
 */
ContainerIdentification.prototype.containerIdentificationNumber = undefined;


