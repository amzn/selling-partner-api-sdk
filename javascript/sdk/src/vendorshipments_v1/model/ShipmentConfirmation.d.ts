/**
 * The ShipmentConfirmation model module.
 * @module vendorshipments_v1/model/ShipmentConfirmation
 * @version v1
 */
export class ShipmentConfirmation {
    /**
     * Constructs a <code>ShipmentConfirmation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {ShipmentConfirmation} obj Optional instance to populate.
     * @return {ShipmentConfirmation} The populated <code>ShipmentConfirmation</code> instance.
     */
    static constructFromObject(data: any, obj: ShipmentConfirmation): ShipmentConfirmation;
    /**
     * Constructs a new <code>ShipmentConfirmation</code>.
     * A list of one or more shipment confirmations.
     * @alias module:vendorshipments_v1/model/ShipmentConfirmation
     * @class
     * @param shipmentIdentifier {String} Unique shipment ID (not used over the last 365 days).
     * @param shipmentConfirmationType {String} Indicates if this shipment confirmation is the initial confirmation, or intended to replace an already posted shipment confirmation. If replacing an existing shipment confirmation, be sure to provide the identical shipmentIdentifier and sellingParty information as in the previous confirmation.
     * @param shipmentConfirmationDate {Date} Date on which the shipment confirmation was submitted.
     * @param sellingParty {PartyIdentification}
     * @param shipFromParty {PartyIdentification}
     * @param shipToParty {PartyIdentification}
     * @param shippedItems {[Item]} A list of the items in this shipment and their associated details. If any of the item detail fields are common at a carton or a pallet level, provide them at the corresponding carton or pallet level.
     */
    constructor(shipmentIdentifier: string, shipmentConfirmationType: string, shipmentConfirmationDate: Date, sellingParty: PartyIdentification, shipFromParty: PartyIdentification, shipToParty: PartyIdentification, shippedItems: [Item]);
    shipmentIdentifier: string;
    shipmentConfirmationType: string;
    shipmentConfirmationDate: Date;
    sellingParty: PartyIdentification;
    shipFromParty: PartyIdentification;
    shipToParty: PartyIdentification;
    shippedItems: [Item];
    /**
     * The type of shipment.
     * @member {String} shipmentType
     * @type {String}
     */
    shipmentType: string;
    /**
     * Shipment hierarchical structure.
     * @member {String} shipmentStructure
     * @type {String}
     */
    shipmentStructure: string;
    /**
     * @member {TransportationDetailsForShipmentConfirmation} transportationDetails
     * @type {TransportationDetailsForShipmentConfirmation}
     */
    transportationDetails: TransportationDetailsForShipmentConfirmation;
    /**
     * The Amazon Reference Number is a unique identifier generated by Amazon for all Collect/WePay shipments when you submit  a routing request. This field is mandatory for Collect/WePay shipments.
     * @member {String} amazonReferenceNumber
     * @type {String}
     */
    amazonReferenceNumber: string;
    /**
     * The date and time of the departure of the shipment from the vendor's location. Vendors are requested to send ASNs within 30 minutes of departure from their warehouse/distribution center or at least 6 hours prior to the appointment time at the buyer destination warehouse, whichever is sooner. Shipped date mentioned in the shipment confirmation should not be in the future.
     * @member {Date} shippedDate
     * @type {Date}
     */
    shippedDate: Date;
    /**
     * The date and time on which the shipment is estimated to reach buyer's warehouse. It needs to be an estimate based on the average transit time between ship from location and the destination. The exact appointment time will be provided by the buyer and is potentially not known when creating the shipment confirmation.
     * @member {Date} estimatedDeliveryDate
     * @type {Date}
     */
    estimatedDeliveryDate: Date;
    /**
     * @member {ShipmentMeasurements} shipmentMeasurements
     * @type {ShipmentMeasurements}
     */
    shipmentMeasurements: ShipmentMeasurements;
    /**
     * @member {ImportDetails} importDetails
     * @type {ImportDetails}
     */
    importDetails: ImportDetails;
    /**
     * A list of the cartons in this shipment.
     * @member {[Carton]} cartons
     * @type {[Carton]}
     */
    cartons: [Carton];
    /**
     * A list of the pallets in this shipment.
     * @member {[Pallet]} pallets
     * @type {[Pallet]}
     */
    pallets: [Pallet];
}
export namespace ShipmentConfirmation {
    namespace ShipmentConfirmationTypeEnum {
        let Original: string;
        let Replace: string;
    }
    /**
     * *
     */
    type ShipmentConfirmationTypeEnum = string;
    namespace ShipmentTypeEnum {
        let TruckLoad: string;
        let LessThanTruckLoad: string;
        let SmallParcel: string;
    }
    /**
     * *
     */
    type ShipmentTypeEnum = string;
    namespace ShipmentStructureEnum {
        let PalletizedAssortmentCase: string;
        let LooseAssortmentCase: string;
        let PalletOfItems: string;
        let PalletizedStandardCase: string;
        let LooseStandardCase: string;
        let MasterPallet: string;
        let MasterCase: string;
    }
    /**
     * *
     */
    type ShipmentStructureEnum = string;
}
import { PartyIdentification } from './PartyIdentification.js';
import { Item } from './Item.js';
import { TransportationDetailsForShipmentConfirmation } from './TransportationDetailsForShipmentConfirmation.js';
import { ShipmentMeasurements } from './ShipmentMeasurements.js';
import { ImportDetails } from './ImportDetails.js';
import { Carton } from './Carton.js';
import { Pallet } from './Pallet.js';
//# sourceMappingURL=ShipmentConfirmation.d.ts.map