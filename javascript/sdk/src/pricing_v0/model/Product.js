/**
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { CompetitivePricingType } from './CompetitivePricingType.js'
import { IdentifierType } from './IdentifierType.js'
import { OfferType } from './OfferType.js'
import { SalesRankType } from './SalesRankType.js'

/**
 * The Product model module.
 * @module pricing_v0/model/Product
 * @version v0
 */
export class Product {
  /**
   * Constructs a new <code>Product</code>.
   * An item.
   * @alias module:pricing_v0/model/Product
   * @class
   * @param identifiers {IdentifierType}
   */
  constructor (identifiers) {
    this.identifiers = identifiers
  }

  /**
   * Constructs a <code>Product</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {Product} obj Optional instance to populate.
   * @return {Product} The populated <code>Product</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new Product()
      if (data.hasOwnProperty('Identifiers')) { obj.identifiers = IdentifierType.constructFromObject(data.Identifiers) }
      if (data.hasOwnProperty('AttributeSets')) { obj.attributeSets = ApiClient.convertToType(data.AttributeSets, [Object]) }
      if (data.hasOwnProperty('Relationships')) { obj.relationships = ApiClient.convertToType(data.Relationships, [Object]) }
      if (data.hasOwnProperty('CompetitivePricing')) { obj.competitivePricing = CompetitivePricingType.constructFromObject(data.CompetitivePricing) }
      if (data.hasOwnProperty('SalesRankings')) { obj.salesRankings = ApiClient.convertToType(data.SalesRankings, [SalesRankType]) }
      if (data.hasOwnProperty('Offers')) { obj.offers = ApiClient.convertToType(data.Offers, [OfferType]) }
    }
    return obj
  }
}

/**
 * @member {IdentifierType} identifiers
 * @type {IdentifierType}
 */
Product.prototype.identifiers = undefined

/**
 * A list of product attributes if they are applicable to the product that is returned.
 * @member {[Object]} attributeSets
 * @type {[Object]}
 */
Product.prototype.attributeSets = undefined

/**
 * A list that contains product variation information, if applicable.
 * @member {[Object]} relationships
 * @type {[Object]}
 */
Product.prototype.relationships = undefined

/**
 * @member {CompetitivePricingType} competitivePricing
 * @type {CompetitivePricingType}
 */
Product.prototype.competitivePricing = undefined

/**
 * A list of sales rank information for the item, by category.
 * @member {[SalesRankType]} salesRankings
 * @type {[SalesRankType]}
 */
Product.prototype.salesRankings = undefined

/**
 * A list of offers.
 * @member {[OfferType]} offers
 * @type {[OfferType]}
 */
Product.prototype.offers = undefined
