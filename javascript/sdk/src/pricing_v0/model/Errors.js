/**
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Error} from './Error.js';

/**
 * The Errors model module.
 * @module pricing_v0/model/Errors
 * @version v0
 */
export class Errors {
  /**
   * Constructs a new <code>Errors</code>.
   * A list of error responses returned when a request is unsuccessful.
   * @alias module:pricing_v0/model/Errors
   * @class
   * @param errors {Array.<module:pricing_v0/model/Error>} A list of error responses returned when a request is unsuccessful.
   */
  constructor(errors) {
    this.errors = errors;
  }

  /**
   * Constructs a <code>Errors</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:pricing_v0/model/Errors} obj Optional instance to populate.
   * @return {module:pricing_v0/model/Errors} The populated <code>Errors</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Errors();
      if (data.hasOwnProperty('errors'))
        obj.errors = ApiClient.convertToType(data['errors'], [Error]);
    }
    return obj;
  }
}

/**
 * A list of error responses returned when a request is unsuccessful.
 * @member {Array.<module:pricing_v0/model/Error>} errors
 */
Errors.prototype.errors = undefined;


