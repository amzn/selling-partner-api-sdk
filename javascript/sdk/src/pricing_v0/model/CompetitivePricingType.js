/**
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {CompetitivePriceType} from './CompetitivePriceType.js';
import {MoneyType} from './MoneyType.js';
import {OfferListingCountType} from './OfferListingCountType.js';

/**
 * The CompetitivePricingType model module.
 * @module pricing_v0/model/CompetitivePricingType
 * @version v0
 */
export class CompetitivePricingType {
  /**
   * Constructs a new <code>CompetitivePricingType</code>.
   * Competitive pricing information for the item.
   * @alias module:pricing_v0/model/CompetitivePricingType
   * @class
   * @param competitivePrices {Array.<module:pricing_v0/model/CompetitivePriceType>} A list of competitive pricing information.
   * @param numberOfOfferListings {Array.<module:pricing_v0/model/OfferListingCountType>} The number of active offer listings for the item that was submitted. The listing count is returned by condition, one for each listing condition value that is returned.
   */
  constructor(competitivePrices, numberOfOfferListings) {
    this.competitivePrices = competitivePrices;
    this.numberOfOfferListings = numberOfOfferListings;
  }

  /**
   * Constructs a <code>CompetitivePricingType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:pricing_v0/model/CompetitivePricingType} obj Optional instance to populate.
   * @return {module:pricing_v0/model/CompetitivePricingType} The populated <code>CompetitivePricingType</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new CompetitivePricingType();
      if (data.hasOwnProperty('CompetitivePrices'))
        obj.competitivePrices = ApiClient.convertToType(data['CompetitivePrices'], [CompetitivePriceType]);
      if (data.hasOwnProperty('NumberOfOfferListings'))
        obj.numberOfOfferListings = ApiClient.convertToType(data['NumberOfOfferListings'], [OfferListingCountType]);
      if (data.hasOwnProperty('TradeInValue'))
        obj.tradeInValue = MoneyType.constructFromObject(data['TradeInValue']);
    }
    return obj;
  }
}

/**
 * A list of competitive pricing information.
 * @member {Array.<module:pricing_v0/model/CompetitivePriceType>} competitivePrices
 */
CompetitivePricingType.prototype.competitivePrices = undefined;

/**
 * The number of active offer listings for the item that was submitted. The listing count is returned by condition, one for each listing condition value that is returned.
 * @member {Array.<module:pricing_v0/model/OfferListingCountType>} numberOfOfferListings
 */
CompetitivePricingType.prototype.numberOfOfferListings = undefined;

/**
 * @member {module:pricing_v0/model/MoneyType} tradeInValue
 */
CompetitivePricingType.prototype.tradeInValue = undefined;


