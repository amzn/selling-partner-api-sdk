/**
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { BatchOffersResponse } from './BatchOffersResponse.js'
import { GetOffersHttpStatusLine } from './GetOffersHttpStatusLine.js'
import { GetOffersResponse } from './GetOffersResponse.js'
import { HttpResponseHeaders } from './HttpResponseHeaders.js'
import { ListingOffersRequestParams } from './ListingOffersRequestParams.js'

/**
 * The ListingOffersResponse model module.
 * @module pricing_v0/model/ListingOffersResponse
 * @version v0
 */
export class ListingOffersResponse {
  /**
   * Constructs a new <code>ListingOffersResponse</code>.
   * Schema for an individual &#x60;ListingOffersResponse&#x60;
   * @alias module:pricing_v0/model/ListingOffersResponse
   * @class
   * @implements module:pricing_v0/model/BatchOffersResponse
   * @param body {GetOffersResponse}
   */
  constructor (body) {
    BatchOffersResponse.call(this, body)
    this.body = body
  }

  /**
   * Constructs a <code>ListingOffersResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {ListingOffersResponse} obj Optional instance to populate.
   * @return {ListingOffersResponse} The populated <code>ListingOffersResponse</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new ListingOffersResponse()
      BatchOffersResponse.constructFromObject(data, obj)
      if (data.hasOwnProperty('headers')) { obj.headers = HttpResponseHeaders.constructFromObject(data.headers) }
      if (data.hasOwnProperty('status')) { obj.status = GetOffersHttpStatusLine.constructFromObject(data.status) }
      if (data.hasOwnProperty('body')) { obj.body = GetOffersResponse.constructFromObject(data.body) }
      if (data.hasOwnProperty('request')) { obj.request = ListingOffersRequestParams.constructFromObject(data.request) }
    }
    return obj
  }
}

/**
 * @member {HttpResponseHeaders} headers
 * @type {HttpResponseHeaders}
 */
ListingOffersResponse.prototype.headers = undefined

/**
 * @member {GetOffersHttpStatusLine} status
 * @type {GetOffersHttpStatusLine}
 */
ListingOffersResponse.prototype.status = undefined

/**
 * @member {GetOffersResponse} body
 * @type {GetOffersResponse}
 */
ListingOffersResponse.prototype.body = undefined

/**
 * @member {ListingOffersRequestParams} request
 * @type {ListingOffersRequestParams}
 */
ListingOffersResponse.prototype.request = undefined

// Implement BatchOffersResponse interface:
/**
 * @member {HttpResponseHeaders} headers
 * @type {HttpResponseHeaders}
 */
BatchOffersResponse.prototype.headers = undefined

/**
 * @member {GetOffersHttpStatusLine} status
 * @type {GetOffersHttpStatusLine}
 */
BatchOffersResponse.prototype.status = undefined

/**
 * @member {GetOffersResponse} body
 * @type {GetOffersResponse}
 */
BatchOffersResponse.prototype.body = undefined
