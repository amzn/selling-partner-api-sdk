/**
 * Selling Partner API for Services
 * With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {AppointmentTimeInput} from './AppointmentTimeInput.js';

/**
 * The RescheduleAppointmentRequest model module.
 * @module services_v1/model/RescheduleAppointmentRequest
 * @version v1
 */
export class RescheduleAppointmentRequest {
  /**
   * Constructs a new <code>RescheduleAppointmentRequest</code>.
   * Input for rescheduled appointment operation.
   * @alias module:services_v1/model/RescheduleAppointmentRequest
   * @class
   * @param appointmentTime {module:services_v1/model/AppointmentTimeInput} 
   * @param rescheduleReasonCode {String} The appointment reschedule reason code.
   */
  constructor(appointmentTime, rescheduleReasonCode) {
    this.appointmentTime = appointmentTime;
    this.rescheduleReasonCode = rescheduleReasonCode;
  }

  /**
   * Constructs a <code>RescheduleAppointmentRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:services_v1/model/RescheduleAppointmentRequest} obj Optional instance to populate.
   * @return {module:services_v1/model/RescheduleAppointmentRequest} The populated <code>RescheduleAppointmentRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new RescheduleAppointmentRequest();
      if (data.hasOwnProperty('appointmentTime'))
        obj.appointmentTime = AppointmentTimeInput.constructFromObject(data['appointmentTime']);
      if (data.hasOwnProperty('rescheduleReasonCode'))
        obj.rescheduleReasonCode = ApiClient.convertToType(data['rescheduleReasonCode'], 'String');
    }
    return obj;
  }
}

/**
 * @member {module:services_v1/model/AppointmentTimeInput} appointmentTime
 */
RescheduleAppointmentRequest.prototype.appointmentTime = undefined;

/**
 * The appointment reschedule reason code.
 * @member {String} rescheduleReasonCode
 */
RescheduleAppointmentRequest.prototype.rescheduleReasonCode = undefined;


