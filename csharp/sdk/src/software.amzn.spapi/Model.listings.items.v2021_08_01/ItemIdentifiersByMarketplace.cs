/*
 * Selling Partner API for Listings Items
 *
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listings Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/listings-items-api-v2021-08-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2021-08-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.listings.items.v2021_08_01
{
    /// <summary>
    /// Identity attributes associated with the item in the Amazon catalog for the indicated Amazon marketplace.
    /// </summary>
    [DataContract(Name = "ItemIdentifiersByMarketplace")]
    public partial class ItemIdentifiersByMarketplace : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemIdentifiersByMarketplace" /> class.
        /// </summary>
        /// <param name="marketplaceId">A marketplace identifier. Identifies the Amazon marketplace for the listings item..</param>
        /// <param name="asin">Amazon Standard Identification Number (ASIN) of the listings item..</param>
        public ItemIdentifiersByMarketplace(string marketplaceId = default(string), string asin = default(string))
        {
            this.MarketplaceId = marketplaceId;
            this.Asin = asin;
        }

        /// <summary>
        /// A marketplace identifier. Identifies the Amazon marketplace for the listings item.
        /// </summary>
        /// <value>A marketplace identifier. Identifies the Amazon marketplace for the listings item.</value>
        [DataMember(Name = "marketplaceId", EmitDefaultValue = false)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// Amazon Standard Identification Number (ASIN) of the listings item.
        /// </summary>
        /// <value>Amazon Standard Identification Number (ASIN) of the listings item.</value>
        [DataMember(Name = "asin", EmitDefaultValue = false)]
        public string Asin { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ItemIdentifiersByMarketplace {\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  Asin: ").Append(Asin).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
