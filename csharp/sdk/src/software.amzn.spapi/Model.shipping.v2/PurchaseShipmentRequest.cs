/*
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.shipping.v2
{
    /// <summary>
    /// The request schema for the purchaseShipment operation.
    /// </summary>
    [DataContract(Name = "PurchaseShipmentRequest")]
    public partial class PurchaseShipmentRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PurchaseShipmentRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PurchaseShipmentRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PurchaseShipmentRequest" /> class.
        /// </summary>
        /// <param name="requestToken">A unique token generated to identify a getRates operation. (required).</param>
        /// <param name="rateId">An identifier for the rate (shipment offering) provided by a shipping service provider. (required).</param>
        /// <param name="requestedDocumentSpecification">requestedDocumentSpecification (required).</param>
        /// <param name="requestedValueAddedServices">The value-added services to be added to a shipping service purchase..</param>
        /// <param name="additionalInputs">The additional inputs required to purchase a shipping offering, in JSON format. The JSON provided here must adhere to the JSON schema that is returned in the response to the getAdditionalInputs operation.  Additional inputs are only required when indicated by the requiresAdditionalInputs property in the response to the getRates operation..</param>
        public PurchaseShipmentRequest(string requestToken = default(string), string rateId = default(string), RequestedDocumentSpecification requestedDocumentSpecification = default(RequestedDocumentSpecification), List<RequestedValueAddedService> requestedValueAddedServices = default(List<RequestedValueAddedService>), Dictionary<string, Object> additionalInputs = default(Dictionary<string, Object>))
        {
            // to ensure "requestToken" is required (not null)
            if (requestToken == null)
            {
                throw new ArgumentNullException("requestToken is a required property for PurchaseShipmentRequest and cannot be null");
            }
            this.RequestToken = requestToken;
            // to ensure "rateId" is required (not null)
            if (rateId == null)
            {
                throw new ArgumentNullException("rateId is a required property for PurchaseShipmentRequest and cannot be null");
            }
            this.RateId = rateId;
            // to ensure "requestedDocumentSpecification" is required (not null)
            if (requestedDocumentSpecification == null)
            {
                throw new ArgumentNullException("requestedDocumentSpecification is a required property for PurchaseShipmentRequest and cannot be null");
            }
            this.RequestedDocumentSpecification = requestedDocumentSpecification;
            this.RequestedValueAddedServices = requestedValueAddedServices;
            this.AdditionalInputs = additionalInputs;
        }

        /// <summary>
        /// A unique token generated to identify a getRates operation.
        /// </summary>
        /// <value>A unique token generated to identify a getRates operation.</value>
        [DataMember(Name = "requestToken", IsRequired = true, EmitDefaultValue = true)]
        public string RequestToken { get; set; }

        /// <summary>
        /// An identifier for the rate (shipment offering) provided by a shipping service provider.
        /// </summary>
        /// <value>An identifier for the rate (shipment offering) provided by a shipping service provider.</value>
        [DataMember(Name = "rateId", IsRequired = true, EmitDefaultValue = true)]
        public string RateId { get; set; }

        /// <summary>
        /// Gets or Sets RequestedDocumentSpecification
        /// </summary>
        [DataMember(Name = "requestedDocumentSpecification", IsRequired = true, EmitDefaultValue = true)]
        public RequestedDocumentSpecification RequestedDocumentSpecification { get; set; }

        /// <summary>
        /// The value-added services to be added to a shipping service purchase.
        /// </summary>
        /// <value>The value-added services to be added to a shipping service purchase.</value>
        [DataMember(Name = "requestedValueAddedServices", EmitDefaultValue = false)]
        public List<RequestedValueAddedService> RequestedValueAddedServices { get; set; }

        /// <summary>
        /// The additional inputs required to purchase a shipping offering, in JSON format. The JSON provided here must adhere to the JSON schema that is returned in the response to the getAdditionalInputs operation.  Additional inputs are only required when indicated by the requiresAdditionalInputs property in the response to the getRates operation.
        /// </summary>
        /// <value>The additional inputs required to purchase a shipping offering, in JSON format. The JSON provided here must adhere to the JSON schema that is returned in the response to the getAdditionalInputs operation.  Additional inputs are only required when indicated by the requiresAdditionalInputs property in the response to the getRates operation.</value>
        [DataMember(Name = "additionalInputs", EmitDefaultValue = false)]
        public Dictionary<string, Object> AdditionalInputs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PurchaseShipmentRequest {\n");
            sb.Append("  RequestToken: ").Append(RequestToken).Append("\n");
            sb.Append("  RateId: ").Append(RateId).Append("\n");
            sb.Append("  RequestedDocumentSpecification: ").Append(RequestedDocumentSpecification).Append("\n");
            sb.Append("  RequestedValueAddedServices: ").Append(RequestedValueAddedServices).Append("\n");
            sb.Append("  AdditionalInputs: ").Append(AdditionalInputs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
