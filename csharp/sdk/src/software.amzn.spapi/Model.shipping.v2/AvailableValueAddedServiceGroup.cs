/*
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.shipping.v2
{
    /// <summary>
    /// The value-added services available for purchase with a shipping service offering.
    /// </summary>
    [DataContract(Name = "AvailableValueAddedServiceGroup")]
    public partial class AvailableValueAddedServiceGroup : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AvailableValueAddedServiceGroup" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AvailableValueAddedServiceGroup() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AvailableValueAddedServiceGroup" /> class.
        /// </summary>
        /// <param name="groupId">The type of the value-added service group. (required).</param>
        /// <param name="groupDescription">The name of the value-added service group. (required).</param>
        /// <param name="isRequired">When true, one or more of the value-added services listed must be specified. (required).</param>
        /// <param name="valueAddedServices">A list of optional value-added services available for purchase with a shipping service offering..</param>
        public AvailableValueAddedServiceGroup(string groupId = default(string), string groupDescription = default(string), bool isRequired = default(bool), List<ValueAddedService> valueAddedServices = default(List<ValueAddedService>))
        {
            // to ensure "groupId" is required (not null)
            if (groupId == null)
            {
                throw new ArgumentNullException("groupId is a required property for AvailableValueAddedServiceGroup and cannot be null");
            }
            this.GroupId = groupId;
            // to ensure "groupDescription" is required (not null)
            if (groupDescription == null)
            {
                throw new ArgumentNullException("groupDescription is a required property for AvailableValueAddedServiceGroup and cannot be null");
            }
            this.GroupDescription = groupDescription;
            this.IsRequired = isRequired;
            this.ValueAddedServices = valueAddedServices;
        }

        /// <summary>
        /// The type of the value-added service group.
        /// </summary>
        /// <value>The type of the value-added service group.</value>
        [DataMember(Name = "groupId", IsRequired = true, EmitDefaultValue = true)]
        public string GroupId { get; set; }

        /// <summary>
        /// The name of the value-added service group.
        /// </summary>
        /// <value>The name of the value-added service group.</value>
        [DataMember(Name = "groupDescription", IsRequired = true, EmitDefaultValue = true)]
        public string GroupDescription { get; set; }

        /// <summary>
        /// When true, one or more of the value-added services listed must be specified.
        /// </summary>
        /// <value>When true, one or more of the value-added services listed must be specified.</value>
        [DataMember(Name = "isRequired", IsRequired = true, EmitDefaultValue = true)]
        public bool IsRequired { get; set; }

        /// <summary>
        /// A list of optional value-added services available for purchase with a shipping service offering.
        /// </summary>
        /// <value>A list of optional value-added services available for purchase with a shipping service offering.</value>
        [DataMember(Name = "valueAddedServices", EmitDefaultValue = false)]
        public List<ValueAddedService> ValueAddedServices { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AvailableValueAddedServiceGroup {\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("  GroupDescription: ").Append(GroupDescription).Append("\n");
            sb.Append("  IsRequired: ").Append(IsRequired).Append("\n");
            sb.Append("  ValueAddedServices: ").Append(ValueAddedServices).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
