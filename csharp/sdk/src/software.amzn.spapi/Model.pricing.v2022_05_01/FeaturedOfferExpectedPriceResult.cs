/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-05-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.pricing.v2022_05_01
{
    /// <summary>
    /// The FOEP result data for the requested offer.
    /// </summary>
    [DataContract(Name = "FeaturedOfferExpectedPriceResult")]
    public partial class FeaturedOfferExpectedPriceResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FeaturedOfferExpectedPriceResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FeaturedOfferExpectedPriceResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FeaturedOfferExpectedPriceResult" /> class.
        /// </summary>
        /// <param name="featuredOfferExpectedPrice">featuredOfferExpectedPrice.</param>
        /// <param name="resultStatus">The status of the FOEP computation. Possible values include &#x60;VALID_FOEP&#x60;, &#x60;NO_COMPETING_OFFER&#x60;, &#x60;OFFER_NOT_ELIGIBLE&#x60;, &#x60;OFFER_NOT_FOUND&#x60;, and &#x60;ASIN_NOT_ELIGIBLE&#x60;. Additional values might be added in the future. (required).</param>
        /// <param name="competingFeaturedOffer">competingFeaturedOffer.</param>
        /// <param name="currentFeaturedOffer">currentFeaturedOffer.</param>
        public FeaturedOfferExpectedPriceResult(FeaturedOfferExpectedPrice featuredOfferExpectedPrice = default(FeaturedOfferExpectedPrice), string resultStatus = default(string), FeaturedOffer competingFeaturedOffer = default(FeaturedOffer), FeaturedOffer currentFeaturedOffer = default(FeaturedOffer))
        {
            // to ensure "resultStatus" is required (not null)
            if (resultStatus == null)
            {
                throw new ArgumentNullException("resultStatus is a required property for FeaturedOfferExpectedPriceResult and cannot be null");
            }
            this.ResultStatus = resultStatus;
            this.FeaturedOfferExpectedPrice = featuredOfferExpectedPrice;
            this.CompetingFeaturedOffer = competingFeaturedOffer;
            this.CurrentFeaturedOffer = currentFeaturedOffer;
        }

        /// <summary>
        /// Gets or Sets FeaturedOfferExpectedPrice
        /// </summary>
        [DataMember(Name = "featuredOfferExpectedPrice", EmitDefaultValue = false)]
        public FeaturedOfferExpectedPrice FeaturedOfferExpectedPrice { get; set; }

        /// <summary>
        /// The status of the FOEP computation. Possible values include &#x60;VALID_FOEP&#x60;, &#x60;NO_COMPETING_OFFER&#x60;, &#x60;OFFER_NOT_ELIGIBLE&#x60;, &#x60;OFFER_NOT_FOUND&#x60;, and &#x60;ASIN_NOT_ELIGIBLE&#x60;. Additional values might be added in the future.
        /// </summary>
        /// <value>The status of the FOEP computation. Possible values include &#x60;VALID_FOEP&#x60;, &#x60;NO_COMPETING_OFFER&#x60;, &#x60;OFFER_NOT_ELIGIBLE&#x60;, &#x60;OFFER_NOT_FOUND&#x60;, and &#x60;ASIN_NOT_ELIGIBLE&#x60;. Additional values might be added in the future.</value>
        [DataMember(Name = "resultStatus", IsRequired = true, EmitDefaultValue = true)]
        public string ResultStatus { get; set; }

        /// <summary>
        /// Gets or Sets CompetingFeaturedOffer
        /// </summary>
        [DataMember(Name = "competingFeaturedOffer", EmitDefaultValue = false)]
        public FeaturedOffer CompetingFeaturedOffer { get; set; }

        /// <summary>
        /// Gets or Sets CurrentFeaturedOffer
        /// </summary>
        [DataMember(Name = "currentFeaturedOffer", EmitDefaultValue = false)]
        public FeaturedOffer CurrentFeaturedOffer { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FeaturedOfferExpectedPriceResult {\n");
            sb.Append("  FeaturedOfferExpectedPrice: ").Append(FeaturedOfferExpectedPrice).Append("\n");
            sb.Append("  ResultStatus: ").Append(ResultStatus).Append("\n");
            sb.Append("  CompetingFeaturedOffer: ").Append(CompetingFeaturedOffer).Append("\n");
            sb.Append("  CurrentFeaturedOffer: ").Append(CurrentFeaturedOffer).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
