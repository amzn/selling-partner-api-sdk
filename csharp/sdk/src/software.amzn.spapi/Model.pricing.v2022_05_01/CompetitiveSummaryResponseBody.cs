/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-05-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.pricing.v2022_05_01
{
    /// <summary>
    /// The &#x60;competitiveSummaryResponse&#x60; body for a requested ASIN and &#x60;marketplaceId&#x60;.
    /// </summary>
    [DataContract(Name = "CompetitiveSummaryResponseBody")]
    public partial class CompetitiveSummaryResponseBody : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompetitiveSummaryResponseBody" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CompetitiveSummaryResponseBody() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CompetitiveSummaryResponseBody" /> class.
        /// </summary>
        /// <param name="asin">The ASIN of the item. (required).</param>
        /// <param name="marketplaceId">The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). (required).</param>
        /// <param name="featuredBuyingOptions">A list of featured buying options for the specified ASIN &#x60;marketplaceId&#x60; combination..</param>
        /// <param name="lowestPricedOffers">A list of lowest priced offers for the specified ASIN &#x60;marketplaceId&#x60; combination..</param>
        /// <param name="referencePrices">A list of reference prices for the specified ASIN &#x60;marketplaceId&#x60; combination..</param>
        /// <param name="errors">A list of error responses that are returned when a request is unsuccessful..</param>
        public CompetitiveSummaryResponseBody(string asin = default(string), string marketplaceId = default(string), List<FeaturedBuyingOption> featuredBuyingOptions = default(List<FeaturedBuyingOption>), List<LowestPricedOffer> lowestPricedOffers = default(List<LowestPricedOffer>), List<ReferencePrice> referencePrices = default(List<ReferencePrice>), List<Error> errors = default(List<Error>))
        {
            // to ensure "asin" is required (not null)
            if (asin == null)
            {
                throw new ArgumentNullException("asin is a required property for CompetitiveSummaryResponseBody and cannot be null");
            }
            this.Asin = asin;
            // to ensure "marketplaceId" is required (not null)
            if (marketplaceId == null)
            {
                throw new ArgumentNullException("marketplaceId is a required property for CompetitiveSummaryResponseBody and cannot be null");
            }
            this.MarketplaceId = marketplaceId;
            this.FeaturedBuyingOptions = featuredBuyingOptions;
            this.LowestPricedOffers = lowestPricedOffers;
            this.ReferencePrices = referencePrices;
            this.Errors = errors;
        }

        /// <summary>
        /// The ASIN of the item.
        /// </summary>
        /// <value>The ASIN of the item.</value>
        [DataMember(Name = "asin", IsRequired = true, EmitDefaultValue = true)]
        public string Asin { get; set; }

        /// <summary>
        /// The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
        /// </summary>
        /// <value>The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).</value>
        [DataMember(Name = "marketplaceId", IsRequired = true, EmitDefaultValue = true)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// A list of featured buying options for the specified ASIN &#x60;marketplaceId&#x60; combination.
        /// </summary>
        /// <value>A list of featured buying options for the specified ASIN &#x60;marketplaceId&#x60; combination.</value>
        [DataMember(Name = "featuredBuyingOptions", EmitDefaultValue = false)]
        public List<FeaturedBuyingOption> FeaturedBuyingOptions { get; set; }

        /// <summary>
        /// A list of lowest priced offers for the specified ASIN &#x60;marketplaceId&#x60; combination.
        /// </summary>
        /// <value>A list of lowest priced offers for the specified ASIN &#x60;marketplaceId&#x60; combination.</value>
        [DataMember(Name = "lowestPricedOffers", EmitDefaultValue = false)]
        public List<LowestPricedOffer> LowestPricedOffers { get; set; }

        /// <summary>
        /// A list of reference prices for the specified ASIN &#x60;marketplaceId&#x60; combination.
        /// </summary>
        /// <value>A list of reference prices for the specified ASIN &#x60;marketplaceId&#x60; combination.</value>
        [DataMember(Name = "referencePrices", EmitDefaultValue = false)]
        public List<ReferencePrice> ReferencePrices { get; set; }

        /// <summary>
        /// A list of error responses that are returned when a request is unsuccessful.
        /// </summary>
        /// <value>A list of error responses that are returned when a request is unsuccessful.</value>
        [DataMember(Name = "errors", EmitDefaultValue = false)]
        public List<Error> Errors { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CompetitiveSummaryResponseBody {\n");
            sb.Append("  Asin: ").Append(Asin).Append("\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  FeaturedBuyingOptions: ").Append(FeaturedBuyingOptions).Append("\n");
            sb.Append("  LowestPricedOffers: ").Append(LowestPricedOffers).Append("\n");
            sb.Append("  ReferencePrices: ").Append(ReferencePrices).Append("\n");
            sb.Append("  Errors: ").Append(Errors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
