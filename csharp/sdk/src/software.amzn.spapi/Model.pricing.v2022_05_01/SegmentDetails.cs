/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-05-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.pricing.v2022_05_01
{
    /// <summary>
    /// The details about the segment. The FeaturedOfferExpectedPrice API uses only the sampleLocation portion as input.
    /// </summary>
    [DataContract(Name = "SegmentDetails")]
    public partial class SegmentDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SegmentDetails" /> class.
        /// </summary>
        /// <param name="glanceViewWeightPercentage">The glance view weighted percentage for this segment, which is the glance views for this segment as a percentage of total glance views across all segments for the ASIN. A higher percentage indicates that more Amazon customers receive this offer as the Featured Offer..</param>
        /// <param name="sampleLocation">sampleLocation.</param>
        public SegmentDetails(decimal glanceViewWeightPercentage = default(decimal), SampleLocation sampleLocation = default(SampleLocation))
        {
            this.GlanceViewWeightPercentage = glanceViewWeightPercentage;
            this.SampleLocation = sampleLocation;
        }

        /// <summary>
        /// The glance view weighted percentage for this segment, which is the glance views for this segment as a percentage of total glance views across all segments for the ASIN. A higher percentage indicates that more Amazon customers receive this offer as the Featured Offer.
        /// </summary>
        /// <value>The glance view weighted percentage for this segment, which is the glance views for this segment as a percentage of total glance views across all segments for the ASIN. A higher percentage indicates that more Amazon customers receive this offer as the Featured Offer.</value>
        [DataMember(Name = "glanceViewWeightPercentage", EmitDefaultValue = false)]
        public decimal GlanceViewWeightPercentage { get; set; }

        /// <summary>
        /// Gets or Sets SampleLocation
        /// </summary>
        [DataMember(Name = "sampleLocation", EmitDefaultValue = false)]
        public SampleLocation SampleLocation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SegmentDetails {\n");
            sb.Append("  GlanceViewWeightPercentage: ").Append(GlanceViewWeightPercentage).Append("\n");
            sb.Append("  SampleLocation: ").Append(SampleLocation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
