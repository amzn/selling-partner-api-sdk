/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-05-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.pricing.v2022_05_01
{
    /// <summary>
    /// An individual FOEP request for a particular SKU.
    /// </summary>
    [DataContract(Name = "FeaturedOfferExpectedPriceRequest")]
    public partial class FeaturedOfferExpectedPriceRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Method
        /// </summary>
        [DataMember(Name = "method", IsRequired = true, EmitDefaultValue = true)]
        public HttpMethod Method { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="FeaturedOfferExpectedPriceRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FeaturedOfferExpectedPriceRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FeaturedOfferExpectedPriceRequest" /> class.
        /// </summary>
        /// <param name="uri">The URI associated with an individual request within a batch. For &#x60;FeaturedOfferExpectedPrice&#x60;, this is &#x60;/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice&#x60;. (required).</param>
        /// <param name="method">method (required).</param>
        /// <param name="body">Additional HTTP body information that is associated with an individual request within a batch..</param>
        /// <param name="headers">A mapping of additional HTTP headers to send or receive for an individual request within a batch..</param>
        /// <param name="marketplaceId">The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). (required).</param>
        /// <param name="sku">The seller SKU of the item. (required).</param>
        /// <param name="segment">segment.</param>
        public FeaturedOfferExpectedPriceRequest(string uri = default(string), HttpMethod method = default(HttpMethod), Dictionary<string, Object> body = default(Dictionary<string, Object>), Dictionary<string, string> headers = default(Dictionary<string, string>), string marketplaceId = default(string), string sku = default(string), Segment segment = default(Segment))
        {
            // to ensure "uri" is required (not null)
            if (uri == null)
            {
                throw new ArgumentNullException("uri is a required property for FeaturedOfferExpectedPriceRequest and cannot be null");
            }
            this.Uri = uri;
            this.Method = method;
            // to ensure "marketplaceId" is required (not null)
            if (marketplaceId == null)
            {
                throw new ArgumentNullException("marketplaceId is a required property for FeaturedOfferExpectedPriceRequest and cannot be null");
            }
            this.MarketplaceId = marketplaceId;
            // to ensure "sku" is required (not null)
            if (sku == null)
            {
                throw new ArgumentNullException("sku is a required property for FeaturedOfferExpectedPriceRequest and cannot be null");
            }
            this.Sku = sku;
            this.Body = body;
            this.Headers = headers;
            this.Segment = segment;
        }

        /// <summary>
        /// The URI associated with an individual request within a batch. For &#x60;FeaturedOfferExpectedPrice&#x60;, this is &#x60;/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice&#x60;.
        /// </summary>
        /// <value>The URI associated with an individual request within a batch. For &#x60;FeaturedOfferExpectedPrice&#x60;, this is &#x60;/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice&#x60;.</value>
        [DataMember(Name = "uri", IsRequired = true, EmitDefaultValue = true)]
        public string Uri { get; set; }

        /// <summary>
        /// Additional HTTP body information that is associated with an individual request within a batch.
        /// </summary>
        /// <value>Additional HTTP body information that is associated with an individual request within a batch.</value>
        [DataMember(Name = "body", EmitDefaultValue = false)]
        public Dictionary<string, Object> Body { get; set; }

        /// <summary>
        /// A mapping of additional HTTP headers to send or receive for an individual request within a batch.
        /// </summary>
        /// <value>A mapping of additional HTTP headers to send or receive for an individual request within a batch.</value>
        [DataMember(Name = "headers", EmitDefaultValue = false)]
        public Dictionary<string, string> Headers { get; set; }

        /// <summary>
        /// The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
        /// </summary>
        /// <value>The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).</value>
        [DataMember(Name = "marketplaceId", IsRequired = true, EmitDefaultValue = true)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// The seller SKU of the item.
        /// </summary>
        /// <value>The seller SKU of the item.</value>
        [DataMember(Name = "sku", IsRequired = true, EmitDefaultValue = true)]
        public string Sku { get; set; }

        /// <summary>
        /// Gets or Sets Segment
        /// </summary>
        [DataMember(Name = "segment", EmitDefaultValue = false)]
        public Segment Segment { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FeaturedOfferExpectedPriceRequest {\n");
            sb.Append("  Uri: ").Append(Uri).Append("\n");
            sb.Append("  Method: ").Append(Method).Append("\n");
            sb.Append("  Body: ").Append(Body).Append("\n");
            sb.Append("  Headers: ").Append(Headers).Append("\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  Sku: ").Append(Sku).Append("\n");
            sb.Append("  Segment: ").Append(Segment).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
