/*
 * Selling Partner API for FBA Inventory
 *
 * The Selling Partner API for FBA Inventory lets you programmatically retrieve information about inventory in Amazon's fulfillment network.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fba.inventory.v1
{
    /// <summary>
    /// The object with the list of Inventory to be added
    /// </summary>
    [DataContract(Name = "AddInventoryRequest")]
    public partial class AddInventoryRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddInventoryRequest" /> class.
        /// </summary>
        /// <param name="inventoryItems">List of Inventory to be added.</param>
        public AddInventoryRequest(List<InventoryItem> inventoryItems = default(List<InventoryItem>))
        {
            this.InventoryItems = inventoryItems;
        }

        /// <summary>
        /// List of Inventory to be added
        /// </summary>
        /// <value>List of Inventory to be added</value>
        [DataMember(Name = "inventoryItems", EmitDefaultValue = false)]
        public List<InventoryItem> InventoryItems { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AddInventoryRequest {\n");
            sb.Append("  InventoryItems: ").Append(InventoryItems).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
