/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v2024_03_20
{
    /// <summary>
    /// Contains information related to Less-Than-Truckload (LTL) shipment tracking.
    /// </summary>
    [DataContract(Name = "LtlTrackingDetail")]
    public partial class LtlTrackingDetail : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LtlTrackingDetail" /> class.
        /// </summary>
        /// <param name="billOfLadingNumber">The number of the carrier shipment acknowledgement document..</param>
        /// <param name="freightBillNumber">The number associated with the freight bill..</param>
        public LtlTrackingDetail(string billOfLadingNumber = default(string), List<string> freightBillNumber = default(List<string>))
        {
            this.BillOfLadingNumber = billOfLadingNumber;
            this.FreightBillNumber = freightBillNumber;
        }

        /// <summary>
        /// The number of the carrier shipment acknowledgement document.
        /// </summary>
        /// <value>The number of the carrier shipment acknowledgement document.</value>
        [DataMember(Name = "billOfLadingNumber", EmitDefaultValue = false)]
        public string BillOfLadingNumber { get; set; }

        /// <summary>
        /// The number associated with the freight bill.
        /// </summary>
        /// <value>The number associated with the freight bill.</value>
        [DataMember(Name = "freightBillNumber", EmitDefaultValue = false)]
        public List<string> FreightBillNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LtlTrackingDetail {\n");
            sb.Append("  BillOfLadingNumber: ").Append(BillOfLadingNumber).Append("\n");
            sb.Append("  FreightBillNumber: ").Append(FreightBillNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // BillOfLadingNumber (string) maxLength
            if (this.BillOfLadingNumber != null && this.BillOfLadingNumber.Length > 1024)
            {
                yield return new ValidationResult("Invalid value for BillOfLadingNumber, length must be less than 1024.", new [] { "BillOfLadingNumber" });
            }

            // BillOfLadingNumber (string) minLength
            if (this.BillOfLadingNumber != null && this.BillOfLadingNumber.Length < 1)
            {
                yield return new ValidationResult("Invalid value for BillOfLadingNumber, length must be greater than 1.", new [] { "BillOfLadingNumber" });
            }

            yield break;
        }
    }

}
