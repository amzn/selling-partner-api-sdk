/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v2024_03_20
{
    /// <summary>
    /// Contains details for a transportation carrier appointment. This appointment is vended out by Amazon and is an indicator for when a transportation carrier is accepting shipments to be picked up.
    /// </summary>
    [DataContract(Name = "CarrierAppointment")]
    public partial class CarrierAppointment : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CarrierAppointment" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CarrierAppointment() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CarrierAppointment" /> class.
        /// </summary>
        /// <param name="endTime">The end timestamp of the appointment in UTC. (required).</param>
        /// <param name="startTime">The start timestamp of the appointment in UTC. (required).</param>
        public CarrierAppointment(DateTime endTime = default(DateTime), DateTime startTime = default(DateTime))
        {
            this.EndTime = endTime;
            this.StartTime = startTime;
        }

        /// <summary>
        /// The end timestamp of the appointment in UTC.
        /// </summary>
        /// <value>The end timestamp of the appointment in UTC.</value>
        [DataMember(Name = "endTime", IsRequired = true, EmitDefaultValue = true)]
        public DateTime EndTime { get; set; }

        /// <summary>
        /// The start timestamp of the appointment in UTC.
        /// </summary>
        /// <value>The start timestamp of the appointment in UTC.</value>
        [DataMember(Name = "startTime", IsRequired = true, EmitDefaultValue = true)]
        public DateTime StartTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CarrierAppointment {\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
