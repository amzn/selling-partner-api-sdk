/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v2024_03_20
{
    /// <summary>
    /// Contains a start and end DateTime representing a time range.
    /// </summary>
    [DataContract(Name = "Window")]
    public partial class Window : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Window" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Window() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Window" /> class.
        /// </summary>
        /// <param name="editableUntil">The timestamp at which this Window can no longer be edited..</param>
        /// <param name="end">The end timestamp of the window. (required).</param>
        /// <param name="start">The start timestamp of the window. (required).</param>
        public Window(DateTime editableUntil = default(DateTime), DateTime end = default(DateTime), DateTime start = default(DateTime))
        {
            this.End = end;
            this.Start = start;
            this.EditableUntil = editableUntil;
        }

        /// <summary>
        /// The timestamp at which this Window can no longer be edited.
        /// </summary>
        /// <value>The timestamp at which this Window can no longer be edited.</value>
        [DataMember(Name = "editableUntil", EmitDefaultValue = false)]
        public DateTime EditableUntil { get; set; }

        /// <summary>
        /// The end timestamp of the window.
        /// </summary>
        /// <value>The end timestamp of the window.</value>
        [DataMember(Name = "end", IsRequired = true, EmitDefaultValue = true)]
        public DateTime End { get; set; }

        /// <summary>
        /// The start timestamp of the window.
        /// </summary>
        /// <value>The start timestamp of the window.</value>
        [DataMember(Name = "start", IsRequired = true, EmitDefaultValue = true)]
        public DateTime Start { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Window {\n");
            sb.Append("  EditableUntil: ").Append(EditableUntil).Append("\n");
            sb.Append("  End: ").Append(End).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
