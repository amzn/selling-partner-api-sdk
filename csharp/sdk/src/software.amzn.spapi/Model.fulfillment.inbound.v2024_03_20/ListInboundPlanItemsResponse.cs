/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v2024_03_20
{
    /// <summary>
    /// The &#x60;listInboundPlanItems&#x60; response.
    /// </summary>
    [DataContract(Name = "ListInboundPlanItemsResponse")]
    public partial class ListInboundPlanItemsResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListInboundPlanItemsResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ListInboundPlanItemsResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ListInboundPlanItemsResponse" /> class.
        /// </summary>
        /// <param name="items">The items in an inbound plan. (required).</param>
        /// <param name="pagination">pagination.</param>
        public ListInboundPlanItemsResponse(List<Item> items = default(List<Item>), Pagination pagination = default(Pagination))
        {
            // to ensure "items" is required (not null)
            if (items == null)
            {
                throw new ArgumentNullException("items is a required property for ListInboundPlanItemsResponse and cannot be null");
            }
            this.Items = items;
            this.Pagination = pagination;
        }

        /// <summary>
        /// The items in an inbound plan.
        /// </summary>
        /// <value>The items in an inbound plan.</value>
        [DataMember(Name = "items", IsRequired = true, EmitDefaultValue = true)]
        public List<Item> Items { get; set; }

        /// <summary>
        /// Gets or Sets Pagination
        /// </summary>
        [DataMember(Name = "pagination", EmitDefaultValue = false)]
        public Pagination Pagination { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ListInboundPlanItemsResponse {\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  Pagination: ").Append(Pagination).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
