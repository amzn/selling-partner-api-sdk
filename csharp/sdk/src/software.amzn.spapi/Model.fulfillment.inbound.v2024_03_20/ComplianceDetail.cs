/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v2024_03_20
{
    /// <summary>
    /// Contains item identifiers and related tax information.
    /// </summary>
    [DataContract(Name = "ComplianceDetail")]
    public partial class ComplianceDetail : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComplianceDetail" /> class.
        /// </summary>
        /// <param name="asin">The Amazon Standard Identification Number, which identifies the detail page identifier..</param>
        /// <param name="fnsku">The Fulfillment Network SKU, which identifies a real fulfillable item with catalog data and condition..</param>
        /// <param name="msku">The merchant SKU, a merchant-supplied identifier for a specific SKU..</param>
        /// <param name="taxDetails">taxDetails.</param>
        public ComplianceDetail(string asin = default(string), string fnsku = default(string), string msku = default(string), TaxDetails taxDetails = default(TaxDetails))
        {
            this.Asin = asin;
            this.Fnsku = fnsku;
            this.Msku = msku;
            this.TaxDetails = taxDetails;
        }

        /// <summary>
        /// The Amazon Standard Identification Number, which identifies the detail page identifier.
        /// </summary>
        /// <value>The Amazon Standard Identification Number, which identifies the detail page identifier.</value>
        [DataMember(Name = "asin", EmitDefaultValue = false)]
        public string Asin { get; set; }

        /// <summary>
        /// The Fulfillment Network SKU, which identifies a real fulfillable item with catalog data and condition.
        /// </summary>
        /// <value>The Fulfillment Network SKU, which identifies a real fulfillable item with catalog data and condition.</value>
        [DataMember(Name = "fnsku", EmitDefaultValue = false)]
        public string Fnsku { get; set; }

        /// <summary>
        /// The merchant SKU, a merchant-supplied identifier for a specific SKU.
        /// </summary>
        /// <value>The merchant SKU, a merchant-supplied identifier for a specific SKU.</value>
        [DataMember(Name = "msku", EmitDefaultValue = false)]
        public string Msku { get; set; }

        /// <summary>
        /// Gets or Sets TaxDetails
        /// </summary>
        [DataMember(Name = "taxDetails", EmitDefaultValue = false)]
        public TaxDetails TaxDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ComplianceDetail {\n");
            sb.Append("  Asin: ").Append(Asin).Append("\n");
            sb.Append("  Fnsku: ").Append(Fnsku).Append("\n");
            sb.Append("  Msku: ").Append(Msku).Append("\n");
            sb.Append("  TaxDetails: ").Append(TaxDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Asin (string) maxLength
            if (this.Asin != null && this.Asin.Length > 10)
            {
                yield return new ValidationResult("Invalid value for Asin, length must be less than 10.", new [] { "Asin" });
            }

            // Asin (string) minLength
            if (this.Asin != null && this.Asin.Length < 1)
            {
                yield return new ValidationResult("Invalid value for Asin, length must be greater than 1.", new [] { "Asin" });
            }

            // Fnsku (string) maxLength
            if (this.Fnsku != null && this.Fnsku.Length > 10)
            {
                yield return new ValidationResult("Invalid value for Fnsku, length must be less than 10.", new [] { "Fnsku" });
            }

            // Fnsku (string) minLength
            if (this.Fnsku != null && this.Fnsku.Length < 1)
            {
                yield return new ValidationResult("Invalid value for Fnsku, length must be greater than 1.", new [] { "Fnsku" });
            }

            // Msku (string) maxLength
            if (this.Msku != null && this.Msku.Length > 40)
            {
                yield return new ValidationResult("Invalid value for Msku, length must be less than 40.", new [] { "Msku" });
            }

            // Msku (string) minLength
            if (this.Msku != null && this.Msku.Length < 1)
            {
                yield return new ValidationResult("Invalid value for Msku, length must be greater than 1.", new [] { "Msku" });
            }

            yield break;
        }
    }

}
