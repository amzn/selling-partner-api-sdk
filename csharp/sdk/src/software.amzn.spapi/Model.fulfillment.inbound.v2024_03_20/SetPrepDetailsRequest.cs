/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v2024_03_20
{
    /// <summary>
    /// The &#x60;setPrepDetails&#x60; request.
    /// </summary>
    [DataContract(Name = "SetPrepDetailsRequest")]
    public partial class SetPrepDetailsRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SetPrepDetailsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SetPrepDetailsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SetPrepDetailsRequest" /> class.
        /// </summary>
        /// <param name="marketplaceId">The marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). (required).</param>
        /// <param name="mskuPrepDetails">A list of MSKUs and related prep details. (required).</param>
        public SetPrepDetailsRequest(string marketplaceId = default(string), List<MskuPrepDetailInput> mskuPrepDetails = default(List<MskuPrepDetailInput>))
        {
            // to ensure "marketplaceId" is required (not null)
            if (marketplaceId == null)
            {
                throw new ArgumentNullException("marketplaceId is a required property for SetPrepDetailsRequest and cannot be null");
            }
            this.MarketplaceId = marketplaceId;
            // to ensure "mskuPrepDetails" is required (not null)
            if (mskuPrepDetails == null)
            {
                throw new ArgumentNullException("mskuPrepDetails is a required property for SetPrepDetailsRequest and cannot be null");
            }
            this.MskuPrepDetails = mskuPrepDetails;
        }

        /// <summary>
        /// The marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
        /// </summary>
        /// <value>The marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).</value>
        [DataMember(Name = "marketplaceId", IsRequired = true, EmitDefaultValue = true)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// A list of MSKUs and related prep details.
        /// </summary>
        /// <value>A list of MSKUs and related prep details.</value>
        [DataMember(Name = "mskuPrepDetails", IsRequired = true, EmitDefaultValue = true)]
        public List<MskuPrepDetailInput> MskuPrepDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SetPrepDetailsRequest {\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  MskuPrepDetails: ").Append(MskuPrepDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // MarketplaceId (string) maxLength
            if (this.MarketplaceId != null && this.MarketplaceId.Length > 20)
            {
                yield return new ValidationResult("Invalid value for MarketplaceId, length must be less than 20.", new [] { "MarketplaceId" });
            }

            // MarketplaceId (string) minLength
            if (this.MarketplaceId != null && this.MarketplaceId.Length < 1)
            {
                yield return new ValidationResult("Invalid value for MarketplaceId, length must be greater than 1.", new [] { "MarketplaceId" });
            }

            yield break;
        }
    }

}
