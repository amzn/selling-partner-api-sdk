/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v2024_03_20
{
    /// <summary>
    /// Contains information pertaining to a delivery window option.
    /// </summary>
    [DataContract(Name = "DeliveryWindowOption")]
    public partial class DeliveryWindowOption : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeliveryWindowOption" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected DeliveryWindowOption() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="DeliveryWindowOption" /> class.
        /// </summary>
        /// <param name="availabilityType">Identifies type of Delivery Window Availability. Values: &#x60;AVAILABLE&#x60;, &#x60;CONGESTED&#x60; (required).</param>
        /// <param name="deliveryWindowOptionId">Identifier of a delivery window option. A delivery window option represent one option for when a shipment is expected to be delivered. (required).</param>
        /// <param name="endDate">The time at which this delivery window option ends. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern &#x60;yyyy-MM-ddTHH:mmZ&#x60;. (required).</param>
        /// <param name="startDate">The time at which this delivery window option starts. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern &#x60;yyyy-MM-ddTHH:mmZ&#x60;. (required).</param>
        /// <param name="validUntil">The time at which this window delivery option is no longer valid. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern &#x60;yyyy-MM-ddTHH:mmZ&#x60;. (required).</param>
        public DeliveryWindowOption(string availabilityType = default(string), string deliveryWindowOptionId = default(string), DateTime endDate = default(DateTime), DateTime startDate = default(DateTime), DateTime validUntil = default(DateTime))
        {
            // to ensure "availabilityType" is required (not null)
            if (availabilityType == null)
            {
                throw new ArgumentNullException("availabilityType is a required property for DeliveryWindowOption and cannot be null");
            }
            this.AvailabilityType = availabilityType;
            // to ensure "deliveryWindowOptionId" is required (not null)
            if (deliveryWindowOptionId == null)
            {
                throw new ArgumentNullException("deliveryWindowOptionId is a required property for DeliveryWindowOption and cannot be null");
            }
            this.DeliveryWindowOptionId = deliveryWindowOptionId;
            this.EndDate = endDate;
            this.StartDate = startDate;
            this.ValidUntil = validUntil;
        }

        /// <summary>
        /// Identifies type of Delivery Window Availability. Values: &#x60;AVAILABLE&#x60;, &#x60;CONGESTED&#x60;
        /// </summary>
        /// <value>Identifies type of Delivery Window Availability. Values: &#x60;AVAILABLE&#x60;, &#x60;CONGESTED&#x60;</value>
        [DataMember(Name = "availabilityType", IsRequired = true, EmitDefaultValue = true)]
        public string AvailabilityType { get; set; }

        /// <summary>
        /// Identifier of a delivery window option. A delivery window option represent one option for when a shipment is expected to be delivered.
        /// </summary>
        /// <value>Identifier of a delivery window option. A delivery window option represent one option for when a shipment is expected to be delivered.</value>
        [DataMember(Name = "deliveryWindowOptionId", IsRequired = true, EmitDefaultValue = true)]
        public string DeliveryWindowOptionId { get; set; }

        /// <summary>
        /// The time at which this delivery window option ends. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern &#x60;yyyy-MM-ddTHH:mmZ&#x60;.
        /// </summary>
        /// <value>The time at which this delivery window option ends. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern &#x60;yyyy-MM-ddTHH:mmZ&#x60;.</value>
        [DataMember(Name = "endDate", IsRequired = true, EmitDefaultValue = true)]
        public DateTime EndDate { get; set; }

        /// <summary>
        /// The time at which this delivery window option starts. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern &#x60;yyyy-MM-ddTHH:mmZ&#x60;.
        /// </summary>
        /// <value>The time at which this delivery window option starts. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern &#x60;yyyy-MM-ddTHH:mmZ&#x60;.</value>
        [DataMember(Name = "startDate", IsRequired = true, EmitDefaultValue = true)]
        public DateTime StartDate { get; set; }

        /// <summary>
        /// The time at which this window delivery option is no longer valid. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern &#x60;yyyy-MM-ddTHH:mmZ&#x60;.
        /// </summary>
        /// <value>The time at which this window delivery option is no longer valid. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern &#x60;yyyy-MM-ddTHH:mmZ&#x60;.</value>
        [DataMember(Name = "validUntil", IsRequired = true, EmitDefaultValue = true)]
        public DateTime ValidUntil { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DeliveryWindowOption {\n");
            sb.Append("  AvailabilityType: ").Append(AvailabilityType).Append("\n");
            sb.Append("  DeliveryWindowOptionId: ").Append(DeliveryWindowOptionId).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  ValidUntil: ").Append(ValidUntil).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // DeliveryWindowOptionId (string) maxLength
            if (this.DeliveryWindowOptionId != null && this.DeliveryWindowOptionId.Length > 38)
            {
                yield return new ValidationResult("Invalid value for DeliveryWindowOptionId, length must be less than 38.", new [] { "DeliveryWindowOptionId" });
            }

            // DeliveryWindowOptionId (string) minLength
            if (this.DeliveryWindowOptionId != null && this.DeliveryWindowOptionId.Length < 36)
            {
                yield return new ValidationResult("Invalid value for DeliveryWindowOptionId, length must be greater than 36.", new [] { "DeliveryWindowOptionId" });
            }

            if (this.DeliveryWindowOptionId != null) {
                // DeliveryWindowOptionId (string) pattern
                Regex regexDeliveryWindowOptionId = new Regex(@"^[a-zA-Z0-9-]*$", RegexOptions.CultureInvariant);
                if (!regexDeliveryWindowOptionId.Match(this.DeliveryWindowOptionId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DeliveryWindowOptionId, must match a pattern of " + regexDeliveryWindowOptionId, new [] { "DeliveryWindowOptionId" });
                }
            }

            yield break;
        }
    }

}
