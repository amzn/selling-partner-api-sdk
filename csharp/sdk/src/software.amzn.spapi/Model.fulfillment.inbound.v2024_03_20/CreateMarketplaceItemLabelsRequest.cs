/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v2024_03_20
{
    /// <summary>
    /// The &#x60;createMarketplaceItemLabels&#x60; request.
    /// </summary>
    [DataContract(Name = "CreateMarketplaceItemLabelsRequest")]
    public partial class CreateMarketplaceItemLabelsRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets LabelType
        /// </summary>
        [DataMember(Name = "labelType", IsRequired = true, EmitDefaultValue = true)]
        public LabelPrintType LabelType { get; set; }

        /// <summary>
        /// Gets or Sets PageType
        /// </summary>
        [DataMember(Name = "pageType", EmitDefaultValue = false)]
        public ItemLabelPageType? PageType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMarketplaceItemLabelsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateMarketplaceItemLabelsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMarketplaceItemLabelsRequest" /> class.
        /// </summary>
        /// <param name="height">The height of the item label..</param>
        /// <param name="labelType">labelType (required).</param>
        /// <param name="localeCode">The locale code constructed from ISO 639 language code and ISO 3166-1 alpha-2 standard of country codes separated by an underscore character. (default to &quot;en_US&quot;).</param>
        /// <param name="marketplaceId">The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). (required).</param>
        /// <param name="mskuQuantities">Represents the quantity of an MSKU to print item labels for. (required).</param>
        /// <param name="pageType">pageType.</param>
        /// <param name="width">The width of the item label..</param>
        public CreateMarketplaceItemLabelsRequest(decimal height = default(decimal), LabelPrintType labelType = default(LabelPrintType), string localeCode = @"en_US", string marketplaceId = default(string), List<MskuQuantity> mskuQuantities = default(List<MskuQuantity>), ItemLabelPageType? pageType = default(ItemLabelPageType?), decimal width = default(decimal))
        {
            this.LabelType = labelType;
            // to ensure "marketplaceId" is required (not null)
            if (marketplaceId == null)
            {
                throw new ArgumentNullException("marketplaceId is a required property for CreateMarketplaceItemLabelsRequest and cannot be null");
            }
            this.MarketplaceId = marketplaceId;
            // to ensure "mskuQuantities" is required (not null)
            if (mskuQuantities == null)
            {
                throw new ArgumentNullException("mskuQuantities is a required property for CreateMarketplaceItemLabelsRequest and cannot be null");
            }
            this.MskuQuantities = mskuQuantities;
            this.Height = height;
            // use default value if no "localeCode" provided
            this.LocaleCode = localeCode ?? @"en_US";
            this.PageType = pageType;
            this.Width = width;
        }

        /// <summary>
        /// The height of the item label.
        /// </summary>
        /// <value>The height of the item label.</value>
        [DataMember(Name = "height", EmitDefaultValue = false)]
        public decimal Height { get; set; }

        /// <summary>
        /// The locale code constructed from ISO 639 language code and ISO 3166-1 alpha-2 standard of country codes separated by an underscore character.
        /// </summary>
        /// <value>The locale code constructed from ISO 639 language code and ISO 3166-1 alpha-2 standard of country codes separated by an underscore character.</value>
        [DataMember(Name = "localeCode", EmitDefaultValue = false)]
        public string LocaleCode { get; set; }

        /// <summary>
        /// The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
        /// </summary>
        /// <value>The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).</value>
        [DataMember(Name = "marketplaceId", IsRequired = true, EmitDefaultValue = true)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// Represents the quantity of an MSKU to print item labels for.
        /// </summary>
        /// <value>Represents the quantity of an MSKU to print item labels for.</value>
        [DataMember(Name = "mskuQuantities", IsRequired = true, EmitDefaultValue = true)]
        public List<MskuQuantity> MskuQuantities { get; set; }

        /// <summary>
        /// The width of the item label.
        /// </summary>
        /// <value>The width of the item label.</value>
        [DataMember(Name = "width", EmitDefaultValue = false)]
        public decimal Width { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateMarketplaceItemLabelsRequest {\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  LabelType: ").Append(LabelType).Append("\n");
            sb.Append("  LocaleCode: ").Append(LocaleCode).Append("\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  MskuQuantities: ").Append(MskuQuantities).Append("\n");
            sb.Append("  PageType: ").Append(PageType).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Height (decimal) maximum
            if (this.Height > (decimal)1E+2)
            {
                yield return new ValidationResult("Invalid value for Height, must be a value less than or equal to 1E+2.", new [] { "Height" });
            }

            // Height (decimal) minimum
            if (this.Height < (decimal)25)
            {
                yield return new ValidationResult("Invalid value for Height, must be a value greater than or equal to 25.", new [] { "Height" });
            }

            if (this.LocaleCode != null) {
                // LocaleCode (string) pattern
                Regex regexLocaleCode = new Regex(@"^[a-z]{2}_[A-Z]{2}$", RegexOptions.CultureInvariant);
                if (!regexLocaleCode.Match(this.LocaleCode).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LocaleCode, must match a pattern of " + regexLocaleCode, new [] { "LocaleCode" });
                }
            }

            // MarketplaceId (string) maxLength
            if (this.MarketplaceId != null && this.MarketplaceId.Length > 20)
            {
                yield return new ValidationResult("Invalid value for MarketplaceId, length must be less than 20.", new [] { "MarketplaceId" });
            }

            // MarketplaceId (string) minLength
            if (this.MarketplaceId != null && this.MarketplaceId.Length < 1)
            {
                yield return new ValidationResult("Invalid value for MarketplaceId, length must be greater than 1.", new [] { "MarketplaceId" });
            }

            // Width (decimal) maximum
            if (this.Width > (decimal)1E+2)
            {
                yield return new ValidationResult("Invalid value for Width, must be a value less than or equal to 1E+2.", new [] { "Width" });
            }

            // Width (decimal) minimum
            if (this.Width < (decimal)25)
            {
                yield return new ValidationResult("Invalid value for Width, must be a value greater than or equal to 25.", new [] { "Width" });
            }

            yield break;
        }
    }

}
