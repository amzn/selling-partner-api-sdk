/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v2024_03_20
{
    /// <summary>
    /// The &#x60;updateShipmentTrackingDetails&#x60; request.
    /// </summary>
    [DataContract(Name = "UpdateShipmentTrackingDetailsRequest")]
    public partial class UpdateShipmentTrackingDetailsRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateShipmentTrackingDetailsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateShipmentTrackingDetailsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateShipmentTrackingDetailsRequest" /> class.
        /// </summary>
        /// <param name="trackingDetails">trackingDetails (required).</param>
        public UpdateShipmentTrackingDetailsRequest(TrackingDetailsInput trackingDetails = default(TrackingDetailsInput))
        {
            // to ensure "trackingDetails" is required (not null)
            if (trackingDetails == null)
            {
                throw new ArgumentNullException("trackingDetails is a required property for UpdateShipmentTrackingDetailsRequest and cannot be null");
            }
            this.TrackingDetails = trackingDetails;
        }

        /// <summary>
        /// Gets or Sets TrackingDetails
        /// </summary>
        [DataMember(Name = "trackingDetails", IsRequired = true, EmitDefaultValue = true)]
        public TrackingDetailsInput TrackingDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateShipmentTrackingDetailsRequest {\n");
            sb.Append("  TrackingDetails: ").Append(TrackingDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
