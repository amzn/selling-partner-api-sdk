/*
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v0
{
    /// <summary>
    /// Indicates the status of the inbound shipment. When used with the createInboundShipment operation, WORKING is the only valid value. When used with the updateInboundShipment operation, possible values are WORKING, SHIPPED or CANCELLED.
    /// </summary>
    /// <value>Indicates the status of the inbound shipment. When used with the createInboundShipment operation, WORKING is the only valid value. When used with the updateInboundShipment operation, possible values are WORKING, SHIPPED or CANCELLED.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ShipmentStatus
    {
        /// <summary>
        /// Enum WORKING for value: WORKING
        /// </summary>
        [EnumMember(Value = "WORKING")]
        WORKING = 1,

        /// <summary>
        /// Enum SHIPPED for value: SHIPPED
        /// </summary>
        [EnumMember(Value = "SHIPPED")]
        SHIPPED = 2,

        /// <summary>
        /// Enum RECEIVING for value: RECEIVING
        /// </summary>
        [EnumMember(Value = "RECEIVING")]
        RECEIVING = 3,

        /// <summary>
        /// Enum CANCELLED for value: CANCELLED
        /// </summary>
        [EnumMember(Value = "CANCELLED")]
        CANCELLED = 4,

        /// <summary>
        /// Enum DELETED for value: DELETED
        /// </summary>
        [EnumMember(Value = "DELETED")]
        DELETED = 5,

        /// <summary>
        /// Enum CLOSED for value: CLOSED
        /// </summary>
        [EnumMember(Value = "CLOSED")]
        CLOSED = 6,

        /// <summary>
        /// Enum ERROR for value: ERROR
        /// </summary>
        [EnumMember(Value = "ERROR")]
        ERROR = 7,

        /// <summary>
        /// Enum INTRANSIT for value: IN_TRANSIT
        /// </summary>
        [EnumMember(Value = "IN_TRANSIT")]
        INTRANSIT = 8,

        /// <summary>
        /// Enum DELIVERED for value: DELIVERED
        /// </summary>
        [EnumMember(Value = "DELIVERED")]
        DELIVERED = 9,

        /// <summary>
        /// Enum CHECKEDIN for value: CHECKED_IN
        /// </summary>
        [EnumMember(Value = "CHECKED_IN")]
        CHECKEDIN = 10
    }

}
