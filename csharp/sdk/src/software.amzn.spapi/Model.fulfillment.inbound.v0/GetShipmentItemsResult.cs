/*
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.inbound.v0
{
    /// <summary>
    /// Result for the get shipment items operation
    /// </summary>
    [DataContract(Name = "GetShipmentItemsResult")]
    public partial class GetShipmentItemsResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetShipmentItemsResult" /> class.
        /// </summary>
        /// <param name="itemData">A list of inbound shipment item information..</param>
        /// <param name="nextToken">When present and not empty, pass this string token in the next request to return the next response page..</param>
        public GetShipmentItemsResult(List<InboundShipmentItem> itemData = default(List<InboundShipmentItem>), string nextToken = default(string))
        {
            this.ItemData = itemData;
            this.NextToken = nextToken;
        }

        /// <summary>
        /// A list of inbound shipment item information.
        /// </summary>
        /// <value>A list of inbound shipment item information.</value>
        [DataMember(Name = "ItemData", EmitDefaultValue = false)]
        public List<InboundShipmentItem> ItemData { get; set; }

        /// <summary>
        /// When present and not empty, pass this string token in the next request to return the next response page.
        /// </summary>
        /// <value>When present and not empty, pass this string token in the next request to return the next response page.</value>
        [DataMember(Name = "NextToken", EmitDefaultValue = false)]
        public string NextToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetShipmentItemsResult {\n");
            sb.Append("  ItemData: ").Append(ItemData).Append("\n");
            sb.Append("  NextToken: ").Append(NextToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
