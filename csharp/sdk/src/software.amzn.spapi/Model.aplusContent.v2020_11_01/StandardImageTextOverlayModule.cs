/*
 * Selling Partner API for A+ Content Management
 *
 * Use the A+ Content API to build applications that help selling partners add rich marketing content to their Amazon product detail pages. Selling partners can use A+ content to share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners use content modules to add images and text.
 *
 * The version of the OpenAPI document: 2020-11-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.aplusContent.v2020_11_01
{
    /// <summary>
    /// A standard background image with a floating text box.
    /// </summary>
    [DataContract(Name = "StandardImageTextOverlayModule")]
    public partial class StandardImageTextOverlayModule : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets OverlayColorType
        /// </summary>
        [DataMember(Name = "overlayColorType", IsRequired = true, EmitDefaultValue = true)]
        public ColorType OverlayColorType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="StandardImageTextOverlayModule" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected StandardImageTextOverlayModule() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="StandardImageTextOverlayModule" /> class.
        /// </summary>
        /// <param name="overlayColorType">overlayColorType (required).</param>
        /// <param name="block">block.</param>
        public StandardImageTextOverlayModule(ColorType overlayColorType = default(ColorType), StandardImageTextBlock block = default(StandardImageTextBlock))
        {
            this.OverlayColorType = overlayColorType;
            this.Block = block;
        }

        /// <summary>
        /// Gets or Sets Block
        /// </summary>
        [DataMember(Name = "block", EmitDefaultValue = false)]
        public StandardImageTextBlock Block { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class StandardImageTextOverlayModule {\n");
            sb.Append("  OverlayColorType: ").Append(OverlayColorType).Append("\n");
            sb.Append("  Block: ").Append(Block).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
