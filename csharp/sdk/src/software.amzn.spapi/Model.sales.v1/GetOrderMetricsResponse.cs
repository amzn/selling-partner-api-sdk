/*
 * Selling Partner API for Sales
 *
 * The Selling Partner API for Sales provides APIs related to sales performance.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.sales.v1
{
    /// <summary>
    /// The response schema for the getOrderMetrics operation.
    /// </summary>
    [DataContract(Name = "GetOrderMetricsResponse")]
    public partial class GetOrderMetricsResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetOrderMetricsResponse" /> class.
        /// </summary>
        /// <param name="payload">A set of order metrics, each scoped to a particular time interval..</param>
        /// <param name="errors">A list of error responses returned when a request is unsuccessful..</param>
        public GetOrderMetricsResponse(List<OrderMetricsInterval> payload = default(List<OrderMetricsInterval>), List<Error> errors = default(List<Error>))
        {
            this.Payload = payload;
            this.Errors = errors;
        }

        /// <summary>
        /// A set of order metrics, each scoped to a particular time interval.
        /// </summary>
        /// <value>A set of order metrics, each scoped to a particular time interval.</value>
        [DataMember(Name = "payload", EmitDefaultValue = false)]
        public List<OrderMetricsInterval> Payload { get; set; }

        /// <summary>
        /// A list of error responses returned when a request is unsuccessful.
        /// </summary>
        /// <value>A list of error responses returned when a request is unsuccessful.</value>
        [DataMember(Name = "errors", EmitDefaultValue = false)]
        public List<Error> Errors { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetOrderMetricsResponse {\n");
            sb.Append("  Payload: ").Append(Payload).Append("\n");
            sb.Append("  Errors: ").Append(Errors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
