/*
 * The Selling Partner API for Automotive.
 *
 * The Selling Partner API for Automotive provides programmatic access to information needed by selling partners to provide compatibility information about their listed products.
 *
 * The version of the OpenAPI document: 2024-11-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vehicles.v2024_11_01
{
    /// <summary>
    /// Get paginated list of vehicle from Amazon&#39;s catalog
    /// </summary>
    [DataContract(Name = "VehiclesResponse")]
    public partial class VehiclesResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VehiclesResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected VehiclesResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="VehiclesResponse" /> class.
        /// </summary>
        /// <param name="pagination">pagination.</param>
        /// <param name="vehicles">List of vehicles from Amazon&#39;s catalog. (required).</param>
        public VehiclesResponse(Pagination pagination = default(Pagination), List<Vehicle> vehicles = default(List<Vehicle>))
        {
            // to ensure "vehicles" is required (not null)
            if (vehicles == null)
            {
                throw new ArgumentNullException("vehicles is a required property for VehiclesResponse and cannot be null");
            }
            this.Vehicles = vehicles;
            this.Pagination = pagination;
        }

        /// <summary>
        /// Gets or Sets Pagination
        /// </summary>
        [DataMember(Name = "pagination", EmitDefaultValue = false)]
        public Pagination Pagination { get; set; }

        /// <summary>
        /// List of vehicles from Amazon&#39;s catalog.
        /// </summary>
        /// <value>List of vehicles from Amazon&#39;s catalog.</value>
        [DataMember(Name = "vehicles", IsRequired = true, EmitDefaultValue = true)]
        public List<Vehicle> Vehicles { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VehiclesResponse {\n");
            sb.Append("  Pagination: ").Append(Pagination).Append("\n");
            sb.Append("  Vehicles: ").Append(Vehicles).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
