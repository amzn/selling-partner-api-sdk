/*
 * The Selling Partner API for Amazon External Fulfillment Return Item Processing
 *
 * You can use the Amazon External Fulfillment Return Item Processing API to retrieve, track, and process return items through Amazon's External Fulfillment returns management system.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using software.amzn.spapi.Client;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Model.externalFulfillment.returns.v2024_09_11;

namespace software.amzn.spapi.Api.externalFulfillment.returns.v2024_09_11
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IReturnRetrievalApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieve the return item with the specified ID.
        /// </remarks>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnId">The ID of the return item you want.</param>
        /// <returns>Return</returns>
        Return GetReturn (string returnId);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieve the return item with the specified ID.
        /// </remarks>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnId">The ID of the return item you want.</param>
        /// <returns>ApiResponse of Return</returns>
        ApiResponse<Return> GetReturnWithHttpInfo (string returnId);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieve a list of return items. You can filter results by location, RMA ID, status, or time.
        /// </remarks>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnLocationId">The SmartConnect location ID of the location from which you want to retrieve return items. (optional)</param>
        /// <param name="rmaId">The RMA ID of the return items you want to list. (optional)</param>
        /// <param name="status">The status of return items you want to list. You can retrieve all new return items with the &#x60;CREATED&#x60; status. (optional)</param>
        /// <param name="reverseTrackingId">The reverse tracking ID of the return items you want to list. (optional)</param>
        /// <param name="createdSince">Return items created after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="createdUntil">Return items created before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="lastUpdatedSince">Return items updated after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedUntil">Return items whose most recent update is before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedAfter">DEPRECATED. Use the &#x60;createdSince&#x60; parameter. (optional)</param>
        /// <param name="lastUpdatedBefore">DEPRECATED. Use the &#x60;createdUntil&#x60; parameter. (optional)</param>
        /// <param name="maxResults">The number of return items you want to include in the response.  **Default:** 10  **Maximum:** 100 (optional)</param>
        /// <param name="nextToken">A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages. (optional)</param>
        /// <returns>ReturnsResponse</returns>
        ReturnsResponse ListReturns (string? returnLocationId = null, string? rmaId = null, string? status = null, string? reverseTrackingId = null, string? createdSince = null, string? createdUntil = null, string? lastUpdatedSince = null, string? lastUpdatedUntil = null, string? lastUpdatedAfter = null, string? lastUpdatedBefore = null, long? maxResults = null, string? nextToken = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieve a list of return items. You can filter results by location, RMA ID, status, or time.
        /// </remarks>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnLocationId">The SmartConnect location ID of the location from which you want to retrieve return items. (optional)</param>
        /// <param name="rmaId">The RMA ID of the return items you want to list. (optional)</param>
        /// <param name="status">The status of return items you want to list. You can retrieve all new return items with the &#x60;CREATED&#x60; status. (optional)</param>
        /// <param name="reverseTrackingId">The reverse tracking ID of the return items you want to list. (optional)</param>
        /// <param name="createdSince">Return items created after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="createdUntil">Return items created before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="lastUpdatedSince">Return items updated after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedUntil">Return items whose most recent update is before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedAfter">DEPRECATED. Use the &#x60;createdSince&#x60; parameter. (optional)</param>
        /// <param name="lastUpdatedBefore">DEPRECATED. Use the &#x60;createdUntil&#x60; parameter. (optional)</param>
        /// <param name="maxResults">The number of return items you want to include in the response.  **Default:** 10  **Maximum:** 100 (optional)</param>
        /// <param name="nextToken">A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages. (optional)</param>
        /// <returns>ApiResponse of ReturnsResponse</returns>
        ApiResponse<ReturnsResponse> ListReturnsWithHttpInfo (string? returnLocationId = null, string? rmaId = null, string? status = null, string? reverseTrackingId = null, string? createdSince = null, string? createdUntil = null, string? lastUpdatedSince = null, string? lastUpdatedUntil = null, string? lastUpdatedAfter = null, string? lastUpdatedBefore = null, long? maxResults = null, string? nextToken = null);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieve the return item with the specified ID.
        /// </remarks>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnId">The ID of the return item you want.</param>
        /// <returns>Task of Return</returns>
        System.Threading.Tasks.Task<Return> GetReturnAsync (string returnId);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieve the return item with the specified ID.
        /// </remarks>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnId">The ID of the return item you want.</param>
        /// <returns>Task of ApiResponse (Return)</returns>
        System.Threading.Tasks.Task<ApiResponse<Return>> GetReturnAsyncWithHttpInfo (string returnId);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieve a list of return items. You can filter results by location, RMA ID, status, or time.
        /// </remarks>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnLocationId">The SmartConnect location ID of the location from which you want to retrieve return items. (optional)</param>
        /// <param name="rmaId">The RMA ID of the return items you want to list. (optional)</param>
        /// <param name="status">The status of return items you want to list. You can retrieve all new return items with the &#x60;CREATED&#x60; status. (optional)</param>
        /// <param name="reverseTrackingId">The reverse tracking ID of the return items you want to list. (optional)</param>
        /// <param name="createdSince">Return items created after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="createdUntil">Return items created before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="lastUpdatedSince">Return items updated after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedUntil">Return items whose most recent update is before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedAfter">DEPRECATED. Use the &#x60;createdSince&#x60; parameter. (optional)</param>
        /// <param name="lastUpdatedBefore">DEPRECATED. Use the &#x60;createdUntil&#x60; parameter. (optional)</param>
        /// <param name="maxResults">The number of return items you want to include in the response.  **Default:** 10  **Maximum:** 100 (optional)</param>
        /// <param name="nextToken">A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages. (optional)</param>
        /// <returns>Task of ReturnsResponse</returns>
        System.Threading.Tasks.Task<ReturnsResponse> ListReturnsAsync (string? returnLocationId = null, string? rmaId = null, string? status = null, string? reverseTrackingId = null, string? createdSince = null, string? createdUntil = null, string? lastUpdatedSince = null, string? lastUpdatedUntil = null, string? lastUpdatedAfter = null, string? lastUpdatedBefore = null, long? maxResults = null, string? nextToken = null);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Retrieve a list of return items. You can filter results by location, RMA ID, status, or time.
        /// </remarks>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnLocationId">The SmartConnect location ID of the location from which you want to retrieve return items. (optional)</param>
        /// <param name="rmaId">The RMA ID of the return items you want to list. (optional)</param>
        /// <param name="status">The status of return items you want to list. You can retrieve all new return items with the &#x60;CREATED&#x60; status. (optional)</param>
        /// <param name="reverseTrackingId">The reverse tracking ID of the return items you want to list. (optional)</param>
        /// <param name="createdSince">Return items created after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="createdUntil">Return items created before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="lastUpdatedSince">Return items updated after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedUntil">Return items whose most recent update is before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedAfter">DEPRECATED. Use the &#x60;createdSince&#x60; parameter. (optional)</param>
        /// <param name="lastUpdatedBefore">DEPRECATED. Use the &#x60;createdUntil&#x60; parameter. (optional)</param>
        /// <param name="maxResults">The number of return items you want to include in the response.  **Default:** 10  **Maximum:** 100 (optional)</param>
        /// <param name="nextToken">A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages. (optional)</param>
        /// <returns>Task of ApiResponse (ReturnsResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ReturnsResponse>> ListReturnsAsyncWithHttpInfo (string? returnLocationId = null, string? rmaId = null, string? status = null, string? reverseTrackingId = null, string? createdSince = null, string? createdUntil = null, string? lastUpdatedSince = null, string? lastUpdatedUntil = null, string? lastUpdatedAfter = null, string? lastUpdatedBefore = null, long? maxResults = null, string? nextToken = null);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ReturnRetrievalApi : IReturnRetrievalApi
    {
        private software.amzn.spapi.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnRetrievalApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ReturnRetrievalApi(software.amzn.spapi.Client.Configuration configuration)
        {
            this.Configuration = configuration;
            ExceptionFactory = software.amzn.spapi.Client.Configuration.DefaultExceptionFactory;
        }

        IReadableConfiguration IApiAccessor.Configuration 
        {
            get => Configuration;  // Implicit upcast to interface
            set => Configuration = (software.amzn.spapi.Client.Configuration)value;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.Options.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public software.amzn.spapi.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public software.amzn.spapi.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        ///  Retrieve the return item with the specified ID.
        /// </summary>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnId">The ID of the return item you want.</param>
        /// <returns>Return</returns>
        public Return GetReturn (string returnId)
        {
             ApiResponse<Return> localVarResponse = GetReturnWithHttpInfo(returnId);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Retrieve the return item with the specified ID.
        /// </summary>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnId">The ID of the return item you want.</param>
        /// <returns>ApiResponse of Return</returns>
        public ApiResponse< Return > GetReturnWithHttpInfo (string returnId)
        {
            // verify the required parameter 'returnId' is set
            if (returnId == null)
                throw new ApiException(400, "Missing required parameter 'returnId' when calling ReturnRetrievalApi->GetReturn");

            var localVarPath = "/externalFulfillment/2024-09-11/returns/{returnId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (returnId != null) localVarPathParams.Add("returnId", this.Configuration.ApiClient.ParameterToString(returnId)); // path parameter


            // make the HTTP request
            RestResponse localVarResponse = (RestResponse) this.Configuration.ApiClient.CallApi(localVarPath, ChangeHttpMethod("GET"), localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams, localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetReturn", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Return>(localVarResponse.StatusCode,
                ConvertHeadersToMultimap(localVarResponse),
                (Return) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Return)));
        }

        /// <summary>
        ///  Retrieve the return item with the specified ID.
        /// </summary>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnId">The ID of the return item you want.</param>
        /// <returns>Task of Return</returns>
        public async System.Threading.Tasks.Task<Return> GetReturnAsync (string returnId)
        {
             ApiResponse<Return> localVarResponse = await GetReturnAsyncWithHttpInfo(returnId);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Retrieve the return item with the specified ID.
        /// </summary>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnId">The ID of the return item you want.</param>
        /// <returns>Task of ApiResponse (Return)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Return>> GetReturnAsyncWithHttpInfo (string returnId)
        {
            // verify the required parameter 'returnId' is set
            if (returnId == null)
                throw new ApiException(400, "Missing required parameter 'returnId' when calling ReturnRetrievalApi->GetReturn");

            var localVarPath = "/externalFulfillment/2024-09-11/returns/{returnId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (returnId != null) localVarPathParams.Add("returnId", this.Configuration.ApiClient.ParameterToString(returnId)); // path parameter


            // make the HTTP request
            RestResponse localVarResponse = (RestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath, ChangeHttpMethod("GET"), localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams, localVarPathParams, localVarHttpContentType);
            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetReturn", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Return>(localVarResponse.StatusCode,
                ConvertHeadersToMultimap(localVarResponse),
                (Return) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Return)));
        }

        /// <summary>
        ///  Retrieve a list of return items. You can filter results by location, RMA ID, status, or time.
        /// </summary>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnLocationId">The SmartConnect location ID of the location from which you want to retrieve return items. (optional)</param>
        /// <param name="rmaId">The RMA ID of the return items you want to list. (optional)</param>
        /// <param name="status">The status of return items you want to list. You can retrieve all new return items with the &#x60;CREATED&#x60; status. (optional)</param>
        /// <param name="reverseTrackingId">The reverse tracking ID of the return items you want to list. (optional)</param>
        /// <param name="createdSince">Return items created after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="createdUntil">Return items created before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="lastUpdatedSince">Return items updated after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedUntil">Return items whose most recent update is before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedAfter">DEPRECATED. Use the &#x60;createdSince&#x60; parameter. (optional)</param>
        /// <param name="lastUpdatedBefore">DEPRECATED. Use the &#x60;createdUntil&#x60; parameter. (optional)</param>
        /// <param name="maxResults">The number of return items you want to include in the response.  **Default:** 10  **Maximum:** 100 (optional)</param>
        /// <param name="nextToken">A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages. (optional)</param>
        /// <returns>ReturnsResponse</returns>
        public ReturnsResponse ListReturns (string? returnLocationId = null, string? rmaId = null, string? status = null, string? reverseTrackingId = null, string? createdSince = null, string? createdUntil = null, string? lastUpdatedSince = null, string? lastUpdatedUntil = null, string? lastUpdatedAfter = null, string? lastUpdatedBefore = null, long? maxResults = null, string? nextToken = null)
        {
             ApiResponse<ReturnsResponse> localVarResponse = ListReturnsWithHttpInfo(returnLocationId, rmaId, status, reverseTrackingId, createdSince, createdUntil, lastUpdatedSince, lastUpdatedUntil, lastUpdatedAfter, lastUpdatedBefore, maxResults, nextToken);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Retrieve a list of return items. You can filter results by location, RMA ID, status, or time.
        /// </summary>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnLocationId">The SmartConnect location ID of the location from which you want to retrieve return items. (optional)</param>
        /// <param name="rmaId">The RMA ID of the return items you want to list. (optional)</param>
        /// <param name="status">The status of return items you want to list. You can retrieve all new return items with the &#x60;CREATED&#x60; status. (optional)</param>
        /// <param name="reverseTrackingId">The reverse tracking ID of the return items you want to list. (optional)</param>
        /// <param name="createdSince">Return items created after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="createdUntil">Return items created before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="lastUpdatedSince">Return items updated after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedUntil">Return items whose most recent update is before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedAfter">DEPRECATED. Use the &#x60;createdSince&#x60; parameter. (optional)</param>
        /// <param name="lastUpdatedBefore">DEPRECATED. Use the &#x60;createdUntil&#x60; parameter. (optional)</param>
        /// <param name="maxResults">The number of return items you want to include in the response.  **Default:** 10  **Maximum:** 100 (optional)</param>
        /// <param name="nextToken">A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages. (optional)</param>
        /// <returns>ApiResponse of ReturnsResponse</returns>
        public ApiResponse< ReturnsResponse > ListReturnsWithHttpInfo (string? returnLocationId = null, string? rmaId = null, string? status = null, string? reverseTrackingId = null, string? createdSince = null, string? createdUntil = null, string? lastUpdatedSince = null, string? lastUpdatedUntil = null, string? lastUpdatedAfter = null, string? lastUpdatedBefore = null, long? maxResults = null, string? nextToken = null)
        {

            var localVarPath = "/externalFulfillment/2024-09-11/returns";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (returnLocationId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "returnLocationId", returnLocationId)); // query parameter
            if (rmaId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "rmaId", rmaId)); // query parameter
            if (status != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "status", status)); // query parameter
            if (reverseTrackingId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "reverseTrackingId", reverseTrackingId)); // query parameter
            if (createdSince != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "createdSince", createdSince)); // query parameter
            if (createdUntil != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "createdUntil", createdUntil)); // query parameter
            if (lastUpdatedSince != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "lastUpdatedSince", lastUpdatedSince)); // query parameter
            if (lastUpdatedUntil != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "lastUpdatedUntil", lastUpdatedUntil)); // query parameter
            if (lastUpdatedAfter != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "lastUpdatedAfter", lastUpdatedAfter)); // query parameter
            if (lastUpdatedBefore != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "lastUpdatedBefore", lastUpdatedBefore)); // query parameter
            if (maxResults != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "maxResults", maxResults)); // query parameter
            if (nextToken != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "nextToken", nextToken)); // query parameter


            // make the HTTP request
            RestResponse localVarResponse = (RestResponse) this.Configuration.ApiClient.CallApi(localVarPath, ChangeHttpMethod("GET"), localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams, localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListReturns", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ReturnsResponse>(localVarResponse.StatusCode,
                ConvertHeadersToMultimap(localVarResponse),
                (ReturnsResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ReturnsResponse)));
        }

        /// <summary>
        ///  Retrieve a list of return items. You can filter results by location, RMA ID, status, or time.
        /// </summary>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnLocationId">The SmartConnect location ID of the location from which you want to retrieve return items. (optional)</param>
        /// <param name="rmaId">The RMA ID of the return items you want to list. (optional)</param>
        /// <param name="status">The status of return items you want to list. You can retrieve all new return items with the &#x60;CREATED&#x60; status. (optional)</param>
        /// <param name="reverseTrackingId">The reverse tracking ID of the return items you want to list. (optional)</param>
        /// <param name="createdSince">Return items created after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="createdUntil">Return items created before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="lastUpdatedSince">Return items updated after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedUntil">Return items whose most recent update is before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedAfter">DEPRECATED. Use the &#x60;createdSince&#x60; parameter. (optional)</param>
        /// <param name="lastUpdatedBefore">DEPRECATED. Use the &#x60;createdUntil&#x60; parameter. (optional)</param>
        /// <param name="maxResults">The number of return items you want to include in the response.  **Default:** 10  **Maximum:** 100 (optional)</param>
        /// <param name="nextToken">A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages. (optional)</param>
        /// <returns>Task of ReturnsResponse</returns>
        public async System.Threading.Tasks.Task<ReturnsResponse> ListReturnsAsync (string? returnLocationId = null, string? rmaId = null, string? status = null, string? reverseTrackingId = null, string? createdSince = null, string? createdUntil = null, string? lastUpdatedSince = null, string? lastUpdatedUntil = null, string? lastUpdatedAfter = null, string? lastUpdatedBefore = null, long? maxResults = null, string? nextToken = null)
        {
             ApiResponse<ReturnsResponse> localVarResponse = await ListReturnsAsyncWithHttpInfo(returnLocationId, rmaId, status, reverseTrackingId, createdSince, createdUntil, lastUpdatedSince, lastUpdatedUntil, lastUpdatedAfter, lastUpdatedBefore, maxResults, nextToken);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Retrieve a list of return items. You can filter results by location, RMA ID, status, or time.
        /// </summary>
        /// <exception cref="software.amzn.spapi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="returnLocationId">The SmartConnect location ID of the location from which you want to retrieve return items. (optional)</param>
        /// <param name="rmaId">The RMA ID of the return items you want to list. (optional)</param>
        /// <param name="status">The status of return items you want to list. You can retrieve all new return items with the &#x60;CREATED&#x60; status. (optional)</param>
        /// <param name="reverseTrackingId">The reverse tracking ID of the return items you want to list. (optional)</param>
        /// <param name="createdSince">Return items created after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="createdUntil">Return items created before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. (optional)</param>
        /// <param name="lastUpdatedSince">Return items updated after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedUntil">Return items whose most recent update is before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply &#x60;returnLocationId&#x60; and &#x60;status&#x60;. (optional)</param>
        /// <param name="lastUpdatedAfter">DEPRECATED. Use the &#x60;createdSince&#x60; parameter. (optional)</param>
        /// <param name="lastUpdatedBefore">DEPRECATED. Use the &#x60;createdUntil&#x60; parameter. (optional)</param>
        /// <param name="maxResults">The number of return items you want to include in the response.  **Default:** 10  **Maximum:** 100 (optional)</param>
        /// <param name="nextToken">A token that you use to retrieve the next page of results. The response includes &#x60;nextToken&#x60; when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until &#x60;nextToken&#x60; is null. Note that this operation can return empty pages. (optional)</param>
        /// <returns>Task of ApiResponse (ReturnsResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<ReturnsResponse>> ListReturnsAsyncWithHttpInfo (string? returnLocationId = null, string? rmaId = null, string? status = null, string? reverseTrackingId = null, string? createdSince = null, string? createdUntil = null, string? lastUpdatedSince = null, string? lastUpdatedUntil = null, string? lastUpdatedAfter = null, string? lastUpdatedBefore = null, long? maxResults = null, string? nextToken = null)
        {

            var localVarPath = "/externalFulfillment/2024-09-11/returns";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (returnLocationId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "returnLocationId", returnLocationId)); // query parameter
            if (rmaId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "rmaId", rmaId)); // query parameter
            if (status != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "status", status)); // query parameter
            if (reverseTrackingId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "reverseTrackingId", reverseTrackingId)); // query parameter
            if (createdSince != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "createdSince", createdSince)); // query parameter
            if (createdUntil != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "createdUntil", createdUntil)); // query parameter
            if (lastUpdatedSince != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "lastUpdatedSince", lastUpdatedSince)); // query parameter
            if (lastUpdatedUntil != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "lastUpdatedUntil", lastUpdatedUntil)); // query parameter
            if (lastUpdatedAfter != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "lastUpdatedAfter", lastUpdatedAfter)); // query parameter
            if (lastUpdatedBefore != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "lastUpdatedBefore", lastUpdatedBefore)); // query parameter
            if (maxResults != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "maxResults", maxResults)); // query parameter
            if (nextToken != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "nextToken", nextToken)); // query parameter


            // make the HTTP request
            RestResponse localVarResponse = (RestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath, ChangeHttpMethod("GET"), localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams, localVarPathParams, localVarHttpContentType);
            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListReturns", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ReturnsResponse>(localVarResponse.StatusCode,
                ConvertHeadersToMultimap(localVarResponse),
                (ReturnsResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ReturnsResponse)));
        }


        public class Builder
        {
            private LWAAuthorizationCredentials lwaAuthorizationCredentials;
            private RateLimitConfiguration rateLimitConfiguration;

            public Builder SetLWAAuthorizationCredentials(LWAAuthorizationCredentials lwaAuthorizationCredentials)
            {
                this.lwaAuthorizationCredentials = lwaAuthorizationCredentials;
                return this;
            }
            
            
            public Builder SetRateLimitConfiguration(RateLimitConfiguration rateLimitConfiguration)
            {
                this.rateLimitConfiguration = rateLimitConfiguration;
                return this;
            }

            public ReturnRetrievalApi Build() 
            {
                if (lwaAuthorizationCredentials == null) 
                {
                    throw new NullReferenceException("LWAAuthoriztionCredentials not set");
                }

                
                software.amzn.spapi.Client.Configuration configuration = new software.amzn.spapi.Client.Configuration()
                {
                    AuthorizationCredentials = lwaAuthorizationCredentials,
                    RateLimitConfig = rateLimitConfiguration
                };

                // default HTTP connection timeout (in milliseconds)
                configuration.initializeApiClient();
                configuration.Timeout = 100000;

                return new ReturnRetrievalApi(configuration);
            }
        }
        
        private static Multimap<string, string> ConvertHeadersToMultimap(RestResponse response)
        {
            var multimap = new Multimap<string, string>();
            foreach (var header in response.Headers)
            {
                multimap.Add(header.Name, header.Value?.ToString());
            }
            return multimap;
        }


        private static RestSharp.Method ChangeHttpMethod(String httpMethod) {
            switch(httpMethod) {
                case "GET":
                    // GET logic
                    return Method.Get;
                case "POST":
                    // POST logic
                    return Method.Post;
                case "DELETE":
                    return Method.Delete;
                case "PUT":
                    return Method.Put;
                case "PATCH":
                    return Method.Patch;
                case "OPTIONS":
                    return Method.Options;
            }
            return Method.Head;
        }

    }
}
