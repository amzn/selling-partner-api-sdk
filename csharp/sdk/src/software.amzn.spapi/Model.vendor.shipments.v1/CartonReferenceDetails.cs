/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.shipments.v1
{
    /// <summary>
    /// Carton reference details.
    /// </summary>
    [DataContract(Name = "CartonReferenceDetails")]
    public partial class CartonReferenceDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CartonReferenceDetails" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CartonReferenceDetails() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CartonReferenceDetails" /> class.
        /// </summary>
        /// <param name="cartonCount">Pallet level carton count is mandatory for single item pallet and optional for mixed item pallet..</param>
        /// <param name="cartonReferenceNumbers">Array of reference numbers for the carton that are part of this pallet/shipment. Please provide the cartonSequenceNumber from the &#39;cartons&#39; segment to refer to that carton&#39;s details here. (required).</param>
        public CartonReferenceDetails(int cartonCount = default(int), List<string> cartonReferenceNumbers = default(List<string>))
        {
            // to ensure "cartonReferenceNumbers" is required (not null)
            if (cartonReferenceNumbers == null)
            {
                throw new ArgumentNullException("cartonReferenceNumbers is a required property for CartonReferenceDetails and cannot be null");
            }
            this.CartonReferenceNumbers = cartonReferenceNumbers;
            this.CartonCount = cartonCount;
        }

        /// <summary>
        /// Pallet level carton count is mandatory for single item pallet and optional for mixed item pallet.
        /// </summary>
        /// <value>Pallet level carton count is mandatory for single item pallet and optional for mixed item pallet.</value>
        [DataMember(Name = "cartonCount", EmitDefaultValue = false)]
        public int CartonCount { get; set; }

        /// <summary>
        /// Array of reference numbers for the carton that are part of this pallet/shipment. Please provide the cartonSequenceNumber from the &#39;cartons&#39; segment to refer to that carton&#39;s details here.
        /// </summary>
        /// <value>Array of reference numbers for the carton that are part of this pallet/shipment. Please provide the cartonSequenceNumber from the &#39;cartons&#39; segment to refer to that carton&#39;s details here.</value>
        [DataMember(Name = "cartonReferenceNumbers", IsRequired = true, EmitDefaultValue = true)]
        public List<string> CartonReferenceNumbers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CartonReferenceDetails {\n");
            sb.Append("  CartonCount: ").Append(CartonCount).Append("\n");
            sb.Append("  CartonReferenceNumbers: ").Append(CartonReferenceNumbers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
