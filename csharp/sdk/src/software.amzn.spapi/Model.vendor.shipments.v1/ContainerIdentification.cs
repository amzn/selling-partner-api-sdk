/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.shipments.v1
{
    /// <summary>
    /// A list of carton identifiers.
    /// </summary>
    [DataContract(Name = "ContainerIdentification")]
    public partial class ContainerIdentification : IValidatableObject
    {
        /// <summary>
        /// The container identification type.
        /// </summary>
        /// <value>The container identification type.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ContainerIdentificationTypeEnum
        {
            /// <summary>
            /// Enum SSCC for value: SSCC
            /// </summary>
            [EnumMember(Value = "SSCC")]
            SSCC = 1,

            /// <summary>
            /// Enum AMZNCC for value: AMZNCC
            /// </summary>
            [EnumMember(Value = "AMZNCC")]
            AMZNCC = 2,

            /// <summary>
            /// Enum GTIN for value: GTIN
            /// </summary>
            [EnumMember(Value = "GTIN")]
            GTIN = 3,

            /// <summary>
            /// Enum BPS for value: BPS
            /// </summary>
            [EnumMember(Value = "BPS")]
            BPS = 4,

            /// <summary>
            /// Enum CID for value: CID
            /// </summary>
            [EnumMember(Value = "CID")]
            CID = 5
        }


        /// <summary>
        /// The container identification type.
        /// </summary>
        /// <value>The container identification type.</value>
        [DataMember(Name = "containerIdentificationType", IsRequired = true, EmitDefaultValue = true)]
        public ContainerIdentificationTypeEnum ContainerIdentificationType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ContainerIdentification" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ContainerIdentification() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ContainerIdentification" /> class.
        /// </summary>
        /// <param name="containerIdentificationType">The container identification type. (required).</param>
        /// <param name="containerIdentificationNumber">Container identification number that adheres to the definition of the container identification type. (required).</param>
        public ContainerIdentification(ContainerIdentificationTypeEnum containerIdentificationType = default(ContainerIdentificationTypeEnum), string containerIdentificationNumber = default(string))
        {
            this.ContainerIdentificationType = containerIdentificationType;
            // to ensure "containerIdentificationNumber" is required (not null)
            if (containerIdentificationNumber == null)
            {
                throw new ArgumentNullException("containerIdentificationNumber is a required property for ContainerIdentification and cannot be null");
            }
            this.ContainerIdentificationNumber = containerIdentificationNumber;
        }

        /// <summary>
        /// Container identification number that adheres to the definition of the container identification type.
        /// </summary>
        /// <value>Container identification number that adheres to the definition of the container identification type.</value>
        [DataMember(Name = "containerIdentificationNumber", IsRequired = true, EmitDefaultValue = true)]
        public string ContainerIdentificationNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContainerIdentification {\n");
            sb.Append("  ContainerIdentificationType: ").Append(ContainerIdentificationType).Append("\n");
            sb.Append("  ContainerIdentificationNumber: ").Append(ContainerIdentificationNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
