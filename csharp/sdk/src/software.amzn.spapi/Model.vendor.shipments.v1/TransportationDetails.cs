/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.shipments.v1
{
    /// <summary>
    /// Transportation details for this shipment.
    /// </summary>
    [DataContract(Name = "TransportationDetails")]
    public partial class TransportationDetails : IValidatableObject
    {
        /// <summary>
        /// The type of shipment.
        /// </summary>
        /// <value>The type of shipment.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ShipModeEnum
        {
            /// <summary>
            /// Enum TruckLoad for value: TruckLoad
            /// </summary>
            [EnumMember(Value = "TruckLoad")]
            TruckLoad = 1,

            /// <summary>
            /// Enum LessThanTruckLoad for value: LessThanTruckLoad
            /// </summary>
            [EnumMember(Value = "LessThanTruckLoad")]
            LessThanTruckLoad = 2,

            /// <summary>
            /// Enum SmallParcel for value: SmallParcel
            /// </summary>
            [EnumMember(Value = "SmallParcel")]
            SmallParcel = 3
        }


        /// <summary>
        /// The type of shipment.
        /// </summary>
        /// <value>The type of shipment.</value>
        [DataMember(Name = "shipMode", EmitDefaultValue = false)]
        public ShipModeEnum? ShipMode { get; set; }
        /// <summary>
        /// The mode of transportation for this shipment.
        /// </summary>
        /// <value>The mode of transportation for this shipment.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TransportationModeEnum
        {
            /// <summary>
            /// Enum Road for value: Road
            /// </summary>
            [EnumMember(Value = "Road")]
            Road = 1,

            /// <summary>
            /// Enum Air for value: Air
            /// </summary>
            [EnumMember(Value = "Air")]
            Air = 2,

            /// <summary>
            /// Enum Ocean for value: Ocean
            /// </summary>
            [EnumMember(Value = "Ocean")]
            Ocean = 3
        }


        /// <summary>
        /// The mode of transportation for this shipment.
        /// </summary>
        /// <value>The mode of transportation for this shipment.</value>
        [DataMember(Name = "transportationMode", EmitDefaultValue = false)]
        public TransportationModeEnum? TransportationMode { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TransportationDetails" /> class.
        /// </summary>
        /// <param name="shipMode">The type of shipment..</param>
        /// <param name="transportationMode">The mode of transportation for this shipment..</param>
        /// <param name="shippedDate">Date when shipment is performed by the Vendor to Buyer.</param>
        /// <param name="estimatedDeliveryDate">Estimated Date on which shipment will be delivered from Vendor to Buyer.</param>
        /// <param name="shipmentDeliveryDate">Date on which shipment will be delivered from Vendor to Buyer.</param>
        /// <param name="carrierDetails">carrierDetails.</param>
        /// <param name="billOfLadingNumber">The Bill of Lading (BOL) number is a unique number assigned to each shipment of goods by the vendor or shipper during the creation of the Bill of Lading. This number must be unique for every shipment and cannot be a date/time or single character. The BOL numer is mandatory in Shipment Confirmation message for FTL and LTL shipments, and must match the paper BOL provided with the shipment. Instead of BOL, an alternative reference number (like Delivery Note Number) for the shipment can also be sent in this field..</param>
        public TransportationDetails(ShipModeEnum? shipMode = default(ShipModeEnum?), TransportationModeEnum? transportationMode = default(TransportationModeEnum?), DateTime shippedDate = default(DateTime), DateTime estimatedDeliveryDate = default(DateTime), DateTime shipmentDeliveryDate = default(DateTime), CarrierDetails carrierDetails = default(CarrierDetails), string billOfLadingNumber = default(string))
        {
            this.ShipMode = shipMode;
            this.TransportationMode = transportationMode;
            this.ShippedDate = shippedDate;
            this.EstimatedDeliveryDate = estimatedDeliveryDate;
            this.ShipmentDeliveryDate = shipmentDeliveryDate;
            this.CarrierDetails = carrierDetails;
            this.BillOfLadingNumber = billOfLadingNumber;
        }

        /// <summary>
        /// Date when shipment is performed by the Vendor to Buyer
        /// </summary>
        /// <value>Date when shipment is performed by the Vendor to Buyer</value>
        [DataMember(Name = "shippedDate", EmitDefaultValue = false)]
        public DateTime ShippedDate { get; set; }

        /// <summary>
        /// Estimated Date on which shipment will be delivered from Vendor to Buyer
        /// </summary>
        /// <value>Estimated Date on which shipment will be delivered from Vendor to Buyer</value>
        [DataMember(Name = "estimatedDeliveryDate", EmitDefaultValue = false)]
        public DateTime EstimatedDeliveryDate { get; set; }

        /// <summary>
        /// Date on which shipment will be delivered from Vendor to Buyer
        /// </summary>
        /// <value>Date on which shipment will be delivered from Vendor to Buyer</value>
        [DataMember(Name = "shipmentDeliveryDate", EmitDefaultValue = false)]
        public DateTime ShipmentDeliveryDate { get; set; }

        /// <summary>
        /// Gets or Sets CarrierDetails
        /// </summary>
        [DataMember(Name = "carrierDetails", EmitDefaultValue = false)]
        public CarrierDetails CarrierDetails { get; set; }

        /// <summary>
        /// The Bill of Lading (BOL) number is a unique number assigned to each shipment of goods by the vendor or shipper during the creation of the Bill of Lading. This number must be unique for every shipment and cannot be a date/time or single character. The BOL numer is mandatory in Shipment Confirmation message for FTL and LTL shipments, and must match the paper BOL provided with the shipment. Instead of BOL, an alternative reference number (like Delivery Note Number) for the shipment can also be sent in this field.
        /// </summary>
        /// <value>The Bill of Lading (BOL) number is a unique number assigned to each shipment of goods by the vendor or shipper during the creation of the Bill of Lading. This number must be unique for every shipment and cannot be a date/time or single character. The BOL numer is mandatory in Shipment Confirmation message for FTL and LTL shipments, and must match the paper BOL provided with the shipment. Instead of BOL, an alternative reference number (like Delivery Note Number) for the shipment can also be sent in this field.</value>
        [DataMember(Name = "billOfLadingNumber", EmitDefaultValue = false)]
        public string BillOfLadingNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TransportationDetails {\n");
            sb.Append("  ShipMode: ").Append(ShipMode).Append("\n");
            sb.Append("  TransportationMode: ").Append(TransportationMode).Append("\n");
            sb.Append("  ShippedDate: ").Append(ShippedDate).Append("\n");
            sb.Append("  EstimatedDeliveryDate: ").Append(EstimatedDeliveryDate).Append("\n");
            sb.Append("  ShipmentDeliveryDate: ").Append(ShipmentDeliveryDate).Append("\n");
            sb.Append("  CarrierDetails: ").Append(CarrierDetails).Append("\n");
            sb.Append("  BillOfLadingNumber: ").Append(BillOfLadingNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
