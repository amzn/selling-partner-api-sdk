/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.shipments.v1
{
    /// <summary>
    /// Details of the item being shipped.
    /// </summary>
    [DataContract(Name = "PackedItems")]
    public partial class PackedItems : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PackedItems" /> class.
        /// </summary>
        /// <param name="itemSequenceNumber">Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level..</param>
        /// <param name="buyerProductIdentifier">Buyer Standard Identification Number (ASIN) of an item..</param>
        /// <param name="vendorProductIdentifier">The vendor selected product identification of the item. Should be the same as was sent in the purchase order..</param>
        /// <param name="packedQuantity">packedQuantity.</param>
        /// <param name="itemDetails">itemDetails.</param>
        public PackedItems(string itemSequenceNumber = default(string), string buyerProductIdentifier = default(string), string vendorProductIdentifier = default(string), ItemQuantity packedQuantity = default(ItemQuantity), PackageItemDetails itemDetails = default(PackageItemDetails))
        {
            this.ItemSequenceNumber = itemSequenceNumber;
            this.BuyerProductIdentifier = buyerProductIdentifier;
            this.VendorProductIdentifier = vendorProductIdentifier;
            this.PackedQuantity = packedQuantity;
            this.ItemDetails = itemDetails;
        }

        /// <summary>
        /// Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level.
        /// </summary>
        /// <value>Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level.</value>
        [DataMember(Name = "itemSequenceNumber", EmitDefaultValue = false)]
        public string ItemSequenceNumber { get; set; }

        /// <summary>
        /// Buyer Standard Identification Number (ASIN) of an item.
        /// </summary>
        /// <value>Buyer Standard Identification Number (ASIN) of an item.</value>
        [DataMember(Name = "buyerProductIdentifier", EmitDefaultValue = false)]
        public string BuyerProductIdentifier { get; set; }

        /// <summary>
        /// The vendor selected product identification of the item. Should be the same as was sent in the purchase order.
        /// </summary>
        /// <value>The vendor selected product identification of the item. Should be the same as was sent in the purchase order.</value>
        [DataMember(Name = "vendorProductIdentifier", EmitDefaultValue = false)]
        public string VendorProductIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets PackedQuantity
        /// </summary>
        [DataMember(Name = "packedQuantity", EmitDefaultValue = false)]
        public ItemQuantity PackedQuantity { get; set; }

        /// <summary>
        /// Gets or Sets ItemDetails
        /// </summary>
        [DataMember(Name = "itemDetails", EmitDefaultValue = false)]
        public PackageItemDetails ItemDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PackedItems {\n");
            sb.Append("  ItemSequenceNumber: ").Append(ItemSequenceNumber).Append("\n");
            sb.Append("  BuyerProductIdentifier: ").Append(BuyerProductIdentifier).Append("\n");
            sb.Append("  VendorProductIdentifier: ").Append(VendorProductIdentifier).Append("\n");
            sb.Append("  PackedQuantity: ").Append(PackedQuantity).Append("\n");
            sb.Append("  ItemDetails: ").Append(ItemDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
