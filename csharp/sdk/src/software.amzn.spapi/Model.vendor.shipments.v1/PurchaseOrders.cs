/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.shipments.v1
{
    /// <summary>
    /// Transport Request pickup date
    /// </summary>
    [DataContract(Name = "PurchaseOrders")]
    public partial class PurchaseOrders : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PurchaseOrders" /> class.
        /// </summary>
        /// <param name="purchaseOrderNumber">Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment..</param>
        /// <param name="purchaseOrderDate">Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment..</param>
        /// <param name="shipWindow">Date range in which shipment is expected for these purchase orders..</param>
        /// <param name="items">A list of the items that are associated to the PO in this transport and their associated details..</param>
        public PurchaseOrders(string purchaseOrderNumber = default(string), DateTime purchaseOrderDate = default(DateTime), string shipWindow = default(string), List<PurchaseOrderItems> items = default(List<PurchaseOrderItems>))
        {
            this.PurchaseOrderNumber = purchaseOrderNumber;
            this.PurchaseOrderDate = purchaseOrderDate;
            this.ShipWindow = shipWindow;
            this.Items = items;
        }

        /// <summary>
        /// Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment.
        /// </summary>
        /// <value>Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment.</value>
        [DataMember(Name = "purchaseOrderNumber", EmitDefaultValue = false)]
        public string PurchaseOrderNumber { get; set; }

        /// <summary>
        /// Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment.
        /// </summary>
        /// <value>Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment.</value>
        [DataMember(Name = "purchaseOrderDate", EmitDefaultValue = false)]
        public DateTime PurchaseOrderDate { get; set; }

        /// <summary>
        /// Date range in which shipment is expected for these purchase orders.
        /// </summary>
        /// <value>Date range in which shipment is expected for these purchase orders.</value>
        [DataMember(Name = "shipWindow", EmitDefaultValue = false)]
        public string ShipWindow { get; set; }

        /// <summary>
        /// A list of the items that are associated to the PO in this transport and their associated details.
        /// </summary>
        /// <value>A list of the items that are associated to the PO in this transport and their associated details.</value>
        [DataMember(Name = "items", EmitDefaultValue = false)]
        public List<PurchaseOrderItems> Items { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PurchaseOrders {\n");
            sb.Append("  PurchaseOrderNumber: ").Append(PurchaseOrderNumber).Append("\n");
            sb.Append("  PurchaseOrderDate: ").Append(PurchaseOrderDate).Append("\n");
            sb.Append("  ShipWindow: ").Append(ShipWindow).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
