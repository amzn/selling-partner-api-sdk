/*
 * Selling Partner API for Data Kiosk
 *
 * The Selling Partner API for Data Kiosk lets you submit GraphQL queries from a variety of schemas to help selling partners manage their businesses.
 *
 * The version of the OpenAPI document: 2023-11-15
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.datakiosk.v2023_11_15
{
    /// <summary>
    /// The response for the &#x60;createQuery&#x60; operation.
    /// </summary>
    [DataContract(Name = "CreateQueryResponse")]
    public partial class CreateQueryResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateQueryResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateQueryResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateQueryResponse" /> class.
        /// </summary>
        /// <param name="queryId">The identifier for the query. This identifier is unique only in combination with a selling partner account ID. (required).</param>
        public CreateQueryResponse(string queryId = default(string))
        {
            // to ensure "queryId" is required (not null)
            if (queryId == null)
            {
                throw new ArgumentNullException("queryId is a required property for CreateQueryResponse and cannot be null");
            }
            this.QueryId = queryId;
        }

        /// <summary>
        /// The identifier for the query. This identifier is unique only in combination with a selling partner account ID.
        /// </summary>
        /// <value>The identifier for the query. This identifier is unique only in combination with a selling partner account ID.</value>
        [DataMember(Name = "queryId", IsRequired = true, EmitDefaultValue = true)]
        public string QueryId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateQueryResponse {\n");
            sb.Append("  QueryId: ").Append(QueryId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
