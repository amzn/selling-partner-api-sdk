/*
 * Selling Partner API for Easy Ship
 *
 * Use the Selling Partner API for Easy Ship to build applications for sellers to manage and ship Amazon Easy Ship orders. With this API, you can get available time slots, schedule and reschedule Easy Ship orders, and print shipping labels, invoices, and warranties. To review the differences in Easy Ship operations by marketplace, refer to [Marketplace support](https://developer-docs.amazon.com/sp-api/docs/easyship-api-v2022-03-23-use-case-guide#marketplace-support).
 *
 * The version of the OpenAPI document: 2022-03-23
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.easyship.v2022_03_23
{
    /// <summary>
    /// Item identifier and serial number information.
    /// </summary>
    [DataContract(Name = "Item")]
    public partial class Item : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Item" /> class.
        /// </summary>
        /// <param name="orderItemId">The Amazon-defined order item identifier..</param>
        /// <param name="orderItemSerialNumbers">A list of serial numbers for the items associated with the &#x60;OrderItemId&#x60; value..</param>
        public Item(string orderItemId = default(string), List<string> orderItemSerialNumbers = default(List<string>))
        {
            this.OrderItemId = orderItemId;
            this.OrderItemSerialNumbers = orderItemSerialNumbers;
        }

        /// <summary>
        /// The Amazon-defined order item identifier.
        /// </summary>
        /// <value>The Amazon-defined order item identifier.</value>
        [DataMember(Name = "orderItemId", EmitDefaultValue = false)]
        public string OrderItemId { get; set; }

        /// <summary>
        /// A list of serial numbers for the items associated with the &#x60;OrderItemId&#x60; value.
        /// </summary>
        /// <value>A list of serial numbers for the items associated with the &#x60;OrderItemId&#x60; value.</value>
        [DataMember(Name = "orderItemSerialNumbers", EmitDefaultValue = false)]
        public List<string> OrderItemSerialNumbers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Item {\n");
            sb.Append("  OrderItemId: ").Append(OrderItemId).Append("\n");
            sb.Append("  OrderItemSerialNumbers: ").Append(OrderItemSerialNumbers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // OrderItemId (string) maxLength
            if (this.OrderItemId != null && this.OrderItemId.Length > 255)
            {
                yield return new ValidationResult("Invalid value for OrderItemId, length must be less than 255.", new [] { "OrderItemId" });
            }

            yield break;
        }
    }

}
