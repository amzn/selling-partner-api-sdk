/*
 * Selling Partner API for Easy Ship
 *
 * Use the Selling Partner API for Easy Ship to build applications for sellers to manage and ship Amazon Easy Ship orders. With this API, you can get available time slots, schedule and reschedule Easy Ship orders, and print shipping labels, invoices, and warranties. To review the differences in Easy Ship operations by marketplace, refer to [Marketplace support](https://developer-docs.amazon.com/sp-api/docs/easyship-api-v2022-03-23-use-case-guide#marketplace-support).
 *
 * The version of the OpenAPI document: 2022-03-23
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.easyship.v2022_03_23
{
    /// <summary>
    /// The request body for the POST /easyShip/2022-03-23/packages/bulk API.
    /// </summary>
    [DataContract(Name = "CreateScheduledPackagesRequest")]
    public partial class CreateScheduledPackagesRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets LabelFormat
        /// </summary>
        [DataMember(Name = "labelFormat", IsRequired = true, EmitDefaultValue = true)]
        public LabelFormat LabelFormat { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateScheduledPackagesRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateScheduledPackagesRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateScheduledPackagesRequest" /> class.
        /// </summary>
        /// <param name="marketplaceId">A string of up to 255 characters. (required).</param>
        /// <param name="orderScheduleDetailsList">An array allowing users to specify orders to be scheduled. (required).</param>
        /// <param name="labelFormat">labelFormat (required).</param>
        public CreateScheduledPackagesRequest(string marketplaceId = default(string), List<OrderScheduleDetails> orderScheduleDetailsList = default(List<OrderScheduleDetails>), LabelFormat labelFormat = default(LabelFormat))
        {
            // to ensure "marketplaceId" is required (not null)
            if (marketplaceId == null)
            {
                throw new ArgumentNullException("marketplaceId is a required property for CreateScheduledPackagesRequest and cannot be null");
            }
            this.MarketplaceId = marketplaceId;
            // to ensure "orderScheduleDetailsList" is required (not null)
            if (orderScheduleDetailsList == null)
            {
                throw new ArgumentNullException("orderScheduleDetailsList is a required property for CreateScheduledPackagesRequest and cannot be null");
            }
            this.OrderScheduleDetailsList = orderScheduleDetailsList;
            this.LabelFormat = labelFormat;
        }

        /// <summary>
        /// A string of up to 255 characters.
        /// </summary>
        /// <value>A string of up to 255 characters.</value>
        [DataMember(Name = "marketplaceId", IsRequired = true, EmitDefaultValue = true)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// An array allowing users to specify orders to be scheduled.
        /// </summary>
        /// <value>An array allowing users to specify orders to be scheduled.</value>
        [DataMember(Name = "orderScheduleDetailsList", IsRequired = true, EmitDefaultValue = true)]
        public List<OrderScheduleDetails> OrderScheduleDetailsList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateScheduledPackagesRequest {\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  OrderScheduleDetailsList: ").Append(OrderScheduleDetailsList).Append("\n");
            sb.Append("  LabelFormat: ").Append(LabelFormat).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // MarketplaceId (string) maxLength
            if (this.MarketplaceId != null && this.MarketplaceId.Length > 255)
            {
                yield return new ValidationResult("Invalid value for MarketplaceId, length must be less than 255.", new [] { "MarketplaceId" });
            }

            // MarketplaceId (string) minLength
            if (this.MarketplaceId != null && this.MarketplaceId.Length < 1)
            {
                yield return new ValidationResult("Invalid value for MarketplaceId, length must be greater than 1.", new [] { "MarketplaceId" });
            }

            yield break;
        }
    }

}
