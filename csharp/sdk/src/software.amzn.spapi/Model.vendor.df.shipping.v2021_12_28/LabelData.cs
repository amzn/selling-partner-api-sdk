/*
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * The version of the OpenAPI document: 2021-12-28
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.df.shipping.v2021_12_28
{
    /// <summary>
    /// Details of the shipment label.
    /// </summary>
    [DataContract(Name = "LabelData")]
    public partial class LabelData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LabelData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected LabelData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="LabelData" /> class.
        /// </summary>
        /// <param name="packageIdentifier">Identifier for the package. The first package will be 001, the second 002, and so on. This number is used as a reference to refer to this package from the pallet level..</param>
        /// <param name="trackingNumber">Package tracking identifier from the shipping carrier..</param>
        /// <param name="shipMethod">Ship method to be used for shipping the order. Amazon defines Ship Method Codes indicating shipping carrier and shipment service level. Ship Method Codes are case and format sensitive. The same ship method code should returned on the shipment confirmation. Note that the Ship Method Codes are vendor specific and will be provided to each vendor during the implementation..</param>
        /// <param name="shipMethodName">Shipping method name for internal reference..</param>
        /// <param name="content">This field will contain the Base64 string of the shipment label content. (required).</param>
        public LabelData(string packageIdentifier = default(string), string trackingNumber = default(string), string shipMethod = default(string), string shipMethodName = default(string), string content = default(string))
        {
            // to ensure "content" is required (not null)
            if (content == null)
            {
                throw new ArgumentNullException("content is a required property for LabelData and cannot be null");
            }
            this.Content = content;
            this.PackageIdentifier = packageIdentifier;
            this.TrackingNumber = trackingNumber;
            this.ShipMethod = shipMethod;
            this.ShipMethodName = shipMethodName;
        }

        /// <summary>
        /// Identifier for the package. The first package will be 001, the second 002, and so on. This number is used as a reference to refer to this package from the pallet level.
        /// </summary>
        /// <value>Identifier for the package. The first package will be 001, the second 002, and so on. This number is used as a reference to refer to this package from the pallet level.</value>
        [DataMember(Name = "packageIdentifier", EmitDefaultValue = false)]
        public string PackageIdentifier { get; set; }

        /// <summary>
        /// Package tracking identifier from the shipping carrier.
        /// </summary>
        /// <value>Package tracking identifier from the shipping carrier.</value>
        [DataMember(Name = "trackingNumber", EmitDefaultValue = false)]
        public string TrackingNumber { get; set; }

        /// <summary>
        /// Ship method to be used for shipping the order. Amazon defines Ship Method Codes indicating shipping carrier and shipment service level. Ship Method Codes are case and format sensitive. The same ship method code should returned on the shipment confirmation. Note that the Ship Method Codes are vendor specific and will be provided to each vendor during the implementation.
        /// </summary>
        /// <value>Ship method to be used for shipping the order. Amazon defines Ship Method Codes indicating shipping carrier and shipment service level. Ship Method Codes are case and format sensitive. The same ship method code should returned on the shipment confirmation. Note that the Ship Method Codes are vendor specific and will be provided to each vendor during the implementation.</value>
        [DataMember(Name = "shipMethod", EmitDefaultValue = false)]
        public string ShipMethod { get; set; }

        /// <summary>
        /// Shipping method name for internal reference.
        /// </summary>
        /// <value>Shipping method name for internal reference.</value>
        [DataMember(Name = "shipMethodName", EmitDefaultValue = false)]
        public string ShipMethodName { get; set; }

        /// <summary>
        /// This field will contain the Base64 string of the shipment label content.
        /// </summary>
        /// <value>This field will contain the Base64 string of the shipment label content.</value>
        [DataMember(Name = "content", IsRequired = true, EmitDefaultValue = true)]
        public string Content { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LabelData {\n");
            sb.Append("  PackageIdentifier: ").Append(PackageIdentifier).Append("\n");
            sb.Append("  TrackingNumber: ").Append(TrackingNumber).Append("\n");
            sb.Append("  ShipMethod: ").Append(ShipMethod).Append("\n");
            sb.Append("  ShipMethodName: ").Append(ShipMethodName).Append("\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
