/*
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * The version of the OpenAPI document: 2021-12-28
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.df.shipping.v2021_12_28
{
    /// <summary>
    /// Details about a shipment.
    /// </summary>
    [DataContract(Name = "ShipmentDetails")]
    public partial class ShipmentDetails : IValidatableObject
    {
        /// <summary>
        /// The shipment status.
        /// </summary>
        /// <value>The shipment status.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ShipmentStatusEnum
        {
            /// <summary>
            /// Enum SHIPPED for value: SHIPPED
            /// </summary>
            [EnumMember(Value = "SHIPPED")]
            SHIPPED = 1,

            /// <summary>
            /// Enum FLOORDENIAL for value: FLOOR_DENIAL
            /// </summary>
            [EnumMember(Value = "FLOOR_DENIAL")]
            FLOORDENIAL = 2
        }


        /// <summary>
        /// The shipment status.
        /// </summary>
        /// <value>The shipment status.</value>
        [DataMember(Name = "shipmentStatus", IsRequired = true, EmitDefaultValue = true)]
        public ShipmentStatusEnum ShipmentStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentDetails" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ShipmentDetails() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentDetails" /> class.
        /// </summary>
        /// <param name="shippedDate">The date of the shipment&#39;s departure from vendor&#39;s location. Vendors send ASNs within 30 minutes of departure from their warehouse/distribution center or six hours prior to the appointment time at the Amazon destination warehouse. The shipped date mentioned in the shipment confirmation cannot be in the future. (required).</param>
        /// <param name="shipmentStatus">The shipment status. (required).</param>
        /// <param name="isPriorityShipment">Provide the priority of the shipment..</param>
        /// <param name="vendorOrderNumber">The vendor order number is a unique identifier generated by a vendor for their reference..</param>
        /// <param name="estimatedDeliveryDate">The date on which the shipment is expected to reach the buyer&#39;s warehouse. The date is estimated based on the average transit time between the ship-from location and the destination. Usually, the exact appointment time is unknown when creating the shipment confirmation and is later provided by the buyer..</param>
        public ShipmentDetails(DateTime shippedDate = default(DateTime), ShipmentStatusEnum shipmentStatus = default(ShipmentStatusEnum), bool isPriorityShipment = default(bool), string vendorOrderNumber = default(string), DateTime estimatedDeliveryDate = default(DateTime))
        {
            this.ShippedDate = shippedDate;
            this.ShipmentStatus = shipmentStatus;
            this.IsPriorityShipment = isPriorityShipment;
            this.VendorOrderNumber = vendorOrderNumber;
            this.EstimatedDeliveryDate = estimatedDeliveryDate;
        }

        /// <summary>
        /// The date of the shipment&#39;s departure from vendor&#39;s location. Vendors send ASNs within 30 minutes of departure from their warehouse/distribution center or six hours prior to the appointment time at the Amazon destination warehouse. The shipped date mentioned in the shipment confirmation cannot be in the future.
        /// </summary>
        /// <value>The date of the shipment&#39;s departure from vendor&#39;s location. Vendors send ASNs within 30 minutes of departure from their warehouse/distribution center or six hours prior to the appointment time at the Amazon destination warehouse. The shipped date mentioned in the shipment confirmation cannot be in the future.</value>
        [DataMember(Name = "shippedDate", IsRequired = true, EmitDefaultValue = true)]
        public DateTime ShippedDate { get; set; }

        /// <summary>
        /// Provide the priority of the shipment.
        /// </summary>
        /// <value>Provide the priority of the shipment.</value>
        [DataMember(Name = "isPriorityShipment", EmitDefaultValue = true)]
        public bool IsPriorityShipment { get; set; }

        /// <summary>
        /// The vendor order number is a unique identifier generated by a vendor for their reference.
        /// </summary>
        /// <value>The vendor order number is a unique identifier generated by a vendor for their reference.</value>
        [DataMember(Name = "vendorOrderNumber", EmitDefaultValue = false)]
        public string VendorOrderNumber { get; set; }

        /// <summary>
        /// The date on which the shipment is expected to reach the buyer&#39;s warehouse. The date is estimated based on the average transit time between the ship-from location and the destination. Usually, the exact appointment time is unknown when creating the shipment confirmation and is later provided by the buyer.
        /// </summary>
        /// <value>The date on which the shipment is expected to reach the buyer&#39;s warehouse. The date is estimated based on the average transit time between the ship-from location and the destination. Usually, the exact appointment time is unknown when creating the shipment confirmation and is later provided by the buyer.</value>
        [DataMember(Name = "estimatedDeliveryDate", EmitDefaultValue = false)]
        public DateTime EstimatedDeliveryDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShipmentDetails {\n");
            sb.Append("  ShippedDate: ").Append(ShippedDate).Append("\n");
            sb.Append("  ShipmentStatus: ").Append(ShipmentStatus).Append("\n");
            sb.Append("  IsPriorityShipment: ").Append(IsPriorityShipment).Append("\n");
            sb.Append("  VendorOrderNumber: ").Append(VendorOrderNumber).Append("\n");
            sb.Append("  EstimatedDeliveryDate: ").Append(EstimatedDeliveryDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
