/*
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * The version of the OpenAPI document: 2021-12-28
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.df.shipping.v2021_12_28
{
    /// <summary>
    /// Details for the shipment status update given by the vendor for the specific package.
    /// </summary>
    [DataContract(Name = "StatusUpdateDetails")]
    public partial class StatusUpdateDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StatusUpdateDetails" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected StatusUpdateDetails() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="StatusUpdateDetails" /> class.
        /// </summary>
        /// <param name="trackingNumber">The shipment tracking number is required for every package and should match the &#x60;trackingNumber&#x60; sent for the shipment confirmation. (required).</param>
        /// <param name="statusCode">Indicates the shipment status code of the package that provides transportation information for Amazon tracking systems and ultimately for the final customer. For more information, refer to the [Additional Fields Explanation](https://developer-docs.amazon.com/sp-api/docs/vendor-direct-fulfillment-shipping-api-use-case-guide#additional-fields-explanation). (required).</param>
        /// <param name="reasonCode">Provides a reason code for the status of the package that will provide additional information about the transportation status. For more information, refer to the [Additional Fields Explanation](https://developer-docs.amazon.com/sp-api/docs/vendor-direct-fulfillment-shipping-api-use-case-guide#additional-fields-explanation). (required).</param>
        /// <param name="statusDateTime">The date and time when the shipment status was updated. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00. (required).</param>
        /// <param name="statusLocationAddress">statusLocationAddress (required).</param>
        /// <param name="shipmentSchedule">shipmentSchedule.</param>
        public StatusUpdateDetails(string trackingNumber = default(string), string statusCode = default(string), string reasonCode = default(string), DateTime statusDateTime = default(DateTime), Address statusLocationAddress = default(Address), ShipmentSchedule shipmentSchedule = default(ShipmentSchedule))
        {
            // to ensure "trackingNumber" is required (not null)
            if (trackingNumber == null)
            {
                throw new ArgumentNullException("trackingNumber is a required property for StatusUpdateDetails and cannot be null");
            }
            this.TrackingNumber = trackingNumber;
            // to ensure "statusCode" is required (not null)
            if (statusCode == null)
            {
                throw new ArgumentNullException("statusCode is a required property for StatusUpdateDetails and cannot be null");
            }
            this.StatusCode = statusCode;
            // to ensure "reasonCode" is required (not null)
            if (reasonCode == null)
            {
                throw new ArgumentNullException("reasonCode is a required property for StatusUpdateDetails and cannot be null");
            }
            this.ReasonCode = reasonCode;
            this.StatusDateTime = statusDateTime;
            // to ensure "statusLocationAddress" is required (not null)
            if (statusLocationAddress == null)
            {
                throw new ArgumentNullException("statusLocationAddress is a required property for StatusUpdateDetails and cannot be null");
            }
            this.StatusLocationAddress = statusLocationAddress;
            this.ShipmentSchedule = shipmentSchedule;
        }

        /// <summary>
        /// The shipment tracking number is required for every package and should match the &#x60;trackingNumber&#x60; sent for the shipment confirmation.
        /// </summary>
        /// <value>The shipment tracking number is required for every package and should match the &#x60;trackingNumber&#x60; sent for the shipment confirmation.</value>
        [DataMember(Name = "trackingNumber", IsRequired = true, EmitDefaultValue = true)]
        public string TrackingNumber { get; set; }

        /// <summary>
        /// Indicates the shipment status code of the package that provides transportation information for Amazon tracking systems and ultimately for the final customer. For more information, refer to the [Additional Fields Explanation](https://developer-docs.amazon.com/sp-api/docs/vendor-direct-fulfillment-shipping-api-use-case-guide#additional-fields-explanation).
        /// </summary>
        /// <value>Indicates the shipment status code of the package that provides transportation information for Amazon tracking systems and ultimately for the final customer. For more information, refer to the [Additional Fields Explanation](https://developer-docs.amazon.com/sp-api/docs/vendor-direct-fulfillment-shipping-api-use-case-guide#additional-fields-explanation).</value>
        [DataMember(Name = "statusCode", IsRequired = true, EmitDefaultValue = true)]
        public string StatusCode { get; set; }

        /// <summary>
        /// Provides a reason code for the status of the package that will provide additional information about the transportation status. For more information, refer to the [Additional Fields Explanation](https://developer-docs.amazon.com/sp-api/docs/vendor-direct-fulfillment-shipping-api-use-case-guide#additional-fields-explanation).
        /// </summary>
        /// <value>Provides a reason code for the status of the package that will provide additional information about the transportation status. For more information, refer to the [Additional Fields Explanation](https://developer-docs.amazon.com/sp-api/docs/vendor-direct-fulfillment-shipping-api-use-case-guide#additional-fields-explanation).</value>
        [DataMember(Name = "reasonCode", IsRequired = true, EmitDefaultValue = true)]
        public string ReasonCode { get; set; }

        /// <summary>
        /// The date and time when the shipment status was updated. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
        /// </summary>
        /// <value>The date and time when the shipment status was updated. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.</value>
        [DataMember(Name = "statusDateTime", IsRequired = true, EmitDefaultValue = true)]
        public DateTime StatusDateTime { get; set; }

        /// <summary>
        /// Gets or Sets StatusLocationAddress
        /// </summary>
        [DataMember(Name = "statusLocationAddress", IsRequired = true, EmitDefaultValue = true)]
        public Address StatusLocationAddress { get; set; }

        /// <summary>
        /// Gets or Sets ShipmentSchedule
        /// </summary>
        [DataMember(Name = "shipmentSchedule", EmitDefaultValue = false)]
        public ShipmentSchedule ShipmentSchedule { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class StatusUpdateDetails {\n");
            sb.Append("  TrackingNumber: ").Append(TrackingNumber).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("  ReasonCode: ").Append(ReasonCode).Append("\n");
            sb.Append("  StatusDateTime: ").Append(StatusDateTime).Append("\n");
            sb.Append("  StatusLocationAddress: ").Append(StatusLocationAddress).Append("\n");
            sb.Append("  ShipmentSchedule: ").Append(ShipmentSchedule).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
