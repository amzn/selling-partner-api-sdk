/*
 * The Selling Partner API for Amazon External Fulfillment Return Item Processing
 *
 * You can use the Amazon External Fulfillment Return Item Processing API to retrieve, track, and process return items through Amazon's External Fulfillment returns management system.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.externalFulfillment.returns.v2024_09_11
{
    /// <summary>
    /// Information about the shipping of the return packages.
    /// </summary>
    [DataContract(Name = "ReturnShippingInfo")]
    public partial class ReturnShippingInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnShippingInfo" /> class.
        /// </summary>
        /// <param name="deliveryDateTime">A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format..</param>
        /// <param name="pickupDateTime">A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format..</param>
        /// <param name="forwardTrackingInfo">forwardTrackingInfo.</param>
        /// <param name="reverseTrackingInfo">reverseTrackingInfo.</param>
        public ReturnShippingInfo(string deliveryDateTime = default(string), string pickupDateTime = default(string), TrackingInfo forwardTrackingInfo = default(TrackingInfo), TrackingInfo reverseTrackingInfo = default(TrackingInfo))
        {
            this.DeliveryDateTime = deliveryDateTime;
            this.PickupDateTime = pickupDateTime;
            this.ForwardTrackingInfo = forwardTrackingInfo;
            this.ReverseTrackingInfo = reverseTrackingInfo;
        }

        /// <summary>
        /// A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
        /// </summary>
        /// <value>A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.</value>
        [DataMember(Name = "deliveryDateTime", EmitDefaultValue = false)]
        public string DeliveryDateTime { get; set; }

        /// <summary>
        /// A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
        /// </summary>
        /// <value>A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.</value>
        [DataMember(Name = "pickupDateTime", EmitDefaultValue = false)]
        public string PickupDateTime { get; set; }

        /// <summary>
        /// Gets or Sets ForwardTrackingInfo
        /// </summary>
        [DataMember(Name = "forwardTrackingInfo", EmitDefaultValue = false)]
        public TrackingInfo ForwardTrackingInfo { get; set; }

        /// <summary>
        /// Gets or Sets ReverseTrackingInfo
        /// </summary>
        [DataMember(Name = "reverseTrackingInfo", EmitDefaultValue = false)]
        public TrackingInfo ReverseTrackingInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ReturnShippingInfo {\n");
            sb.Append("  DeliveryDateTime: ").Append(DeliveryDateTime).Append("\n");
            sb.Append("  PickupDateTime: ").Append(PickupDateTime).Append("\n");
            sb.Append("  ForwardTrackingInfo: ").Append(ForwardTrackingInfo).Append("\n");
            sb.Append("  ReverseTrackingInfo: ").Append(ReverseTrackingInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
