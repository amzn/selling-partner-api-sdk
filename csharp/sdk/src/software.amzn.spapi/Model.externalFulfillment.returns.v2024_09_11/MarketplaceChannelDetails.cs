/*
 * The Selling Partner API for Amazon External Fulfillment Return Item Processing
 *
 * You can use the Amazon External Fulfillment Return Item Processing API to retrieve, track, and process return items through Amazon's External Fulfillment returns management system.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.externalFulfillment.returns.v2024_09_11
{
    /// <summary>
    /// Marketplace channel-specific attributes for the return. These attributes are not mandatory and each channel can provide them differently.
    /// </summary>
    [DataContract(Name = "MarketplaceChannelDetails")]
    public partial class MarketplaceChannelDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MarketplaceChannelDetails" /> class.
        /// </summary>
        /// <param name="marketplaceChannel">marketplaceChannel.</param>
        /// <param name="merchantId">The ID of the merchant or seller to whom this return is created in the marketplace..</param>
        /// <param name="shipmentId">The marketplace-specific shipment ID..</param>
        /// <param name="customerOrderId">The marketplace-specific customer order ID..</param>
        /// <param name="returnLocationId">The Amazon SmartConnect ID of the location to which this return is created..</param>
        /// <param name="channelSku">The Amazon SmartConnect SKU of the channel..</param>
        /// <param name="exchangeOrderId">The Amazon SmartConnect ID of the exchange order..</param>
        public MarketplaceChannelDetails(MarketplaceChannel marketplaceChannel = default(MarketplaceChannel), string merchantId = default(string), string shipmentId = default(string), string customerOrderId = default(string), string returnLocationId = default(string), string channelSku = default(string), string exchangeOrderId = default(string))
        {
            this.MarketplaceChannel = marketplaceChannel;
            this.MerchantId = merchantId;
            this.ShipmentId = shipmentId;
            this.CustomerOrderId = customerOrderId;
            this.ReturnLocationId = returnLocationId;
            this.ChannelSku = channelSku;
            this.ExchangeOrderId = exchangeOrderId;
        }

        /// <summary>
        /// Gets or Sets MarketplaceChannel
        /// </summary>
        [DataMember(Name = "marketplaceChannel", EmitDefaultValue = false)]
        public MarketplaceChannel MarketplaceChannel { get; set; }

        /// <summary>
        /// The ID of the merchant or seller to whom this return is created in the marketplace.
        /// </summary>
        /// <value>The ID of the merchant or seller to whom this return is created in the marketplace.</value>
        [DataMember(Name = "merchantId", EmitDefaultValue = false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// The marketplace-specific shipment ID.
        /// </summary>
        /// <value>The marketplace-specific shipment ID.</value>
        [DataMember(Name = "shipmentId", EmitDefaultValue = false)]
        public string ShipmentId { get; set; }

        /// <summary>
        /// The marketplace-specific customer order ID.
        /// </summary>
        /// <value>The marketplace-specific customer order ID.</value>
        [DataMember(Name = "customerOrderId", EmitDefaultValue = false)]
        public string CustomerOrderId { get; set; }

        /// <summary>
        /// The Amazon SmartConnect ID of the location to which this return is created.
        /// </summary>
        /// <value>The Amazon SmartConnect ID of the location to which this return is created.</value>
        [DataMember(Name = "returnLocationId", EmitDefaultValue = false)]
        public string ReturnLocationId { get; set; }

        /// <summary>
        /// The Amazon SmartConnect SKU of the channel.
        /// </summary>
        /// <value>The Amazon SmartConnect SKU of the channel.</value>
        [DataMember(Name = "channelSku", EmitDefaultValue = false)]
        public string ChannelSku { get; set; }

        /// <summary>
        /// The Amazon SmartConnect ID of the exchange order.
        /// </summary>
        /// <value>The Amazon SmartConnect ID of the exchange order.</value>
        /*
        <example>6cb83006-0597-4bc1-82ab-715b33eb6cf1</example>
        */
        [DataMember(Name = "exchangeOrderId", EmitDefaultValue = false)]
        public string ExchangeOrderId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MarketplaceChannelDetails {\n");
            sb.Append("  MarketplaceChannel: ").Append(MarketplaceChannel).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  ShipmentId: ").Append(ShipmentId).Append("\n");
            sb.Append("  CustomerOrderId: ").Append(CustomerOrderId).Append("\n");
            sb.Append("  ReturnLocationId: ").Append(ReturnLocationId).Append("\n");
            sb.Append("  ChannelSku: ").Append(ChannelSku).Append("\n");
            sb.Append("  ExchangeOrderId: ").Append(ExchangeOrderId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
