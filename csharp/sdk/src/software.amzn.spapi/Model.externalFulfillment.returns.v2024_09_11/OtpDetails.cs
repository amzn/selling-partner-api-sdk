/*
 * The Selling Partner API for Amazon External Fulfillment Return Item Processing
 *
 * You can use the Amazon External Fulfillment Return Item Processing API to retrieve, track, and process return items through Amazon's External Fulfillment returns management system.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.externalFulfillment.returns.v2024_09_11
{
    /// <summary>
    /// One-time password (OTP) details of the return item.
    /// </summary>
    [DataContract(Name = "OtpDetails")]
    public partial class OtpDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OtpDetails" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OtpDetails() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OtpDetails" /> class.
        /// </summary>
        /// <param name="otp">One-time password to validate the return delivered to the seller. (required).</param>
        /// <param name="validTill">The UNIX timestamp of when the verification code expires. (required).</param>
        public OtpDetails(string otp = default(string), int validTill = default(int))
        {
            // to ensure "otp" is required (not null)
            if (otp == null)
            {
                throw new ArgumentNullException("otp is a required property for OtpDetails and cannot be null");
            }
            this.Otp = otp;
            this.ValidTill = validTill;
        }

        /// <summary>
        /// One-time password to validate the return delivered to the seller.
        /// </summary>
        /// <value>One-time password to validate the return delivered to the seller.</value>
        [DataMember(Name = "otp", IsRequired = true, EmitDefaultValue = true)]
        public string Otp { get; set; }

        /// <summary>
        /// The UNIX timestamp of when the verification code expires.
        /// </summary>
        /// <value>The UNIX timestamp of when the verification code expires.</value>
        [DataMember(Name = "validTill", IsRequired = true, EmitDefaultValue = true)]
        public int ValidTill { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OtpDetails {\n");
            sb.Append("  Otp: ").Append(Otp).Append("\n");
            sb.Append("  ValidTill: ").Append(ValidTill).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
