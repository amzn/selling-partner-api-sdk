/*
 * The Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order or date range without having to wait until a statement period closes.
 *
 * The version of the OpenAPI document: 2024-06-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.finances.v2024_06_19
{
    /// <summary>
    /// Related business identifier of the transaction.
    /// </summary>
    [DataContract(Name = "RelatedIdentifier")]
    public partial class RelatedIdentifier : IValidatableObject
    {
        /// <summary>
        /// Enumerated set of related business identifier names.
        /// </summary>
        /// <value>Enumerated set of related business identifier names.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RelatedIdentifierNameEnum
        {
            /// <summary>
            /// Enum ORDERID for value: ORDER_ID
            /// </summary>
            [EnumMember(Value = "ORDER_ID")]
            ORDERID = 1,

            /// <summary>
            /// Enum SHIPMENTID for value: SHIPMENT_ID
            /// </summary>
            [EnumMember(Value = "SHIPMENT_ID")]
            SHIPMENTID = 2,

            /// <summary>
            /// Enum FINANCIALEVENTGROUPID for value: FINANCIAL_EVENT_GROUP_ID
            /// </summary>
            [EnumMember(Value = "FINANCIAL_EVENT_GROUP_ID")]
            FINANCIALEVENTGROUPID = 3,

            /// <summary>
            /// Enum REFUNDID for value: REFUND_ID
            /// </summary>
            [EnumMember(Value = "REFUND_ID")]
            REFUNDID = 4,

            /// <summary>
            /// Enum INVOICEID for value: INVOICE_ID
            /// </summary>
            [EnumMember(Value = "INVOICE_ID")]
            INVOICEID = 5,

            /// <summary>
            /// Enum DISBURSEMENTID for value: DISBURSEMENT_ID
            /// </summary>
            [EnumMember(Value = "DISBURSEMENT_ID")]
            DISBURSEMENTID = 6,

            /// <summary>
            /// Enum TRANSFERID for value: TRANSFER_ID
            /// </summary>
            [EnumMember(Value = "TRANSFER_ID")]
            TRANSFERID = 7,

            /// <summary>
            /// Enum DEFERREDTRANSACTIONID for value: DEFERRED_TRANSACTION_ID
            /// </summary>
            [EnumMember(Value = "DEFERRED_TRANSACTION_ID")]
            DEFERREDTRANSACTIONID = 8,

            /// <summary>
            /// Enum RELEASETRANSACTIONID for value: RELEASE_TRANSACTION_ID
            /// </summary>
            [EnumMember(Value = "RELEASE_TRANSACTION_ID")]
            RELEASETRANSACTIONID = 9,

            /// <summary>
            /// Enum SETTLEMENTID for value: SETTLEMENT_ID
            /// </summary>
            [EnumMember(Value = "SETTLEMENT_ID")]
            SETTLEMENTID = 10
        }


        /// <summary>
        /// Enumerated set of related business identifier names.
        /// </summary>
        /// <value>Enumerated set of related business identifier names.</value>
        [DataMember(Name = "relatedIdentifierName", EmitDefaultValue = false)]
        public RelatedIdentifierNameEnum? RelatedIdentifierName { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RelatedIdentifier" /> class.
        /// </summary>
        /// <param name="relatedIdentifierName">Enumerated set of related business identifier names..</param>
        /// <param name="relatedIdentifierValue">Corresponding value of RelatedIdentifierName.</param>
        public RelatedIdentifier(RelatedIdentifierNameEnum? relatedIdentifierName = default(RelatedIdentifierNameEnum?), string relatedIdentifierValue = default(string))
        {
            this.RelatedIdentifierName = relatedIdentifierName;
            this.RelatedIdentifierValue = relatedIdentifierValue;
        }

        /// <summary>
        /// Corresponding value of RelatedIdentifierName
        /// </summary>
        /// <value>Corresponding value of RelatedIdentifierName</value>
        [DataMember(Name = "relatedIdentifierValue", EmitDefaultValue = false)]
        public string RelatedIdentifierValue { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RelatedIdentifier {\n");
            sb.Append("  RelatedIdentifierName: ").Append(RelatedIdentifierName).Append("\n");
            sb.Append("  RelatedIdentifierValue: ").Append(RelatedIdentifierValue).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
