/*
 * Selling Partner API for Direct Fulfillment Orders
 *
 * The Selling Partner API for Direct Fulfillment Orders provides programmatic access to a direct fulfillment vendor's order data.
 *
 * The version of the OpenAPI document: 2021-12-28
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.df.orders.v2021_12_28
{
    /// <summary>
    /// An item within an order
    /// </summary>
    [DataContract(Name = "OrderItem")]
    public partial class OrderItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderItem" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderItem() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderItem" /> class.
        /// </summary>
        /// <param name="itemSequenceNumber">Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on. (required).</param>
        /// <param name="buyerProductIdentifier">Buyer&#39;s standard identification number (ASIN) of an item..</param>
        /// <param name="vendorProductIdentifier">The vendor selected product identification of the item..</param>
        /// <param name="title">Title for the item..</param>
        /// <param name="orderedQuantity">orderedQuantity (required).</param>
        /// <param name="scheduledDeliveryShipment">scheduledDeliveryShipment.</param>
        /// <param name="giftDetails">giftDetails.</param>
        /// <param name="netPrice">netPrice (required).</param>
        /// <param name="taxDetails">taxDetails.</param>
        /// <param name="totalPrice">totalPrice.</param>
        /// <param name="buyerCustomizedInfo">buyerCustomizedInfo.</param>
        public OrderItem(string itemSequenceNumber = default(string), string buyerProductIdentifier = default(string), string vendorProductIdentifier = default(string), string title = default(string), ItemQuantity orderedQuantity = default(ItemQuantity), ScheduledDeliveryShipment scheduledDeliveryShipment = default(ScheduledDeliveryShipment), GiftDetails giftDetails = default(GiftDetails), Money netPrice = default(Money), TaxItemDetails taxDetails = default(TaxItemDetails), Money totalPrice = default(Money), BuyerCustomizedInfoDetail buyerCustomizedInfo = default(BuyerCustomizedInfoDetail))
        {
            // to ensure "itemSequenceNumber" is required (not null)
            if (itemSequenceNumber == null)
            {
                throw new ArgumentNullException("itemSequenceNumber is a required property for OrderItem and cannot be null");
            }
            this.ItemSequenceNumber = itemSequenceNumber;
            // to ensure "orderedQuantity" is required (not null)
            if (orderedQuantity == null)
            {
                throw new ArgumentNullException("orderedQuantity is a required property for OrderItem and cannot be null");
            }
            this.OrderedQuantity = orderedQuantity;
            // to ensure "netPrice" is required (not null)
            if (netPrice == null)
            {
                throw new ArgumentNullException("netPrice is a required property for OrderItem and cannot be null");
            }
            this.NetPrice = netPrice;
            this.BuyerProductIdentifier = buyerProductIdentifier;
            this.VendorProductIdentifier = vendorProductIdentifier;
            this.Title = title;
            this.ScheduledDeliveryShipment = scheduledDeliveryShipment;
            this.GiftDetails = giftDetails;
            this.TaxDetails = taxDetails;
            this.TotalPrice = totalPrice;
            this.BuyerCustomizedInfo = buyerCustomizedInfo;
        }

        /// <summary>
        /// Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on.
        /// </summary>
        /// <value>Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on.</value>
        [DataMember(Name = "itemSequenceNumber", IsRequired = true, EmitDefaultValue = true)]
        public string ItemSequenceNumber { get; set; }

        /// <summary>
        /// Buyer&#39;s standard identification number (ASIN) of an item.
        /// </summary>
        /// <value>Buyer&#39;s standard identification number (ASIN) of an item.</value>
        [DataMember(Name = "buyerProductIdentifier", EmitDefaultValue = false)]
        public string BuyerProductIdentifier { get; set; }

        /// <summary>
        /// The vendor selected product identification of the item.
        /// </summary>
        /// <value>The vendor selected product identification of the item.</value>
        [DataMember(Name = "vendorProductIdentifier", EmitDefaultValue = false)]
        public string VendorProductIdentifier { get; set; }

        /// <summary>
        /// Title for the item.
        /// </summary>
        /// <value>Title for the item.</value>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets OrderedQuantity
        /// </summary>
        [DataMember(Name = "orderedQuantity", IsRequired = true, EmitDefaultValue = true)]
        public ItemQuantity OrderedQuantity { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledDeliveryShipment
        /// </summary>
        [DataMember(Name = "scheduledDeliveryShipment", EmitDefaultValue = false)]
        public ScheduledDeliveryShipment ScheduledDeliveryShipment { get; set; }

        /// <summary>
        /// Gets or Sets GiftDetails
        /// </summary>
        [DataMember(Name = "giftDetails", EmitDefaultValue = false)]
        public GiftDetails GiftDetails { get; set; }

        /// <summary>
        /// Gets or Sets NetPrice
        /// </summary>
        [DataMember(Name = "netPrice", IsRequired = true, EmitDefaultValue = true)]
        public Money NetPrice { get; set; }

        /// <summary>
        /// Gets or Sets TaxDetails
        /// </summary>
        [DataMember(Name = "taxDetails", EmitDefaultValue = false)]
        public TaxItemDetails TaxDetails { get; set; }

        /// <summary>
        /// Gets or Sets TotalPrice
        /// </summary>
        [DataMember(Name = "totalPrice", EmitDefaultValue = false)]
        public Money TotalPrice { get; set; }

        /// <summary>
        /// Gets or Sets BuyerCustomizedInfo
        /// </summary>
        [DataMember(Name = "buyerCustomizedInfo", EmitDefaultValue = false)]
        public BuyerCustomizedInfoDetail BuyerCustomizedInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderItem {\n");
            sb.Append("  ItemSequenceNumber: ").Append(ItemSequenceNumber).Append("\n");
            sb.Append("  BuyerProductIdentifier: ").Append(BuyerProductIdentifier).Append("\n");
            sb.Append("  VendorProductIdentifier: ").Append(VendorProductIdentifier).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  OrderedQuantity: ").Append(OrderedQuantity).Append("\n");
            sb.Append("  ScheduledDeliveryShipment: ").Append(ScheduledDeliveryShipment).Append("\n");
            sb.Append("  GiftDetails: ").Append(GiftDetails).Append("\n");
            sb.Append("  NetPrice: ").Append(NetPrice).Append("\n");
            sb.Append("  TaxDetails: ").Append(TaxDetails).Append("\n");
            sb.Append("  TotalPrice: ").Append(TotalPrice).Append("\n");
            sb.Append("  BuyerCustomizedInfo: ").Append(BuyerCustomizedInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
