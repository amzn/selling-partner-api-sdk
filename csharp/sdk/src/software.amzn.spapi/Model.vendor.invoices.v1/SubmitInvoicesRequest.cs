/*
 * Selling Partner API for Retail Procurement Payments
 *
 * The Selling Partner API for Retail Procurement Payments provides programmatic access to vendors payments data.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.invoices.v1
{
    /// <summary>
    /// The request schema for the submitInvoices operation.
    /// </summary>
    [DataContract(Name = "SubmitInvoicesRequest")]
    public partial class SubmitInvoicesRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SubmitInvoicesRequest" /> class.
        /// </summary>
        /// <param name="invoices">An array of Invoice objects representing the invoices or credit notes to be submitted..</param>
        public SubmitInvoicesRequest(List<Invoice> invoices = default(List<Invoice>))
        {
            this.Invoices = invoices;
        }

        /// <summary>
        /// An array of Invoice objects representing the invoices or credit notes to be submitted.
        /// </summary>
        /// <value>An array of Invoice objects representing the invoices or credit notes to be submitted.</value>
        [DataMember(Name = "invoices", EmitDefaultValue = false)]
        public List<Invoice> Invoices { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SubmitInvoicesRequest {\n");
            sb.Append("  Invoices: ").Append(Invoices).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
