/*
 * Selling Partner API for Messaging
 *
 * With the Messaging API you can build applications that send messages to buyers. You can get a list of message types that are available for an order that you specify, then call an operation that sends a message to the buyer for that order. The Messaging API returns responses that are formed according to the <a href=https://tools.ietf.org/html/draft-kelly-json-hal-08>JSON Hypertext Application Language</a> (HAL) standard.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.messaging.v1
{
    /// <summary>
    /// The links response that is associated with the object.
    /// </summary>
    [DataContract(Name = "GetSchemaResponse__links")]
    public partial class GetSchemaResponseLinks : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetSchemaResponseLinks" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetSchemaResponseLinks() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetSchemaResponseLinks" /> class.
        /// </summary>
        /// <param name="self">self (required).</param>
        public GetSchemaResponseLinks(LinkObject self = default(LinkObject))
        {
            // to ensure "self" is required (not null)
            if (self == null)
            {
                throw new ArgumentNullException("self is a required property for GetSchemaResponseLinks and cannot be null");
            }
            this.Self = self;
        }

        /// <summary>
        /// Gets or Sets Self
        /// </summary>
        [DataMember(Name = "self", IsRequired = true, EmitDefaultValue = true)]
        public LinkObject Self { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetSchemaResponseLinks {\n");
            sb.Append("  Self: ").Append(Self).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
