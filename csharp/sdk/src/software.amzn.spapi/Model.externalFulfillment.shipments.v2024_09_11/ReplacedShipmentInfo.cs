/*
 * The Selling Partner API for Amazon External Fulfillment Shipments Processing
 *
 * You can use the External Fulfillment Shipments API to retrieve, manage, and track shipments processed through Amazon's external fulfillment network. Use this API to get shipment details, monitor status changes, and access fulfillment requirements.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.externalFulfillment.shipments.v2024_09_11
{
    /// <summary>
    /// Details of the original shipment if &#x60;shipmentType&#x60; is either &#x60;REPLACEMENT&#x60; or &#x60;EXCHANGE&#x60;.
    /// </summary>
    [DataContract(Name = "ReplacedShipmentInfo")]
    public partial class ReplacedShipmentInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReplacedShipmentInfo" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ReplacedShipmentInfo() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ReplacedShipmentInfo" /> class.
        /// </summary>
        /// <param name="id">The original shipment&#39;s ID. (required).</param>
        /// <param name="locationId">The original shipment&#39;s location ID. (required).</param>
        /// <param name="marketplaceAttributes">marketplaceAttributes (required).</param>
        /// <param name="originalLineItems">The line items from the original shipment that corresponds to this shipment..</param>
        public ReplacedShipmentInfo(string id = default(string), string locationId = default(string), MarketplaceAttributes marketplaceAttributes = default(MarketplaceAttributes), List<OriginalLineItem> originalLineItems = default(List<OriginalLineItem>))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for ReplacedShipmentInfo and cannot be null");
            }
            this.Id = id;
            // to ensure "locationId" is required (not null)
            if (locationId == null)
            {
                throw new ArgumentNullException("locationId is a required property for ReplacedShipmentInfo and cannot be null");
            }
            this.LocationId = locationId;
            // to ensure "marketplaceAttributes" is required (not null)
            if (marketplaceAttributes == null)
            {
                throw new ArgumentNullException("marketplaceAttributes is a required property for ReplacedShipmentInfo and cannot be null");
            }
            this.MarketplaceAttributes = marketplaceAttributes;
            this.OriginalLineItems = originalLineItems;
        }

        /// <summary>
        /// The original shipment&#39;s ID.
        /// </summary>
        /// <value>The original shipment&#39;s ID.</value>
        /*
        <example>DNkXsJZJX</example>
        */
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// The original shipment&#39;s location ID.
        /// </summary>
        /// <value>The original shipment&#39;s location ID.</value>
        /*
        <example>ABCD</example>
        */
        [DataMember(Name = "locationId", IsRequired = true, EmitDefaultValue = true)]
        public string LocationId { get; set; }

        /// <summary>
        /// Gets or Sets MarketplaceAttributes
        /// </summary>
        [DataMember(Name = "marketplaceAttributes", IsRequired = true, EmitDefaultValue = true)]
        public MarketplaceAttributes MarketplaceAttributes { get; set; }

        /// <summary>
        /// The line items from the original shipment that corresponds to this shipment.
        /// </summary>
        /// <value>The line items from the original shipment that corresponds to this shipment.</value>
        [DataMember(Name = "originalLineItems", EmitDefaultValue = false)]
        public List<OriginalLineItem> OriginalLineItems { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ReplacedShipmentInfo {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LocationId: ").Append(LocationId).Append("\n");
            sb.Append("  MarketplaceAttributes: ").Append(MarketplaceAttributes).Append("\n");
            sb.Append("  OriginalLineItems: ").Append(OriginalLineItems).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
