/*
 * The Selling Partner API for Amazon External Fulfillment Shipments Processing
 *
 * You can use the External Fulfillment Shipments API to retrieve, manage, and track shipments processed through Amazon's external fulfillment network. Use this API to get shipment details, monitor status changes, and access fulfillment requirements.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.externalFulfillment.shipments.v2024_09_11
{
    /// <summary>
    /// Recommendations for a package
    /// </summary>
    [DataContract(Name = "RecommendedPackage")]
    public partial class RecommendedPackage : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RecommendedPackage" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RecommendedPackage() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RecommendedPackage" /> class.
        /// </summary>
        /// <param name="dimensions">dimensions (required).</param>
        /// <param name="weight">weight (required).</param>
        /// <param name="lineItems">A list of line items to be contained in a recommended package. This attribute is only for orders that come with specific recommendations for line-item distribution. (required).</param>
        public RecommendedPackage(PackageDimensions dimensions = default(PackageDimensions), Weight weight = default(Weight), List<RecommendedPackageLineItem> lineItems = default(List<RecommendedPackageLineItem>))
        {
            // to ensure "dimensions" is required (not null)
            if (dimensions == null)
            {
                throw new ArgumentNullException("dimensions is a required property for RecommendedPackage and cannot be null");
            }
            this.Dimensions = dimensions;
            // to ensure "weight" is required (not null)
            if (weight == null)
            {
                throw new ArgumentNullException("weight is a required property for RecommendedPackage and cannot be null");
            }
            this.Weight = weight;
            // to ensure "lineItems" is required (not null)
            if (lineItems == null)
            {
                throw new ArgumentNullException("lineItems is a required property for RecommendedPackage and cannot be null");
            }
            this.LineItems = lineItems;
        }

        /// <summary>
        /// Gets or Sets Dimensions
        /// </summary>
        [DataMember(Name = "dimensions", IsRequired = true, EmitDefaultValue = true)]
        public PackageDimensions Dimensions { get; set; }

        /// <summary>
        /// Gets or Sets Weight
        /// </summary>
        [DataMember(Name = "weight", IsRequired = true, EmitDefaultValue = true)]
        public Weight Weight { get; set; }

        /// <summary>
        /// A list of line items to be contained in a recommended package. This attribute is only for orders that come with specific recommendations for line-item distribution.
        /// </summary>
        /// <value>A list of line items to be contained in a recommended package. This attribute is only for orders that come with specific recommendations for line-item distribution.</value>
        [DataMember(Name = "lineItems", IsRequired = true, EmitDefaultValue = true)]
        public List<RecommendedPackageLineItem> LineItems { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RecommendedPackage {\n");
            sb.Append("  Dimensions: ").Append(Dimensions).Append("\n");
            sb.Append("  Weight: ").Append(Weight).Append("\n");
            sb.Append("  LineItems: ").Append(LineItems).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
