/*
 * The Selling Partner API for Amazon External Fulfillment Shipments Processing
 *
 * You can use the External Fulfillment Shipments API to retrieve, manage, and track shipments processed through Amazon's external fulfillment network. Use this API to get shipment details, monitor status changes, and access fulfillment requirements.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.externalFulfillment.shipments.v2024_09_11
{
    /// <summary>
    /// The request schema of the &#x60;createPackages&#x60; operation.
    /// </summary>
    [DataContract(Name = "Packages")]
    public partial class Packages : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Packages" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Packages() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Packages" /> class.
        /// </summary>
        /// <param name="varPackages">A list of packages. (required).</param>
        public Packages(List<Package> varPackages = default(List<Package>))
        {
            // to ensure "varPackages" is required (not null)
            if (varPackages == null)
            {
                throw new ArgumentNullException("varPackages is a required property for Packages and cannot be null");
            }
            this.VarPackages = varPackages;
        }

        /// <summary>
        /// A list of packages.
        /// </summary>
        /// <value>A list of packages.</value>
        [DataMember(Name = "packages", IsRequired = true, EmitDefaultValue = true)]
        public List<Package> VarPackages { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Packages {\n");
            sb.Append("  VarPackages: ").Append(VarPackages).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
