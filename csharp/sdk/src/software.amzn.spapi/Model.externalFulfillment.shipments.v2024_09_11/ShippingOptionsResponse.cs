/*
 * The Selling Partner API for Amazon External Fulfillment Shipments Processing
 *
 * You can use the External Fulfillment Shipments API to retrieve, manage, and track shipments processed through Amazon's external fulfillment network. Use this API to get shipment details, monitor status changes, and access fulfillment requirements.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.externalFulfillment.shipments.v2024_09_11
{
    /// <summary>
    /// The response to the &#x60;retrieveShippingOptions&#x60; operation. The response contains shipping options on a per-package basis from which the seller has to select one shipping option while they retrieve the shipping label. If the particular marketplace channel does not support scheduled shipping options, then this response will be empty.
    /// </summary>
    [DataContract(Name = "ShippingOptionsResponse")]
    public partial class ShippingOptionsResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShippingOptionsResponse" /> class.
        /// </summary>
        /// <param name="shippingOptions">A list of shipping options..</param>
        /// <param name="recommendedShippingOption">recommendedShippingOption.</param>
        public ShippingOptionsResponse(List<ShippingOptions> shippingOptions = default(List<ShippingOptions>), ShippingOptions recommendedShippingOption = default(ShippingOptions))
        {
            this.ShippingOptions = shippingOptions;
            this.RecommendedShippingOption = recommendedShippingOption;
        }

        /// <summary>
        /// A list of shipping options.
        /// </summary>
        /// <value>A list of shipping options.</value>
        [DataMember(Name = "shippingOptions", EmitDefaultValue = false)]
        public List<ShippingOptions> ShippingOptions { get; set; }

        /// <summary>
        /// Gets or Sets RecommendedShippingOption
        /// </summary>
        [DataMember(Name = "recommendedShippingOption", EmitDefaultValue = false)]
        public ShippingOptions RecommendedShippingOption { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShippingOptionsResponse {\n");
            sb.Append("  ShippingOptions: ").Append(ShippingOptions).Append("\n");
            sb.Append("  RecommendedShippingOption: ").Append(RecommendedShippingOption).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
