/*
 * The Selling Partner API for Amazon External Fulfillment Shipments Processing
 *
 * You can use the External Fulfillment Shipments API to retrieve, manage, and track shipments processed through Amazon's external fulfillment network. Use this API to get shipment details, monitor status changes, and access fulfillment requirements.
 *
 * The version of the OpenAPI document: 2024-09-11
 * Contact: marketplaceapitest@amazon.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.externalFulfillment.shipments.v2024_09_11
{
    /// <summary>
    /// The marketplace attributes associated with the location.
    /// </summary>
    [DataContract(Name = "MarketplaceAttributes")]
    public partial class MarketplaceAttributes : IValidatableObject
    {
        /// <summary>
        /// Defines CustomAttributes
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CustomAttributesEnum
        {
            /// <summary>
            /// Enum PRIME for value: PRIME
            /// </summary>
            [EnumMember(Value = "PRIME")]
            PRIME = 1,

            /// <summary>
            /// Enum FASTTRACK for value: FASTTRACK
            /// </summary>
            [EnumMember(Value = "FASTTRACK")]
            FASTTRACK = 2
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MarketplaceAttributes" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MarketplaceAttributes() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="MarketplaceAttributes" /> class.
        /// </summary>
        /// <param name="marketplaceId">The marketplace ID associated with the location. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). (required).</param>
        /// <param name="channelName">The channel name associated with the location. (required).</param>
        /// <param name="merchantId">The ID of the merchant or seller to whom this order is created..</param>
        /// <param name="customAttributes">Marketplace channel-specific attribute value..</param>
        public MarketplaceAttributes(string marketplaceId = default(string), string channelName = default(string), string merchantId = default(string), List<CustomAttributesEnum> customAttributes = default(List<CustomAttributesEnum>))
        {
            // to ensure "marketplaceId" is required (not null)
            if (marketplaceId == null)
            {
                throw new ArgumentNullException("marketplaceId is a required property for MarketplaceAttributes and cannot be null");
            }
            this.MarketplaceId = marketplaceId;
            // to ensure "channelName" is required (not null)
            if (channelName == null)
            {
                throw new ArgumentNullException("channelName is a required property for MarketplaceAttributes and cannot be null");
            }
            this.ChannelName = channelName;
            this.MerchantId = merchantId;
            this.CustomAttributes = customAttributes;
        }

        /// <summary>
        /// The marketplace ID associated with the location. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
        /// </summary>
        /// <value>The marketplace ID associated with the location. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).</value>
        [DataMember(Name = "marketplaceId", IsRequired = true, EmitDefaultValue = true)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// The channel name associated with the location.
        /// </summary>
        /// <value>The channel name associated with the location.</value>
        [DataMember(Name = "channelName", IsRequired = true, EmitDefaultValue = true)]
        public string ChannelName { get; set; }

        /// <summary>
        /// The ID of the merchant or seller to whom this order is created.
        /// </summary>
        /// <value>The ID of the merchant or seller to whom this order is created.</value>
        [DataMember(Name = "merchantId", EmitDefaultValue = false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// Marketplace channel-specific attribute value.
        /// </summary>
        /// <value>Marketplace channel-specific attribute value.</value>
        [DataMember(Name = "customAttributes", EmitDefaultValue = false)]
        public List<MarketplaceAttributes.CustomAttributesEnum> CustomAttributes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MarketplaceAttributes {\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  ChannelName: ").Append(ChannelName).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  CustomAttributes: ").Append(CustomAttributes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
