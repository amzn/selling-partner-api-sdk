/*
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.finances.v0
{
    /// <summary>
    /// A removal shipment event for a removal order.
    /// </summary>
    [DataContract(Name = "RemovalShipmentEvent")]
    public partial class RemovalShipmentEvent : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemovalShipmentEvent" /> class.
        /// </summary>
        /// <param name="postedDate">Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate)..</param>
        /// <param name="merchantOrderId">The merchant removal orderId..</param>
        /// <param name="orderId">The identifier for the removal shipment order..</param>
        /// <param name="transactionType">The type of removal order.  Possible values:  * WHOLESALE_LIQUIDATION.</param>
        /// <param name="storeName">The name of the store where the event occurred..</param>
        /// <param name="removalShipmentItemList">A list of information about removal shipment items..</param>
        public RemovalShipmentEvent(DateTime postedDate = default(DateTime), string merchantOrderId = default(string), string orderId = default(string), string transactionType = default(string), string storeName = default(string), List<RemovalShipmentItem> removalShipmentItemList = default(List<RemovalShipmentItem>))
        {
            this.PostedDate = postedDate;
            this.MerchantOrderId = merchantOrderId;
            this.OrderId = orderId;
            this.TransactionType = transactionType;
            this.StoreName = storeName;
            this.RemovalShipmentItemList = removalShipmentItemList;
        }

        /// <summary>
        /// Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).
        /// </summary>
        /// <value>Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).</value>
        [DataMember(Name = "PostedDate", EmitDefaultValue = false)]
        public DateTime PostedDate { get; set; }

        /// <summary>
        /// The merchant removal orderId.
        /// </summary>
        /// <value>The merchant removal orderId.</value>
        [DataMember(Name = "MerchantOrderId", EmitDefaultValue = false)]
        public string MerchantOrderId { get; set; }

        /// <summary>
        /// The identifier for the removal shipment order.
        /// </summary>
        /// <value>The identifier for the removal shipment order.</value>
        [DataMember(Name = "OrderId", EmitDefaultValue = false)]
        public string OrderId { get; set; }

        /// <summary>
        /// The type of removal order.  Possible values:  * WHOLESALE_LIQUIDATION
        /// </summary>
        /// <value>The type of removal order.  Possible values:  * WHOLESALE_LIQUIDATION</value>
        [DataMember(Name = "TransactionType", EmitDefaultValue = false)]
        public string TransactionType { get; set; }

        /// <summary>
        /// The name of the store where the event occurred.
        /// </summary>
        /// <value>The name of the store where the event occurred.</value>
        [DataMember(Name = "StoreName", EmitDefaultValue = false)]
        public string StoreName { get; set; }

        /// <summary>
        /// A list of information about removal shipment items.
        /// </summary>
        /// <value>A list of information about removal shipment items.</value>
        [DataMember(Name = "RemovalShipmentItemList", EmitDefaultValue = false)]
        public List<RemovalShipmentItem> RemovalShipmentItemList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemovalShipmentEvent {\n");
            sb.Append("  PostedDate: ").Append(PostedDate).Append("\n");
            sb.Append("  MerchantOrderId: ").Append(MerchantOrderId).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  TransactionType: ").Append(TransactionType).Append("\n");
            sb.Append("  StoreName: ").Append(StoreName).Append("\n");
            sb.Append("  RemovalShipmentItemList: ").Append(RemovalShipmentItemList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
