/*
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.finances.v0
{
    /// <summary>
    /// Item-level information for a removal shipment item adjustment.
    /// </summary>
    [DataContract(Name = "RemovalShipmentItemAdjustment")]
    public partial class RemovalShipmentItemAdjustment : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemovalShipmentItemAdjustment" /> class.
        /// </summary>
        /// <param name="removalShipmentItemId">An identifier for an item in a removal shipment..</param>
        /// <param name="taxCollectionModel">The tax collection model applied to the item.  Possible values:  * MarketplaceFacilitator - Tax is withheld and remitted to the taxing authority by Amazon on behalf of the seller.  * Standard - Tax is paid to the seller and not remitted to the taxing authority by Amazon..</param>
        /// <param name="fulfillmentNetworkSKU">The Amazon fulfillment network SKU for the item..</param>
        /// <param name="adjustedQuantity">Adjusted quantity of removal shipmentItemAdjustment items..</param>
        /// <param name="revenueAdjustment">revenueAdjustment.</param>
        /// <param name="taxAmountAdjustment">taxAmountAdjustment.</param>
        /// <param name="taxWithheldAdjustment">taxWithheldAdjustment.</param>
        public RemovalShipmentItemAdjustment(string removalShipmentItemId = default(string), string taxCollectionModel = default(string), string fulfillmentNetworkSKU = default(string), int adjustedQuantity = default(int), Currency revenueAdjustment = default(Currency), Currency taxAmountAdjustment = default(Currency), Currency taxWithheldAdjustment = default(Currency))
        {
            this.RemovalShipmentItemId = removalShipmentItemId;
            this.TaxCollectionModel = taxCollectionModel;
            this.FulfillmentNetworkSKU = fulfillmentNetworkSKU;
            this.AdjustedQuantity = adjustedQuantity;
            this.RevenueAdjustment = revenueAdjustment;
            this.TaxAmountAdjustment = taxAmountAdjustment;
            this.TaxWithheldAdjustment = taxWithheldAdjustment;
        }

        /// <summary>
        /// An identifier for an item in a removal shipment.
        /// </summary>
        /// <value>An identifier for an item in a removal shipment.</value>
        [DataMember(Name = "RemovalShipmentItemId", EmitDefaultValue = false)]
        public string RemovalShipmentItemId { get; set; }

        /// <summary>
        /// The tax collection model applied to the item.  Possible values:  * MarketplaceFacilitator - Tax is withheld and remitted to the taxing authority by Amazon on behalf of the seller.  * Standard - Tax is paid to the seller and not remitted to the taxing authority by Amazon.
        /// </summary>
        /// <value>The tax collection model applied to the item.  Possible values:  * MarketplaceFacilitator - Tax is withheld and remitted to the taxing authority by Amazon on behalf of the seller.  * Standard - Tax is paid to the seller and not remitted to the taxing authority by Amazon.</value>
        [DataMember(Name = "TaxCollectionModel", EmitDefaultValue = false)]
        public string TaxCollectionModel { get; set; }

        /// <summary>
        /// The Amazon fulfillment network SKU for the item.
        /// </summary>
        /// <value>The Amazon fulfillment network SKU for the item.</value>
        [DataMember(Name = "FulfillmentNetworkSKU", EmitDefaultValue = false)]
        public string FulfillmentNetworkSKU { get; set; }

        /// <summary>
        /// Adjusted quantity of removal shipmentItemAdjustment items.
        /// </summary>
        /// <value>Adjusted quantity of removal shipmentItemAdjustment items.</value>
        [DataMember(Name = "AdjustedQuantity", EmitDefaultValue = false)]
        public int AdjustedQuantity { get; set; }

        /// <summary>
        /// Gets or Sets RevenueAdjustment
        /// </summary>
        [DataMember(Name = "RevenueAdjustment", EmitDefaultValue = false)]
        public Currency RevenueAdjustment { get; set; }

        /// <summary>
        /// Gets or Sets TaxAmountAdjustment
        /// </summary>
        [DataMember(Name = "TaxAmountAdjustment", EmitDefaultValue = false)]
        public Currency TaxAmountAdjustment { get; set; }

        /// <summary>
        /// Gets or Sets TaxWithheldAdjustment
        /// </summary>
        [DataMember(Name = "TaxWithheldAdjustment", EmitDefaultValue = false)]
        public Currency TaxWithheldAdjustment { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemovalShipmentItemAdjustment {\n");
            sb.Append("  RemovalShipmentItemId: ").Append(RemovalShipmentItemId).Append("\n");
            sb.Append("  TaxCollectionModel: ").Append(TaxCollectionModel).Append("\n");
            sb.Append("  FulfillmentNetworkSKU: ").Append(FulfillmentNetworkSKU).Append("\n");
            sb.Append("  AdjustedQuantity: ").Append(AdjustedQuantity).Append("\n");
            sb.Append("  RevenueAdjustment: ").Append(RevenueAdjustment).Append("\n");
            sb.Append("  TaxAmountAdjustment: ").Append(TaxAmountAdjustment).Append("\n");
            sb.Append("  TaxWithheldAdjustment: ").Append(TaxWithheldAdjustment).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
