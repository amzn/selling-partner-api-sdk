/*
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.finances.v0
{
    /// <summary>
    /// A fee payment event for the Early Reviewer Program.
    /// </summary>
    [DataContract(Name = "SellerReviewEnrollmentPaymentEvent")]
    public partial class SellerReviewEnrollmentPaymentEvent : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SellerReviewEnrollmentPaymentEvent" /> class.
        /// </summary>
        /// <param name="postedDate">Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate)..</param>
        /// <param name="enrollmentId">An enrollment identifier..</param>
        /// <param name="parentASIN">The Amazon Standard Identification Number (ASIN) of the item that was enrolled in the Early Reviewer Program..</param>
        /// <param name="feeComponent">feeComponent.</param>
        /// <param name="chargeComponent">chargeComponent.</param>
        /// <param name="totalAmount">totalAmount.</param>
        public SellerReviewEnrollmentPaymentEvent(DateTime postedDate = default(DateTime), string enrollmentId = default(string), string parentASIN = default(string), FeeComponent feeComponent = default(FeeComponent), ChargeComponent chargeComponent = default(ChargeComponent), Currency totalAmount = default(Currency))
        {
            this.PostedDate = postedDate;
            this.EnrollmentId = enrollmentId;
            this.ParentASIN = parentASIN;
            this.FeeComponent = feeComponent;
            this.ChargeComponent = chargeComponent;
            this.TotalAmount = totalAmount;
        }

        /// <summary>
        /// Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).
        /// </summary>
        /// <value>Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).</value>
        [DataMember(Name = "PostedDate", EmitDefaultValue = false)]
        public DateTime PostedDate { get; set; }

        /// <summary>
        /// An enrollment identifier.
        /// </summary>
        /// <value>An enrollment identifier.</value>
        [DataMember(Name = "EnrollmentId", EmitDefaultValue = false)]
        public string EnrollmentId { get; set; }

        /// <summary>
        /// The Amazon Standard Identification Number (ASIN) of the item that was enrolled in the Early Reviewer Program.
        /// </summary>
        /// <value>The Amazon Standard Identification Number (ASIN) of the item that was enrolled in the Early Reviewer Program.</value>
        [DataMember(Name = "ParentASIN", EmitDefaultValue = false)]
        public string ParentASIN { get; set; }

        /// <summary>
        /// Gets or Sets FeeComponent
        /// </summary>
        [DataMember(Name = "FeeComponent", EmitDefaultValue = false)]
        public FeeComponent FeeComponent { get; set; }

        /// <summary>
        /// Gets or Sets ChargeComponent
        /// </summary>
        [DataMember(Name = "ChargeComponent", EmitDefaultValue = false)]
        public ChargeComponent ChargeComponent { get; set; }

        /// <summary>
        /// Gets or Sets TotalAmount
        /// </summary>
        [DataMember(Name = "TotalAmount", EmitDefaultValue = false)]
        public Currency TotalAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SellerReviewEnrollmentPaymentEvent {\n");
            sb.Append("  PostedDate: ").Append(PostedDate).Append("\n");
            sb.Append("  EnrollmentId: ").Append(EnrollmentId).Append("\n");
            sb.Append("  ParentASIN: ").Append(ParentASIN).Append("\n");
            sb.Append("  FeeComponent: ").Append(FeeComponent).Append("\n");
            sb.Append("  ChargeComponent: ").Append(ChargeComponent).Append("\n");
            sb.Append("  TotalAmount: ").Append(TotalAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
