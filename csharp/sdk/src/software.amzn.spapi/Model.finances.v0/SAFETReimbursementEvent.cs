/*
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.finances.v0
{
    /// <summary>
    /// A SAFE-T claim reimbursement on the seller&#39;s account.
    /// </summary>
    [DataContract(Name = "SAFETReimbursementEvent")]
    public partial class SAFETReimbursementEvent : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SAFETReimbursementEvent" /> class.
        /// </summary>
        /// <param name="postedDate">Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate)..</param>
        /// <param name="sAFETClaimId">A SAFE-T claim identifier..</param>
        /// <param name="reimbursedAmount">reimbursedAmount.</param>
        /// <param name="reasonCode">Indicates why the seller was reimbursed..</param>
        /// <param name="sAFETReimbursementItemList">A list of SAFETReimbursementItems..</param>
        public SAFETReimbursementEvent(DateTime postedDate = default(DateTime), string sAFETClaimId = default(string), Currency reimbursedAmount = default(Currency), string reasonCode = default(string), List<SAFETReimbursementItem> sAFETReimbursementItemList = default(List<SAFETReimbursementItem>))
        {
            this.PostedDate = postedDate;
            this.SAFETClaimId = sAFETClaimId;
            this.ReimbursedAmount = reimbursedAmount;
            this.ReasonCode = reasonCode;
            this.SAFETReimbursementItemList = sAFETReimbursementItemList;
        }

        /// <summary>
        /// Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).
        /// </summary>
        /// <value>Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).</value>
        [DataMember(Name = "PostedDate", EmitDefaultValue = false)]
        public DateTime PostedDate { get; set; }

        /// <summary>
        /// A SAFE-T claim identifier.
        /// </summary>
        /// <value>A SAFE-T claim identifier.</value>
        [DataMember(Name = "SAFETClaimId", EmitDefaultValue = false)]
        public string SAFETClaimId { get; set; }

        /// <summary>
        /// Gets or Sets ReimbursedAmount
        /// </summary>
        [DataMember(Name = "ReimbursedAmount", EmitDefaultValue = false)]
        public Currency ReimbursedAmount { get; set; }

        /// <summary>
        /// Indicates why the seller was reimbursed.
        /// </summary>
        /// <value>Indicates why the seller was reimbursed.</value>
        [DataMember(Name = "ReasonCode", EmitDefaultValue = false)]
        public string ReasonCode { get; set; }

        /// <summary>
        /// A list of SAFETReimbursementItems.
        /// </summary>
        /// <value>A list of SAFETReimbursementItems.</value>
        [DataMember(Name = "SAFETReimbursementItemList", EmitDefaultValue = false)]
        public List<SAFETReimbursementItem> SAFETReimbursementItemList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SAFETReimbursementEvent {\n");
            sb.Append("  PostedDate: ").Append(PostedDate).Append("\n");
            sb.Append("  SAFETClaimId: ").Append(SAFETClaimId).Append("\n");
            sb.Append("  ReimbursedAmount: ").Append(ReimbursedAmount).Append("\n");
            sb.Append("  ReasonCode: ").Append(ReasonCode).Append("\n");
            sb.Append("  SAFETReimbursementItemList: ").Append(SAFETReimbursementItemList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
