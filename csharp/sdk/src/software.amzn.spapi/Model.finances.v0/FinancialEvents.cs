/*
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.finances.v0
{
    /// <summary>
    /// Contains all information related to a financial event.
    /// </summary>
    [DataContract(Name = "FinancialEvents")]
    public partial class FinancialEvents : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FinancialEvents" /> class.
        /// </summary>
        /// <param name="shipmentEventList">A list of shipment event information..</param>
        /// <param name="shipmentSettleEventList">A list of &#x60;ShipmentEvent&#x60; items..</param>
        /// <param name="refundEventList">A list of shipment event information..</param>
        /// <param name="guaranteeClaimEventList">A list of shipment event information..</param>
        /// <param name="chargebackEventList">A list of shipment event information..</param>
        /// <param name="payWithAmazonEventList">A list of events related to the seller&#39;s Pay with Amazon account..</param>
        /// <param name="serviceProviderCreditEventList">A list of information about solution provider credits..</param>
        /// <param name="retrochargeEventList">A list of information about Retrocharge or RetrochargeReversal events..</param>
        /// <param name="rentalTransactionEventList">A list of rental transaction event information..</param>
        /// <param name="productAdsPaymentEventList">A list of sponsored products payment events..</param>
        /// <param name="serviceFeeEventList">A list of information about service fee events..</param>
        /// <param name="sellerDealPaymentEventList">A list of payment events for deal-related fees..</param>
        /// <param name="debtRecoveryEventList">A list of debt recovery event information..</param>
        /// <param name="loanServicingEventList">A list of loan servicing events..</param>
        /// <param name="adjustmentEventList">A list of adjustment event information for the seller&#39;s account..</param>
        /// <param name="sAFETReimbursementEventList">A list of SAFETReimbursementEvents..</param>
        /// <param name="sellerReviewEnrollmentPaymentEventList">A list of information about fee events for the Early Reviewer Program..</param>
        /// <param name="fBALiquidationEventList">A list of FBA inventory liquidation payment events..</param>
        /// <param name="couponPaymentEventList">A list of coupon payment event information..</param>
        /// <param name="imagingServicesFeeEventList">A list of fee events related to Amazon Imaging services..</param>
        /// <param name="networkComminglingTransactionEventList">A list of network commingling transaction events..</param>
        /// <param name="affordabilityExpenseEventList">A list of expense information related to an affordability promotion..</param>
        /// <param name="affordabilityExpenseReversalEventList">A list of expense information related to an affordability promotion..</param>
        /// <param name="removalShipmentEventList">A list of removal shipment event information..</param>
        /// <param name="removalShipmentAdjustmentEventList">A comma-delimited list of Removal shipmentAdjustment details for FBA inventory..</param>
        /// <param name="trialShipmentEventList">A list of information about trial shipment financial events..</param>
        /// <param name="tDSReimbursementEventList">A list of &#x60;TDSReimbursementEvent&#x60; items..</param>
        /// <param name="adhocDisbursementEventList">A list of &#x60;AdhocDisbursement&#x60; events..</param>
        /// <param name="taxWithholdingEventList">A list of &#x60;TaxWithholding&#x60; events..</param>
        /// <param name="chargeRefundEventList">A list of charge refund events..</param>
        /// <param name="failedAdhocDisbursementEventList">A list of &#x60;FailedAdhocDisbursementEvent&#x60;s..</param>
        /// <param name="valueAddedServiceChargeEventList">A list of &#x60;ValueAddedServiceCharge&#x60; events..</param>
        /// <param name="capacityReservationBillingEventList">A list of &#x60;CapacityReservationBillingEvent&#x60; events..</param>
        public FinancialEvents(List<ShipmentEvent> shipmentEventList = default(List<ShipmentEvent>), List<ShipmentEvent> shipmentSettleEventList = default(List<ShipmentEvent>), List<ShipmentEvent> refundEventList = default(List<ShipmentEvent>), List<ShipmentEvent> guaranteeClaimEventList = default(List<ShipmentEvent>), List<ShipmentEvent> chargebackEventList = default(List<ShipmentEvent>), List<PayWithAmazonEvent> payWithAmazonEventList = default(List<PayWithAmazonEvent>), List<SolutionProviderCreditEvent> serviceProviderCreditEventList = default(List<SolutionProviderCreditEvent>), List<RetrochargeEvent> retrochargeEventList = default(List<RetrochargeEvent>), List<RentalTransactionEvent> rentalTransactionEventList = default(List<RentalTransactionEvent>), List<ProductAdsPaymentEvent> productAdsPaymentEventList = default(List<ProductAdsPaymentEvent>), List<ServiceFeeEvent> serviceFeeEventList = default(List<ServiceFeeEvent>), List<SellerDealPaymentEvent> sellerDealPaymentEventList = default(List<SellerDealPaymentEvent>), List<DebtRecoveryEvent> debtRecoveryEventList = default(List<DebtRecoveryEvent>), List<LoanServicingEvent> loanServicingEventList = default(List<LoanServicingEvent>), List<AdjustmentEvent> adjustmentEventList = default(List<AdjustmentEvent>), List<SAFETReimbursementEvent> sAFETReimbursementEventList = default(List<SAFETReimbursementEvent>), List<SellerReviewEnrollmentPaymentEvent> sellerReviewEnrollmentPaymentEventList = default(List<SellerReviewEnrollmentPaymentEvent>), List<FBALiquidationEvent> fBALiquidationEventList = default(List<FBALiquidationEvent>), List<CouponPaymentEvent> couponPaymentEventList = default(List<CouponPaymentEvent>), List<ImagingServicesFeeEvent> imagingServicesFeeEventList = default(List<ImagingServicesFeeEvent>), List<NetworkComminglingTransactionEvent> networkComminglingTransactionEventList = default(List<NetworkComminglingTransactionEvent>), List<AffordabilityExpenseEvent> affordabilityExpenseEventList = default(List<AffordabilityExpenseEvent>), List<AffordabilityExpenseEvent> affordabilityExpenseReversalEventList = default(List<AffordabilityExpenseEvent>), List<RemovalShipmentEvent> removalShipmentEventList = default(List<RemovalShipmentEvent>), List<RemovalShipmentAdjustmentEvent> removalShipmentAdjustmentEventList = default(List<RemovalShipmentAdjustmentEvent>), List<TrialShipmentEvent> trialShipmentEventList = default(List<TrialShipmentEvent>), List<TDSReimbursementEvent> tDSReimbursementEventList = default(List<TDSReimbursementEvent>), List<AdhocDisbursementEvent> adhocDisbursementEventList = default(List<AdhocDisbursementEvent>), List<TaxWithholdingEvent> taxWithholdingEventList = default(List<TaxWithholdingEvent>), List<ChargeRefundEvent> chargeRefundEventList = default(List<ChargeRefundEvent>), List<FailedAdhocDisbursementEvent> failedAdhocDisbursementEventList = default(List<FailedAdhocDisbursementEvent>), List<ValueAddedServiceChargeEvent> valueAddedServiceChargeEventList = default(List<ValueAddedServiceChargeEvent>), List<CapacityReservationBillingEvent> capacityReservationBillingEventList = default(List<CapacityReservationBillingEvent>))
        {
            this.ShipmentEventList = shipmentEventList;
            this.ShipmentSettleEventList = shipmentSettleEventList;
            this.RefundEventList = refundEventList;
            this.GuaranteeClaimEventList = guaranteeClaimEventList;
            this.ChargebackEventList = chargebackEventList;
            this.PayWithAmazonEventList = payWithAmazonEventList;
            this.ServiceProviderCreditEventList = serviceProviderCreditEventList;
            this.RetrochargeEventList = retrochargeEventList;
            this.RentalTransactionEventList = rentalTransactionEventList;
            this.ProductAdsPaymentEventList = productAdsPaymentEventList;
            this.ServiceFeeEventList = serviceFeeEventList;
            this.SellerDealPaymentEventList = sellerDealPaymentEventList;
            this.DebtRecoveryEventList = debtRecoveryEventList;
            this.LoanServicingEventList = loanServicingEventList;
            this.AdjustmentEventList = adjustmentEventList;
            this.SAFETReimbursementEventList = sAFETReimbursementEventList;
            this.SellerReviewEnrollmentPaymentEventList = sellerReviewEnrollmentPaymentEventList;
            this.FBALiquidationEventList = fBALiquidationEventList;
            this.CouponPaymentEventList = couponPaymentEventList;
            this.ImagingServicesFeeEventList = imagingServicesFeeEventList;
            this.NetworkComminglingTransactionEventList = networkComminglingTransactionEventList;
            this.AffordabilityExpenseEventList = affordabilityExpenseEventList;
            this.AffordabilityExpenseReversalEventList = affordabilityExpenseReversalEventList;
            this.RemovalShipmentEventList = removalShipmentEventList;
            this.RemovalShipmentAdjustmentEventList = removalShipmentAdjustmentEventList;
            this.TrialShipmentEventList = trialShipmentEventList;
            this.TDSReimbursementEventList = tDSReimbursementEventList;
            this.AdhocDisbursementEventList = adhocDisbursementEventList;
            this.TaxWithholdingEventList = taxWithholdingEventList;
            this.ChargeRefundEventList = chargeRefundEventList;
            this.FailedAdhocDisbursementEventList = failedAdhocDisbursementEventList;
            this.ValueAddedServiceChargeEventList = valueAddedServiceChargeEventList;
            this.CapacityReservationBillingEventList = capacityReservationBillingEventList;
        }

        /// <summary>
        /// A list of shipment event information.
        /// </summary>
        /// <value>A list of shipment event information.</value>
        [DataMember(Name = "ShipmentEventList", EmitDefaultValue = false)]
        public List<ShipmentEvent> ShipmentEventList { get; set; }

        /// <summary>
        /// A list of &#x60;ShipmentEvent&#x60; items.
        /// </summary>
        /// <value>A list of &#x60;ShipmentEvent&#x60; items.</value>
        [DataMember(Name = "ShipmentSettleEventList", EmitDefaultValue = false)]
        public List<ShipmentEvent> ShipmentSettleEventList { get; set; }

        /// <summary>
        /// A list of shipment event information.
        /// </summary>
        /// <value>A list of shipment event information.</value>
        [DataMember(Name = "RefundEventList", EmitDefaultValue = false)]
        public List<ShipmentEvent> RefundEventList { get; set; }

        /// <summary>
        /// A list of shipment event information.
        /// </summary>
        /// <value>A list of shipment event information.</value>
        [DataMember(Name = "GuaranteeClaimEventList", EmitDefaultValue = false)]
        public List<ShipmentEvent> GuaranteeClaimEventList { get; set; }

        /// <summary>
        /// A list of shipment event information.
        /// </summary>
        /// <value>A list of shipment event information.</value>
        [DataMember(Name = "ChargebackEventList", EmitDefaultValue = false)]
        public List<ShipmentEvent> ChargebackEventList { get; set; }

        /// <summary>
        /// A list of events related to the seller&#39;s Pay with Amazon account.
        /// </summary>
        /// <value>A list of events related to the seller&#39;s Pay with Amazon account.</value>
        [DataMember(Name = "PayWithAmazonEventList", EmitDefaultValue = false)]
        public List<PayWithAmazonEvent> PayWithAmazonEventList { get; set; }

        /// <summary>
        /// A list of information about solution provider credits.
        /// </summary>
        /// <value>A list of information about solution provider credits.</value>
        [DataMember(Name = "ServiceProviderCreditEventList", EmitDefaultValue = false)]
        public List<SolutionProviderCreditEvent> ServiceProviderCreditEventList { get; set; }

        /// <summary>
        /// A list of information about Retrocharge or RetrochargeReversal events.
        /// </summary>
        /// <value>A list of information about Retrocharge or RetrochargeReversal events.</value>
        [DataMember(Name = "RetrochargeEventList", EmitDefaultValue = false)]
        public List<RetrochargeEvent> RetrochargeEventList { get; set; }

        /// <summary>
        /// A list of rental transaction event information.
        /// </summary>
        /// <value>A list of rental transaction event information.</value>
        [DataMember(Name = "RentalTransactionEventList", EmitDefaultValue = false)]
        public List<RentalTransactionEvent> RentalTransactionEventList { get; set; }

        /// <summary>
        /// A list of sponsored products payment events.
        /// </summary>
        /// <value>A list of sponsored products payment events.</value>
        [DataMember(Name = "ProductAdsPaymentEventList", EmitDefaultValue = false)]
        public List<ProductAdsPaymentEvent> ProductAdsPaymentEventList { get; set; }

        /// <summary>
        /// A list of information about service fee events.
        /// </summary>
        /// <value>A list of information about service fee events.</value>
        [DataMember(Name = "ServiceFeeEventList", EmitDefaultValue = false)]
        public List<ServiceFeeEvent> ServiceFeeEventList { get; set; }

        /// <summary>
        /// A list of payment events for deal-related fees.
        /// </summary>
        /// <value>A list of payment events for deal-related fees.</value>
        [DataMember(Name = "SellerDealPaymentEventList", EmitDefaultValue = false)]
        public List<SellerDealPaymentEvent> SellerDealPaymentEventList { get; set; }

        /// <summary>
        /// A list of debt recovery event information.
        /// </summary>
        /// <value>A list of debt recovery event information.</value>
        [DataMember(Name = "DebtRecoveryEventList", EmitDefaultValue = false)]
        public List<DebtRecoveryEvent> DebtRecoveryEventList { get; set; }

        /// <summary>
        /// A list of loan servicing events.
        /// </summary>
        /// <value>A list of loan servicing events.</value>
        [DataMember(Name = "LoanServicingEventList", EmitDefaultValue = false)]
        public List<LoanServicingEvent> LoanServicingEventList { get; set; }

        /// <summary>
        /// A list of adjustment event information for the seller&#39;s account.
        /// </summary>
        /// <value>A list of adjustment event information for the seller&#39;s account.</value>
        [DataMember(Name = "AdjustmentEventList", EmitDefaultValue = false)]
        public List<AdjustmentEvent> AdjustmentEventList { get; set; }

        /// <summary>
        /// A list of SAFETReimbursementEvents.
        /// </summary>
        /// <value>A list of SAFETReimbursementEvents.</value>
        [DataMember(Name = "SAFETReimbursementEventList", EmitDefaultValue = false)]
        public List<SAFETReimbursementEvent> SAFETReimbursementEventList { get; set; }

        /// <summary>
        /// A list of information about fee events for the Early Reviewer Program.
        /// </summary>
        /// <value>A list of information about fee events for the Early Reviewer Program.</value>
        [DataMember(Name = "SellerReviewEnrollmentPaymentEventList", EmitDefaultValue = false)]
        public List<SellerReviewEnrollmentPaymentEvent> SellerReviewEnrollmentPaymentEventList { get; set; }

        /// <summary>
        /// A list of FBA inventory liquidation payment events.
        /// </summary>
        /// <value>A list of FBA inventory liquidation payment events.</value>
        [DataMember(Name = "FBALiquidationEventList", EmitDefaultValue = false)]
        public List<FBALiquidationEvent> FBALiquidationEventList { get; set; }

        /// <summary>
        /// A list of coupon payment event information.
        /// </summary>
        /// <value>A list of coupon payment event information.</value>
        [DataMember(Name = "CouponPaymentEventList", EmitDefaultValue = false)]
        public List<CouponPaymentEvent> CouponPaymentEventList { get; set; }

        /// <summary>
        /// A list of fee events related to Amazon Imaging services.
        /// </summary>
        /// <value>A list of fee events related to Amazon Imaging services.</value>
        [DataMember(Name = "ImagingServicesFeeEventList", EmitDefaultValue = false)]
        public List<ImagingServicesFeeEvent> ImagingServicesFeeEventList { get; set; }

        /// <summary>
        /// A list of network commingling transaction events.
        /// </summary>
        /// <value>A list of network commingling transaction events.</value>
        [DataMember(Name = "NetworkComminglingTransactionEventList", EmitDefaultValue = false)]
        public List<NetworkComminglingTransactionEvent> NetworkComminglingTransactionEventList { get; set; }

        /// <summary>
        /// A list of expense information related to an affordability promotion.
        /// </summary>
        /// <value>A list of expense information related to an affordability promotion.</value>
        [DataMember(Name = "AffordabilityExpenseEventList", EmitDefaultValue = false)]
        public List<AffordabilityExpenseEvent> AffordabilityExpenseEventList { get; set; }

        /// <summary>
        /// A list of expense information related to an affordability promotion.
        /// </summary>
        /// <value>A list of expense information related to an affordability promotion.</value>
        [DataMember(Name = "AffordabilityExpenseReversalEventList", EmitDefaultValue = false)]
        public List<AffordabilityExpenseEvent> AffordabilityExpenseReversalEventList { get; set; }

        /// <summary>
        /// A list of removal shipment event information.
        /// </summary>
        /// <value>A list of removal shipment event information.</value>
        [DataMember(Name = "RemovalShipmentEventList", EmitDefaultValue = false)]
        public List<RemovalShipmentEvent> RemovalShipmentEventList { get; set; }

        /// <summary>
        /// A comma-delimited list of Removal shipmentAdjustment details for FBA inventory.
        /// </summary>
        /// <value>A comma-delimited list of Removal shipmentAdjustment details for FBA inventory.</value>
        [DataMember(Name = "RemovalShipmentAdjustmentEventList", EmitDefaultValue = false)]
        public List<RemovalShipmentAdjustmentEvent> RemovalShipmentAdjustmentEventList { get; set; }

        /// <summary>
        /// A list of information about trial shipment financial events.
        /// </summary>
        /// <value>A list of information about trial shipment financial events.</value>
        [DataMember(Name = "TrialShipmentEventList", EmitDefaultValue = false)]
        public List<TrialShipmentEvent> TrialShipmentEventList { get; set; }

        /// <summary>
        /// A list of &#x60;TDSReimbursementEvent&#x60; items.
        /// </summary>
        /// <value>A list of &#x60;TDSReimbursementEvent&#x60; items.</value>
        [DataMember(Name = "TDSReimbursementEventList", EmitDefaultValue = false)]
        public List<TDSReimbursementEvent> TDSReimbursementEventList { get; set; }

        /// <summary>
        /// A list of &#x60;AdhocDisbursement&#x60; events.
        /// </summary>
        /// <value>A list of &#x60;AdhocDisbursement&#x60; events.</value>
        [DataMember(Name = "AdhocDisbursementEventList", EmitDefaultValue = false)]
        public List<AdhocDisbursementEvent> AdhocDisbursementEventList { get; set; }

        /// <summary>
        /// A list of &#x60;TaxWithholding&#x60; events.
        /// </summary>
        /// <value>A list of &#x60;TaxWithholding&#x60; events.</value>
        [DataMember(Name = "TaxWithholdingEventList", EmitDefaultValue = false)]
        public List<TaxWithholdingEvent> TaxWithholdingEventList { get; set; }

        /// <summary>
        /// A list of charge refund events.
        /// </summary>
        /// <value>A list of charge refund events.</value>
        [DataMember(Name = "ChargeRefundEventList", EmitDefaultValue = false)]
        public List<ChargeRefundEvent> ChargeRefundEventList { get; set; }

        /// <summary>
        /// A list of &#x60;FailedAdhocDisbursementEvent&#x60;s.
        /// </summary>
        /// <value>A list of &#x60;FailedAdhocDisbursementEvent&#x60;s.</value>
        [DataMember(Name = "FailedAdhocDisbursementEventList", EmitDefaultValue = false)]
        public List<FailedAdhocDisbursementEvent> FailedAdhocDisbursementEventList { get; set; }

        /// <summary>
        /// A list of &#x60;ValueAddedServiceCharge&#x60; events.
        /// </summary>
        /// <value>A list of &#x60;ValueAddedServiceCharge&#x60; events.</value>
        [DataMember(Name = "ValueAddedServiceChargeEventList", EmitDefaultValue = false)]
        public List<ValueAddedServiceChargeEvent> ValueAddedServiceChargeEventList { get; set; }

        /// <summary>
        /// A list of &#x60;CapacityReservationBillingEvent&#x60; events.
        /// </summary>
        /// <value>A list of &#x60;CapacityReservationBillingEvent&#x60; events.</value>
        [DataMember(Name = "CapacityReservationBillingEventList", EmitDefaultValue = false)]
        public List<CapacityReservationBillingEvent> CapacityReservationBillingEventList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FinancialEvents {\n");
            sb.Append("  ShipmentEventList: ").Append(ShipmentEventList).Append("\n");
            sb.Append("  ShipmentSettleEventList: ").Append(ShipmentSettleEventList).Append("\n");
            sb.Append("  RefundEventList: ").Append(RefundEventList).Append("\n");
            sb.Append("  GuaranteeClaimEventList: ").Append(GuaranteeClaimEventList).Append("\n");
            sb.Append("  ChargebackEventList: ").Append(ChargebackEventList).Append("\n");
            sb.Append("  PayWithAmazonEventList: ").Append(PayWithAmazonEventList).Append("\n");
            sb.Append("  ServiceProviderCreditEventList: ").Append(ServiceProviderCreditEventList).Append("\n");
            sb.Append("  RetrochargeEventList: ").Append(RetrochargeEventList).Append("\n");
            sb.Append("  RentalTransactionEventList: ").Append(RentalTransactionEventList).Append("\n");
            sb.Append("  ProductAdsPaymentEventList: ").Append(ProductAdsPaymentEventList).Append("\n");
            sb.Append("  ServiceFeeEventList: ").Append(ServiceFeeEventList).Append("\n");
            sb.Append("  SellerDealPaymentEventList: ").Append(SellerDealPaymentEventList).Append("\n");
            sb.Append("  DebtRecoveryEventList: ").Append(DebtRecoveryEventList).Append("\n");
            sb.Append("  LoanServicingEventList: ").Append(LoanServicingEventList).Append("\n");
            sb.Append("  AdjustmentEventList: ").Append(AdjustmentEventList).Append("\n");
            sb.Append("  SAFETReimbursementEventList: ").Append(SAFETReimbursementEventList).Append("\n");
            sb.Append("  SellerReviewEnrollmentPaymentEventList: ").Append(SellerReviewEnrollmentPaymentEventList).Append("\n");
            sb.Append("  FBALiquidationEventList: ").Append(FBALiquidationEventList).Append("\n");
            sb.Append("  CouponPaymentEventList: ").Append(CouponPaymentEventList).Append("\n");
            sb.Append("  ImagingServicesFeeEventList: ").Append(ImagingServicesFeeEventList).Append("\n");
            sb.Append("  NetworkComminglingTransactionEventList: ").Append(NetworkComminglingTransactionEventList).Append("\n");
            sb.Append("  AffordabilityExpenseEventList: ").Append(AffordabilityExpenseEventList).Append("\n");
            sb.Append("  AffordabilityExpenseReversalEventList: ").Append(AffordabilityExpenseReversalEventList).Append("\n");
            sb.Append("  RemovalShipmentEventList: ").Append(RemovalShipmentEventList).Append("\n");
            sb.Append("  RemovalShipmentAdjustmentEventList: ").Append(RemovalShipmentAdjustmentEventList).Append("\n");
            sb.Append("  TrialShipmentEventList: ").Append(TrialShipmentEventList).Append("\n");
            sb.Append("  TDSReimbursementEventList: ").Append(TDSReimbursementEventList).Append("\n");
            sb.Append("  AdhocDisbursementEventList: ").Append(AdhocDisbursementEventList).Append("\n");
            sb.Append("  TaxWithholdingEventList: ").Append(TaxWithholdingEventList).Append("\n");
            sb.Append("  ChargeRefundEventList: ").Append(ChargeRefundEventList).Append("\n");
            sb.Append("  FailedAdhocDisbursementEventList: ").Append(FailedAdhocDisbursementEventList).Append("\n");
            sb.Append("  ValueAddedServiceChargeEventList: ").Append(ValueAddedServiceChargeEventList).Append("\n");
            sb.Append("  CapacityReservationBillingEventList: ").Append(CapacityReservationBillingEventList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
