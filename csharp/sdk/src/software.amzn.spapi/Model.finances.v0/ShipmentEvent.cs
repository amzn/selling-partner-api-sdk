/*
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.finances.v0
{
    /// <summary>
    /// A shipment, refund, guarantee claim, or chargeback.
    /// </summary>
    [DataContract(Name = "ShipmentEvent")]
    public partial class ShipmentEvent : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentEvent" /> class.
        /// </summary>
        /// <param name="amazonOrderId">An Amazon-defined identifier for an order..</param>
        /// <param name="sellerOrderId">A seller-defined identifier for an order..</param>
        /// <param name="marketplaceName">The name of the marketplace where the event occurred..</param>
        /// <param name="storeName">The name of the store where the event occurred..</param>
        /// <param name="orderChargeList">A list of charge information on the seller&#39;s account..</param>
        /// <param name="orderChargeAdjustmentList">A list of charge information on the seller&#39;s account..</param>
        /// <param name="shipmentFeeList">A list of fee component information..</param>
        /// <param name="shipmentFeeAdjustmentList">A list of fee component information..</param>
        /// <param name="orderFeeList">A list of fee component information..</param>
        /// <param name="orderFeeAdjustmentList">A list of fee component information..</param>
        /// <param name="directPaymentList">A list of direct payment information..</param>
        /// <param name="postedDate">Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate)..</param>
        /// <param name="shipmentItemList">A list of shipment items..</param>
        /// <param name="shipmentItemAdjustmentList">A list of shipment items..</param>
        public ShipmentEvent(string amazonOrderId = default(string), string sellerOrderId = default(string), string marketplaceName = default(string), string storeName = default(string), List<ChargeComponent> orderChargeList = default(List<ChargeComponent>), List<ChargeComponent> orderChargeAdjustmentList = default(List<ChargeComponent>), List<FeeComponent> shipmentFeeList = default(List<FeeComponent>), List<FeeComponent> shipmentFeeAdjustmentList = default(List<FeeComponent>), List<FeeComponent> orderFeeList = default(List<FeeComponent>), List<FeeComponent> orderFeeAdjustmentList = default(List<FeeComponent>), List<DirectPayment> directPaymentList = default(List<DirectPayment>), DateTime postedDate = default(DateTime), List<ShipmentItem> shipmentItemList = default(List<ShipmentItem>), List<ShipmentItem> shipmentItemAdjustmentList = default(List<ShipmentItem>))
        {
            this.AmazonOrderId = amazonOrderId;
            this.SellerOrderId = sellerOrderId;
            this.MarketplaceName = marketplaceName;
            this.StoreName = storeName;
            this.OrderChargeList = orderChargeList;
            this.OrderChargeAdjustmentList = orderChargeAdjustmentList;
            this.ShipmentFeeList = shipmentFeeList;
            this.ShipmentFeeAdjustmentList = shipmentFeeAdjustmentList;
            this.OrderFeeList = orderFeeList;
            this.OrderFeeAdjustmentList = orderFeeAdjustmentList;
            this.DirectPaymentList = directPaymentList;
            this.PostedDate = postedDate;
            this.ShipmentItemList = shipmentItemList;
            this.ShipmentItemAdjustmentList = shipmentItemAdjustmentList;
        }

        /// <summary>
        /// An Amazon-defined identifier for an order.
        /// </summary>
        /// <value>An Amazon-defined identifier for an order.</value>
        [DataMember(Name = "AmazonOrderId", EmitDefaultValue = false)]
        public string AmazonOrderId { get; set; }

        /// <summary>
        /// A seller-defined identifier for an order.
        /// </summary>
        /// <value>A seller-defined identifier for an order.</value>
        [DataMember(Name = "SellerOrderId", EmitDefaultValue = false)]
        public string SellerOrderId { get; set; }

        /// <summary>
        /// The name of the marketplace where the event occurred.
        /// </summary>
        /// <value>The name of the marketplace where the event occurred.</value>
        [DataMember(Name = "MarketplaceName", EmitDefaultValue = false)]
        public string MarketplaceName { get; set; }

        /// <summary>
        /// The name of the store where the event occurred.
        /// </summary>
        /// <value>The name of the store where the event occurred.</value>
        [DataMember(Name = "StoreName", EmitDefaultValue = false)]
        public string StoreName { get; set; }

        /// <summary>
        /// A list of charge information on the seller&#39;s account.
        /// </summary>
        /// <value>A list of charge information on the seller&#39;s account.</value>
        [DataMember(Name = "OrderChargeList", EmitDefaultValue = false)]
        public List<ChargeComponent> OrderChargeList { get; set; }

        /// <summary>
        /// A list of charge information on the seller&#39;s account.
        /// </summary>
        /// <value>A list of charge information on the seller&#39;s account.</value>
        [DataMember(Name = "OrderChargeAdjustmentList", EmitDefaultValue = false)]
        public List<ChargeComponent> OrderChargeAdjustmentList { get; set; }

        /// <summary>
        /// A list of fee component information.
        /// </summary>
        /// <value>A list of fee component information.</value>
        [DataMember(Name = "ShipmentFeeList", EmitDefaultValue = false)]
        public List<FeeComponent> ShipmentFeeList { get; set; }

        /// <summary>
        /// A list of fee component information.
        /// </summary>
        /// <value>A list of fee component information.</value>
        [DataMember(Name = "ShipmentFeeAdjustmentList", EmitDefaultValue = false)]
        public List<FeeComponent> ShipmentFeeAdjustmentList { get; set; }

        /// <summary>
        /// A list of fee component information.
        /// </summary>
        /// <value>A list of fee component information.</value>
        [DataMember(Name = "OrderFeeList", EmitDefaultValue = false)]
        public List<FeeComponent> OrderFeeList { get; set; }

        /// <summary>
        /// A list of fee component information.
        /// </summary>
        /// <value>A list of fee component information.</value>
        [DataMember(Name = "OrderFeeAdjustmentList", EmitDefaultValue = false)]
        public List<FeeComponent> OrderFeeAdjustmentList { get; set; }

        /// <summary>
        /// A list of direct payment information.
        /// </summary>
        /// <value>A list of direct payment information.</value>
        [DataMember(Name = "DirectPaymentList", EmitDefaultValue = false)]
        public List<DirectPayment> DirectPaymentList { get; set; }

        /// <summary>
        /// Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).
        /// </summary>
        /// <value>Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).</value>
        [DataMember(Name = "PostedDate", EmitDefaultValue = false)]
        public DateTime PostedDate { get; set; }

        /// <summary>
        /// A list of shipment items.
        /// </summary>
        /// <value>A list of shipment items.</value>
        [DataMember(Name = "ShipmentItemList", EmitDefaultValue = false)]
        public List<ShipmentItem> ShipmentItemList { get; set; }

        /// <summary>
        /// A list of shipment items.
        /// </summary>
        /// <value>A list of shipment items.</value>
        [DataMember(Name = "ShipmentItemAdjustmentList", EmitDefaultValue = false)]
        public List<ShipmentItem> ShipmentItemAdjustmentList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShipmentEvent {\n");
            sb.Append("  AmazonOrderId: ").Append(AmazonOrderId).Append("\n");
            sb.Append("  SellerOrderId: ").Append(SellerOrderId).Append("\n");
            sb.Append("  MarketplaceName: ").Append(MarketplaceName).Append("\n");
            sb.Append("  StoreName: ").Append(StoreName).Append("\n");
            sb.Append("  OrderChargeList: ").Append(OrderChargeList).Append("\n");
            sb.Append("  OrderChargeAdjustmentList: ").Append(OrderChargeAdjustmentList).Append("\n");
            sb.Append("  ShipmentFeeList: ").Append(ShipmentFeeList).Append("\n");
            sb.Append("  ShipmentFeeAdjustmentList: ").Append(ShipmentFeeAdjustmentList).Append("\n");
            sb.Append("  OrderFeeList: ").Append(OrderFeeList).Append("\n");
            sb.Append("  OrderFeeAdjustmentList: ").Append(OrderFeeAdjustmentList).Append("\n");
            sb.Append("  DirectPaymentList: ").Append(DirectPaymentList).Append("\n");
            sb.Append("  PostedDate: ").Append(PostedDate).Append("\n");
            sb.Append("  ShipmentItemList: ").Append(ShipmentItemList).Append("\n");
            sb.Append("  ShipmentItemAdjustmentList: ").Append(ShipmentItemAdjustmentList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
