/*
 * Selling Partner API for Reports
 *
 * The Selling Partner API for Reports lets you retrieve and manage a variety of reports that can help selling partners manage their businesses.
 *
 * The version of the OpenAPI document: 2021-06-30
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.reports.v2021_06_30
{
    /// <summary>
    /// Information required to create the report.
    /// </summary>
    [DataContract(Name = "CreateReportSpecification")]
    public partial class CreateReportSpecification : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateReportSpecification" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateReportSpecification() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateReportSpecification" /> class.
        /// </summary>
        /// <param name="reportOptions">Additional information passed to reports. This varies by report type..</param>
        /// <param name="reportType">The report type. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information. (required).</param>
        /// <param name="dataStartTime">The start of a date and time range, in &lt;a href&#x3D;&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601&#39;&gt;ISO 8601&lt;/a&gt; date time format, used for selecting the data to report. The default is now. The value must be prior to or equal to the current date and time. Not all report types make use of this..</param>
        /// <param name="dataEndTime">The end of a date and time range, in &lt;a href&#x3D;&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601&#39;&gt;ISO 8601&lt;/a&gt; date time format, used for selecting the data to report. The default is now. The value must be prior to or equal to the current date and time. Not all report types make use of this..</param>
        /// <param name="marketplaceIds">A list of marketplace identifiers. The report document&#39;s contents will contain data for all of the specified marketplaces, unless the report type indicates otherwise. (required).</param>
        public CreateReportSpecification(Dictionary<string, string> reportOptions = default(Dictionary<string, string>), string reportType = default(string), DateTime dataStartTime = default(DateTime), DateTime dataEndTime = default(DateTime), List<string> marketplaceIds = default(List<string>))
        {
            // to ensure "reportType" is required (not null)
            if (reportType == null)
            {
                throw new ArgumentNullException("reportType is a required property for CreateReportSpecification and cannot be null");
            }
            this.ReportType = reportType;
            // to ensure "marketplaceIds" is required (not null)
            if (marketplaceIds == null)
            {
                throw new ArgumentNullException("marketplaceIds is a required property for CreateReportSpecification and cannot be null");
            }
            this.MarketplaceIds = marketplaceIds;
            this.ReportOptions = reportOptions;
            this.DataStartTime = dataStartTime;
            this.DataEndTime = dataEndTime;
        }

        /// <summary>
        /// Additional information passed to reports. This varies by report type.
        /// </summary>
        /// <value>Additional information passed to reports. This varies by report type.</value>
        [DataMember(Name = "reportOptions", EmitDefaultValue = false)]
        public Dictionary<string, string> ReportOptions { get; set; }

        /// <summary>
        /// The report type. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information.
        /// </summary>
        /// <value>The report type. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information.</value>
        [DataMember(Name = "reportType", IsRequired = true, EmitDefaultValue = true)]
        public string ReportType { get; set; }

        /// <summary>
        /// The start of a date and time range, in &lt;a href&#x3D;&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601&#39;&gt;ISO 8601&lt;/a&gt; date time format, used for selecting the data to report. The default is now. The value must be prior to or equal to the current date and time. Not all report types make use of this.
        /// </summary>
        /// <value>The start of a date and time range, in &lt;a href&#x3D;&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601&#39;&gt;ISO 8601&lt;/a&gt; date time format, used for selecting the data to report. The default is now. The value must be prior to or equal to the current date and time. Not all report types make use of this.</value>
        [DataMember(Name = "dataStartTime", EmitDefaultValue = false)]
        public DateTime DataStartTime { get; set; }

        /// <summary>
        /// The end of a date and time range, in &lt;a href&#x3D;&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601&#39;&gt;ISO 8601&lt;/a&gt; date time format, used for selecting the data to report. The default is now. The value must be prior to or equal to the current date and time. Not all report types make use of this.
        /// </summary>
        /// <value>The end of a date and time range, in &lt;a href&#x3D;&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601&#39;&gt;ISO 8601&lt;/a&gt; date time format, used for selecting the data to report. The default is now. The value must be prior to or equal to the current date and time. Not all report types make use of this.</value>
        [DataMember(Name = "dataEndTime", EmitDefaultValue = false)]
        public DateTime DataEndTime { get; set; }

        /// <summary>
        /// A list of marketplace identifiers. The report document&#39;s contents will contain data for all of the specified marketplaces, unless the report type indicates otherwise.
        /// </summary>
        /// <value>A list of marketplace identifiers. The report document&#39;s contents will contain data for all of the specified marketplaces, unless the report type indicates otherwise.</value>
        [DataMember(Name = "marketplaceIds", IsRequired = true, EmitDefaultValue = true)]
        public List<string> MarketplaceIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateReportSpecification {\n");
            sb.Append("  ReportOptions: ").Append(ReportOptions).Append("\n");
            sb.Append("  ReportType: ").Append(ReportType).Append("\n");
            sb.Append("  DataStartTime: ").Append(DataStartTime).Append("\n");
            sb.Append("  DataEndTime: ").Append(DataEndTime).Append("\n");
            sb.Append("  MarketplaceIds: ").Append(MarketplaceIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
