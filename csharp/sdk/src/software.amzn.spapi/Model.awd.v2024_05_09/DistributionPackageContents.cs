/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 *
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * The version of the OpenAPI document: 2024-05-09
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.awd.v2024_05_09
{
    /// <summary>
    /// Represents the contents inside a package, which can be products or a nested package.
    /// </summary>
    [DataContract(Name = "DistributionPackageContents")]
    public partial class DistributionPackageContents : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DistributionPackageContents" /> class.
        /// </summary>
        /// <param name="packages">This is required only when &#x60;DistributionPackageType&#x3D;PALLET&#x60;..</param>
        /// <param name="products">This is required only when &#x60;DistributionPackageType&#x3D;CASE&#x60;..</param>
        public DistributionPackageContents(List<DistributionPackageQuantity> packages = default(List<DistributionPackageQuantity>), List<ProductQuantity> products = default(List<ProductQuantity>))
        {
            this.Packages = packages;
            this.Products = products;
        }

        /// <summary>
        /// This is required only when &#x60;DistributionPackageType&#x3D;PALLET&#x60;.
        /// </summary>
        /// <value>This is required only when &#x60;DistributionPackageType&#x3D;PALLET&#x60;.</value>
        [DataMember(Name = "packages", EmitDefaultValue = false)]
        public List<DistributionPackageQuantity> Packages { get; set; }

        /// <summary>
        /// This is required only when &#x60;DistributionPackageType&#x3D;CASE&#x60;.
        /// </summary>
        /// <value>This is required only when &#x60;DistributionPackageType&#x3D;CASE&#x60;.</value>
        [DataMember(Name = "products", EmitDefaultValue = false)]
        public List<ProductQuantity> Products { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DistributionPackageContents {\n");
            sb.Append("  Packages: ").Append(Packages).Append("\n");
            sb.Append("  Products: ").Append(Products).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
