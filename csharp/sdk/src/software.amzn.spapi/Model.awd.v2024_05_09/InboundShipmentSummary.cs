/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 *
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * The version of the OpenAPI document: 2024-05-09
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.awd.v2024_05_09
{
    /// <summary>
    /// Summary for an AWD inbound shipment containing the shipment ID, which can be used to retrieve the actual shipment.
    /// </summary>
    [DataContract(Name = "InboundShipmentSummary")]
    public partial class InboundShipmentSummary : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets ShipmentStatus
        /// </summary>
        [DataMember(Name = "shipmentStatus", IsRequired = true, EmitDefaultValue = true)]
        public InboundShipmentStatus ShipmentStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="InboundShipmentSummary" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected InboundShipmentSummary() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InboundShipmentSummary" /> class.
        /// </summary>
        /// <param name="createdAt">Timestamp when the shipment was created..</param>
        /// <param name="externalReferenceId">Optional client-provided reference ID that can be used to correlate this shipment with client resources. For example, to map this shipment to an internal bookkeeping order record..</param>
        /// <param name="orderId">The AWD inbound order ID that this inbound shipment belongs to. (required).</param>
        /// <param name="shipmentId">A unique shipment ID. (required).</param>
        /// <param name="shipmentStatus">shipmentStatus (required).</param>
        /// <param name="updatedAt">Timestamp when the shipment was updated..</param>
        public InboundShipmentSummary(DateTime createdAt = default(DateTime), string externalReferenceId = default(string), string orderId = default(string), string shipmentId = default(string), InboundShipmentStatus shipmentStatus = default(InboundShipmentStatus), DateTime updatedAt = default(DateTime))
        {
            // to ensure "orderId" is required (not null)
            if (orderId == null)
            {
                throw new ArgumentNullException("orderId is a required property for InboundShipmentSummary and cannot be null");
            }
            this.OrderId = orderId;
            // to ensure "shipmentId" is required (not null)
            if (shipmentId == null)
            {
                throw new ArgumentNullException("shipmentId is a required property for InboundShipmentSummary and cannot be null");
            }
            this.ShipmentId = shipmentId;
            this.ShipmentStatus = shipmentStatus;
            this.CreatedAt = createdAt;
            this.ExternalReferenceId = externalReferenceId;
            this.UpdatedAt = updatedAt;
        }

        /// <summary>
        /// Timestamp when the shipment was created.
        /// </summary>
        /// <value>Timestamp when the shipment was created.</value>
        [DataMember(Name = "createdAt", EmitDefaultValue = false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Optional client-provided reference ID that can be used to correlate this shipment with client resources. For example, to map this shipment to an internal bookkeeping order record.
        /// </summary>
        /// <value>Optional client-provided reference ID that can be used to correlate this shipment with client resources. For example, to map this shipment to an internal bookkeeping order record.</value>
        /*
        <example>TestReferenceId</example>
        */
        [DataMember(Name = "externalReferenceId", EmitDefaultValue = false)]
        public string ExternalReferenceId { get; set; }

        /// <summary>
        /// The AWD inbound order ID that this inbound shipment belongs to.
        /// </summary>
        /// <value>The AWD inbound order ID that this inbound shipment belongs to.</value>
        [DataMember(Name = "orderId", IsRequired = true, EmitDefaultValue = true)]
        public string OrderId { get; set; }

        /// <summary>
        /// A unique shipment ID.
        /// </summary>
        /// <value>A unique shipment ID.</value>
        [DataMember(Name = "shipmentId", IsRequired = true, EmitDefaultValue = true)]
        public string ShipmentId { get; set; }

        /// <summary>
        /// Timestamp when the shipment was updated.
        /// </summary>
        /// <value>Timestamp when the shipment was updated.</value>
        [DataMember(Name = "updatedAt", EmitDefaultValue = false)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InboundShipmentSummary {\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  ExternalReferenceId: ").Append(ExternalReferenceId).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  ShipmentId: ").Append(ShipmentId).Append("\n");
            sb.Append("  ShipmentStatus: ").Append(ShipmentStatus).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // OrderId (string) minLength
            if (this.OrderId != null && this.OrderId.Length < 1)
            {
                yield return new ValidationResult("Invalid value for OrderId, length must be greater than 1.", new [] { "OrderId" });
            }

            // ShipmentId (string) minLength
            if (this.ShipmentId != null && this.ShipmentId.Length < 1)
            {
                yield return new ValidationResult("Invalid value for ShipmentId, length must be greater than 1.", new [] { "ShipmentId" });
            }

            yield break;
        }
    }

}
