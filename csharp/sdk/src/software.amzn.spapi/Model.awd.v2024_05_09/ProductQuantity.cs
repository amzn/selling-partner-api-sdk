/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 *
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * The version of the OpenAPI document: 2024-05-09
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.awd.v2024_05_09
{
    /// <summary>
    /// Represents a product with the SKU details and the corresponding quantity.
    /// </summary>
    [DataContract(Name = "ProductQuantity")]
    public partial class ProductQuantity : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductQuantity" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ProductQuantity() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductQuantity" /> class.
        /// </summary>
        /// <param name="attributes">Contains attributes for this instance of the product. For example, item color, or other attributes that distinguish the product beyond the SKU. This is metadata for the product and Amazon does not process this data..</param>
        /// <param name="quantity">Product quantity. (required).</param>
        /// <param name="sku">The seller or merchant SKU. (required).</param>
        /// <param name="expiration">The expiration date for the SKU. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format..</param>
        /// <param name="prepDetails">prepDetails.</param>
        public ProductQuantity(List<ProductAttribute> attributes = default(List<ProductAttribute>), int quantity = default(int), string sku = default(string), DateTime expiration = default(DateTime), PrepDetails prepDetails = default(PrepDetails))
        {
            this.Quantity = quantity;
            // to ensure "sku" is required (not null)
            if (sku == null)
            {
                throw new ArgumentNullException("sku is a required property for ProductQuantity and cannot be null");
            }
            this.Sku = sku;
            this.Attributes = attributes;
            this.Expiration = expiration;
            this.PrepDetails = prepDetails;
        }

        /// <summary>
        /// Contains attributes for this instance of the product. For example, item color, or other attributes that distinguish the product beyond the SKU. This is metadata for the product and Amazon does not process this data.
        /// </summary>
        /// <value>Contains attributes for this instance of the product. For example, item color, or other attributes that distinguish the product beyond the SKU. This is metadata for the product and Amazon does not process this data.</value>
        /*
        <example>{name&#x3D;TestAttribute, value&#x3D;TestAttributeValue}</example>
        */
        [DataMember(Name = "attributes", EmitDefaultValue = false)]
        public List<ProductAttribute> Attributes { get; set; }

        /// <summary>
        /// Product quantity.
        /// </summary>
        /// <value>Product quantity.</value>
        [DataMember(Name = "quantity", IsRequired = true, EmitDefaultValue = true)]
        public int Quantity { get; set; }

        /// <summary>
        /// The seller or merchant SKU.
        /// </summary>
        /// <value>The seller or merchant SKU.</value>
        [DataMember(Name = "sku", IsRequired = true, EmitDefaultValue = true)]
        public string Sku { get; set; }

        /// <summary>
        /// The expiration date for the SKU. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
        /// </summary>
        /// <value>The expiration date for the SKU. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.</value>
        [DataMember(Name = "expiration", EmitDefaultValue = false)]
        public DateTime Expiration { get; set; }

        /// <summary>
        /// Gets or Sets PrepDetails
        /// </summary>
        [DataMember(Name = "prepDetails", EmitDefaultValue = false)]
        public PrepDetails PrepDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProductQuantity {\n");
            sb.Append("  Attributes: ").Append(Attributes).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  Sku: ").Append(Sku).Append("\n");
            sb.Append("  Expiration: ").Append(Expiration).Append("\n");
            sb.Append("  PrepDetails: ").Append(PrepDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
