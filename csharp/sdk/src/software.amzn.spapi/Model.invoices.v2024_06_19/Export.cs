/*
 * The Selling Partner API for Invoices.
 *
 * Use the Selling Partner API for Invoices to retrieve and manage invoice-related operations, which can help selling partners manage their bookkeeping processes.
 *
 * The version of the OpenAPI document: 2024-06-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.invoices.v2024_06_19
{
    /// <summary>
    /// Detailed information about the export.
    /// </summary>
    [DataContract(Name = "Export")]
    public partial class Export : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public ExportStatus? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Export" /> class.
        /// </summary>
        /// <param name="errorMessage">When the export generation fails, this attribute contains a description of the error..</param>
        /// <param name="exportId">The export identifier..</param>
        /// <param name="generateExportFinishedAt">The date and time when the export generation finished. Vales are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format..</param>
        /// <param name="generateExportStartedAt">The date and time when the export generation started. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format..</param>
        /// <param name="invoicesDocumentIds">The identifier for the export documents. To get the information required to retrieve the export document&#39;s contents, pass each ID in the &#x60;getInvoicesDocument&#x60; operation.  This list is empty until the status is &#x60;DONE&#x60;..</param>
        /// <param name="status">status.</param>
        public Export(string errorMessage = default(string), string exportId = default(string), DateTime generateExportFinishedAt = default(DateTime), DateTime generateExportStartedAt = default(DateTime), List<string> invoicesDocumentIds = default(List<string>), ExportStatus? status = default(ExportStatus?))
        {
            this.ErrorMessage = errorMessage;
            this.ExportId = exportId;
            this.GenerateExportFinishedAt = generateExportFinishedAt;
            this.GenerateExportStartedAt = generateExportStartedAt;
            this.InvoicesDocumentIds = invoicesDocumentIds;
            this.Status = status;
        }

        /// <summary>
        /// When the export generation fails, this attribute contains a description of the error.
        /// </summary>
        /// <value>When the export generation fails, this attribute contains a description of the error.</value>
        [DataMember(Name = "errorMessage", EmitDefaultValue = false)]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// The export identifier.
        /// </summary>
        /// <value>The export identifier.</value>
        [DataMember(Name = "exportId", EmitDefaultValue = false)]
        public string ExportId { get; set; }

        /// <summary>
        /// The date and time when the export generation finished. Vales are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
        /// </summary>
        /// <value>The date and time when the export generation finished. Vales are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.</value>
        [DataMember(Name = "generateExportFinishedAt", EmitDefaultValue = false)]
        public DateTime GenerateExportFinishedAt { get; set; }

        /// <summary>
        /// The date and time when the export generation started. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
        /// </summary>
        /// <value>The date and time when the export generation started. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.</value>
        [DataMember(Name = "generateExportStartedAt", EmitDefaultValue = false)]
        public DateTime GenerateExportStartedAt { get; set; }

        /// <summary>
        /// The identifier for the export documents. To get the information required to retrieve the export document&#39;s contents, pass each ID in the &#x60;getInvoicesDocument&#x60; operation.  This list is empty until the status is &#x60;DONE&#x60;.
        /// </summary>
        /// <value>The identifier for the export documents. To get the information required to retrieve the export document&#39;s contents, pass each ID in the &#x60;getInvoicesDocument&#x60; operation.  This list is empty until the status is &#x60;DONE&#x60;.</value>
        [DataMember(Name = "invoicesDocumentIds", EmitDefaultValue = false)]
        public List<string> InvoicesDocumentIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Export {\n");
            sb.Append("  ErrorMessage: ").Append(ErrorMessage).Append("\n");
            sb.Append("  ExportId: ").Append(ExportId).Append("\n");
            sb.Append("  GenerateExportFinishedAt: ").Append(GenerateExportFinishedAt).Append("\n");
            sb.Append("  GenerateExportStartedAt: ").Append(GenerateExportStartedAt).Append("\n");
            sb.Append("  InvoicesDocumentIds: ").Append(InvoicesDocumentIds).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
