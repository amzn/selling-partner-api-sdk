/*
 * The Selling Partner API for Invoices.
 *
 * Use the Selling Partner API for Invoices to retrieve and manage invoice-related operations, which can help selling partners manage their bookkeeping processes.
 *
 * The version of the OpenAPI document: 2024-06-19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.invoices.v2024_06_19
{
    /// <summary>
    /// An object that contains the invoice attributes definition.
    /// </summary>
    [DataContract(Name = "InvoicesAttributes")]
    public partial class InvoicesAttributes : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InvoicesAttributes" /> class.
        /// </summary>
        /// <param name="invoiceStatusOptions">A list of all the options that are available for the invoice status attribute..</param>
        /// <param name="invoiceTypeOptions">A list of all the options that are available for the invoice type attribute..</param>
        /// <param name="transactionIdentifierNameOptions">A list of all the options that are available for the transaction identifier name attribute..</param>
        /// <param name="transactionTypeOptions">A list of all the options that are available for the transaction type attribute..</param>
        public InvoicesAttributes(List<AttributeOption> invoiceStatusOptions = default(List<AttributeOption>), List<AttributeOption> invoiceTypeOptions = default(List<AttributeOption>), List<AttributeOption> transactionIdentifierNameOptions = default(List<AttributeOption>), List<AttributeOption> transactionTypeOptions = default(List<AttributeOption>))
        {
            this.InvoiceStatusOptions = invoiceStatusOptions;
            this.InvoiceTypeOptions = invoiceTypeOptions;
            this.TransactionIdentifierNameOptions = transactionIdentifierNameOptions;
            this.TransactionTypeOptions = transactionTypeOptions;
        }

        /// <summary>
        /// A list of all the options that are available for the invoice status attribute.
        /// </summary>
        /// <value>A list of all the options that are available for the invoice status attribute.</value>
        [DataMember(Name = "invoiceStatusOptions", EmitDefaultValue = false)]
        public List<AttributeOption> InvoiceStatusOptions { get; set; }

        /// <summary>
        /// A list of all the options that are available for the invoice type attribute.
        /// </summary>
        /// <value>A list of all the options that are available for the invoice type attribute.</value>
        [DataMember(Name = "invoiceTypeOptions", EmitDefaultValue = false)]
        public List<AttributeOption> InvoiceTypeOptions { get; set; }

        /// <summary>
        /// A list of all the options that are available for the transaction identifier name attribute.
        /// </summary>
        /// <value>A list of all the options that are available for the transaction identifier name attribute.</value>
        [DataMember(Name = "transactionIdentifierNameOptions", EmitDefaultValue = false)]
        public List<AttributeOption> TransactionIdentifierNameOptions { get; set; }

        /// <summary>
        /// A list of all the options that are available for the transaction type attribute.
        /// </summary>
        /// <value>A list of all the options that are available for the transaction type attribute.</value>
        [DataMember(Name = "transactionTypeOptions", EmitDefaultValue = false)]
        public List<AttributeOption> TransactionTypeOptions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InvoicesAttributes {\n");
            sb.Append("  InvoiceStatusOptions: ").Append(InvoiceStatusOptions).Append("\n");
            sb.Append("  InvoiceTypeOptions: ").Append(InvoiceTypeOptions).Append("\n");
            sb.Append("  TransactionIdentifierNameOptions: ").Append(TransactionIdentifierNameOptions).Append("\n");
            sb.Append("  TransactionTypeOptions: ").Append(TransactionTypeOptions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
