/*
 * Selling Partner API for Shipment Invoicing
 *
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partner’s Fulfillment by Amazon (FBA) orders.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.invoicing.v0
{
    /// <summary>
    /// The information required by a selling partner to issue a shipment invoice.
    /// </summary>
    [DataContract(Name = "ShipmentDetail")]
    public partial class ShipmentDetail : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentDetail" /> class.
        /// </summary>
        /// <param name="warehouseId">The Amazon-defined identifier for the warehouse..</param>
        /// <param name="amazonOrderId">The Amazon-defined identifier for the order..</param>
        /// <param name="amazonShipmentId">The Amazon-defined identifier for the shipment..</param>
        /// <param name="purchaseDate">The date and time when the order was created..</param>
        /// <param name="shippingAddress">shippingAddress.</param>
        /// <param name="paymentMethodDetails">The list of payment method details..</param>
        /// <param name="marketplaceId">The identifier for the marketplace where the order was placed..</param>
        /// <param name="sellerId">The seller identifier..</param>
        /// <param name="buyerName">The name of the buyer..</param>
        /// <param name="buyerCounty">The county of the buyer..</param>
        /// <param name="buyerTaxInfo">buyerTaxInfo.</param>
        /// <param name="marketplaceTaxInfo">marketplaceTaxInfo.</param>
        /// <param name="sellerDisplayName">The seller’s friendly name registered in the marketplace..</param>
        /// <param name="shipmentItems">A list of shipment items..</param>
        public ShipmentDetail(string warehouseId = default(string), string amazonOrderId = default(string), string amazonShipmentId = default(string), DateTime purchaseDate = default(DateTime), Address shippingAddress = default(Address), List<string> paymentMethodDetails = default(List<string>), string marketplaceId = default(string), string sellerId = default(string), string buyerName = default(string), string buyerCounty = default(string), BuyerTaxInfo buyerTaxInfo = default(BuyerTaxInfo), MarketplaceTaxInfo marketplaceTaxInfo = default(MarketplaceTaxInfo), string sellerDisplayName = default(string), List<ShipmentItem> shipmentItems = default(List<ShipmentItem>))
        {
            this.WarehouseId = warehouseId;
            this.AmazonOrderId = amazonOrderId;
            this.AmazonShipmentId = amazonShipmentId;
            this.PurchaseDate = purchaseDate;
            this.ShippingAddress = shippingAddress;
            this.PaymentMethodDetails = paymentMethodDetails;
            this.MarketplaceId = marketplaceId;
            this.SellerId = sellerId;
            this.BuyerName = buyerName;
            this.BuyerCounty = buyerCounty;
            this.BuyerTaxInfo = buyerTaxInfo;
            this.MarketplaceTaxInfo = marketplaceTaxInfo;
            this.SellerDisplayName = sellerDisplayName;
            this.ShipmentItems = shipmentItems;
        }

        /// <summary>
        /// The Amazon-defined identifier for the warehouse.
        /// </summary>
        /// <value>The Amazon-defined identifier for the warehouse.</value>
        [DataMember(Name = "WarehouseId", EmitDefaultValue = false)]
        public string WarehouseId { get; set; }

        /// <summary>
        /// The Amazon-defined identifier for the order.
        /// </summary>
        /// <value>The Amazon-defined identifier for the order.</value>
        [DataMember(Name = "AmazonOrderId", EmitDefaultValue = false)]
        public string AmazonOrderId { get; set; }

        /// <summary>
        /// The Amazon-defined identifier for the shipment.
        /// </summary>
        /// <value>The Amazon-defined identifier for the shipment.</value>
        [DataMember(Name = "AmazonShipmentId", EmitDefaultValue = false)]
        public string AmazonShipmentId { get; set; }

        /// <summary>
        /// The date and time when the order was created.
        /// </summary>
        /// <value>The date and time when the order was created.</value>
        [DataMember(Name = "PurchaseDate", EmitDefaultValue = false)]
        public DateTime PurchaseDate { get; set; }

        /// <summary>
        /// Gets or Sets ShippingAddress
        /// </summary>
        [DataMember(Name = "ShippingAddress", EmitDefaultValue = false)]
        public Address ShippingAddress { get; set; }

        /// <summary>
        /// The list of payment method details.
        /// </summary>
        /// <value>The list of payment method details.</value>
        [DataMember(Name = "PaymentMethodDetails", EmitDefaultValue = false)]
        public List<string> PaymentMethodDetails { get; set; }

        /// <summary>
        /// The identifier for the marketplace where the order was placed.
        /// </summary>
        /// <value>The identifier for the marketplace where the order was placed.</value>
        [DataMember(Name = "MarketplaceId", EmitDefaultValue = false)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// The seller identifier.
        /// </summary>
        /// <value>The seller identifier.</value>
        [DataMember(Name = "SellerId", EmitDefaultValue = false)]
        public string SellerId { get; set; }

        /// <summary>
        /// The name of the buyer.
        /// </summary>
        /// <value>The name of the buyer.</value>
        [DataMember(Name = "BuyerName", EmitDefaultValue = false)]
        public string BuyerName { get; set; }

        /// <summary>
        /// The county of the buyer.
        /// </summary>
        /// <value>The county of the buyer.</value>
        [DataMember(Name = "BuyerCounty", EmitDefaultValue = false)]
        public string BuyerCounty { get; set; }

        /// <summary>
        /// Gets or Sets BuyerTaxInfo
        /// </summary>
        [DataMember(Name = "BuyerTaxInfo", EmitDefaultValue = false)]
        public BuyerTaxInfo BuyerTaxInfo { get; set; }

        /// <summary>
        /// Gets or Sets MarketplaceTaxInfo
        /// </summary>
        [DataMember(Name = "MarketplaceTaxInfo", EmitDefaultValue = false)]
        public MarketplaceTaxInfo MarketplaceTaxInfo { get; set; }

        /// <summary>
        /// The seller’s friendly name registered in the marketplace.
        /// </summary>
        /// <value>The seller’s friendly name registered in the marketplace.</value>
        [DataMember(Name = "SellerDisplayName", EmitDefaultValue = false)]
        public string SellerDisplayName { get; set; }

        /// <summary>
        /// A list of shipment items.
        /// </summary>
        /// <value>A list of shipment items.</value>
        [DataMember(Name = "ShipmentItems", EmitDefaultValue = false)]
        public List<ShipmentItem> ShipmentItems { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShipmentDetail {\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  AmazonOrderId: ").Append(AmazonOrderId).Append("\n");
            sb.Append("  AmazonShipmentId: ").Append(AmazonShipmentId).Append("\n");
            sb.Append("  PurchaseDate: ").Append(PurchaseDate).Append("\n");
            sb.Append("  ShippingAddress: ").Append(ShippingAddress).Append("\n");
            sb.Append("  PaymentMethodDetails: ").Append(PaymentMethodDetails).Append("\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  SellerId: ").Append(SellerId).Append("\n");
            sb.Append("  BuyerName: ").Append(BuyerName).Append("\n");
            sb.Append("  BuyerCounty: ").Append(BuyerCounty).Append("\n");
            sb.Append("  BuyerTaxInfo: ").Append(BuyerTaxInfo).Append("\n");
            sb.Append("  MarketplaceTaxInfo: ").Append(MarketplaceTaxInfo).Append("\n");
            sb.Append("  SellerDisplayName: ").Append(SellerDisplayName).Append("\n");
            sb.Append("  ShipmentItems: ").Append(ShipmentItems).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
