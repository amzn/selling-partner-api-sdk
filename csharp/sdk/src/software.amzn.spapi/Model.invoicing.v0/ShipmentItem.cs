/*
 * Selling Partner API for Shipment Invoicing
 *
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partnerâ€™s Fulfillment by Amazon (FBA) orders.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.invoicing.v0
{
    /// <summary>
    /// The shipment item information required by a seller to issue a shipment invoice.
    /// </summary>
    [DataContract(Name = "ShipmentItem")]
    public partial class ShipmentItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentItem" /> class.
        /// </summary>
        /// <param name="aSIN">The Amazon Standard Identification Number (ASIN) of the item..</param>
        /// <param name="sellerSKU">The seller SKU of the item..</param>
        /// <param name="orderItemId">The Amazon-defined identifier for the order item..</param>
        /// <param name="title">The name of the item..</param>
        /// <param name="quantityOrdered">The number of items ordered..</param>
        /// <param name="itemPrice">itemPrice.</param>
        /// <param name="shippingPrice">shippingPrice.</param>
        /// <param name="giftWrapPrice">giftWrapPrice.</param>
        /// <param name="shippingDiscount">shippingDiscount.</param>
        /// <param name="promotionDiscount">promotionDiscount.</param>
        /// <param name="serialNumbers">The list of serial numbers..</param>
        public ShipmentItem(string aSIN = default(string), string sellerSKU = default(string), string orderItemId = default(string), string title = default(string), decimal quantityOrdered = default(decimal), Money itemPrice = default(Money), Money shippingPrice = default(Money), Money giftWrapPrice = default(Money), Money shippingDiscount = default(Money), Money promotionDiscount = default(Money), List<string> serialNumbers = default(List<string>))
        {
            this.ASIN = aSIN;
            this.SellerSKU = sellerSKU;
            this.OrderItemId = orderItemId;
            this.Title = title;
            this.QuantityOrdered = quantityOrdered;
            this.ItemPrice = itemPrice;
            this.ShippingPrice = shippingPrice;
            this.GiftWrapPrice = giftWrapPrice;
            this.ShippingDiscount = shippingDiscount;
            this.PromotionDiscount = promotionDiscount;
            this.SerialNumbers = serialNumbers;
        }

        /// <summary>
        /// The Amazon Standard Identification Number (ASIN) of the item.
        /// </summary>
        /// <value>The Amazon Standard Identification Number (ASIN) of the item.</value>
        [DataMember(Name = "ASIN", EmitDefaultValue = false)]
        public string ASIN { get; set; }

        /// <summary>
        /// The seller SKU of the item.
        /// </summary>
        /// <value>The seller SKU of the item.</value>
        [DataMember(Name = "SellerSKU", EmitDefaultValue = false)]
        public string SellerSKU { get; set; }

        /// <summary>
        /// The Amazon-defined identifier for the order item.
        /// </summary>
        /// <value>The Amazon-defined identifier for the order item.</value>
        [DataMember(Name = "OrderItemId", EmitDefaultValue = false)]
        public string OrderItemId { get; set; }

        /// <summary>
        /// The name of the item.
        /// </summary>
        /// <value>The name of the item.</value>
        [DataMember(Name = "Title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// The number of items ordered.
        /// </summary>
        /// <value>The number of items ordered.</value>
        [DataMember(Name = "QuantityOrdered", EmitDefaultValue = false)]
        public decimal QuantityOrdered { get; set; }

        /// <summary>
        /// Gets or Sets ItemPrice
        /// </summary>
        [DataMember(Name = "ItemPrice", EmitDefaultValue = false)]
        public Money ItemPrice { get; set; }

        /// <summary>
        /// Gets or Sets ShippingPrice
        /// </summary>
        [DataMember(Name = "ShippingPrice", EmitDefaultValue = false)]
        public Money ShippingPrice { get; set; }

        /// <summary>
        /// Gets or Sets GiftWrapPrice
        /// </summary>
        [DataMember(Name = "GiftWrapPrice", EmitDefaultValue = false)]
        public Money GiftWrapPrice { get; set; }

        /// <summary>
        /// Gets or Sets ShippingDiscount
        /// </summary>
        [DataMember(Name = "ShippingDiscount", EmitDefaultValue = false)]
        public Money ShippingDiscount { get; set; }

        /// <summary>
        /// Gets or Sets PromotionDiscount
        /// </summary>
        [DataMember(Name = "PromotionDiscount", EmitDefaultValue = false)]
        public Money PromotionDiscount { get; set; }

        /// <summary>
        /// The list of serial numbers.
        /// </summary>
        /// <value>The list of serial numbers.</value>
        [DataMember(Name = "SerialNumbers", EmitDefaultValue = false)]
        public List<string> SerialNumbers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ShipmentItem {\n");
            sb.Append("  ASIN: ").Append(ASIN).Append("\n");
            sb.Append("  SellerSKU: ").Append(SellerSKU).Append("\n");
            sb.Append("  OrderItemId: ").Append(OrderItemId).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  QuantityOrdered: ").Append(QuantityOrdered).Append("\n");
            sb.Append("  ItemPrice: ").Append(ItemPrice).Append("\n");
            sb.Append("  ShippingPrice: ").Append(ShippingPrice).Append("\n");
            sb.Append("  GiftWrapPrice: ").Append(GiftWrapPrice).Append("\n");
            sb.Append("  ShippingDiscount: ").Append(ShippingDiscount).Append("\n");
            sb.Append("  PromotionDiscount: ").Append(PromotionDiscount).Append("\n");
            sb.Append("  SerialNumbers: ").Append(SerialNumbers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
