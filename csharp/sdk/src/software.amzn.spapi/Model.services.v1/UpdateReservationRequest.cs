/*
 * Selling Partner API for Services
 *
 * With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.services.v1
{
    /// <summary>
    /// Request schema for the &#x60;updateReservation&#x60; operation.
    /// </summary>
    [DataContract(Name = "UpdateReservationRequest")]
    public partial class UpdateReservationRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateReservationRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateReservationRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateReservationRequest" /> class.
        /// </summary>
        /// <param name="resourceId">Resource (store) identifier. (required).</param>
        /// <param name="reservation">reservation (required).</param>
        public UpdateReservationRequest(string resourceId = default(string), Reservation reservation = default(Reservation))
        {
            // to ensure "resourceId" is required (not null)
            if (resourceId == null)
            {
                throw new ArgumentNullException("resourceId is a required property for UpdateReservationRequest and cannot be null");
            }
            this.ResourceId = resourceId;
            // to ensure "reservation" is required (not null)
            if (reservation == null)
            {
                throw new ArgumentNullException("reservation is a required property for UpdateReservationRequest and cannot be null");
            }
            this.Reservation = reservation;
        }

        /// <summary>
        /// Resource (store) identifier.
        /// </summary>
        /// <value>Resource (store) identifier.</value>
        [DataMember(Name = "resourceId", IsRequired = true, EmitDefaultValue = true)]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets or Sets Reservation
        /// </summary>
        [DataMember(Name = "reservation", IsRequired = true, EmitDefaultValue = true)]
        public Reservation Reservation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateReservationRequest {\n");
            sb.Append("  ResourceId: ").Append(ResourceId).Append("\n");
            sb.Append("  Reservation: ").Append(Reservation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
