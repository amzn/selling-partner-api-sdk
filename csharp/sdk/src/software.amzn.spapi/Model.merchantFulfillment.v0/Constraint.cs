/*
 * Selling Partner API for Merchant Fulfillment
 *
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.merchantFulfillment.v0
{
    /// <summary>
    /// A validation constraint.
    /// </summary>
    [DataContract(Name = "Constraint")]
    public partial class Constraint : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Constraint" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Constraint() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Constraint" /> class.
        /// </summary>
        /// <param name="validationRegEx">A regular expression..</param>
        /// <param name="validationString">A validation string. (required).</param>
        public Constraint(string validationRegEx = default(string), string validationString = default(string))
        {
            // to ensure "validationString" is required (not null)
            if (validationString == null)
            {
                throw new ArgumentNullException("validationString is a required property for Constraint and cannot be null");
            }
            this.ValidationString = validationString;
            this.ValidationRegEx = validationRegEx;
        }

        /// <summary>
        /// A regular expression.
        /// </summary>
        /// <value>A regular expression.</value>
        [DataMember(Name = "ValidationRegEx", EmitDefaultValue = false)]
        public string ValidationRegEx { get; set; }

        /// <summary>
        /// A validation string.
        /// </summary>
        /// <value>A validation string.</value>
        [DataMember(Name = "ValidationString", IsRequired = true, EmitDefaultValue = true)]
        public string ValidationString { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Constraint {\n");
            sb.Append("  ValidationRegEx: ").Append(ValidationRegEx).Append("\n");
            sb.Append("  ValidationString: ").Append(ValidationString).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
