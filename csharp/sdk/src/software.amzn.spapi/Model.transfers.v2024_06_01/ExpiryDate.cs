/*
 * The Selling Partner API for Transfers.
 *
 * The Selling Partner API for Transfers enables selling partners to retrieve payment methods and initiate payouts for their seller accounts. This API supports the following marketplaces: DE, FR, IT, ES, SE, NL, PL, and BE.
 *
 * The version of the OpenAPI document: 2024-06-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.transfers.v2024_06_01
{
    /// <summary>
    /// The expiration date of the card used for payment. If the payment method is not &#x60;card&#x60;, the expiration date is &#x60;null&#x60;.
    /// </summary>
    [DataContract(Name = "ExpiryDate")]
    public partial class ExpiryDate : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExpiryDate" /> class.
        /// </summary>
        /// <param name="month">The month the card expires expressed as a number from &#x60;1&#x60; to &#x60;12&#x60;..</param>
        /// <param name="year">Year.</param>
        public ExpiryDate(string month = default(string), string year = default(string))
        {
            this.Month = month;
            this.Year = year;
        }

        /// <summary>
        /// The month the card expires expressed as a number from &#x60;1&#x60; to &#x60;12&#x60;.
        /// </summary>
        /// <value>The month the card expires expressed as a number from &#x60;1&#x60; to &#x60;12&#x60;.</value>
        /*
        <example>3</example>
        */
        [DataMember(Name = "month", EmitDefaultValue = false)]
        public string Month { get; set; }

        /// <summary>
        /// Year
        /// </summary>
        /// <value>Year</value>
        /*
        <example>2024</example>
        */
        [DataMember(Name = "year", EmitDefaultValue = false)]
        public string Year { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ExpiryDate {\n");
            sb.Append("  Month: ").Append(Month).Append("\n");
            sb.Append("  Year: ").Append(Year).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
