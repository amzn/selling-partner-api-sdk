/*
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.outbound.v2020_07_01
{
    /// <summary>
    /// An item that Amazon accepted for return.
    /// </summary>
    [DataContract(Name = "ReturnItem")]
    public partial class ReturnItem : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = true)]
        public FulfillmentReturnItemStatus Status { get; set; }

        /// <summary>
        /// Gets or Sets ReturnReceivedCondition
        /// </summary>
        [DataMember(Name = "returnReceivedCondition", EmitDefaultValue = false)]
        public ReturnItemDisposition? ReturnReceivedCondition { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnItem" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ReturnItem() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnItem" /> class.
        /// </summary>
        /// <param name="sellerReturnItemId">An identifier assigned by the seller to the return item. (required).</param>
        /// <param name="sellerFulfillmentOrderItemId">The identifier assigned to the item by the seller when the fulfillment order was created. (required).</param>
        /// <param name="amazonShipmentId">The identifier for the shipment that is associated with the return item. (required).</param>
        /// <param name="sellerReturnReasonCode">The return reason code assigned to the return item by the seller. (required).</param>
        /// <param name="returnComment">An optional comment about the return item..</param>
        /// <param name="amazonReturnReasonCode">The return reason code that the Amazon fulfillment center assigned to the return item..</param>
        /// <param name="status">status (required).</param>
        /// <param name="statusChangedDate">Date timestamp (required).</param>
        /// <param name="returnAuthorizationId">Identifies the return authorization used to return this item. Refer to &#x60;ReturnAuthorization&#x60;..</param>
        /// <param name="returnReceivedCondition">returnReceivedCondition.</param>
        /// <param name="fulfillmentCenterId">The identifier for the Amazon fulfillment center that processed the return item..</param>
        public ReturnItem(string sellerReturnItemId = default(string), string sellerFulfillmentOrderItemId = default(string), string amazonShipmentId = default(string), string sellerReturnReasonCode = default(string), string returnComment = default(string), string amazonReturnReasonCode = default(string), FulfillmentReturnItemStatus status = default(FulfillmentReturnItemStatus), DateTime statusChangedDate = default(DateTime), string returnAuthorizationId = default(string), ReturnItemDisposition? returnReceivedCondition = default(ReturnItemDisposition?), string fulfillmentCenterId = default(string))
        {
            // to ensure "sellerReturnItemId" is required (not null)
            if (sellerReturnItemId == null)
            {
                throw new ArgumentNullException("sellerReturnItemId is a required property for ReturnItem and cannot be null");
            }
            this.SellerReturnItemId = sellerReturnItemId;
            // to ensure "sellerFulfillmentOrderItemId" is required (not null)
            if (sellerFulfillmentOrderItemId == null)
            {
                throw new ArgumentNullException("sellerFulfillmentOrderItemId is a required property for ReturnItem and cannot be null");
            }
            this.SellerFulfillmentOrderItemId = sellerFulfillmentOrderItemId;
            // to ensure "amazonShipmentId" is required (not null)
            if (amazonShipmentId == null)
            {
                throw new ArgumentNullException("amazonShipmentId is a required property for ReturnItem and cannot be null");
            }
            this.AmazonShipmentId = amazonShipmentId;
            // to ensure "sellerReturnReasonCode" is required (not null)
            if (sellerReturnReasonCode == null)
            {
                throw new ArgumentNullException("sellerReturnReasonCode is a required property for ReturnItem and cannot be null");
            }
            this.SellerReturnReasonCode = sellerReturnReasonCode;
            this.Status = status;
            this.StatusChangedDate = statusChangedDate;
            this.ReturnComment = returnComment;
            this.AmazonReturnReasonCode = amazonReturnReasonCode;
            this.ReturnAuthorizationId = returnAuthorizationId;
            this.ReturnReceivedCondition = returnReceivedCondition;
            this.FulfillmentCenterId = fulfillmentCenterId;
        }

        /// <summary>
        /// An identifier assigned by the seller to the return item.
        /// </summary>
        /// <value>An identifier assigned by the seller to the return item.</value>
        [DataMember(Name = "sellerReturnItemId", IsRequired = true, EmitDefaultValue = true)]
        public string SellerReturnItemId { get; set; }

        /// <summary>
        /// The identifier assigned to the item by the seller when the fulfillment order was created.
        /// </summary>
        /// <value>The identifier assigned to the item by the seller when the fulfillment order was created.</value>
        [DataMember(Name = "sellerFulfillmentOrderItemId", IsRequired = true, EmitDefaultValue = true)]
        public string SellerFulfillmentOrderItemId { get; set; }

        /// <summary>
        /// The identifier for the shipment that is associated with the return item.
        /// </summary>
        /// <value>The identifier for the shipment that is associated with the return item.</value>
        [DataMember(Name = "amazonShipmentId", IsRequired = true, EmitDefaultValue = true)]
        public string AmazonShipmentId { get; set; }

        /// <summary>
        /// The return reason code assigned to the return item by the seller.
        /// </summary>
        /// <value>The return reason code assigned to the return item by the seller.</value>
        [DataMember(Name = "sellerReturnReasonCode", IsRequired = true, EmitDefaultValue = true)]
        public string SellerReturnReasonCode { get; set; }

        /// <summary>
        /// An optional comment about the return item.
        /// </summary>
        /// <value>An optional comment about the return item.</value>
        [DataMember(Name = "returnComment", EmitDefaultValue = false)]
        public string ReturnComment { get; set; }

        /// <summary>
        /// The return reason code that the Amazon fulfillment center assigned to the return item.
        /// </summary>
        /// <value>The return reason code that the Amazon fulfillment center assigned to the return item.</value>
        [DataMember(Name = "amazonReturnReasonCode", EmitDefaultValue = false)]
        public string AmazonReturnReasonCode { get; set; }

        /// <summary>
        /// Date timestamp
        /// </summary>
        /// <value>Date timestamp</value>
        [DataMember(Name = "statusChangedDate", IsRequired = true, EmitDefaultValue = true)]
        public DateTime StatusChangedDate { get; set; }

        /// <summary>
        /// Identifies the return authorization used to return this item. Refer to &#x60;ReturnAuthorization&#x60;.
        /// </summary>
        /// <value>Identifies the return authorization used to return this item. Refer to &#x60;ReturnAuthorization&#x60;.</value>
        [DataMember(Name = "returnAuthorizationId", EmitDefaultValue = false)]
        public string ReturnAuthorizationId { get; set; }

        /// <summary>
        /// The identifier for the Amazon fulfillment center that processed the return item.
        /// </summary>
        /// <value>The identifier for the Amazon fulfillment center that processed the return item.</value>
        [DataMember(Name = "fulfillmentCenterId", EmitDefaultValue = false)]
        public string FulfillmentCenterId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ReturnItem {\n");
            sb.Append("  SellerReturnItemId: ").Append(SellerReturnItemId).Append("\n");
            sb.Append("  SellerFulfillmentOrderItemId: ").Append(SellerFulfillmentOrderItemId).Append("\n");
            sb.Append("  AmazonShipmentId: ").Append(AmazonShipmentId).Append("\n");
            sb.Append("  SellerReturnReasonCode: ").Append(SellerReturnReasonCode).Append("\n");
            sb.Append("  ReturnComment: ").Append(ReturnComment).Append("\n");
            sb.Append("  AmazonReturnReasonCode: ").Append(AmazonReturnReasonCode).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusChangedDate: ").Append(StatusChangedDate).Append("\n");
            sb.Append("  ReturnAuthorizationId: ").Append(ReturnAuthorizationId).Append("\n");
            sb.Append("  ReturnReceivedCondition: ").Append(ReturnReceivedCondition).Append("\n");
            sb.Append("  FulfillmentCenterId: ").Append(FulfillmentCenterId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
