/*
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.outbound.v2020_07_01
{
    /// <summary>
    /// The request for the listReturnReasonCodes operation.
    /// </summary>
    [DataContract(Name = "ListReturnReasonCodesResult")]
    public partial class ListReturnReasonCodesResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListReturnReasonCodesResult" /> class.
        /// </summary>
        /// <param name="reasonCodeDetails">An array of return reason code details..</param>
        public ListReturnReasonCodesResult(List<ReasonCodeDetails> reasonCodeDetails = default(List<ReasonCodeDetails>))
        {
            this.ReasonCodeDetails = reasonCodeDetails;
        }

        /// <summary>
        /// An array of return reason code details.
        /// </summary>
        /// <value>An array of return reason code details.</value>
        [DataMember(Name = "reasonCodeDetails", EmitDefaultValue = false)]
        public List<ReasonCodeDetails> ReasonCodeDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ListReturnReasonCodesResult {\n");
            sb.Append("  ReasonCodeDetails: ").Append(ReasonCodeDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
