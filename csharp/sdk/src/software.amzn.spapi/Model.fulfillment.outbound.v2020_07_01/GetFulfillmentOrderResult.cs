/*
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.outbound.v2020_07_01
{
    /// <summary>
    /// The request for the getFulfillmentOrder operation.
    /// </summary>
    [DataContract(Name = "GetFulfillmentOrderResult")]
    public partial class GetFulfillmentOrderResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetFulfillmentOrderResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetFulfillmentOrderResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetFulfillmentOrderResult" /> class.
        /// </summary>
        /// <param name="fulfillmentOrder">fulfillmentOrder (required).</param>
        /// <param name="fulfillmentOrderItems">An array of fulfillment order item information. (required).</param>
        /// <param name="fulfillmentShipments">An array of fulfillment shipment information..</param>
        /// <param name="returnItems">An array of items that Amazon accepted for return. Returns empty if no items were accepted for return. (required).</param>
        /// <param name="returnAuthorizations">An array of return authorization information. (required).</param>
        /// <param name="paymentInformation">An array of various payment attributes related to this fulfillment order..</param>
        public GetFulfillmentOrderResult(FulfillmentOrder fulfillmentOrder = default(FulfillmentOrder), List<FulfillmentOrderItem> fulfillmentOrderItems = default(List<FulfillmentOrderItem>), List<FulfillmentShipment> fulfillmentShipments = default(List<FulfillmentShipment>), List<ReturnItem> returnItems = default(List<ReturnItem>), List<ReturnAuthorization> returnAuthorizations = default(List<ReturnAuthorization>), List<PaymentInformation> paymentInformation = default(List<PaymentInformation>))
        {
            // to ensure "fulfillmentOrder" is required (not null)
            if (fulfillmentOrder == null)
            {
                throw new ArgumentNullException("fulfillmentOrder is a required property for GetFulfillmentOrderResult and cannot be null");
            }
            this.FulfillmentOrder = fulfillmentOrder;
            // to ensure "fulfillmentOrderItems" is required (not null)
            if (fulfillmentOrderItems == null)
            {
                throw new ArgumentNullException("fulfillmentOrderItems is a required property for GetFulfillmentOrderResult and cannot be null");
            }
            this.FulfillmentOrderItems = fulfillmentOrderItems;
            // to ensure "returnItems" is required (not null)
            if (returnItems == null)
            {
                throw new ArgumentNullException("returnItems is a required property for GetFulfillmentOrderResult and cannot be null");
            }
            this.ReturnItems = returnItems;
            // to ensure "returnAuthorizations" is required (not null)
            if (returnAuthorizations == null)
            {
                throw new ArgumentNullException("returnAuthorizations is a required property for GetFulfillmentOrderResult and cannot be null");
            }
            this.ReturnAuthorizations = returnAuthorizations;
            this.FulfillmentShipments = fulfillmentShipments;
            this.PaymentInformation = paymentInformation;
        }

        /// <summary>
        /// Gets or Sets FulfillmentOrder
        /// </summary>
        [DataMember(Name = "fulfillmentOrder", IsRequired = true, EmitDefaultValue = true)]
        public FulfillmentOrder FulfillmentOrder { get; set; }

        /// <summary>
        /// An array of fulfillment order item information.
        /// </summary>
        /// <value>An array of fulfillment order item information.</value>
        [DataMember(Name = "fulfillmentOrderItems", IsRequired = true, EmitDefaultValue = true)]
        public List<FulfillmentOrderItem> FulfillmentOrderItems { get; set; }

        /// <summary>
        /// An array of fulfillment shipment information.
        /// </summary>
        /// <value>An array of fulfillment shipment information.</value>
        [DataMember(Name = "fulfillmentShipments", EmitDefaultValue = false)]
        public List<FulfillmentShipment> FulfillmentShipments { get; set; }

        /// <summary>
        /// An array of items that Amazon accepted for return. Returns empty if no items were accepted for return.
        /// </summary>
        /// <value>An array of items that Amazon accepted for return. Returns empty if no items were accepted for return.</value>
        [DataMember(Name = "returnItems", IsRequired = true, EmitDefaultValue = true)]
        public List<ReturnItem> ReturnItems { get; set; }

        /// <summary>
        /// An array of return authorization information.
        /// </summary>
        /// <value>An array of return authorization information.</value>
        [DataMember(Name = "returnAuthorizations", IsRequired = true, EmitDefaultValue = true)]
        public List<ReturnAuthorization> ReturnAuthorizations { get; set; }

        /// <summary>
        /// An array of various payment attributes related to this fulfillment order.
        /// </summary>
        /// <value>An array of various payment attributes related to this fulfillment order.</value>
        [DataMember(Name = "paymentInformation", EmitDefaultValue = false)]
        public List<PaymentInformation> PaymentInformation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetFulfillmentOrderResult {\n");
            sb.Append("  FulfillmentOrder: ").Append(FulfillmentOrder).Append("\n");
            sb.Append("  FulfillmentOrderItems: ").Append(FulfillmentOrderItems).Append("\n");
            sb.Append("  FulfillmentShipments: ").Append(FulfillmentShipments).Append("\n");
            sb.Append("  ReturnItems: ").Append(ReturnItems).Append("\n");
            sb.Append("  ReturnAuthorizations: ").Append(ReturnAuthorizations).Append("\n");
            sb.Append("  PaymentInformation: ").Append(PaymentInformation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
