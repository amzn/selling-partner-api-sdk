/*
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.fulfillment.outbound.v2020_07_01
{
    /// <summary>
    /// Product identifier input that locates a product for MCF.
    /// </summary>
    [DataContract(Name = "ProductIdentifier")]
    public partial class ProductIdentifier : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductIdentifier" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ProductIdentifier() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductIdentifier" /> class.
        /// </summary>
        /// <param name="merchantSku">The merchant SKU for the product. (required).</param>
        public ProductIdentifier(string merchantSku = default(string))
        {
            // to ensure "merchantSku" is required (not null)
            if (merchantSku == null)
            {
                throw new ArgumentNullException("merchantSku is a required property for ProductIdentifier and cannot be null");
            }
            this.MerchantSku = merchantSku;
        }

        /// <summary>
        /// The merchant SKU for the product.
        /// </summary>
        /// <value>The merchant SKU for the product.</value>
        [DataMember(Name = "merchantSku", IsRequired = true, EmitDefaultValue = true)]
        public string MerchantSku { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProductIdentifier {\n");
            sb.Append("  MerchantSku: ").Append(MerchantSku).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // MerchantSku (string) maxLength
            if (this.MerchantSku != null && this.MerchantSku.Length > 50)
            {
                yield return new ValidationResult("Invalid value for MerchantSku, length must be less than 50.", new [] { "MerchantSku" });
            }

            yield break;
        }
    }

}
