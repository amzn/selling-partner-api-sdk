/*
 * Selling Partner API for Retail Procurement Orders
 *
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.vendor.orders.v1
{
    /// <summary>
    /// Details of item quantity ordered.
    /// </summary>
    [DataContract(Name = "OrderedQuantityDetails")]
    public partial class OrderedQuantityDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderedQuantityDetails" /> class.
        /// </summary>
        /// <param name="updatedDate">The date when the line item quantity was updated by buyer. Must be in ISO-8601 date/time format..</param>
        /// <param name="orderedQuantity">orderedQuantity.</param>
        /// <param name="cancelledQuantity">cancelledQuantity.</param>
        public OrderedQuantityDetails(DateTime updatedDate = default(DateTime), ItemQuantity orderedQuantity = default(ItemQuantity), ItemQuantity cancelledQuantity = default(ItemQuantity))
        {
            this.UpdatedDate = updatedDate;
            this.OrderedQuantity = orderedQuantity;
            this.CancelledQuantity = cancelledQuantity;
        }

        /// <summary>
        /// The date when the line item quantity was updated by buyer. Must be in ISO-8601 date/time format.
        /// </summary>
        /// <value>The date when the line item quantity was updated by buyer. Must be in ISO-8601 date/time format.</value>
        [DataMember(Name = "updatedDate", EmitDefaultValue = false)]
        public DateTime UpdatedDate { get; set; }

        /// <summary>
        /// Gets or Sets OrderedQuantity
        /// </summary>
        [DataMember(Name = "orderedQuantity", EmitDefaultValue = false)]
        public ItemQuantity OrderedQuantity { get; set; }

        /// <summary>
        /// Gets or Sets CancelledQuantity
        /// </summary>
        [DataMember(Name = "cancelledQuantity", EmitDefaultValue = false)]
        public ItemQuantity CancelledQuantity { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderedQuantityDetails {\n");
            sb.Append("  UpdatedDate: ").Append(UpdatedDate).Append("\n");
            sb.Append("  OrderedQuantity: ").Append(OrderedQuantity).Append("\n");
            sb.Append("  CancelledQuantity: ").Append(CancelledQuantity).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
