/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using software.amzn.spapi.Model.pricing.v0;
using software.amzn.spapi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace software.amzn.spapi.Test.Model
{
    /// <summary>
    ///  Class for testing Summary
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SummaryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Summary
        //private Summary instance;

        public SummaryTests()
        {
            // TODO uncomment below to create an instance of Summary
            //instance = new Summary();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Summary
        /// </summary>
        [Fact]
        public void SummaryInstanceTest()
        {
            // TODO uncomment below to test "IsType" Summary
            //Assert.IsType<Summary>(instance);
        }

        /// <summary>
        /// Test the property 'TotalOfferCount'
        /// </summary>
        [Fact]
        public void TotalOfferCountTest()
        {
            // TODO unit test for the property 'TotalOfferCount'
        }

        /// <summary>
        /// Test the property 'NumberOfOffers'
        /// </summary>
        [Fact]
        public void NumberOfOffersTest()
        {
            // TODO unit test for the property 'NumberOfOffers'
        }

        /// <summary>
        /// Test the property 'LowestPrices'
        /// </summary>
        [Fact]
        public void LowestPricesTest()
        {
            // TODO unit test for the property 'LowestPrices'
        }

        /// <summary>
        /// Test the property 'BuyBoxPrices'
        /// </summary>
        [Fact]
        public void BuyBoxPricesTest()
        {
            // TODO unit test for the property 'BuyBoxPrices'
        }

        /// <summary>
        /// Test the property 'ListPrice'
        /// </summary>
        [Fact]
        public void ListPriceTest()
        {
            // TODO unit test for the property 'ListPrice'
        }

        /// <summary>
        /// Test the property 'CompetitivePriceThreshold'
        /// </summary>
        [Fact]
        public void CompetitivePriceThresholdTest()
        {
            // TODO unit test for the property 'CompetitivePriceThreshold'
        }

        /// <summary>
        /// Test the property 'SuggestedLowerPricePlusShipping'
        /// </summary>
        [Fact]
        public void SuggestedLowerPricePlusShippingTest()
        {
            // TODO unit test for the property 'SuggestedLowerPricePlusShipping'
        }

        /// <summary>
        /// Test the property 'SalesRankings'
        /// </summary>
        [Fact]
        public void SalesRankingsTest()
        {
            // TODO unit test for the property 'SalesRankings'
        }

        /// <summary>
        /// Test the property 'BuyBoxEligibleOffers'
        /// </summary>
        [Fact]
        public void BuyBoxEligibleOffersTest()
        {
            // TODO unit test for the property 'BuyBoxEligibleOffers'
        }

        /// <summary>
        /// Test the property 'OffersAvailableTime'
        /// </summary>
        [Fact]
        public void OffersAvailableTimeTest()
        {
            // TODO unit test for the property 'OffersAvailableTime'
        }
    }
}
