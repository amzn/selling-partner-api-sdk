/*
 * Selling Partner API for Product Type Definitions
 *
 * The Selling Partner API for Product Type Definitions provides programmatic access to attribute and data requirements for product types in the Amazon catalog. Use this API to return the JSON Schema for a product type that you can then use with other Selling Partner APIs, such as the Selling Partner API for Listings Items, the Selling Partner API for Catalog Items, and the Selling Partner API for Feeds (for JSON-based listing feeds).  For more information, see the [Product Type Definitions API Use Case Guide](doc:product-type-api-use-case-guide).
 *
 * The version of the OpenAPI document: 2020-09-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using software.amzn.spapi.Model.productTypeDefinitions.v2020_09_01;
using software.amzn.spapi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace software.amzn.spapi.Test.Model
{
    /// <summary>
    ///  Class for testing SchemaLinkLink
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SchemaLinkLinkTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SchemaLinkLink
        //private SchemaLinkLink instance;

        public SchemaLinkLinkTests()
        {
            // TODO uncomment below to create an instance of SchemaLinkLink
            //instance = new SchemaLinkLink();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SchemaLinkLink
        /// </summary>
        [Fact]
        public void SchemaLinkLinkInstanceTest()
        {
            // TODO uncomment below to test "IsType" SchemaLinkLink
            //Assert.IsType<SchemaLinkLink>(instance);
        }

        /// <summary>
        /// Test the property 'Resource'
        /// </summary>
        [Fact]
        public void ResourceTest()
        {
            // TODO unit test for the property 'Resource'
        }

        /// <summary>
        /// Test the property 'Verb'
        /// </summary>
        [Fact]
        public void VerbTest()
        {
            // TODO unit test for the property 'Verb'
        }
    }
}
