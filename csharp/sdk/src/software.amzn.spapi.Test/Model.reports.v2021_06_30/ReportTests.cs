/*
 * Selling Partner API for Reports
 *
 * The Selling Partner API for Reports lets you retrieve and manage a variety of reports that can help selling partners manage their businesses.
 *
 * The version of the OpenAPI document: 2021-06-30
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using software.amzn.spapi.Model.reports.v2021_06_30;
using software.amzn.spapi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace software.amzn.spapi.Test.Model
{
    /// <summary>
    ///  Class for testing Report
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ReportTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Report
        //private Report instance;

        public ReportTests()
        {
            // TODO uncomment below to create an instance of Report
            //instance = new Report();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Report
        /// </summary>
        [Fact]
        public void ReportInstanceTest()
        {
            // TODO uncomment below to test "IsType" Report
            //Assert.IsType<Report>(instance);
        }

        /// <summary>
        /// Test the property 'MarketplaceIds'
        /// </summary>
        [Fact]
        public void MarketplaceIdsTest()
        {
            // TODO unit test for the property 'MarketplaceIds'
        }

        /// <summary>
        /// Test the property 'ReportId'
        /// </summary>
        [Fact]
        public void ReportIdTest()
        {
            // TODO unit test for the property 'ReportId'
        }

        /// <summary>
        /// Test the property 'ReportType'
        /// </summary>
        [Fact]
        public void ReportTypeTest()
        {
            // TODO unit test for the property 'ReportType'
        }

        /// <summary>
        /// Test the property 'DataStartTime'
        /// </summary>
        [Fact]
        public void DataStartTimeTest()
        {
            // TODO unit test for the property 'DataStartTime'
        }

        /// <summary>
        /// Test the property 'DataEndTime'
        /// </summary>
        [Fact]
        public void DataEndTimeTest()
        {
            // TODO unit test for the property 'DataEndTime'
        }

        /// <summary>
        /// Test the property 'ReportScheduleId'
        /// </summary>
        [Fact]
        public void ReportScheduleIdTest()
        {
            // TODO unit test for the property 'ReportScheduleId'
        }

        /// <summary>
        /// Test the property 'CreatedTime'
        /// </summary>
        [Fact]
        public void CreatedTimeTest()
        {
            // TODO unit test for the property 'CreatedTime'
        }

        /// <summary>
        /// Test the property 'ProcessingStatus'
        /// </summary>
        [Fact]
        public void ProcessingStatusTest()
        {
            // TODO unit test for the property 'ProcessingStatus'
        }

        /// <summary>
        /// Test the property 'ProcessingStartTime'
        /// </summary>
        [Fact]
        public void ProcessingStartTimeTest()
        {
            // TODO unit test for the property 'ProcessingStartTime'
        }

        /// <summary>
        /// Test the property 'ProcessingEndTime'
        /// </summary>
        [Fact]
        public void ProcessingEndTimeTest()
        {
            // TODO unit test for the property 'ProcessingEndTime'
        }

        /// <summary>
        /// Test the property 'ReportDocumentId'
        /// </summary>
        [Fact]
        public void ReportDocumentIdTest()
        {
            // TODO unit test for the property 'ReportDocumentId'
        }
    }
}
