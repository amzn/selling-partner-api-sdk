/*
 * Selling Partner API for A+ Content Management
 *
 * Use the A+ Content API to build applications that help selling partners add rich marketing content to their Amazon product detail pages. Selling partners can use A+ content to share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners use content modules to add images and text.
 *
 * The version of the OpenAPI document: 2020-11-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using software.amzn.spapi.Model.aplusContent.v2020_11_01;
using software.amzn.spapi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace software.amzn.spapi.Test.Model
{
    /// <summary>
    ///  Class for testing ContentModule
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ContentModuleTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ContentModule
        //private ContentModule instance;

        public ContentModuleTests()
        {
            // TODO uncomment below to create an instance of ContentModule
            //instance = new ContentModule();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ContentModule
        /// </summary>
        [Fact]
        public void ContentModuleInstanceTest()
        {
            // TODO uncomment below to test "IsType" ContentModule
            //Assert.IsType<ContentModule>(instance);
        }

        /// <summary>
        /// Test the property 'ContentModuleType'
        /// </summary>
        [Fact]
        public void ContentModuleTypeTest()
        {
            // TODO unit test for the property 'ContentModuleType'
        }

        /// <summary>
        /// Test the property 'StandardCompanyLogo'
        /// </summary>
        [Fact]
        public void StandardCompanyLogoTest()
        {
            // TODO unit test for the property 'StandardCompanyLogo'
        }

        /// <summary>
        /// Test the property 'StandardComparisonTable'
        /// </summary>
        [Fact]
        public void StandardComparisonTableTest()
        {
            // TODO unit test for the property 'StandardComparisonTable'
        }

        /// <summary>
        /// Test the property 'StandardFourImageText'
        /// </summary>
        [Fact]
        public void StandardFourImageTextTest()
        {
            // TODO unit test for the property 'StandardFourImageText'
        }

        /// <summary>
        /// Test the property 'StandardFourImageTextQuadrant'
        /// </summary>
        [Fact]
        public void StandardFourImageTextQuadrantTest()
        {
            // TODO unit test for the property 'StandardFourImageTextQuadrant'
        }

        /// <summary>
        /// Test the property 'StandardHeaderImageText'
        /// </summary>
        [Fact]
        public void StandardHeaderImageTextTest()
        {
            // TODO unit test for the property 'StandardHeaderImageText'
        }

        /// <summary>
        /// Test the property 'StandardImageSidebar'
        /// </summary>
        [Fact]
        public void StandardImageSidebarTest()
        {
            // TODO unit test for the property 'StandardImageSidebar'
        }

        /// <summary>
        /// Test the property 'StandardImageTextOverlay'
        /// </summary>
        [Fact]
        public void StandardImageTextOverlayTest()
        {
            // TODO unit test for the property 'StandardImageTextOverlay'
        }

        /// <summary>
        /// Test the property 'StandardMultipleImageText'
        /// </summary>
        [Fact]
        public void StandardMultipleImageTextTest()
        {
            // TODO unit test for the property 'StandardMultipleImageText'
        }

        /// <summary>
        /// Test the property 'StandardProductDescription'
        /// </summary>
        [Fact]
        public void StandardProductDescriptionTest()
        {
            // TODO unit test for the property 'StandardProductDescription'
        }

        /// <summary>
        /// Test the property 'StandardSingleImageHighlights'
        /// </summary>
        [Fact]
        public void StandardSingleImageHighlightsTest()
        {
            // TODO unit test for the property 'StandardSingleImageHighlights'
        }

        /// <summary>
        /// Test the property 'StandardSingleImageSpecsDetail'
        /// </summary>
        [Fact]
        public void StandardSingleImageSpecsDetailTest()
        {
            // TODO unit test for the property 'StandardSingleImageSpecsDetail'
        }

        /// <summary>
        /// Test the property 'StandardSingleSideImage'
        /// </summary>
        [Fact]
        public void StandardSingleSideImageTest()
        {
            // TODO unit test for the property 'StandardSingleSideImage'
        }

        /// <summary>
        /// Test the property 'StandardTechSpecs'
        /// </summary>
        [Fact]
        public void StandardTechSpecsTest()
        {
            // TODO unit test for the property 'StandardTechSpecs'
        }

        /// <summary>
        /// Test the property 'StandardText'
        /// </summary>
        [Fact]
        public void StandardTextTest()
        {
            // TODO unit test for the property 'StandardText'
        }

        /// <summary>
        /// Test the property 'StandardThreeImageText'
        /// </summary>
        [Fact]
        public void StandardThreeImageTextTest()
        {
            // TODO unit test for the property 'StandardThreeImageText'
        }
    }
}
