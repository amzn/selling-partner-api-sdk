/*
 * Selling Partner API for Listings Items
 *
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listings Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/listings-items-api-v2021-08-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2021-08-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using software.amzn.spapi.Model.listings.items.v2021_08_01;
using software.amzn.spapi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace software.amzn.spapi.Test.Model
{
    /// <summary>
    ///  Class for testing Issue
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IssueTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Issue
        //private Issue instance;

        public IssueTests()
        {
            // TODO uncomment below to create an instance of Issue
            //instance = new Issue();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Issue
        /// </summary>
        [Fact]
        public void IssueInstanceTest()
        {
            // TODO uncomment below to test "IsType" Issue
            //Assert.IsType<Issue>(instance);
        }

        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Fact]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }

        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Fact]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }

        /// <summary>
        /// Test the property 'Severity'
        /// </summary>
        [Fact]
        public void SeverityTest()
        {
            // TODO unit test for the property 'Severity'
        }

        /// <summary>
        /// Test the property 'AttributeNames'
        /// </summary>
        [Fact]
        public void AttributeNamesTest()
        {
            // TODO unit test for the property 'AttributeNames'
        }

        /// <summary>
        /// Test the property 'Categories'
        /// </summary>
        [Fact]
        public void CategoriesTest()
        {
            // TODO unit test for the property 'Categories'
        }

        /// <summary>
        /// Test the property 'Enforcements'
        /// </summary>
        [Fact]
        public void EnforcementsTest()
        {
            // TODO unit test for the property 'Enforcements'
        }
    }
}
