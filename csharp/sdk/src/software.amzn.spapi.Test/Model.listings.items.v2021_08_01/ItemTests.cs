/*
 * Selling Partner API for Listings Items
 *
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listings Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/listings-items-api-v2021-08-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2021-08-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using software.amzn.spapi.Model.listings.items.v2021_08_01;
using software.amzn.spapi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace software.amzn.spapi.Test.Model
{
    /// <summary>
    ///  Class for testing Item
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ItemTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Item
        //private Item instance;

        public ItemTests()
        {
            // TODO uncomment below to create an instance of Item
            //instance = new Item();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Item
        /// </summary>
        [Fact]
        public void ItemInstanceTest()
        {
            // TODO uncomment below to test "IsType" Item
            //Assert.IsType<Item>(instance);
        }

        /// <summary>
        /// Test the property 'Sku'
        /// </summary>
        [Fact]
        public void SkuTest()
        {
            // TODO unit test for the property 'Sku'
        }

        /// <summary>
        /// Test the property 'Summaries'
        /// </summary>
        [Fact]
        public void SummariesTest()
        {
            // TODO unit test for the property 'Summaries'
        }

        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }

        /// <summary>
        /// Test the property 'Issues'
        /// </summary>
        [Fact]
        public void IssuesTest()
        {
            // TODO unit test for the property 'Issues'
        }

        /// <summary>
        /// Test the property 'Offers'
        /// </summary>
        [Fact]
        public void OffersTest()
        {
            // TODO unit test for the property 'Offers'
        }

        /// <summary>
        /// Test the property 'FulfillmentAvailability'
        /// </summary>
        [Fact]
        public void FulfillmentAvailabilityTest()
        {
            // TODO unit test for the property 'FulfillmentAvailability'
        }

        /// <summary>
        /// Test the property 'Procurement'
        /// </summary>
        [Fact]
        public void ProcurementTest()
        {
            // TODO unit test for the property 'Procurement'
        }

        /// <summary>
        /// Test the property 'Relationships'
        /// </summary>
        [Fact]
        public void RelationshipsTest()
        {
            // TODO unit test for the property 'Relationships'
        }

        /// <summary>
        /// Test the property 'ProductTypes'
        /// </summary>
        [Fact]
        public void ProductTypesTest()
        {
            // TODO unit test for the property 'ProductTypes'
        }
    }
}
