/*
 * Selling Partner API for Direct Fulfillment Orders
 *
 * The Selling Partner API for Direct Fulfillment Orders provides programmatic access to a direct fulfillment vendor's order data.
 *
 * The version of the OpenAPI document: 2021-12-28
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using software.amzn.spapi.Model.vendor.df.orders.v2021_12_28;
using software.amzn.spapi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace software.amzn.spapi.Test.Model
{
    /// <summary>
    ///  Class for testing Address
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AddressTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Address
        //private Address instance;

        public AddressTests()
        {
            // TODO uncomment below to create an instance of Address
            //instance = new Address();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Address
        /// </summary>
        [Fact]
        public void AddressInstanceTest()
        {
            // TODO uncomment below to test "IsType" Address
            //Assert.IsType<Address>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Attention'
        /// </summary>
        [Fact]
        public void AttentionTest()
        {
            // TODO unit test for the property 'Attention'
        }

        /// <summary>
        /// Test the property 'AddressLine1'
        /// </summary>
        [Fact]
        public void AddressLine1Test()
        {
            // TODO unit test for the property 'AddressLine1'
        }

        /// <summary>
        /// Test the property 'AddressLine2'
        /// </summary>
        [Fact]
        public void AddressLine2Test()
        {
            // TODO unit test for the property 'AddressLine2'
        }

        /// <summary>
        /// Test the property 'AddressLine3'
        /// </summary>
        [Fact]
        public void AddressLine3Test()
        {
            // TODO unit test for the property 'AddressLine3'
        }

        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Fact]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }

        /// <summary>
        /// Test the property 'County'
        /// </summary>
        [Fact]
        public void CountyTest()
        {
            // TODO unit test for the property 'County'
        }

        /// <summary>
        /// Test the property 'District'
        /// </summary>
        [Fact]
        public void DistrictTest()
        {
            // TODO unit test for the property 'District'
        }

        /// <summary>
        /// Test the property 'StateOrRegion'
        /// </summary>
        [Fact]
        public void StateOrRegionTest()
        {
            // TODO unit test for the property 'StateOrRegion'
        }

        /// <summary>
        /// Test the property 'PostalCode'
        /// </summary>
        [Fact]
        public void PostalCodeTest()
        {
            // TODO unit test for the property 'PostalCode'
        }

        /// <summary>
        /// Test the property 'CountryCode'
        /// </summary>
        [Fact]
        public void CountryCodeTest()
        {
            // TODO unit test for the property 'CountryCode'
        }

        /// <summary>
        /// Test the property 'Phone'
        /// </summary>
        [Fact]
        public void PhoneTest()
        {
            // TODO unit test for the property 'Phone'
        }
    }
}
