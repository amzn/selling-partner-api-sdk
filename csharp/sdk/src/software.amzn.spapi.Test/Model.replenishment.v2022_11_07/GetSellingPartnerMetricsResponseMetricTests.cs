/*
 * Selling Partner API for Replenishment
 *
 * The Selling Partner API for Replenishment (Replenishment API) provides programmatic access to replenishment program metrics and offers. These programs provide recurring delivery of any replenishable item at a frequency chosen by the customer.  The Replenishment API is available worldwide wherever Amazon Subscribe & Save is available or is supported. The API is available to vendors and FBA selling partners.
 *
 * The version of the OpenAPI document: 2022-11-07
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using software.amzn.spapi.Model.replenishment.v2022_11_07;
using software.amzn.spapi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace software.amzn.spapi.Test.Model
{
    /// <summary>
    ///  Class for testing GetSellingPartnerMetricsResponseMetric
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetSellingPartnerMetricsResponseMetricTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetSellingPartnerMetricsResponseMetric
        //private GetSellingPartnerMetricsResponseMetric instance;

        public GetSellingPartnerMetricsResponseMetricTests()
        {
            // TODO uncomment below to create an instance of GetSellingPartnerMetricsResponseMetric
            //instance = new GetSellingPartnerMetricsResponseMetric();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetSellingPartnerMetricsResponseMetric
        /// </summary>
        [Fact]
        public void GetSellingPartnerMetricsResponseMetricInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetSellingPartnerMetricsResponseMetric
            //Assert.IsType<GetSellingPartnerMetricsResponseMetric>(instance);
        }

        /// <summary>
        /// Test the property 'NotDeliveredDueToOOS'
        /// </summary>
        [Fact]
        public void NotDeliveredDueToOOSTest()
        {
            // TODO unit test for the property 'NotDeliveredDueToOOS'
        }

        /// <summary>
        /// Test the property 'TotalSubscriptionsRevenue'
        /// </summary>
        [Fact]
        public void TotalSubscriptionsRevenueTest()
        {
            // TODO unit test for the property 'TotalSubscriptionsRevenue'
        }

        /// <summary>
        /// Test the property 'ShippedSubscriptionUnits'
        /// </summary>
        [Fact]
        public void ShippedSubscriptionUnitsTest()
        {
            // TODO unit test for the property 'ShippedSubscriptionUnits'
        }

        /// <summary>
        /// Test the property 'ActiveSubscriptions'
        /// </summary>
        [Fact]
        public void ActiveSubscriptionsTest()
        {
            // TODO unit test for the property 'ActiveSubscriptions'
        }

        /// <summary>
        /// Test the property 'SubscriberAverageRevenue'
        /// </summary>
        [Fact]
        public void SubscriberAverageRevenueTest()
        {
            // TODO unit test for the property 'SubscriberAverageRevenue'
        }

        /// <summary>
        /// Test the property 'NonSubscriberAverageRevenue'
        /// </summary>
        [Fact]
        public void NonSubscriberAverageRevenueTest()
        {
            // TODO unit test for the property 'NonSubscriberAverageRevenue'
        }

        /// <summary>
        /// Test the property 'LostRevenueDueToOOS'
        /// </summary>
        [Fact]
        public void LostRevenueDueToOOSTest()
        {
            // TODO unit test for the property 'LostRevenueDueToOOS'
        }

        /// <summary>
        /// Test the property 'SubscriberAverageReorders'
        /// </summary>
        [Fact]
        public void SubscriberAverageReordersTest()
        {
            // TODO unit test for the property 'SubscriberAverageReorders'
        }

        /// <summary>
        /// Test the property 'NonSubscriberAverageReorders'
        /// </summary>
        [Fact]
        public void NonSubscriberAverageReordersTest()
        {
            // TODO unit test for the property 'NonSubscriberAverageReorders'
        }

        /// <summary>
        /// Test the property 'CouponsRevenuePenetration'
        /// </summary>
        [Fact]
        public void CouponsRevenuePenetrationTest()
        {
            // TODO unit test for the property 'CouponsRevenuePenetration'
        }

        /// <summary>
        /// Test the property 'RevenueFromSubscriptionsWithMultipleDeliveries'
        /// </summary>
        [Fact]
        public void RevenueFromSubscriptionsWithMultipleDeliveriesTest()
        {
            // TODO unit test for the property 'RevenueFromSubscriptionsWithMultipleDeliveries'
        }

        /// <summary>
        /// Test the property 'RevenueFromActiveSubscriptionsWithSingleDelivery'
        /// </summary>
        [Fact]
        public void RevenueFromActiveSubscriptionsWithSingleDeliveryTest()
        {
            // TODO unit test for the property 'RevenueFromActiveSubscriptionsWithSingleDelivery'
        }

        /// <summary>
        /// Test the property 'RevenueFromCancelledSubscriptionsAfterSingleDelivery'
        /// </summary>
        [Fact]
        public void RevenueFromCancelledSubscriptionsAfterSingleDeliveryTest()
        {
            // TODO unit test for the property 'RevenueFromCancelledSubscriptionsAfterSingleDelivery'
        }

        /// <summary>
        /// Test the property 'SubscriberRetentionFor30Days'
        /// </summary>
        [Fact]
        public void SubscriberRetentionFor30DaysTest()
        {
            // TODO unit test for the property 'SubscriberRetentionFor30Days'
        }

        /// <summary>
        /// Test the property 'SubscriberRetentionFor90Days'
        /// </summary>
        [Fact]
        public void SubscriberRetentionFor90DaysTest()
        {
            // TODO unit test for the property 'SubscriberRetentionFor90Days'
        }

        /// <summary>
        /// Test the property 'RevenuePenetrationFor0PercentSellerFunding'
        /// </summary>
        [Fact]
        public void RevenuePenetrationFor0PercentSellerFundingTest()
        {
            // TODO unit test for the property 'RevenuePenetrationFor0PercentSellerFunding'
        }

        /// <summary>
        /// Test the property 'RevenuePenetrationFor5PercentSellerFunding'
        /// </summary>
        [Fact]
        public void RevenuePenetrationFor5PercentSellerFundingTest()
        {
            // TODO unit test for the property 'RevenuePenetrationFor5PercentSellerFunding'
        }

        /// <summary>
        /// Test the property 'RevenuePenetrationFor10PercentSellerFunding'
        /// </summary>
        [Fact]
        public void RevenuePenetrationFor10PercentSellerFundingTest()
        {
            // TODO unit test for the property 'RevenuePenetrationFor10PercentSellerFunding'
        }

        /// <summary>
        /// Test the property 'RevenuePenetrationFor5PlusPercentSellerFunding'
        /// </summary>
        [Fact]
        public void RevenuePenetrationFor5PlusPercentSellerFundingTest()
        {
            // TODO unit test for the property 'RevenuePenetrationFor5PlusPercentSellerFunding'
        }

        /// <summary>
        /// Test the property 'ShareOfCouponSubscriptions'
        /// </summary>
        [Fact]
        public void ShareOfCouponSubscriptionsTest()
        {
            // TODO unit test for the property 'ShareOfCouponSubscriptions'
        }

        /// <summary>
        /// Test the property 'TimeInterval'
        /// </summary>
        [Fact]
        public void TimeIntervalTest()
        {
            // TODO unit test for the property 'TimeInterval'
        }

        /// <summary>
        /// Test the property 'CurrencyCode'
        /// </summary>
        [Fact]
        public void CurrencyCodeTest()
        {
            // TODO unit test for the property 'CurrencyCode'
        }
    }
}
