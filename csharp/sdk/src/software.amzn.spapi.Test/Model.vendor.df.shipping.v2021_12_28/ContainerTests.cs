/*
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * The version of the OpenAPI document: 2021-12-28
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using software.amzn.spapi.Model.vendor.df.shipping.v2021_12_28;
using software.amzn.spapi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace software.amzn.spapi.Test.Model
{
    /// <summary>
    ///  Class for testing Container
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ContainerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Container
        //private Container instance;

        public ContainerTests()
        {
            // TODO uncomment below to create an instance of Container
            //instance = new Container();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Container
        /// </summary>
        [Fact]
        public void ContainerInstanceTest()
        {
            // TODO uncomment below to test "IsType" Container
            //Assert.IsType<Container>(instance);
        }

        /// <summary>
        /// Test the property 'ContainerType'
        /// </summary>
        [Fact]
        public void ContainerTypeTest()
        {
            // TODO unit test for the property 'ContainerType'
        }

        /// <summary>
        /// Test the property 'ContainerIdentifier'
        /// </summary>
        [Fact]
        public void ContainerIdentifierTest()
        {
            // TODO unit test for the property 'ContainerIdentifier'
        }

        /// <summary>
        /// Test the property 'TrackingNumber'
        /// </summary>
        [Fact]
        public void TrackingNumberTest()
        {
            // TODO unit test for the property 'TrackingNumber'
        }

        /// <summary>
        /// Test the property 'ManifestId'
        /// </summary>
        [Fact]
        public void ManifestIdTest()
        {
            // TODO unit test for the property 'ManifestId'
        }

        /// <summary>
        /// Test the property 'ManifestDate'
        /// </summary>
        [Fact]
        public void ManifestDateTest()
        {
            // TODO unit test for the property 'ManifestDate'
        }

        /// <summary>
        /// Test the property 'ShipMethod'
        /// </summary>
        [Fact]
        public void ShipMethodTest()
        {
            // TODO unit test for the property 'ShipMethod'
        }

        /// <summary>
        /// Test the property 'ScacCode'
        /// </summary>
        [Fact]
        public void ScacCodeTest()
        {
            // TODO unit test for the property 'ScacCode'
        }

        /// <summary>
        /// Test the property 'Carrier'
        /// </summary>
        [Fact]
        public void CarrierTest()
        {
            // TODO unit test for the property 'Carrier'
        }

        /// <summary>
        /// Test the property 'ContainerSequenceNumber'
        /// </summary>
        [Fact]
        public void ContainerSequenceNumberTest()
        {
            // TODO unit test for the property 'ContainerSequenceNumber'
        }

        /// <summary>
        /// Test the property 'Dimensions'
        /// </summary>
        [Fact]
        public void DimensionsTest()
        {
            // TODO unit test for the property 'Dimensions'
        }

        /// <summary>
        /// Test the property 'Weight'
        /// </summary>
        [Fact]
        public void WeightTest()
        {
            // TODO unit test for the property 'Weight'
        }

        /// <summary>
        /// Test the property 'PackedItems'
        /// </summary>
        [Fact]
        public void PackedItemsTest()
        {
            // TODO unit test for the property 'PackedItems'
        }
    }
}
