/*
 * Selling Partner API for Direct Fulfillment Payments
 *
 * The Selling Partner API for Direct Fulfillment Payments provides programmatic access to a direct fulfillment vendor's invoice data.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using software.amzn.spapi.Model.vendor.df.payments.v1;
using software.amzn.spapi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace software.amzn.spapi.Test.Model
{
    /// <summary>
    ///  Class for testing TaxDetail
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TaxDetailTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TaxDetail
        //private TaxDetail instance;

        public TaxDetailTests()
        {
            // TODO uncomment below to create an instance of TaxDetail
            //instance = new TaxDetail();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TaxDetail
        /// </summary>
        [Fact]
        public void TaxDetailInstanceTest()
        {
            // TODO uncomment below to test "IsType" TaxDetail
            //Assert.IsType<TaxDetail>(instance);
        }

        /// <summary>
        /// Test the property 'TaxType'
        /// </summary>
        [Fact]
        public void TaxTypeTest()
        {
            // TODO unit test for the property 'TaxType'
        }

        /// <summary>
        /// Test the property 'TaxRate'
        /// </summary>
        [Fact]
        public void TaxRateTest()
        {
            // TODO unit test for the property 'TaxRate'
        }

        /// <summary>
        /// Test the property 'TaxAmount'
        /// </summary>
        [Fact]
        public void TaxAmountTest()
        {
            // TODO unit test for the property 'TaxAmount'
        }

        /// <summary>
        /// Test the property 'TaxableAmount'
        /// </summary>
        [Fact]
        public void TaxableAmountTest()
        {
            // TODO unit test for the property 'TaxableAmount'
        }
    }
}
