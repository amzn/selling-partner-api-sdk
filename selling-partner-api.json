{
  "openapi": "3.0.3",
  "info": {
    "title": "The Selling Partner API for Amazon Warehousing and Distribution",
    "version": "2024-05-09",
    "description": "The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory. ",
    "contact": {
      "name": "Selling Partner API Developer Support",
      "url": "https://sellercentral.amazon.com/gp/mws/contactus.html"
    },
    "license": {
      "name": "Apache License 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "paths": {
    "/awd/2024-05-09/inboundShipments/{shipmentId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ID for the shipment. A shipment contains the cases being inbounded.",
            "in": "path",
            "minLength": 1,
            "name": "shipmentId",
            "required": true,
            "type": "string"
          },
          {
            "description": "If equal to `SHOW`, the response includes the shipment SKU quantity details.\n\nDefaults to `HIDE`, in which case the response does not contain SKU quantities",
            "enum": [
              "SHOW",
              "HIDE"
            ],
            "in": "query",
            "name": "skuQuantities",
            "type": "string",
            "x-example": "SHOW",
            "x-docgen-enum-table-extension": [
              {
                "description": "Show the additional SKU quantity details.",
                "value": "SHOW"
              },
              {
                "description": "Hide the additional SKU quantity details.",
                "value": "HIDE"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 response for `getInboundShipment`.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InboundShipment"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "TestShipmentId"
                      }
                    }
                  },
                  "response": {
                    "createdAt": "2023-06-07T12:12:09.061Z",
                    "destinationAddress": {
                      "addressLine1": "address_line_1",
                      "addressLine2": "address_line_2",
                      "addressLine3": "address_line_3",
                      "city": "City1",
                      "countryCode": "CC",
                      "district": "District1",
                      "name": "DestinationName",
                      "postalCode": "123456",
                      "stateOrRegion": "State1"
                    },
                    "orderId": "TestOrderId",
                    "originAddress": {
                      "addressLine1": "address_1",
                      "addressLine2": "address_2",
                      "addressLine3": "address_3",
                      "city": "City1",
                      "countryCode": "CC",
                      "district": "District1",
                      "name": "address_name",
                      "postalCode": "123456",
                      "stateOrRegion": "State1"
                    },
                    "receivedQuantity": [
                      {
                        "quantity": 0,
                        "unitOfMeasurement": "CASES"
                      }
                    ],
                    "shipmentContainerQuantities": [
                      {
                        "count": 2,
                        "distributionPackage": {
                          "contents": {
                            "packages": [],
                            "products": [
                              {
                                "quantity": 20,
                                "sku": "testPen"
                              }
                            ]
                          },
                          "measurements": {
                            "dimensions": {
                              "height": 33.02,
                              "length": 45.72,
                              "unitOfMeasurement": "CENTIMETERS",
                              "width": 15.24
                            },
                            "weight": {
                              "unitOfMeasurement": "KILOGRAMS",
                              "weight": 5.443104
                            }
                          },
                          "type": "CASE"
                        }
                      }
                    ],
                    "shipmentId": "TestShipmentId",
                    "shipmentStatus": "CREATED",
                    "shipmentSkuQuantities": [
                      {
                        "sku": "testPen",
                        "expectedQuantity": {
                          "quantity": 2,
                          "unitOfMeasurement": "CASE"
                        },
                        "receivedQuantity": {
                          "quantity": 0,
                          "unitOfMeasurement": "CASE"
                        }
                      }
                    ],
                    "updatedAt": "2023-06-07T12:12:09.061Z"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": " "
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BAD_REQUEST",
                        "details": "This exception is thrown when client inputs are invalid",
                        "message": "ShipmentId should be present for this request"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "tags": [
          "awd"
        ],
        "description": "Retrieves an AWD inbound shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)",
        "operationId": "getInboundShipment"
      }
    },
    "/awd/2024-05-09/inboundShipments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Field to sort results by. By default, the response will be sorted by UPDATED_AT.",
            "enum": [
              "UPDATED_AT",
              "CREATED_AT"
            ],
            "in": "query",
            "name": "sortBy",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "description": "Sort by the time of update.",
                "value": "UPDATED_AT"
              },
              {
                "description": "Sort by the time of creation.",
                "value": "CREATED_AT"
              }
            ]
          },
          {
            "description": "Sort the response in ASCENDING or DESCENDING order. By default, the response will be sorted in DESCENDING order.",
            "enum": [
              "ASCENDING",
              "DESCENDING"
            ],
            "in": "query",
            "name": "sortOrder",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "description": "Sorts the collection in ascending order.",
                "value": "ASCENDING"
              },
              {
                "description": "Sorts the collection in descending order.",
                "value": "DESCENDING"
              }
            ],
            "x-example": "ASCENDING"
          },
          {
            "description": "Filter by inbound shipment status.",
            "enum": [
              "CREATED",
              "SHIPPED",
              "IN_TRANSIT",
              "RECEIVING",
              "DELIVERED",
              "CLOSED",
              "CANCELLED"
            ],
            "in": "query",
            "name": "shipmentStatus",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "description": "Shipment is created, but hasn't shipped.",
                "value": "CREATED"
              },
              {
                "description": "Shipment was picked up by the carrier or was dropped off with the carrier.",
                "value": "SHIPPED"
              },
              {
                "description": "The carrier has notified AWD that the shipment is in transit between the origin and destination nodes.",
                "value": "IN_TRANSIT"
              },
              {
                "description": "The shipment has been partially received.",
                "value": "RECEIVING"
              },
              {
                "description": "The shipment has reached the destination node and has been delivered to the facility yard. The shipment `receive` process at the warehouse will start soon.",
                "value": "DELIVERED"
              },
              {
                "description": "No more actions are required for the shipment. This is a final state.",
                "value": "CLOSED"
              },
              {
                "description": "The shipment is cancelled. This is a final state.",
                "value": "CANCELLED"
              }
            ],
            "x-example": "CREATED"
          },
          {
            "description": "List the inbound shipments that were updated after a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "format": "date-time",
            "in": "query",
            "name": "updatedAfter",
            "type": "string",
            "x-example": "2023-01-12T10:00:00.000Z"
          },
          {
            "description": "List the inbound shipments that were updated before a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "format": "date-time",
            "in": "query",
            "name": "updatedBefore",
            "type": "string",
            "x-example": "2023-01-12T10:00:00.000Z"
          },
          {
            "default": 25,
            "description": "Maximum number of results to return.",
            "format": "int32",
            "in": "query",
            "maximum": 200,
            "minimum": 1,
            "name": "maxResults",
            "type": "integer",
            "x-example": "10"
          },
          {
            "description": "Token to retrieve the next set of paginated results.",
            "in": "query",
            "name": "nextToken",
            "type": "string",
            "x-example": "SampleToken"
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 response for `listInboundShipments`.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ShipmentListing"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "shipments": [
                      {
                        "createdAt": "2023-06-07T12:12:09.061Z",
                        "orderId": "TestOrderId",
                        "shipmentId": "TestShipmentId",
                        "shipmentStatus": "CREATED",
                        "updatedAt": "2023-06-07T12:12:09.061Z"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sortBy": {
                        "value": "TEST"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BAD_REQUEST",
                        "details": "This exception is thrown when client inputs are invalid",
                        "message": "Invalid shipment sortable field received: TEST"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "tags": [
          "awd"
        ],
        "description": "Retrieves a summary of all the inbound AWD shipments associated with a merchant, with the ability to apply optional filters.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listInboundShipments"
      }
    },
    "/awd/2024-05-09/inventory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Filter by seller or merchant SKU for the item.",
            "in": "query",
            "name": "sku",
            "type": "string",
            "x-example": "TestSKU"
          },
          {
            "description": "Sort the response in `ASCENDING` or `DESCENDING` order.",
            "enum": [
              "ASCENDING",
              "DESCENDING"
            ],
            "in": "query",
            "name": "sortOrder",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "description": "Sorts the collection in ascending order.",
                "value": "ASCENDING"
              },
              {
                "description": "Sorts the collection in descending order.",
                "value": "DESCENDING"
              }
            ]
          },
          {
            "description": "Set to `SHOW` to return summaries with additional inventory details. Defaults to `HIDE,` which returns only inventory summary totals.",
            "enum": [
              "SHOW",
              "HIDE"
            ],
            "in": "query",
            "name": "details",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "description": "Show the additional summarized inventory details.",
                "value": "SHOW"
              },
              {
                "description": "Hide the additional summarized inventory details.",
                "value": "HIDE"
              }
            ],
            "x-example": "SHOW"
          },
          {
            "description": "Token to retrieve the next set of paginated results.",
            "in": "query",
            "name": "nextToken",
            "type": "string",
            "x-example": "SampleToken"
          },
          {
            "default": 25,
            "description": "Maximum number of results to return.",
            "format": "int32",
            "in": "query",
            "maximum": 200,
            "minimum": 1,
            "name": "maxResults",
            "type": "integer",
            "x-example": "10"
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 response for `listInventory`.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InventoryListing"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {},
                  "response": {
                    "inventory": [
                      {
                        "totalOnhandQuantity": 20,
                        "totalInboundQuantity": 10,
                        "sku": "100TestSKU1Pen",
                        "inventoryDetails": {
                          "availableDistributableQuantity": 10,
                          "reservedDistributableQuantity": 10
                        }
                      },
                      {
                        "totalOnhandQuantity": 20,
                        "totalInboundQuantity": 5,
                        "sku": "2U-BKEX-VW4D",
                        "inventoryDetails": {
                          "availableDistributableQuantity": 10,
                          "reservedDistributableQuantity": 10
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sortOrder": {
                        "value": "UNKNOWN"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BAD_REQUEST",
                        "details": "This exception is thrown when client inputs are invalid",
                        "message": "Invalid value: UNKNOWN passed for sort order. Possible values are: [ASCENDING, DESCENDING]"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "tags": [
          "awd"
        ],
        "description": "Lists AWD inventory associated with a merchant with the ability to apply optional filters.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listInventory"
      }
    },
    "/aplus/2020-11-01/contentDocuments": {
      "get": {
        "tags": [
          "aplusContent"
        ],
        "description": "Returns a list of all A+ Content documents assigned to a selling partner. This operation returns only the metadata of the A+ Content documents. Call the getContentDocument operation to get the actual contents of the A+ Content documents.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 10 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
        "operationId": "searchContentDocuments",
        "parameters": [
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The identifier for the marketplace where the A+ Content is published.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.",
            "required": false,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SearchContentDocumentsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "410": {
            "description": "The specified resource no longer exists.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "aplusContent"
        ],
        "description": "Creates a new A+ Content document.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 10 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
        "operationId": "createContentDocument",
        "parameters": [
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The identifier for the marketplace where the A+ Content is published.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "in": "body",
            "description": "The content document request details.",
            "name": "postContentDocumentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostContentDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PostContentDocumentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/aplus/2020-11-01/contentDocuments/{contentReferenceKey}": {
      "get": {
        "tags": [
          "aplusContent"
        ],
        "description": "Returns an A+ Content document, if available.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 10 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
        "operationId": "getContentDocument",
        "parameters": [
          {
            "name": "contentReferenceKey",
            "in": "path",
            "description": "The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The identifier for the marketplace where the A+ Content is published.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "includedDataSet",
            "in": "query",
            "description": "The set of A+ Content data types to include in the response.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CONTENTS",
                "METADATA"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "CONTENTS",
                  "description": "The contents of the content document."
                },
                {
                  "value": "METADATA",
                  "description": "The metadata of the content document."
                }
              ]
            },
            "collectionFormat": "csv",
            "minItems": 1,
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetContentDocumentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "410": {
            "description": "The specified resource no longer exists.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "aplusContent"
        ],
        "description": "Updates an existing A+ Content document.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 10 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
        "operationId": "updateContentDocument",
        "parameters": [
          {
            "name": "contentReferenceKey",
            "in": "path",
            "description": "The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The identifier for the marketplace where the A+ Content is published.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "in": "body",
            "name": "postContentDocumentRequest",
            "description": "The content document request details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostContentDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PostContentDocumentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "410": {
            "description": "The specified resource no longer exists.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/asins": {
      "get": {
        "tags": [
          "aplusContent"
        ],
        "description": "Returns a list of ASINs related to the specified A+ Content document, if available. If you do not include the asinSet parameter, the operation returns all ASINs related to the content document.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 10 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
        "operationId": "listContentDocumentAsinRelations",
        "parameters": [
          {
            "name": "contentReferenceKey",
            "in": "path",
            "description": "The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The identifier for the marketplace where the A+ Content is published.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "includedDataSet",
            "in": "query",
            "description": "The set of A+ Content data types to include in the response. If you do not include this parameter, the operation returns the related ASINs without metadata.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "METADATA"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "METADATA",
                  "description": "The metadata of the content document."
                }
              ]
            },
            "collectionFormat": "csv",
            "minItems": 0,
            "uniqueItems": true
          },
          {
            "name": "asinSet",
            "in": "query",
            "description": "The set of ASINs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 10
            },
            "collectionFormat": "csv",
            "uniqueItems": true
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.",
            "required": false,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ListContentDocumentAsinRelationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "410": {
            "description": "The specified resource no longer exists.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "aplusContent"
        ],
        "description": "Replaces all ASINs related to the specified A+ Content document, if available. This may add or remove ASINs, depending on the current set of related ASINs. Removing an ASIN has the side effect of suspending the content document from that ASIN.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 10 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
        "operationId": "postContentDocumentAsinRelations",
        "parameters": [
          {
            "name": "contentReferenceKey",
            "in": "path",
            "description": "The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The identifier for the marketplace where the A+ Content is published.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "in": "body",
            "name": "postContentDocumentAsinRelationsRequest",
            "description": "The content document ASIN relations request details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostContentDocumentAsinRelationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PostContentDocumentAsinRelationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "410": {
            "description": "The specified resource no longer exists.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/aplus/2020-11-01/contentAsinValidations": {
      "post": {
        "tags": [
          "aplusContent"
        ],
        "description": "Checks if the A+ Content document is valid for use on a set of ASINs.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 10 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
        "operationId": "validateContentDocumentAsinRelations",
        "parameters": [
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The identifier for the marketplace where the A+ Content is published.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "asinSet",
            "in": "query",
            "description": "The set of ASINs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 10
            },
            "collectionFormat": "csv",
            "uniqueItems": true
          },
          {
            "in": "body",
            "name": "postContentDocumentRequest",
            "description": "The content document request details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostContentDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ValidateContentDocumentAsinRelationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/aplus/2020-11-01/contentPublishRecords": {
      "get": {
        "tags": [
          "aplusContent"
        ],
        "description": "Searches for A+ Content publishing records, if available.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 10 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
        "operationId": "searchContentPublishRecords",
        "parameters": [
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The identifier for the marketplace where the A+ Content is published.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "asin",
            "in": "query",
            "description": "The Amazon Standard Identification Number (ASIN).",
            "required": true,
            "type": "string",
            "minLength": 10
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.",
            "required": false,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SearchContentPublishRecordsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/approvalSubmissions": {
      "post": {
        "tags": [
          "aplusContent"
        ],
        "description": "Submits an A+ Content document for review, approval, and publishing.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 10 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
        "operationId": "postContentDocumentApprovalSubmission",
        "parameters": [
          {
            "name": "contentReferenceKey",
            "in": "path",
            "description": "The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The identifier for the marketplace where the A+ Content is published.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PostContentDocumentApprovalSubmissionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "410": {
            "description": "The specified resource no longer exists.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/suspendSubmissions": {
      "post": {
        "tags": [
          "aplusContent"
        ],
        "description": "Submits a request to suspend visible A+ Content. This neither deletes the content document nor the ASIN relations.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 10 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
        "operationId": "postContentDocumentSuspendSubmission",
        "parameters": [
          {
            "name": "contentReferenceKey",
            "in": "path",
            "description": "The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The identifier for the marketplace where the A+ Content is published.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PostContentDocumentSuspendSubmissionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "410": {
            "description": "The specified resource no longer exists.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/appIntegrations/2024-04-01/notifications": {
      "post": {
        "tags": [
          "appIntegrations"
        ],
        "description": "Create a notification for sellers in Seller Central.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Sellers whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createNotification",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The request body for the `createNotification` operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful creation of notification with the identifier captured in response.",
            "schema": {
              "$ref": "#/definitions/CreateNotificationResponse"
            },
            "examples": {
              "application/json": {
                "notificationId": "0cf25616-f68c-4eba-a5d3-6823b61506c0"
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "templateId": "PRICE_CHANGE",
                          "marketplaceId": "ATVPDKIKX0DER",
                          "notificationParameters": {}
                        }
                      }
                    }
                  },
                  "response": {
                    "notificationId": "0cf25616-f68c-4eba-a5d3-6823b61506c0"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "templateId": "BAD_TEMPLATE_ID",
                          "marketplaceId": "ATVPDKIKX0DER",
                          "notificationParameters": {}
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Template Identifier(templateId)",
                        "details": "'BAD_TEMPLATE_ID' is an invalid templateId"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/appIntegrations/2024-04-01/notifications/deletion": {
      "post": {
        "tags": [
          "appIntegrations"
        ],
        "description": "Remove your application's notifications from the Appstore notifications dashboard.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Sellers whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "deleteNotifications",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The request body for the `deleteNotifications` operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteNotificationsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully processed the deleteNotifications request.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "templateId": "PRICE_CHANGE",
                "deletionReason": "INCORRECT_RECIPIENT"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "templateId": "PRICE_CHANGE",
                          "deletionReason": "INCORRECT_RECIPIENT"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "templateId": "PRICE_CHANGE_INVALID",
                          "deletionReason": "INCORRECT_RECIPIENT"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Template Id(templateId)",
                        "details": "'PRICE_CHANGE_INVALID' is an invalid templateId"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/appIntegrations/2024-04-01/notifications/{notificationId}/feedback": {
      "post": {
        "tags": [
          "appIntegrations"
        ],
        "description": "Records the seller's response to a notification.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Sellers whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "recordActionFeedback",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A `notificationId` uniquely identifies a notification."
          },
          {
            "in": "body",
            "name": "body",
            "description": "The request body for the `recordActionFeedback` operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordActionFeedbackRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully processed the recordActionFeedback request.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "feedbackActionCode": "SELLER_ACTION_COMPLETED"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "notificationId": {
                        "value": "0cf25616-f68c-1234-a5d3-6823b61506c0"
                      },
                      "body": {
                        "value": {
                          "feedbackActionCode": "SELLER_ACTION_COMPLETED"
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "notificationId": {
                        "value": "0cf25616-f68c-a5d3-6823b61506c0"
                      },
                      "body": {
                        "value": {
                          "feedbackActionCode": "SELLER_ACTION_COMPLETED"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid notificationId",
                        "details": "'0cf25616-f68c-a5d3-6823b61506c0' is an invalid notificationId"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/applications/2023-11-30/clientSecret": {
      "post": {
        "tags": [
          "Applications"
        ],
        "description": "Rotates application client secrets for a developer application. Developers must register a destination queue in the developer console before calling this operation. When this operation is called a new client secret is generated and sent to the developer-registered queue. For more information, refer to [Rotate your application client secret](https://developer-docs.amazon.com/sp-api/v0/docs/application-management-api-v2023-11-30-use-case-guide#tutorial-rotate-your-applications-client-secret).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0167 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "rotateApplicationClientSecret",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Application is not enrolled for rotation notification. Please update application notification preference in Developer console.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/catalog/2022-04-01/items": {
      "get": {
        "tags": [
          "Catalog Items"
        ],
        "description": "Search for and return a list of Amazon catalog items and associated information either by identifier or by keywords.\n\n**Usage Plans:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to the [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "searchCatalogItems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "identifiers",
            "description": "A comma-delimited list of product identifiers to search the Amazon catalog for. **Note:** Cannot be used with `keywords`.",
            "in": "query",
            "required": false,
            "type": "array",
            "maxItems": 20,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "shoes"
          },
          {
            "name": "identifiersType",
            "description": "Type of product identifiers to search the Amazon catalog for. **Note:** Required when `identifiers` are provided.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASIN",
              "EAN",
              "GTIN",
              "ISBN",
              "JAN",
              "MINSAN",
              "SKU",
              "UPC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASIN",
                "description": "Amazon Standard Identification Number."
              },
              {
                "value": "EAN",
                "description": "European Article Number."
              },
              {
                "value": "GTIN",
                "description": "Global Trade Item Number."
              },
              {
                "value": "ISBN",
                "description": "International Standard Book Number."
              },
              {
                "value": "JAN",
                "description": "Japanese Article Number."
              },
              {
                "value": "MINSAN",
                "description": "Minsan Code."
              },
              {
                "value": "SKU",
                "description": "Stock Keeping Unit, a seller-specified identifier for an Amazon listing. **Note:** Must be accompanied by `sellerId`."
              },
              {
                "value": "UPC",
                "description": "Universal Product Code."
              }
            ],
            "x-example": "ASIN"
          },
          {
            "name": "marketplaceIds",
            "description": "A comma-delimited list of Amazon marketplace identifiers for the request.",
            "in": "query",
            "required": true,
            "type": "array",
            "maxItems": 1,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "ATVPDKIKX0DER"
          },
          {
            "name": "includedData",
            "description": "A comma-delimited list of data sets to include in the response. Default: `summaries`.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "enum": [
                "attributes",
                "classifications",
                "dimensions",
                "identifiers",
                "images",
                "productTypes",
                "relationships",
                "salesRanks",
                "summaries",
                "vendorDetails"
              ],
              "type": "string",
              "x-docgen-enum-table-extension": [
                {
                  "value": "attributes",
                  "description": "A JSON object containing structured item attribute data keyed by attribute name. Catalog item attributes conform to the related Amazon product type definitions available in the Selling Partner API for Product Type Definitions."
                },
                {
                  "value": "classifications",
                  "description": "Classifications (browse nodes) for an item in the Amazon catalog."
                },
                {
                  "value": "dimensions",
                  "description": "Dimensions for an item in the Amazon catalog."
                },
                {
                  "value": "identifiers",
                  "description": "Identifiers associated with the item in the Amazon catalog, such as UPC and EAN identifiers."
                },
                {
                  "value": "images",
                  "description": "Images for an item in the Amazon catalog."
                },
                {
                  "value": "productTypes",
                  "description": "Product types associated with the Amazon catalog item."
                },
                {
                  "value": "relationships",
                  "description": "Relationship details of an Amazon catalog item (for example, variations)."
                },
                {
                  "value": "salesRanks",
                  "description": "Sales ranks of an Amazon catalog item."
                },
                {
                  "value": "summaries",
                  "description": "Summary details of an Amazon catalog item. Refer to the `attributes` of an Amazon catalog item for more details."
                },
                {
                  "value": "vendorDetails",
                  "description": "Vendor details associated with an Amazon catalog item. Vendor details are available to vendors only."
                }
              ]
            },
            "collectionFormat": "csv",
            "x-example": "summaries",
            "default": [
              "summaries"
            ]
          },
          {
            "name": "locale",
            "description": "Locale for retrieving localized summaries. Defaults to the primary locale of the marketplace.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          },
          {
            "name": "sellerId",
            "description": "A selling partner identifier, such as a seller account or vendor code. **Note:** Required when `identifiersType` is `SKU`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "keywords",
            "description": "A comma-delimited list of words to search the Amazon catalog for. **Note:** Cannot be used with `identifiers`.",
            "in": "query",
            "required": false,
            "type": "array",
            "maxItems": 20,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "shoes"
          },
          {
            "name": "brandNames",
            "description": "A comma-delimited list of brand names to limit the search for `keywords`-based queries. **Note:** Cannot be used with `identifiers`.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "Beautiful Boats"
          },
          {
            "name": "classificationIds",
            "description": "A comma-delimited list of classification identifiers to limit the search for `keywords`-based queries. **Note:** Cannot be used with `identifiers`.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "12345678"
          },
          {
            "name": "pageSize",
            "description": "Number of results to be returned per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "maximum": 20,
            "default": 10,
            "x-example": 9
          },
          {
            "name": "pageToken",
            "description": "A token to fetch a certain page when there are multiple pages worth of results.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "sdlkj234lkj234lksjdflkjwdflkjsfdlkj234234234234"
          },
          {
            "name": "keywordsLocale",
            "description": "The language of the keywords provided for `keywords`-based queries. Defaults to the primary locale of the marketplace. **Note:** Cannot be used with `identifiers`.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ItemSearchResults"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "numberOfResults": 1,
                "pagination": {
                  "nextToken": "xsdflkj324lkjsdlkj3423klkjsdfkljlk2j34klj2l3k4jlksdjl234",
                  "previousToken": "ilkjsdflkj234lkjds234234lkjl234lksjdflkj234234lkjsfsdflkj333d"
                },
                "refinements": {
                  "brands": [
                    {
                      "numberOfResults": 1,
                      "brandName": "SAMSUNG"
                    }
                  ],
                  "classifications": [
                    {
                      "numberOfResults": 1,
                      "displayName": "Electronics",
                      "classificationId": "493964"
                    }
                  ]
                },
                "items": [
                  {
                    "asin": "B07N4M94X4",
                    "attributes": {
                      "total_hdmi_ports": [
                        {
                          "value": 4,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "resolution": [
                        {
                          "language_tag": "en_US",
                          "value": "4K",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_weight": [
                        {
                          "unit": "pounds",
                          "value": 107.6,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "product_subcategory": [
                        {
                          "value": "50400120",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "bullet_point": [
                        {
                          "language_tag": "en_US",
                          "value": "SMART TV WITH UNIVERSAL GUIDE: Simple on-screen Guide is an easy way to find streaming content and live TV shows",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "100% COLOR VOLUME WITH QUANTUM DOTS: Powered by Quantum dots, Samsung’s 4K QLED TV offers over a billion shades of brilliant color and 100% color volume for exceptional depth of detail that will draw you in to the picture for the best 4K TV experience",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "QUANTUM PROCESSOR 4K: Intelligently powered processor instantly upscales content to 4K for sharp detail and refined color",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "QUANTUM HDR 4X: 4K depth of detail with high dynamic range powered by HDR10+ delivers the lightest to darkest colors, scene by scene, for amazing picture realism",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "AMBIENT MODE: Customizes and complements your living space by turning a blank screen of this big screen TV into enticing visuals including décor, info, photos and artwork",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "SMART TV FEATURES: OneRemote to control all compatible devices, Bixby voice command, on-screen universal guide, SmartThings to control compatible home appliances and devices, smart speaker expandability with Alexa and Google Assistant compatibility, and more",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_dimensions": [
                        {
                          "width": {
                            "unit": "inches",
                            "value": 72.4
                          },
                          "length": {
                            "unit": "inches",
                            "value": 2.4
                          },
                          "height": {
                            "unit": "inches",
                            "value": 41.4
                          },
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "brand": [
                        {
                          "language_tag": "en_US",
                          "value": "SAMSUNG",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "control_method": [
                        {
                          "value": "voice",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_package_dimensions": [
                        {
                          "length": {
                            "unit": "centimeters",
                            "value": 26.67
                          },
                          "width": {
                            "unit": "centimeters",
                            "value": 121.92
                          },
                          "height": {
                            "unit": "centimeters",
                            "value": 203.2
                          },
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "image_aspect_ratio": [
                        {
                          "language_tag": "en_US",
                          "value": "16:9",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "part_number": [
                        {
                          "value": "QN82Q60RAFXZA",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "includes_remote": [
                        {
                          "value": true,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "style": [
                        {
                          "language_tag": "en_US",
                          "value": "TV only",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_type_name": [
                        {
                          "language_tag": "en_US",
                          "value": "TV",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "battery": [
                        {
                          "cell_composition": [
                            {
                              "value": "alkaline"
                            }
                          ],
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "image_contrast_ratio": [
                        {
                          "language_tag": "en_US",
                          "value": "QLED 4K",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "manufacturer": [
                        {
                          "language_tag": "en_US",
                          "value": "Samsung",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "number_of_boxes": [
                        {
                          "value": 1,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "total_usb_ports": [
                        {
                          "value": 2,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "model_number": [
                        {
                          "value": "QN82Q60RAFXZA",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "supplier_declared_dg_hz_regulation": [
                        {
                          "value": "not_applicable",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "num_batteries": [
                        {
                          "quantity": 2,
                          "type": "aaa",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "california_proposition_65": [
                        {
                          "compliance_type": "on_product_combined_cancer_reproductive",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "compliance_type": "chemical",
                          "chemical_names": [
                            "di_2_ethylhexyl_phthalate_dehp"
                          ],
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "display": [
                        {
                          "resolution_maximum": [
                            {
                              "unit": "pixels",
                              "language_tag": "en_US",
                              "value": "3840 x 2160"
                            }
                          ],
                          "size": [
                            {
                              "unit": "inches",
                              "value": 82
                            }
                          ],
                          "type": [
                            {
                              "language_tag": "en_US",
                              "value": "QLED"
                            }
                          ],
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_name": [
                        {
                          "language_tag": "en_US",
                          "value": "Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series (2019) Ultra HD Smart TV with HDR and Alexa Compatibility",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "list_price": [
                        {
                          "currency": "USD",
                          "value": 3799.99,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "batteries_required": [
                        {
                          "value": false,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "includes_rechargable_battery": [
                        {
                          "value": false,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "product_site_launch_date": [
                        {
                          "value": "2019-03-11T08:00:01.000Z",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "product_category": [
                        {
                          "value": "50400100",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "batteries_included": [
                        {
                          "value": false,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "connectivity_technology": [
                        {
                          "language_tag": "en_US",
                          "value": "Bluetooth",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "USB",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Wireless",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "HDMI",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "included_components": [
                        {
                          "language_tag": "en_US",
                          "value": "QLED Standard Smart Remote",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Power Cable",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Stand",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Samsung Smart Control",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "specification_met": [
                        {
                          "language_tag": "en_US",
                          "value": "",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "parental_control_technology": [
                        {
                          "value": "V-Chip",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "power_consumption": [
                        {
                          "unit": "watts",
                          "value": 120,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "cpsia_cautionary_statement": [
                        {
                          "value": "no_warning_applicable",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_type_keyword": [
                        {
                          "value": "qled-televisions",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "number_of_items": [
                        {
                          "value": 1,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "warranty_description": [
                        {
                          "language_tag": "en_US",
                          "value": "1 year manufacturer",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "max_resolution": [
                        {
                          "unit": "pixels",
                          "value": 8.3,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "color": [
                        {
                          "language_tag": "en_US",
                          "value": "Black",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "screen_surface_description": [
                        {
                          "language_tag": "en_US",
                          "value": "Flat",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_package_weight": [
                        {
                          "unit": "kilograms",
                          "value": 62.142,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "speaker_type": [
                        {
                          "language_tag": "en_US",
                          "value": "2CH",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "supported_internet_services": [
                        {
                          "language_tag": "en_US",
                          "value": "Amazon Instant Video",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "YouTube",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Netflix",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Hulu",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Browser",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "tuner_technology": [
                        {
                          "language_tag": "en_US",
                          "value": "Analog Tuner",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "controller_type": [
                        {
                          "language_tag": "en_US",
                          "value": "SmartThings",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Voice Control",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "special_feature": [
                        {
                          "language_tag": "en_US",
                          "value": "100% Color Volume with Quantum Dot; Quantum Processor 4K; Ambient Mode; Quantum HDR 4X; Real Game Enhancer",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "wireless_communication_technology": [
                        {
                          "language_tag": "en_US",
                          "value": "Wi-Fi::Wi-Fi Direct::Bluetooth",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "model_year": [
                        {
                          "value": 2019,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "power_source_type": [
                        {
                          "language_tag": "en_US",
                          "value": "Corded Electric",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "street_date": [
                        {
                          "value": "2019-03-21T00:00:01Z",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "mounting_type": [
                        {
                          "language_tag": "en_US",
                          "value": "Table Mount",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Wall Mount",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "refresh_rate": [
                        {
                          "unit": "hertz",
                          "language_tag": "en_US",
                          "value": "120",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ]
                    },
                    "classifications": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "classifications": [
                          {
                            "displayName": "QLED TVs",
                            "classificationId": "21489946011",
                            "parent": {
                              "displayName": "Televisions",
                              "classificationId": "172659",
                              "parent": {
                                "displayName": "Television & Video",
                                "classificationId": "1266092011",
                                "parent": {
                                  "displayName": "Electronics",
                                  "classificationId": "172282"
                                }
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "dimensions": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "item": {
                          "height": {
                            "unit": "inches",
                            "value": 41.4
                          },
                          "length": {
                            "unit": "inches",
                            "value": 2.4
                          },
                          "weight": {
                            "unit": "pounds",
                            "value": 107.6
                          },
                          "width": {
                            "unit": "inches",
                            "value": 72.4
                          }
                        },
                        "package": {
                          "height": {
                            "unit": "inches",
                            "value": 10.49999998929
                          },
                          "length": {
                            "unit": "inches",
                            "value": 79.9999999184
                          },
                          "weight": {
                            "unit": "kilograms",
                            "value": 62.142
                          },
                          "width": {
                            "unit": "inches",
                            "value": 47.99999995104
                          }
                        }
                      }
                    ],
                    "identifiers": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "identifiers": [
                          {
                            "identifier": "0887276302195",
                            "identifierType": "EAN"
                          },
                          {
                            "identifier": "00887276302195",
                            "identifierType": "GTIN"
                          },
                          {
                            "identifier": "887276302195",
                            "identifierType": "UPC"
                          }
                        ]
                      }
                    ],
                    "images": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "images": [
                          {
                            "variant": "MAIN",
                            "link": "https://m.media-amazon.com/images/I/91uohwV+k3L.jpg",
                            "height": 1707,
                            "width": 2560
                          },
                          {
                            "variant": "MAIN",
                            "link": "https://m.media-amazon.com/images/I/51DZzp3w3vL.jpg",
                            "height": 333,
                            "width": 500
                          },
                          {
                            "variant": "PT01",
                            "link": "https://m.media-amazon.com/images/I/81w2rTVShlL.jpg",
                            "height": 2560,
                            "width": 2560
                          },
                          {
                            "variant": "PT01",
                            "link": "https://m.media-amazon.com/images/I/41Px9eq9tkL.jpg",
                            "height": 500,
                            "width": 500
                          },
                          {
                            "variant": "PT02",
                            "link": "https://m.media-amazon.com/images/I/51NTNhdhPyL.jpg",
                            "height": 375,
                            "width": 500
                          },
                          {
                            "variant": "PT03",
                            "link": "https://m.media-amazon.com/images/I/51o4zpL+A3L.jpg",
                            "height": 375,
                            "width": 500
                          },
                          {
                            "variant": "PT04",
                            "link": "https://m.media-amazon.com/images/I/71ux2k9GAZL.jpg",
                            "height": 1000,
                            "width": 1000
                          },
                          {
                            "variant": "PT04",
                            "link": "https://m.media-amazon.com/images/I/61UUX63yw1L.jpg",
                            "height": 500,
                            "width": 500
                          },
                          {
                            "variant": "PT05",
                            "link": "https://m.media-amazon.com/images/I/61LwHkljX-L.jpg",
                            "height": 1000,
                            "width": 1000
                          },
                          {
                            "variant": "PT05",
                            "link": "https://m.media-amazon.com/images/I/51wJTQty3PL.jpg",
                            "height": 500,
                            "width": 500
                          },
                          {
                            "variant": "PT06",
                            "link": "https://m.media-amazon.com/images/I/61uvoB4VvoL.jpg",
                            "height": 1000,
                            "width": 1000
                          },
                          {
                            "variant": "PT06",
                            "link": "https://m.media-amazon.com/images/I/51ZexIO628L.jpg",
                            "height": 500,
                            "width": 500
                          },
                          {
                            "variant": "PT07",
                            "link": "https://m.media-amazon.com/images/I/7121MGd2ncL.jpg",
                            "height": 1000,
                            "width": 1000
                          },
                          {
                            "variant": "PT07",
                            "link": "https://m.media-amazon.com/images/I/61QK+JBMrGL.jpg",
                            "height": 500,
                            "width": 500
                          },
                          {
                            "variant": "PT08",
                            "link": "https://m.media-amazon.com/images/I/61ECcGlG4IL.jpg",
                            "height": 1080,
                            "width": 1920
                          },
                          {
                            "variant": "PT08",
                            "link": "https://m.media-amazon.com/images/I/31TxwfqvB5L.jpg",
                            "height": 281,
                            "width": 500
                          },
                          {
                            "variant": "PT09",
                            "link": "https://m.media-amazon.com/images/I/41B5vgmp4IL.jpg",
                            "height": 375,
                            "width": 500
                          },
                          {
                            "variant": "PT10",
                            "link": "https://m.media-amazon.com/images/I/51S5IY3AV0L.jpg",
                            "height": 375,
                            "width": 500
                          },
                          {
                            "variant": "PT11",
                            "link": "https://m.media-amazon.com/images/I/41-6bmPtUlL.jpg",
                            "height": 375,
                            "width": 500
                          },
                          {
                            "variant": "PT12",
                            "link": "https://m.media-amazon.com/images/I/41s9Q6gWJ7L.jpg",
                            "height": 448,
                            "width": 500
                          },
                          {
                            "variant": "PT13",
                            "link": "https://m.media-amazon.com/images/I/519nG0mRzuL.jpg",
                            "height": 314,
                            "width": 500
                          },
                          {
                            "variant": "PT14",
                            "link": "https://m.media-amazon.com/images/I/71sHhrGMc7L.jpg",
                            "height": 1097,
                            "width": 1500
                          },
                          {
                            "variant": "PT14",
                            "link": "https://m.media-amazon.com/images/I/41CH6gKtU5L.jpg",
                            "height": 366,
                            "width": 500
                          },
                          {
                            "variant": "PT15",
                            "link": "https://m.media-amazon.com/images/I/21-s7QYrTxL.jpg",
                            "height": 500,
                            "width": 175
                          },
                          {
                            "variant": "EEGL",
                            "link": "https://m.media-amazon.com/images/I/61i3dsKD09L.jpg",
                            "height": 1375,
                            "width": 370
                          },
                          {
                            "variant": "EEGL",
                            "link": "https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg",
                            "height": 500,
                            "width": 135
                          },
                          {
                            "variant": "EGUS",
                            "link": "https://m.media-amazon.com/images/I/61i3dsKD09L.jpg",
                            "height": 1375,
                            "width": 370
                          },
                          {
                            "variant": "EGUS",
                            "link": "https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg",
                            "height": 500,
                            "width": 135
                          }
                        ]
                      }
                    ],
                    "productTypes": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "productType": "TELEVISION"
                      }
                    ],
                    "salesRanks": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "classificationRanks": [
                          {
                            "classificationId": "21489946011",
                            "title": "QLED TVs",
                            "link": "http://www.amazon.com/gp/bestsellers/electronics/21489946011",
                            "rank": 113
                          }
                        ],
                        "displayGroupRanks": [
                          {
                            "websiteDisplayGroup": "ce_display_on_website",
                            "title": "Electronics",
                            "link": "http://www.amazon.com/gp/bestsellers/electronics",
                            "rank": 72855
                          }
                        ]
                      }
                    ],
                    "summaries": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "brand": "SAMSUNG",
                        "browseClassification": {
                          "displayName": "QLED TVs",
                          "classificationId": "21489946011"
                        },
                        "color": "Black",
                        "itemClassification": "BASE_PRODUCT",
                        "itemName": "Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series (2019) Ultra HD Smart TV with HDR and Alexa Compatibility",
                        "manufacturer": "Samsung",
                        "modelNumber": "QN82Q60RAFXZA",
                        "packageQuantity": 1,
                        "partNumber": "QN82Q60RAFXZA",
                        "size": "82-Inch",
                        "style": "TV only",
                        "websiteDisplayGroup": "home_theater_display_on_website",
                        "websiteDisplayGroupName": "Home Theater"
                      }
                    ],
                    "relationships": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "relationships": [
                          {
                            "type": "VARIATION",
                            "parentAsins": [
                              "B08J7TQ9FL"
                            ],
                            "variationTheme": {
                              "attributes": [
                                "color",
                                "size"
                              ],
                              "theme": "SIZE_NAME/COLOR_NAME"
                            }
                          }
                        ]
                      }
                    ],
                    "vendorDetails": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "brandCode": "SAMF9",
                        "manufacturerCode": "SAMF9",
                        "manufacturerCodeParent": "SAMF9",
                        "productCategory": {
                          "displayName": "Televisions",
                          "value": "50400100"
                        },
                        "productGroup": "Home Entertainment",
                        "productSubcategory": {
                          "displayName": "Plasma TVs",
                          "value": "50400120"
                        },
                        "replenishmentCategory": "OBSOLETE"
                      }
                    ]
                  }
                ]
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "keywords": {
                        "value": [
                          "samsung",
                          "tv"
                        ]
                      },
                      "marketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      },
                      "includedData": {
                        "value": [
                          "classifications",
                          "dimensions",
                          "identifiers",
                          "images",
                          "productTypes",
                          "relationships",
                          "salesRanks",
                          "summaries",
                          "vendorDetails"
                        ]
                      }
                    }
                  },
                  "response": {
                    "numberOfResults": 1,
                    "pagination": {
                      "nextToken": "xsdflkj324lkjsdlkj3423klkjsdfkljlk2j34klj2l3k4jlksdjl234",
                      "previousToken": "ilkjsdflkj234lkjds234234lkjl234lksjdflkj234234lkjsfsdflkj333d"
                    },
                    "refinements": {
                      "brands": [
                        {
                          "numberOfResults": 1,
                          "brandName": "SAMSUNG"
                        }
                      ],
                      "classifications": [
                        {
                          "numberOfResults": 1,
                          "displayName": "Electronics",
                          "classificationId": "493964"
                        }
                      ]
                    },
                    "items": [
                      {
                        "asin": "B07N4M94X4",
                        "classifications": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "classifications": [
                              {
                                "displayName": "QLED TVs",
                                "classificationId": "21489946011",
                                "parent": {
                                  "displayName": "Televisions",
                                  "classificationId": "172659",
                                  "parent": {
                                    "displayName": "Television & Video",
                                    "classificationId": "1266092011",
                                    "parent": {
                                      "displayName": "Electronics",
                                      "classificationId": "172282"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "dimensions": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "item": {
                              "height": {
                                "unit": "inches",
                                "value": 41.4
                              },
                              "length": {
                                "unit": "inches",
                                "value": 2.4
                              },
                              "weight": {
                                "unit": "pounds",
                                "value": 107.6
                              },
                              "width": {
                                "unit": "inches",
                                "value": 72.4
                              }
                            },
                            "package": {
                              "height": {
                                "unit": "inches",
                                "value": 10.49999998929
                              },
                              "length": {
                                "unit": "inches",
                                "value": 79.9999999184
                              },
                              "weight": {
                                "unit": "kilograms",
                                "value": 62.142
                              },
                              "width": {
                                "unit": "inches",
                                "value": 47.99999995104
                              }
                            }
                          }
                        ],
                        "identifiers": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "identifiers": [
                              {
                                "identifier": "0887276302195",
                                "identifierType": "EAN"
                              },
                              {
                                "identifier": "00887276302195",
                                "identifierType": "GTIN"
                              },
                              {
                                "identifier": "887276302195",
                                "identifierType": "UPC"
                              }
                            ]
                          }
                        ],
                        "images": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "images": [
                              {
                                "variant": "MAIN",
                                "link": "https://m.media-amazon.com/images/I/91uohwV+k3L.jpg",
                                "height": 1707,
                                "width": 2560
                              },
                              {
                                "variant": "MAIN",
                                "link": "https://m.media-amazon.com/images/I/51DZzp3w3vL.jpg",
                                "height": 333,
                                "width": 500
                              },
                              {
                                "variant": "PT01",
                                "link": "https://m.media-amazon.com/images/I/81w2rTVShlL.jpg",
                                "height": 2560,
                                "width": 2560
                              },
                              {
                                "variant": "PT01",
                                "link": "https://m.media-amazon.com/images/I/41Px9eq9tkL.jpg",
                                "height": 500,
                                "width": 500
                              },
                              {
                                "variant": "PT02",
                                "link": "https://m.media-amazon.com/images/I/51NTNhdhPyL.jpg",
                                "height": 375,
                                "width": 500
                              },
                              {
                                "variant": "PT03",
                                "link": "https://m.media-amazon.com/images/I/51o4zpL+A3L.jpg",
                                "height": 375,
                                "width": 500
                              },
                              {
                                "variant": "PT04",
                                "link": "https://m.media-amazon.com/images/I/71ux2k9GAZL.jpg",
                                "height": 1000,
                                "width": 1000
                              },
                              {
                                "variant": "PT04",
                                "link": "https://m.media-amazon.com/images/I/61UUX63yw1L.jpg",
                                "height": 500,
                                "width": 500
                              },
                              {
                                "variant": "PT05",
                                "link": "https://m.media-amazon.com/images/I/61LwHkljX-L.jpg",
                                "height": 1000,
                                "width": 1000
                              },
                              {
                                "variant": "PT05",
                                "link": "https://m.media-amazon.com/images/I/51wJTQty3PL.jpg",
                                "height": 500,
                                "width": 500
                              },
                              {
                                "variant": "PT06",
                                "link": "https://m.media-amazon.com/images/I/61uvoB4VvoL.jpg",
                                "height": 1000,
                                "width": 1000
                              },
                              {
                                "variant": "PT06",
                                "link": "https://m.media-amazon.com/images/I/51ZexIO628L.jpg",
                                "height": 500,
                                "width": 500
                              },
                              {
                                "variant": "PT07",
                                "link": "https://m.media-amazon.com/images/I/7121MGd2ncL.jpg",
                                "height": 1000,
                                "width": 1000
                              },
                              {
                                "variant": "PT07",
                                "link": "https://m.media-amazon.com/images/I/61QK+JBMrGL.jpg",
                                "height": 500,
                                "width": 500
                              },
                              {
                                "variant": "PT08",
                                "link": "https://m.media-amazon.com/images/I/61ECcGlG4IL.jpg",
                                "height": 1080,
                                "width": 1920
                              },
                              {
                                "variant": "PT08",
                                "link": "https://m.media-amazon.com/images/I/31TxwfqvB5L.jpg",
                                "height": 281,
                                "width": 500
                              },
                              {
                                "variant": "PT09",
                                "link": "https://m.media-amazon.com/images/I/41B5vgmp4IL.jpg",
                                "height": 375,
                                "width": 500
                              },
                              {
                                "variant": "PT10",
                                "link": "https://m.media-amazon.com/images/I/51S5IY3AV0L.jpg",
                                "height": 375,
                                "width": 500
                              },
                              {
                                "variant": "PT11",
                                "link": "https://m.media-amazon.com/images/I/41-6bmPtUlL.jpg",
                                "height": 375,
                                "width": 500
                              },
                              {
                                "variant": "PT12",
                                "link": "https://m.media-amazon.com/images/I/41s9Q6gWJ7L.jpg",
                                "height": 448,
                                "width": 500
                              },
                              {
                                "variant": "PT13",
                                "link": "https://m.media-amazon.com/images/I/519nG0mRzuL.jpg",
                                "height": 314,
                                "width": 500
                              },
                              {
                                "variant": "PT14",
                                "link": "https://m.media-amazon.com/images/I/71sHhrGMc7L.jpg",
                                "height": 1097,
                                "width": 1500
                              },
                              {
                                "variant": "PT14",
                                "link": "https://m.media-amazon.com/images/I/41CH6gKtU5L.jpg",
                                "height": 366,
                                "width": 500
                              },
                              {
                                "variant": "PT15",
                                "link": "https://m.media-amazon.com/images/I/21-s7QYrTxL.jpg",
                                "height": 500,
                                "width": 175
                              },
                              {
                                "variant": "EEGL",
                                "link": "https://m.media-amazon.com/images/I/61i3dsKD09L.jpg",
                                "height": 1375,
                                "width": 370
                              },
                              {
                                "variant": "EEGL",
                                "link": "https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg",
                                "height": 500,
                                "width": 135
                              },
                              {
                                "variant": "EGUS",
                                "link": "https://m.media-amazon.com/images/I/61i3dsKD09L.jpg",
                                "height": 1375,
                                "width": 370
                              },
                              {
                                "variant": "EGUS",
                                "link": "https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg",
                                "height": 500,
                                "width": 135
                              }
                            ]
                          }
                        ],
                        "productTypes": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "productType": "TELEVISION"
                          }
                        ],
                        "salesRanks": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "classificationRanks": [
                              {
                                "classificationId": "21489946011",
                                "title": "QLED TVs",
                                "link": "http://www.amazon.com/gp/bestsellers/electronics/21489946011",
                                "rank": 113
                              }
                            ],
                            "displayGroupRanks": [
                              {
                                "websiteDisplayGroup": "ce_display_on_website",
                                "title": "Electronics",
                                "link": "http://www.amazon.com/gp/bestsellers/electronics",
                                "rank": 72855
                              }
                            ]
                          }
                        ],
                        "summaries": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "brand": "SAMSUNG",
                            "browseClassification": {
                              "displayName": "QLED TVs",
                              "classificationId": "21489946011"
                            },
                            "color": "Black",
                            "itemClassification": "BASE_PRODUCT",
                            "itemName": "Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series (2019) Ultra HD Smart TV with HDR and Alexa Compatibility",
                            "manufacturer": "Samsung",
                            "modelNumber": "QN82Q60RAFXZA",
                            "packageQuantity": 1,
                            "partNumber": "QN82Q60RAFXZA",
                            "size": "82-Inch",
                            "style": "TV only",
                            "websiteDisplayGroup": "home_theater_display_on_website",
                            "websiteDisplayGroupName": "Home Theater"
                          }
                        ],
                        "relationships": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "relationships": [
                              {
                                "type": "VARIATION",
                                "parentAsins": [
                                  "B08J7TQ9FL"
                                ],
                                "variationTheme": {
                                  "attributes": [
                                    "color",
                                    "size"
                                  ],
                                  "theme": "SIZE_NAME/COLOR_NAME"
                                }
                              }
                            ]
                          }
                        ],
                        "vendorDetails": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "brandCode": "SAMF9",
                            "manufacturerCode": "SAMF9",
                            "manufacturerCodeParent": "SAMF9",
                            "productCategory": {
                              "displayName": "Televisions",
                              "value": "50400100"
                            },
                            "productGroup": "Home Entertainment",
                            "productSubcategory": {
                              "displayName": "Plasma TVs",
                              "value": "50400120"
                            },
                            "replenishmentCategory": "OBSOLETE"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "summary": "searchCatalogItems"
      }
    },
    "/catalog/2022-04-01/items/{asin}": {
      "get": {
        "tags": [
          "Catalog Items"
        ],
        "description": "Retrieves details for an item in the Amazon catalog.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to the [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getCatalogItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "asin",
            "description": "The Amazon Standard Identification Number (ASIN) of the item.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "description": "A comma-delimited list of Amazon marketplace identifiers. Data sets in the response contain data only for the specified marketplaces.",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "ATVPDKIKX0DER"
          },
          {
            "name": "includedData",
            "description": "A comma-delimited list of data sets to include in the response. Default: `summaries`.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "enum": [
                "attributes",
                "classifications",
                "dimensions",
                "identifiers",
                "images",
                "productTypes",
                "relationships",
                "salesRanks",
                "summaries",
                "vendorDetails"
              ],
              "type": "string",
              "x-docgen-enum-table-extension": [
                {
                  "value": "attributes",
                  "description": "A JSON object containing structured item attribute data keyed by attribute name. Catalog item attributes conform to the related Amazon product type definitions available in the Selling Partner API for Product Type Definitions."
                },
                {
                  "value": "classifications",
                  "description": "Classifications (browse nodes) for an item in the Amazon catalog."
                },
                {
                  "value": "dimensions",
                  "description": "Dimensions for an item in the Amazon catalog."
                },
                {
                  "value": "identifiers",
                  "description": "Identifiers associated with the item in the Amazon catalog, such as UPC and EAN identifiers."
                },
                {
                  "value": "images",
                  "description": "Images for an item in the Amazon catalog."
                },
                {
                  "value": "productTypes",
                  "description": "Product types associated with the Amazon catalog item."
                },
                {
                  "value": "salesRanks",
                  "description": "Sales ranks of an Amazon catalog item."
                },
                {
                  "value": "summaries",
                  "description": "Summary details of an Amazon catalog item. Refer to the \"attributes\" of an Amazon catalog item for more details."
                },
                {
                  "value": "relationships",
                  "description": "Relationship details of an Amazon catalog item (for example, variations)."
                },
                {
                  "value": "vendorDetails",
                  "description": "Vendor details associated with an Amazon catalog item. Vendor details are available to vendors only."
                }
              ]
            },
            "collectionFormat": "csv",
            "x-example": "summaries",
            "default": [
              "summaries"
            ]
          },
          {
            "name": "locale",
            "description": "Locale for retrieving localized summaries. Defaults to the primary locale of the marketplace.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Item"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "asin": "B07N4M94X4",
                "attributes": {
                  "total_hdmi_ports": [
                    {
                      "value": 4,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "resolution": [
                    {
                      "language_tag": "en_US",
                      "value": "4K",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "item_weight": [
                    {
                      "unit": "pounds",
                      "value": 107.6,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "product_subcategory": [
                    {
                      "value": "50400120",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "bullet_point": [
                    {
                      "language_tag": "en_US",
                      "value": "SMART TV WITH UNIVERSAL GUIDE: Simple on-screen Guide is an easy way to find streaming content and live TV shows",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "100% COLOR VOLUME WITH QUANTUM DOTS: Powered by Quantum dots, Samsung’s 4K QLED TV offers over a billion shades of brilliant color and 100% color volume for exceptional depth of detail that will draw you in to the picture for the best 4K TV experience",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "QUANTUM PROCESSOR 4K: Intelligently powered processor instantly upscales content to 4K for sharp detail and refined color",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "QUANTUM HDR 4X: 4K depth of detail with high dynamic range powered by HDR10+ delivers the lightest to darkest colors, scene by scene, for amazing picture realism",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "AMBIENT MODE: Customizes and complements your living space by turning a blank screen of this big screen TV into enticing visuals including décor, info, photos and artwork",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "SMART TV FEATURES: OneRemote to control all compatible devices, Bixby voice command, on-screen universal guide, SmartThings to control compatible home appliances and devices, smart speaker expandability with Alexa and Google Assistant compatibility, and more",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "item_dimensions": [
                    {
                      "width": {
                        "unit": "inches",
                        "value": 72.4
                      },
                      "length": {
                        "unit": "inches",
                        "value": 2.4
                      },
                      "height": {
                        "unit": "inches",
                        "value": 41.4
                      },
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "brand": [
                    {
                      "language_tag": "en_US",
                      "value": "SAMSUNG",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "control_method": [
                    {
                      "value": "voice",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "item_package_dimensions": [
                    {
                      "length": {
                        "unit": "centimeters",
                        "value": 26.67
                      },
                      "width": {
                        "unit": "centimeters",
                        "value": 121.92
                      },
                      "height": {
                        "unit": "centimeters",
                        "value": 203.2
                      },
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "image_aspect_ratio": [
                    {
                      "language_tag": "en_US",
                      "value": "16:9",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "part_number": [
                    {
                      "value": "QN82Q60RAFXZA",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "includes_remote": [
                    {
                      "value": true,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "style": [
                    {
                      "language_tag": "en_US",
                      "value": "TV only",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "item_type_name": [
                    {
                      "language_tag": "en_US",
                      "value": "TV",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "battery": [
                    {
                      "cell_composition": [
                        {
                          "value": "alkaline"
                        }
                      ],
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "image_contrast_ratio": [
                    {
                      "language_tag": "en_US",
                      "value": "QLED 4K",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "manufacturer": [
                    {
                      "language_tag": "en_US",
                      "value": "Samsung",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "number_of_boxes": [
                    {
                      "value": 1,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "total_usb_ports": [
                    {
                      "value": 2,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "model_number": [
                    {
                      "value": "QN82Q60RAFXZA",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "supplier_declared_dg_hz_regulation": [
                    {
                      "value": "not_applicable",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "num_batteries": [
                    {
                      "quantity": 2,
                      "type": "aaa",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "california_proposition_65": [
                    {
                      "compliance_type": "on_product_combined_cancer_reproductive",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "compliance_type": "chemical",
                      "chemical_names": [
                        "di_2_ethylhexyl_phthalate_dehp"
                      ],
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "display": [
                    {
                      "resolution_maximum": [
                        {
                          "unit": "pixels",
                          "language_tag": "en_US",
                          "value": "3840 x 2160"
                        }
                      ],
                      "size": [
                        {
                          "unit": "inches",
                          "value": 82
                        }
                      ],
                      "type": [
                        {
                          "language_tag": "en_US",
                          "value": "QLED"
                        }
                      ],
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "item_name": [
                    {
                      "language_tag": "en_US",
                      "value": "Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series (2019) Ultra HD Smart TV with HDR and Alexa Compatibility",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "list_price": [
                    {
                      "currency": "USD",
                      "value": 3799.99,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "batteries_required": [
                    {
                      "value": false,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "includes_rechargable_battery": [
                    {
                      "value": false,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "product_site_launch_date": [
                    {
                      "value": "2019-03-11T08:00:01.000Z",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "product_category": [
                    {
                      "value": "50400100",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "batteries_included": [
                    {
                      "value": false,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "connectivity_technology": [
                    {
                      "language_tag": "en_US",
                      "value": "Bluetooth",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "USB",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "Wireless",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "HDMI",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "included_components": [
                    {
                      "language_tag": "en_US",
                      "value": "QLED Standard Smart Remote",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "Power Cable",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "Stand",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "Samsung Smart Control",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "specification_met": [
                    {
                      "language_tag": "en_US",
                      "value": "",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "parental_control_technology": [
                    {
                      "value": "V-Chip",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "power_consumption": [
                    {
                      "unit": "watts",
                      "value": 120,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "cpsia_cautionary_statement": [
                    {
                      "value": "no_warning_applicable",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "item_type_keyword": [
                    {
                      "value": "qled-televisions",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "number_of_items": [
                    {
                      "value": 1,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "warranty_description": [
                    {
                      "language_tag": "en_US",
                      "value": "1 year manufacturer",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "max_resolution": [
                    {
                      "unit": "pixels",
                      "value": 8.3,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "color": [
                    {
                      "language_tag": "en_US",
                      "value": "Black",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "screen_surface_description": [
                    {
                      "language_tag": "en_US",
                      "value": "Flat",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "item_package_weight": [
                    {
                      "unit": "kilograms",
                      "value": 62.142,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "speaker_type": [
                    {
                      "language_tag": "en_US",
                      "value": "2CH",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "supported_internet_services": [
                    {
                      "language_tag": "en_US",
                      "value": "Amazon Instant Video",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "YouTube",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "Netflix",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "Hulu",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "Browser",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "tuner_technology": [
                    {
                      "language_tag": "en_US",
                      "value": "Analog Tuner",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "controller_type": [
                    {
                      "language_tag": "en_US",
                      "value": "SmartThings",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "Voice Control",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "special_feature": [
                    {
                      "language_tag": "en_US",
                      "value": "100% Color Volume with Quantum Dot; Quantum Processor 4K; Ambient Mode; Quantum HDR 4X; Real Game Enhancer",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "wireless_communication_technology": [
                    {
                      "language_tag": "en_US",
                      "value": "Wi-Fi::Wi-Fi Direct::Bluetooth",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "model_year": [
                    {
                      "value": 2019,
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "power_source_type": [
                    {
                      "language_tag": "en_US",
                      "value": "Corded Electric",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "street_date": [
                    {
                      "value": "2019-03-21T00:00:01Z",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "mounting_type": [
                    {
                      "language_tag": "en_US",
                      "value": "Table Mount",
                      "marketplace_id": "ATVPDKIKX0DER"
                    },
                    {
                      "language_tag": "en_US",
                      "value": "Wall Mount",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ],
                  "refresh_rate": [
                    {
                      "unit": "hertz",
                      "language_tag": "en_US",
                      "value": "120",
                      "marketplace_id": "ATVPDKIKX0DER"
                    }
                  ]
                },
                "classifications": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "classifications": [
                      {
                        "displayName": "QLED TVs",
                        "classificationId": "21489946011",
                        "parent": {
                          "displayName": "Televisions",
                          "classificationId": "172659",
                          "parent": {
                            "displayName": "Television & Video",
                            "classificationId": "1266092011",
                            "parent": {
                              "displayName": "Electronics",
                              "classificationId": "172282"
                            }
                          }
                        }
                      }
                    ]
                  }
                ],
                "dimensions": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "item": {
                      "height": {
                        "unit": "inches",
                        "value": 41.4
                      },
                      "length": {
                        "unit": "inches",
                        "value": 2.4
                      },
                      "weight": {
                        "unit": "pounds",
                        "value": 107.6
                      },
                      "width": {
                        "unit": "inches",
                        "value": 72.4
                      }
                    },
                    "package": {
                      "height": {
                        "unit": "inches",
                        "value": 10.49999998929
                      },
                      "length": {
                        "unit": "inches",
                        "value": 79.9999999184
                      },
                      "weight": {
                        "unit": "kilograms",
                        "value": 62.142
                      },
                      "width": {
                        "unit": "inches",
                        "value": 47.99999995104
                      }
                    }
                  }
                ],
                "identifiers": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "identifiers": [
                      {
                        "identifier": "0887276302195",
                        "identifierType": "EAN"
                      },
                      {
                        "identifier": "00887276302195",
                        "identifierType": "GTIN"
                      },
                      {
                        "identifier": "887276302195",
                        "identifierType": "UPC"
                      }
                    ]
                  }
                ],
                "images": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "images": [
                      {
                        "variant": "MAIN",
                        "link": "https://m.media-amazon.com/images/I/91uohwV+k3L.jpg",
                        "height": 1707,
                        "width": 2560
                      },
                      {
                        "variant": "MAIN",
                        "link": "https://m.media-amazon.com/images/I/51DZzp3w3vL.jpg",
                        "height": 333,
                        "width": 500
                      },
                      {
                        "variant": "PT01",
                        "link": "https://m.media-amazon.com/images/I/81w2rTVShlL.jpg",
                        "height": 2560,
                        "width": 2560
                      },
                      {
                        "variant": "PT01",
                        "link": "https://m.media-amazon.com/images/I/41Px9eq9tkL.jpg",
                        "height": 500,
                        "width": 500
                      },
                      {
                        "variant": "PT02",
                        "link": "https://m.media-amazon.com/images/I/51NTNhdhPyL.jpg",
                        "height": 375,
                        "width": 500
                      },
                      {
                        "variant": "PT03",
                        "link": "https://m.media-amazon.com/images/I/51o4zpL+A3L.jpg",
                        "height": 375,
                        "width": 500
                      },
                      {
                        "variant": "PT04",
                        "link": "https://m.media-amazon.com/images/I/71ux2k9GAZL.jpg",
                        "height": 1000,
                        "width": 1000
                      },
                      {
                        "variant": "PT04",
                        "link": "https://m.media-amazon.com/images/I/61UUX63yw1L.jpg",
                        "height": 500,
                        "width": 500
                      },
                      {
                        "variant": "PT05",
                        "link": "https://m.media-amazon.com/images/I/61LwHkljX-L.jpg",
                        "height": 1000,
                        "width": 1000
                      },
                      {
                        "variant": "PT05",
                        "link": "https://m.media-amazon.com/images/I/51wJTQty3PL.jpg",
                        "height": 500,
                        "width": 500
                      },
                      {
                        "variant": "PT06",
                        "link": "https://m.media-amazon.com/images/I/61uvoB4VvoL.jpg",
                        "height": 1000,
                        "width": 1000
                      },
                      {
                        "variant": "PT06",
                        "link": "https://m.media-amazon.com/images/I/51ZexIO628L.jpg",
                        "height": 500,
                        "width": 500
                      },
                      {
                        "variant": "PT07",
                        "link": "https://m.media-amazon.com/images/I/7121MGd2ncL.jpg",
                        "height": 1000,
                        "width": 1000
                      },
                      {
                        "variant": "PT07",
                        "link": "https://m.media-amazon.com/images/I/61QK+JBMrGL.jpg",
                        "height": 500,
                        "width": 500
                      },
                      {
                        "variant": "PT08",
                        "link": "https://m.media-amazon.com/images/I/61ECcGlG4IL.jpg",
                        "height": 1080,
                        "width": 1920
                      },
                      {
                        "variant": "PT08",
                        "link": "https://m.media-amazon.com/images/I/31TxwfqvB5L.jpg",
                        "height": 281,
                        "width": 500
                      },
                      {
                        "variant": "PT09",
                        "link": "https://m.media-amazon.com/images/I/41B5vgmp4IL.jpg",
                        "height": 375,
                        "width": 500
                      },
                      {
                        "variant": "PT10",
                        "link": "https://m.media-amazon.com/images/I/51S5IY3AV0L.jpg",
                        "height": 375,
                        "width": 500
                      },
                      {
                        "variant": "PT11",
                        "link": "https://m.media-amazon.com/images/I/41-6bmPtUlL.jpg",
                        "height": 375,
                        "width": 500
                      },
                      {
                        "variant": "PT12",
                        "link": "https://m.media-amazon.com/images/I/41s9Q6gWJ7L.jpg",
                        "height": 448,
                        "width": 500
                      },
                      {
                        "variant": "PT13",
                        "link": "https://m.media-amazon.com/images/I/519nG0mRzuL.jpg",
                        "height": 314,
                        "width": 500
                      },
                      {
                        "variant": "PT14",
                        "link": "https://m.media-amazon.com/images/I/71sHhrGMc7L.jpg",
                        "height": 1097,
                        "width": 1500
                      },
                      {
                        "variant": "PT14",
                        "link": "https://m.media-amazon.com/images/I/41CH6gKtU5L.jpg",
                        "height": 366,
                        "width": 500
                      },
                      {
                        "variant": "PT15",
                        "link": "https://m.media-amazon.com/images/I/21-s7QYrTxL.jpg",
                        "height": 500,
                        "width": 175
                      },
                      {
                        "variant": "EEGL",
                        "link": "https://m.media-amazon.com/images/I/61i3dsKD09L.jpg",
                        "height": 1375,
                        "width": 370
                      },
                      {
                        "variant": "EEGL",
                        "link": "https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg",
                        "height": 500,
                        "width": 135
                      },
                      {
                        "variant": "EGUS",
                        "link": "https://m.media-amazon.com/images/I/61i3dsKD09L.jpg",
                        "height": 1375,
                        "width": 370
                      },
                      {
                        "variant": "EGUS",
                        "link": "https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg",
                        "height": 500,
                        "width": 135
                      }
                    ]
                  }
                ],
                "productTypes": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "productType": "TELEVISION"
                  }
                ],
                "salesRanks": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "classificationRanks": [
                      {
                        "classificationId": "21489946011",
                        "title": "QLED TVs",
                        "link": "http://www.amazon.com/gp/bestsellers/electronics/21489946011",
                        "rank": 113
                      }
                    ],
                    "displayGroupRanks": [
                      {
                        "websiteDisplayGroup": "ce_display_on_website",
                        "title": "Electronics",
                        "link": "http://www.amazon.com/gp/bestsellers/electronics",
                        "rank": 72855
                      }
                    ]
                  }
                ],
                "summaries": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "brand": "SAMSUNG",
                    "browseClassification": {
                      "displayName": "QLED TVs",
                      "classificationId": "21489946011"
                    },
                    "color": "Black",
                    "itemClassification": "BASE_PRODUCT",
                    "itemName": "Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series (2019) Ultra HD Smart TV with HDR and Alexa Compatibility",
                    "manufacturer": "Samsung",
                    "modelNumber": "QN82Q60RAFXZA",
                    "packageQuantity": 1,
                    "partNumber": "QN82Q60RAFXZA",
                    "size": "82-Inch",
                    "style": "TV only",
                    "websiteDisplayGroup": "home_theater_display_on_website",
                    "websiteDisplayGroupName": "Home Theater"
                  }
                ],
                "relationships": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "relationships": [
                      {
                        "type": "VARIATION",
                        "parentAsins": [
                          "B08J7TQ9FL"
                        ],
                        "variationTheme": {
                          "attributes": [
                            "color",
                            "size"
                          ],
                          "theme": "SIZE_NAME/COLOR_NAME"
                        }
                      }
                    ]
                  }
                ],
                "vendorDetails": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "brandCode": "SAMF9",
                    "manufacturerCode": "SAMF9",
                    "manufacturerCodeParent": "SAMF9",
                    "productCategory": {
                      "displayName": "Televisions",
                      "value": "50400100"
                    },
                    "productGroup": "Home Entertainment",
                    "productSubcategory": {
                      "displayName": "Plasma TVs",
                      "value": "50400120"
                    },
                    "replenishmentCategory": "OBSOLETE"
                  }
                ]
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "B07N4M94X4"
                      },
                      "marketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      },
                      "includedData": {
                        "value": [
                          "classifications",
                          "dimensions",
                          "identifiers",
                          "images",
                          "productTypes",
                          "relationships",
                          "salesRanks",
                          "summaries",
                          "vendorDetails"
                        ]
                      }
                    }
                  },
                  "response": {
                    "asin": "B07N4M94X4",
                    "classifications": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "classifications": [
                          {
                            "displayName": "QLED TVs",
                            "classificationId": "21489946011",
                            "parent": {
                              "displayName": "Televisions",
                              "classificationId": "172659",
                              "parent": {
                                "displayName": "Television & Video",
                                "classificationId": "1266092011",
                                "parent": {
                                  "displayName": "Electronics",
                                  "classificationId": "172282"
                                }
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "dimensions": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "item": {
                          "height": {
                            "unit": "inches",
                            "value": 41.4
                          },
                          "length": {
                            "unit": "inches",
                            "value": 2.4
                          },
                          "weight": {
                            "unit": "pounds",
                            "value": 107.6
                          },
                          "width": {
                            "unit": "inches",
                            "value": 72.4
                          }
                        },
                        "package": {
                          "height": {
                            "unit": "inches",
                            "value": 10.49999998929
                          },
                          "length": {
                            "unit": "inches",
                            "value": 79.9999999184
                          },
                          "weight": {
                            "unit": "kilograms",
                            "value": 62.142
                          },
                          "width": {
                            "unit": "inches",
                            "value": 47.99999995104
                          }
                        }
                      }
                    ],
                    "identifiers": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "identifiers": [
                          {
                            "identifier": "0887276302195",
                            "identifierType": "EAN"
                          },
                          {
                            "identifier": "00887276302195",
                            "identifierType": "GTIN"
                          },
                          {
                            "identifier": "887276302195",
                            "identifierType": "UPC"
                          }
                        ]
                      }
                    ],
                    "images": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "images": [
                          {
                            "variant": "MAIN",
                            "link": "https://m.media-amazon.com/images/I/91uohwV+k3L.jpg",
                            "height": 1707,
                            "width": 2560
                          },
                          {
                            "variant": "MAIN",
                            "link": "https://m.media-amazon.com/images/I/51DZzp3w3vL.jpg",
                            "height": 333,
                            "width": 500
                          },
                          {
                            "variant": "PT01",
                            "link": "https://m.media-amazon.com/images/I/81w2rTVShlL.jpg",
                            "height": 2560,
                            "width": 2560
                          },
                          {
                            "variant": "PT01",
                            "link": "https://m.media-amazon.com/images/I/41Px9eq9tkL.jpg",
                            "height": 500,
                            "width": 500
                          },
                          {
                            "variant": "PT02",
                            "link": "https://m.media-amazon.com/images/I/51NTNhdhPyL.jpg",
                            "height": 375,
                            "width": 500
                          },
                          {
                            "variant": "PT03",
                            "link": "https://m.media-amazon.com/images/I/51o4zpL+A3L.jpg",
                            "height": 375,
                            "width": 500
                          },
                          {
                            "variant": "PT04",
                            "link": "https://m.media-amazon.com/images/I/71ux2k9GAZL.jpg",
                            "height": 1000,
                            "width": 1000
                          },
                          {
                            "variant": "PT04",
                            "link": "https://m.media-amazon.com/images/I/61UUX63yw1L.jpg",
                            "height": 500,
                            "width": 500
                          },
                          {
                            "variant": "PT05",
                            "link": "https://m.media-amazon.com/images/I/61LwHkljX-L.jpg",
                            "height": 1000,
                            "width": 1000
                          },
                          {
                            "variant": "PT05",
                            "link": "https://m.media-amazon.com/images/I/51wJTQty3PL.jpg",
                            "height": 500,
                            "width": 500
                          },
                          {
                            "variant": "PT06",
                            "link": "https://m.media-amazon.com/images/I/61uvoB4VvoL.jpg",
                            "height": 1000,
                            "width": 1000
                          },
                          {
                            "variant": "PT06",
                            "link": "https://m.media-amazon.com/images/I/51ZexIO628L.jpg",
                            "height": 500,
                            "width": 500
                          },
                          {
                            "variant": "PT07",
                            "link": "https://m.media-amazon.com/images/I/7121MGd2ncL.jpg",
                            "height": 1000,
                            "width": 1000
                          },
                          {
                            "variant": "PT07",
                            "link": "https://m.media-amazon.com/images/I/61QK+JBMrGL.jpg",
                            "height": 500,
                            "width": 500
                          },
                          {
                            "variant": "PT08",
                            "link": "https://m.media-amazon.com/images/I/61ECcGlG4IL.jpg",
                            "height": 1080,
                            "width": 1920
                          },
                          {
                            "variant": "PT08",
                            "link": "https://m.media-amazon.com/images/I/31TxwfqvB5L.jpg",
                            "height": 281,
                            "width": 500
                          },
                          {
                            "variant": "PT09",
                            "link": "https://m.media-amazon.com/images/I/41B5vgmp4IL.jpg",
                            "height": 375,
                            "width": 500
                          },
                          {
                            "variant": "PT10",
                            "link": "https://m.media-amazon.com/images/I/51S5IY3AV0L.jpg",
                            "height": 375,
                            "width": 500
                          },
                          {
                            "variant": "PT11",
                            "link": "https://m.media-amazon.com/images/I/41-6bmPtUlL.jpg",
                            "height": 375,
                            "width": 500
                          },
                          {
                            "variant": "PT12",
                            "link": "https://m.media-amazon.com/images/I/41s9Q6gWJ7L.jpg",
                            "height": 448,
                            "width": 500
                          },
                          {
                            "variant": "PT13",
                            "link": "https://m.media-amazon.com/images/I/519nG0mRzuL.jpg",
                            "height": 314,
                            "width": 500
                          },
                          {
                            "variant": "PT14",
                            "link": "https://m.media-amazon.com/images/I/71sHhrGMc7L.jpg",
                            "height": 1097,
                            "width": 1500
                          },
                          {
                            "variant": "PT14",
                            "link": "https://m.media-amazon.com/images/I/41CH6gKtU5L.jpg",
                            "height": 366,
                            "width": 500
                          },
                          {
                            "variant": "PT15",
                            "link": "https://m.media-amazon.com/images/I/21-s7QYrTxL.jpg",
                            "height": 500,
                            "width": 175
                          },
                          {
                            "variant": "EEGL",
                            "link": "https://m.media-amazon.com/images/I/61i3dsKD09L.jpg",
                            "height": 1375,
                            "width": 370
                          },
                          {
                            "variant": "EEGL",
                            "link": "https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg",
                            "height": 500,
                            "width": 135
                          },
                          {
                            "variant": "EGUS",
                            "link": "https://m.media-amazon.com/images/I/61i3dsKD09L.jpg",
                            "height": 1375,
                            "width": 370
                          },
                          {
                            "variant": "EGUS",
                            "link": "https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg",
                            "height": 500,
                            "width": 135
                          }
                        ]
                      }
                    ],
                    "productTypes": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "productType": "TELEVISION"
                      }
                    ],
                    "salesRanks": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "classificationRanks": [
                          {
                            "classificationId": "21489946011",
                            "title": "QLED TVs",
                            "link": "http://www.amazon.com/gp/bestsellers/electronics/21489946011",
                            "rank": 113
                          }
                        ],
                        "displayGroupRanks": [
                          {
                            "websiteDisplayGroup": "ce_display_on_website",
                            "title": "Electronics",
                            "link": "http://www.amazon.com/gp/bestsellers/electronics",
                            "rank": 72855
                          }
                        ]
                      }
                    ],
                    "summaries": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "brand": "SAMSUNG",
                        "browseClassification": {
                          "displayName": "QLED TVs",
                          "classificationId": "21489946011"
                        },
                        "color": "Black",
                        "itemClassification": "BASE_PRODUCT",
                        "itemName": "Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series (2019) Ultra HD Smart TV with HDR and Alexa Compatibility",
                        "manufacturer": "Samsung",
                        "modelNumber": "QN82Q60RAFXZA",
                        "packageQuantity": 1,
                        "partNumber": "QN82Q60RAFXZA",
                        "size": "82-Inch",
                        "style": "TV only",
                        "websiteDisplayGroup": "home_theater_display_on_website",
                        "websiteDisplayGroupName": "Home Theater"
                      }
                    ],
                    "relationships": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "relationships": [
                          {
                            "type": "VARIATION",
                            "parentAsins": [
                              "B08J7TQ9FL"
                            ],
                            "variationTheme": {
                              "attributes": [
                                "color",
                                "size"
                              ],
                              "theme": "SIZE_NAME/COLOR_NAME"
                            }
                          }
                        ]
                      }
                    ],
                    "vendorDetails": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "brandCode": "SAMF9",
                        "manufacturerCode": "SAMF9",
                        "manufacturerCodeParent": "SAMF9",
                        "productCategory": {
                          "displayName": "Televisions",
                          "value": "50400100"
                        },
                        "productGroup": "Home Entertainment",
                        "productSubcategory": {
                          "displayName": "Plasma TVs",
                          "value": "50400120"
                        },
                        "replenishmentCategory": "OBSOLETE"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "summary": "getCatalogItem"
      }
    },
    "/dataKiosk/2023-11-15/queries": {
      "get": {
        "tags": [
          "queries"
        ],
        "operationId": "getQueries",
        "description": "Returns details for the Data Kiosk queries that match the specified filters. See the `createQuery` operation for details about query retention.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0222 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "processingStatuses",
            "in": "query",
            "description": "A list of processing statuses used to filter queries.",
            "required": false,
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "CANCELLED",
                "DONE",
                "FATAL",
                "IN_PROGRESS",
                "IN_QUEUE"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "CANCELLED",
                  "description": "The query was cancelled before it began processing."
                },
                {
                  "value": "DONE",
                  "description": "The query has completed processing."
                },
                {
                  "value": "FATAL",
                  "description": "The query was aborted due to a fatal error."
                },
                {
                  "value": "IN_PROGRESS",
                  "description": "The query is being processed."
                },
                {
                  "value": "IN_QUEUE",
                  "description": "The query has not yet started processing. It may be waiting for another `IN_PROGRESS` query."
                }
              ]
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of queries to return in a single call.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 10
          },
          {
            "name": "createdSince",
            "in": "query",
            "description": "The earliest query creation date and time for queries to include in the response, in ISO 8601 date time format. The default is 90 days ago.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdUntil",
            "in": "query",
            "description": "The latest query creation date and time for queries to include in the response, in ISO 8601 date time format. The default is the time of the `getQueries` request.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "paginationToken",
            "in": "query",
            "description": "A token to fetch a certain page of results when there are multiple pages of results available. The value of this token is fetched from the `pagination.nextToken` field returned in the `GetQueriesResponse` object. All other parameters must be provided with the same values that were provided with the request that generated this token, with the exception of `pageSize` which can be modified between calls to `getQueries`. In the absence of this token value, `getQueries` returns the first page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetQueriesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "pageSize": {
                        "value": 1
                      },
                      "processingStatuses": {
                        "value": [
                          "DONE",
                          "IN_PROGRESS"
                        ]
                      }
                    }
                  },
                  "response": {
                    "pagination": {
                      "nextToken": "NextToken1"
                    },
                    "queries": [
                      {
                        "queryId": "QueryId1",
                        "query": "query {sampleQuery(startDate:\"2023-03-01\" endDate:\"2023-03-31\" marketplaceIds:[\"ATVPDKIKX0DER\"]){sales{date averageSellingPrice{amount currencyCode}}}}",
                        "createdTime": "2023-12-11T13:47:20.677Z",
                        "processingStatus": "DONE",
                        "processingStartTime": "2023-12-11T13:47:20.677Z",
                        "processingEndTime": "2023-12-11T14:47:20.677Z",
                        "dataDocumentId": "DocumentId1"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "pageSize": {
                        "value": 1
                      },
                      "processingStatuses": {
                        "value": [
                          "DONE",
                          "IN_PROGRESS"
                        ]
                      },
                      "paginationToken": {
                        "value": "NextToken1"
                      }
                    }
                  },
                  "response": {
                    "queries": [
                      {
                        "queryId": "QueryId2",
                        "query": "query {sampleQuery(startDate:\"2023-04-01\" endDate:\"2023-04-30\" marketplaceIds:[\"ATVPDKIKX0DER\"]){sales{date averageSellingPrice{amount currencyCode}}}}",
                        "createdTime": "2023-12-12T13:47:20.677Z",
                        "processingStatus": "IN_PROGRESS",
                        "processingStartTime": "2023-12-12T13:47:20.677Z"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "processingStatuses": {
                        "value": [
                          "INVALID_STATUS"
                        ]
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "1 validation error detected: Value '[INVALID_STATUS]' at 'processingStatuses' failed to satisfy constraint: Member must satisfy constraint: [Member must satisfy enum value set: [DONE, FATAL, IN_PROGRESS, CANCELLED, IN_QUEUE]]",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "queries"
        ],
        "operationId": "createQuery",
        "description": "Creates a Data Kiosk query request.\n\n**Note:** The retention of a query varies based on the fields requested. Each field within a schema is annotated with a `@resultRetention` directive that defines how long a query containing that field will be retained. When a query contains multiple fields with different retentions, the shortest (minimum) retention is applied. The retention of a query's resulting documents always matches the retention of the query.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0167 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The body of the request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateQuerySpecification"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateQueryResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "query": "query {sampleQuery(startDate:\"2023-03-01\" endDate:\"2023-03-31\" marketplaceIds:[\"ATVPDKIKX0DER\"]){sales{date averageSellingPrice{amount currencyCode}}}}"
                        }
                      }
                    }
                  },
                  "response": {
                    "queryId": "QueryId1"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "query": "query {invalidSampleQuery(startDate:\"2023-03-01\" endDate:\"2023-03-31\" marketplaceIds:[\"ATVPDKIKX0DER\"]){sales{date averageSellingPrice{amount currencyCode}}}}"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "The provided query is invalid.",
                        "details": "Query 'invalidSampleQuery' is not supported."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/dataKiosk/2023-11-15/queries/{queryId}": {
      "delete": {
        "tags": [
          "queries"
        ],
        "operationId": "cancelQuery",
        "description": "Cancels the query specified by the `queryId` parameter. Only queries with a non-terminal `processingStatus` (`IN_QUEUE`, `IN_PROGRESS`) can be cancelled. Cancelling a query that already has a `processingStatus` of `CANCELLED` will no-op. Cancelled queries are returned in subsequent calls to the `getQuery` and `getQueries` operations.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0222 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "description": "The identifier for the query. This identifier is unique only in combination with a selling partner account ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "queryId": {
                        "value": "QueryId1"
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "queryId": {
                        "value": "InvalidQueryId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "queryId": {
                        "value": "NotFoundQueryId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "The provided queryId was not found."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "queries"
        ],
        "operationId": "getQuery",
        "description": "Returns query details for the query specified by the `queryId` parameter. See the `createQuery` operation for details about query retention.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2.0 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "required": true,
            "description": "The query identifier.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Query"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "queryId": {
                        "value": "QueryId1"
                      }
                    }
                  },
                  "response": {
                    "queryId": "QueryId1",
                    "query": "query {sampleQuery(startDate:\"2023-03-01\" endDate:\"2023-03-31\" marketplaceIds:[\"ATVPDKIKX0DER\"]){sales{date averageSellingPrice{amount currencyCode}}}}",
                    "createdTime": "2023-12-11T13:47:20.677Z",
                    "processingStatus": "DONE",
                    "processingStartTime": "2023-12-11T13:47:20.677Z",
                    "processingEndTime": "2023-12-11T14:47:20.677Z",
                    "dataDocumentId": "DocumentId1"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "queryId": {
                        "value": "InvalidQueryId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "queryId": {
                        "value": "NotFoundQueryId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "The provided queryId was not found."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/dataKiosk/2023-11-15/documents/{documentId}": {
      "get": {
        "tags": [
          "queries"
        ],
        "description": "Returns the information required for retrieving a Data Kiosk document's contents. See the `createQuery` operation for details about document retention.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0167 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "The identifier for the Data Kiosk document.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetDocumentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "documentId": {
                        "value": "DocumentId1"
                      }
                    }
                  },
                  "response": {
                    "documentId": "DocumentId1",
                    "documentUrl": "https://d34o8swod1owfl.cloudfront.net/QUERY_DATA_OUTPUT_DOC.txt"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "documentId": {
                        "value": "InvalidDocumentId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "documentId": {
                        "value": "NotFoundDocumentId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "The provided documentId was not found."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/easyShip/2022-03-23/timeSlot": {
      "post": {
        "tags": [
          "easyShip"
        ],
        "description": "Returns time slots available for Easy Ship orders to be scheduled based on the package weight and dimensions that the seller specifies.\n\nThis operation is available for scheduled and unscheduled orders based on marketplace support. See **Get Time Slots** in the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table).\n\nThis operation can return time slots that have either pickup or drop-off handover methods - see **Supported Handover Methods** in the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listHandoverSlots",
        "parameters": [
          {
            "name": "ListHandoverSlotsRequest",
            "description": "The request schema for the `listHandoverSlots` operation.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ListHandoverSlotsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "amazonOrderId": "931-2308757-7991048",
                        "marketplaceId": "A21TJRUUN4KGV",
                        "packageDimensions": {
                          "length": 15,
                          "width": 10,
                          "height": 12,
                          "unit": "Cm",
                          "identifier": "test"
                        },
                        "packageWeight": {
                          "value": 50,
                          "unit": "G"
                        }
                      }
                    }
                  },
                  "response": {
                    "amazonOrderId": "931-2308757-7991048",
                    "timeSlots": [
                      {
                        "handoverMethod": "Pickup",
                        "slotId": "AQc48yxSAAAAADZG0qQAAAAA6kkAAAAAAAA=",
                        "startTime": "2022-03-09T23:30:00Z",
                        "endTime": "2022-03-10T02:00:00Z"
                      },
                      {
                        "handoverMethod": "Pickup",
                        "slotId": "AQef4K2CAAAAAGdIAEAAAAAA6kkAAAAAAAA=",
                        "startTime": "2022-03-10T02:00:00Z",
                        "endTime": "2022-03-10T04:30:00Z"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ListHandoverSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "amazonOrderId": "",
                          "marketplaceId": "A21TJRUUN4KGV",
                          "packageDimensions": {
                            "length": 15,
                            "width": 10,
                            "height": 12,
                            "unit": "Cm"
                          },
                          "packageWeight": {
                            "value": 50,
                            "unit": "G"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Request has missing or invalid parameters and cannot be parsed.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "amazonOrderId": "931-2308757-7991048",
                          "marketplaceId": "",
                          "packageDimensions": {
                            "length": 15,
                            "width": 10,
                            "height": 12,
                            "unit": "Cm"
                          },
                          "packageWeight": {
                            "value": 50,
                            "unit": "G"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ResourceNotFound",
                        "message": "The specified resource (for example, `AmazonOrderId` or `MarketplaceId`) does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/easyShip/2022-03-23/package": {
      "get": {
        "tags": [
          "easyShip"
        ],
        "description": "Returns information about a package, including dimensions, weight, time slot information for handover, invoice and item information, and status.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getScheduledPackage",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "An Amazon-defined order identifier. Identifies the order that the seller wants to deliver using Amazon Easy Ship."
          },
          {
            "name": "marketplaceId",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "An identifier for the marketplace in which the seller is selling."
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "903-1713775-3598252"
                      },
                      "marketplaceId": {
                        "value": "A21TJRUUN4KGV"
                      }
                    }
                  },
                  "response": {
                    "scheduledPackageId": {
                      "amazonOrderId": "903-1713775-3598252",
                      "packageId": "1ab0f06a-9149-87e0-aba9-7098117872d6"
                    },
                    "packageDimensions": {
                      "length": 12,
                      "width": 12,
                      "height": 12,
                      "unit": "Cm"
                    },
                    "packageWeight": {
                      "value": 23,
                      "unit": "G"
                    },
                    "packageTimeSlot": {
                      "slotId": "AQc48yxSAAAAADZG0qQAAAAA6kkAAAAAAAA=",
                      "startTime": "2022-03-09T23:30:00Z",
                      "endTime": "2022-03-10T02:00:00Z"
                    },
                    "packageStatus": "Scheduled"
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/Package"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "903-1713775-1111111"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ResourceNotFound",
                        "message": "The specified resource (for example, `AmazonOrderId` or `MarketplaceId`) does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "easyShip"
        ],
        "description": "Schedules an Easy Ship order and returns the scheduled package information.\n\nThis operation does the following:\n\n*  Specifies the time slot and handover method for the order to be scheduled for delivery.\n\n* Updates the Easy Ship order status.\n\n* Generates a shipping label and an invoice. Calling `createScheduledPackage` also generates a warranty document if you specify a `SerialNumber` value. To get these documents, see [How to get invoice, shipping label, and warranty documents](doc:easyship-api-v2022-03-23-use-case-guide).\n\n* Shows the status of Easy Ship orders when you call the `getOrders` operation of the Selling Partner API for Orders and examine the `EasyShipShipmentStatus` property in the response body.\n\nSee the **Shipping Label**, **Invoice**, and **Warranty** columns in the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table) to see which documents are supported in each marketplace.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createScheduledPackage",
        "parameters": [
          {
            "name": "CreateScheduledPackageRequest",
            "description": "The request schema for the `createScheduledPackage` operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateScheduledPackageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "amazonOrderId": "903-1713775-3598252",
                        "marketplaceId": "A21TJRUUN4KGV",
                        "packageDetails": {
                          "packageDimensions": {
                            "length": 12,
                            "width": 12,
                            "height": 12,
                            "unit": "Cm"
                          },
                          "packageWeight": {
                            "value": 23,
                            "unit": "G"
                          },
                          "packageTimeSlot": {
                            "slotId": "AQc48yxSAAAAADZG0qQAAAAA6kkAAAAAAAA=",
                            "startTime": "2022-03-09T23:30:00Z",
                            "endTime": "2022-03-10T02:00:00Z"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "scheduledPackageId": {
                      "amazonOrderId": "903-1713775-3598252",
                      "packageId": "1ab0f06a-9149-87e0-aba9-7098117872d6"
                    },
                    "packageDimensions": {
                      "length": 12,
                      "width": 12,
                      "height": 12,
                      "unit": "Cm"
                    },
                    "packageWeight": {
                      "value": 23,
                      "unit": "G"
                    },
                    "packageTimeSlot": {
                      "slotId": "AQc48yxSAAAAADZG0qQAAAAA6kkAAAAAAAA=",
                      "startTime": "2022-03-09T23:30:00Z",
                      "endTime": "2022-03-10T02:00:00Z"
                    },
                    "packageStatus": "ReadyForPickup"
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/Package"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "amazonOrderId": "903-1713775-3598252",
                          "packageDetails": {
                            "packageTimeSlot": {
                              "slotId": "",
                              "startTime": "2022-03-09T23:30:00Z",
                              "endTime": "2022-03-10T02:00:00Z"
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Request has missing or invalid parameters and cannot be parsed."
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "amazonOrderId": "",
                          "packageDetails": {
                            "packageTimeSlot": {
                              "slotId": "AQc48yxSAAAAADZG0qQAAAAA6kkAAAAAAAA=",
                              "startTime": "2022-03-09T23:30:00Z",
                              "endTime": "2022-03-10T02:00:00Z"
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ResourceNotFound",
                        "message": "The specified resource (for example, `AmazonOrderId` or `MarketplaceId`) does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "easyShip"
        ],
        "description": "Updates the time slot for handing over the package indicated by the specified `scheduledPackageId`. You can get the new `slotId` value for the time slot by calling the `listHandoverSlots` operation before making another `patch` call.\n\nSee the **Update Package** column in the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table) to see which marketplaces this operation is supported in.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateScheduledPackages",
        "parameters": [
          {
            "name": "UpdateScheduledPackagesRequest",
            "description": "The request schema for the `updateScheduledPackages` operation.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateScheduledPackagesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "marketplaceId": "A21TJRUUN4KGV",
                        "updatePackageDetailsList": [
                          {
                            "scheduledPackageId": {
                              "amazonOrderId": "903-1713775-3598252",
                              "packageId": "1ab0f06a-9149-87e0-aba9-7098117872d6"
                            },
                            "packageTimeSlot": {
                              "slotId": "AQc48yxSAAAAADZG0qQAAAAA6kkAAAAAAAA=",
                              "startTime": "2022-03-09T23:30:00Z",
                              "endTime": "2022-03-10T02:00:00Z"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "response": {
                    "packages": [
                      {
                        "scheduledPackageId": {
                          "amazonOrderId": "903-1713775-3598252",
                          "packageId": "1ab0f06a-9149-87e0-aba9-7098117872d6"
                        },
                        "packageDimensions": {
                          "length": 12,
                          "width": 12,
                          "height": 12,
                          "unit": "Cm"
                        },
                        "packageWeight": {
                          "value": 23,
                          "unit": "G"
                        },
                        "packageTimeSlot": {
                          "slotId": "AQc48yxSAAAAADZG0qQAAAAA6kkAAAAAAAA=",
                          "startTime": "2022-03-09T23:30:00Z",
                          "endTime": "2022-03-10T02:00:00Z"
                        },
                        "packageIdentifier": "Scheduled",
                        "packageStatus": "ReadyForPickup"
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/Packages"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "",
                          "updatePackageDetailsList": [
                            {
                              "scheduledPackageId": {
                                "amazonOrderId": "903-1713775-3598252",
                                "packageId": "1ab0f06a-9149-87e0-aba9-7098117872d6"
                              },
                              "packageTimeSlot": {
                                "slotId": "",
                                "startTime": "2022-03-09T23:30:00Z",
                                "endTime": "2022-03-10T02:00:00Z"
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Request has missing or invalid parameters and cannot be parsed."
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "A21TJRUUN4KGV",
                          "updatePackageDetailsList": [
                            {
                              "scheduledPackageId": {
                                "amazonOrderId": "",
                                "packageId": "1ab0f06a-9149-87e0-aba9-7098117872d6"
                              },
                              "packageTimeSlot": {
                                "slotId": "AQc48yxSAAAAADZG0qQAAAAA6kkAAAAAAAA=",
                                "startTime": "2022-03-09T23:30:00Z",
                                "endTime": "2022-03-10T02:00:00Z"
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ResourceNotFound",
                        "message": "The specified resource (for example, `AmazonOrderId` or `MarketplaceId`) does not exist."
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "A21TJRUUN4KGV",
                          "updatePackageDetailsList": [
                            {
                              "scheduledPackageId": {
                                "amazonOrderId": "905-1713775-3598252",
                                "packageId": "1ab0f06a-9149-87e0-aba9-7098117872d6"
                              },
                              "packageTimeSlot": {
                                "slotId": "AQc48yxSAAAAADZG0qQAAAAA6kkAAAAAAAA=",
                                "startTime": "2022-03-09T23:30:00Z",
                                "endTime": "2022-03-10T02:00:00Z"
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ScheduleWindowExpired",
                        "message": "The selected time slot has expired."
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/easyShip/2022-03-23/packages/bulk": {
      "post": {
        "tags": [
          "easyShip"
        ],
        "description": "This operation automatically schedules a time slot for all the `amazonOrderId`s given as input, generating the associated shipping labels, along with other compliance documents according to the marketplace (refer to the [marketplace document support table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table)).\n\nDevelopers calling this operation may optionally assign a `packageDetails` object, allowing them to input a preferred time slot for each order in ther request. In this case, Amazon will try to schedule the respective packages using their optional settings. On the other hand, *i.e.*, if the time slot is not provided, Amazon will then pick the earliest time slot possible. \n\nRegarding the shipping label's file format, external developers are able to choose between PDF or ZPL, and Amazon will create the label accordingly.\n\nThis operation returns an array composed of the scheduled packages, and a short-lived URL pointing to a zip file containing the generated shipping labels and the other documents enabled for your marketplace. If at least an order couldn't be scheduled, then Amazon adds the `rejectedOrders` list into the response, which contains an entry for each order we couldn't process. Each entry is composed of an error message describing the reason of the failure, so that sellers can take action.\n\nThe table below displays the supported request and burst maximum rates:\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createScheduledPackageBulk",
        "parameters": [
          {
            "name": "CreateScheduledPackagesRequest",
            "description": "The request schema for the `createScheduledPackageBulk` operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateScheduledPackagesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "A2XZLSVIQ0F4JT",
                          "orderScheduleDetailsList": [
                            {
                              "amazonOrderId": "903-1713775-3598252",
                              "packageDetails": {
                                "packageItems": [
                                  {
                                    "orderItemId": "6195931986885",
                                    "orderItemSerialNumbers": [
                                      "ABCDE1234",
                                      "56789FGHI"
                                    ]
                                  }
                                ],
                                "packageTimeSlot": {
                                  "slotId": "AQc48yxSAAAAADZG0qQAAAAA6kkAAAAAAAA=",
                                  "startTime": "2022-03-09T23:30:00Z",
                                  "endTime": "2022-03-10T02:00:00Z",
                                  "handoverMethod": "Pickup"
                                },
                                "packageIdentifier": "1ab0f06a-9149-87e0-aba9-7098117872d6"
                              }
                            },
                            {
                              "amazonOrderId": "903-5645781-4567521"
                            },
                            {
                              "amazonOrderId": "951-9026094-1233333"
                            }
                          ],
                          "labelFormat": "ZPL"
                        }
                      }
                    }
                  },
                  "response": {
                    "scheduledPackages": [
                      {
                        "scheduledPackageId": {
                          "amazonOrderId": "903-1713775-3598252",
                          "packageId": "1ab0f06a-9149-87e0-aba9-7098117872d6"
                        },
                        "packageTimeSlot": {
                          "startTime": "2022-03-09T23:30:00Z",
                          "endTime": "2022-03-10T02:00:00Z"
                        },
                        "packageDimensions": {
                          "length": 5.905511805,
                          "width": 3.6220472404,
                          "height": 3.4645669256,
                          "unit": "IN",
                          "identifier": "IN_SuggestedContainerDimension"
                        },
                        "packageWeight": {
                          "value": 11.466,
                          "unit": "ounces"
                        },
                        "packageStatus": "ReadyForPickup",
                        "trackingDetails": {
                          "trackingId": "1652969339691"
                        }
                      },
                      {
                        "scheduledPackageId": {
                          "amazonOrderId": "903-5645781-4567521",
                          "packageId": "80c06e53-3d96-f13f-30ca-85b50b1cb4ce"
                        },
                        "packageTimeSlot": {
                          "startTime": "2022-05-21T06:08:52.036Z",
                          "endTime": "2022-05-21T10:08:52.036Z"
                        },
                        "packageDimensions": {
                          "length": 5.905511805,
                          "width": 3.6220472404,
                          "height": 3.4645669256,
                          "unit": "IN",
                          "identifier": "IN_SuggestedContainerDimension"
                        },
                        "packageWeight": {
                          "value": 11.466,
                          "unit": "ounces"
                        },
                        "packageStatus": "ReadyForPickup",
                        "trackingDetails": {
                          "trackingId": "1652969339693"
                        }
                      }
                    ],
                    "rejectedOrders": [
                      {
                        "amazonOrderId": "951-9026094-1233333",
                        "error": {
                          "code": "InvalidInput",
                          "message": "Couldn't find the order details for 951-9026094-1233333"
                        }
                      }
                    ],
                    "printableDocumentsUrl": "https://www.amazon.com/documents.zip"
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/CreateScheduledPackagesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "A2XZLSVIQ0F4JT",
                          "labelFormat": "ZPL"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Request has missing or invalid parameters and cannot be parsed."
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "an-invalid-marketplace-id",
                          "orderScheduleDetailsList": [
                            {
                              "amazonOrderId": "903-1713775-3598200"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Request has missing or invalid parameters and cannot be parsed."
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v1/eligibility/itemPreview": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "This operation gets an eligibility preview for an item that you specify. You can specify the type of eligibility preview that you want (INBOUND or COMMINGLING). For INBOUND previews, you can specify the marketplace in which you want to determine the item's eligibility.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getItemEligibilityPreview",
        "parameters": [
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "The identifier for the marketplace in which you want to determine eligibility. Required only when program=INBOUND.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "name": "asin",
            "in": "query",
            "description": "The ASIN of the item for which you want an eligibility preview.",
            "required": true,
            "type": "string"
          },
          {
            "name": "program",
            "in": "query",
            "description": "The program that you want to check eligibility against.",
            "required": true,
            "type": "string",
            "enum": [
              "INBOUND",
              "COMMINGLING"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetItemEligibilityPreviewResponse"
            },
            "examples": {
              "ItemEligibilityPreview": {
                "payload": {
                  "asin": "TEST_ASIN",
                  "marketplaceId": "TEST_MARKETPLACE_ID",
                  "program": "INBOUND",
                  "isEligibleForProgram": true
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "TEST_CASE_200"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "asin": "TEST_CASE_200",
                      "marketplaceId": "TEST_CASE_200",
                      "program": "INBOUND",
                      "isEligibleForProgram": true
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetItemEligibilityPreviewResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid input."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetItemEligibilityPreviewResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "TEST_CASE_401"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Unauthorized",
                        "message": "Access to requested resource is denied."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found.",
            "schema": {
              "$ref": "#/definitions/GetItemEligibilityPreviewResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "TEST_CASE_403"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Unauthorized",
                        "message": "Access to requested resource is denied."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetItemEligibilityPreviewResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "TEST_CASE_404"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "NotFound",
                        "message": "The requested resource doesn't exist."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetItemEligibilityPreviewResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "TEST_CASE_429"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "QuotaExceeded",
                        "message": "You exceeded your quota for the requested resource."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetItemEligibilityPreviewResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "TEST_CASE_500"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InternalFailure",
                        "message": "We encountered an internal error. Please try again."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetItemEligibilityPreviewResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "TEST_CASE_503"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "ServiceUnavailable",
                        "message": "Service is temporarily unavailable. Please try again."
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/fba/inventory/v1/summaries": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "get": {
        "tags": [
          "fbaInventory"
        ],
        "description": "Returns a list of inventory summaries. The summaries returned depend on the presence or absence of the startDateTime, sellerSkus and sellerSku parameters:\n\n- All inventory summaries with available details are returned when the startDateTime, sellerSkus and sellerSku parameters are omitted.\n- When startDateTime is provided, the operation returns inventory summaries that have had changes after the date and time specified. The sellerSkus and sellerSku parameters are ignored. Important: To avoid errors, use both startDateTime and nextToken to get the next page of inventory summaries that have changed after the date and time specified.\n- When the sellerSkus parameter is provided, the operation returns inventory summaries for only the specified sellerSkus. The sellerSku parameter is ignored.\n- When the sellerSku parameter is provided, the operation returns inventory summaries for only the specified sellerSku.\n\nNote: The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\nUsage Plan:\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).",
        "operationId": "getInventorySummaries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "details",
            "in": "query",
            "description": "true to return inventory summaries with additional summarized inventory details and quantities. Otherwise, returns inventory summaries only (default value).",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "granularityType",
            "in": "query",
            "description": "The granularity type for the inventory aggregation level.",
            "required": true,
            "type": "string",
            "enum": [
              "Marketplace"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "Marketplace",
                "description": "Marketplace"
              }
            ]
          },
          {
            "name": "granularityId",
            "in": "query",
            "description": "The granularity ID for the inventory aggregation level.",
            "required": true,
            "type": "string"
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "A start date and time in ISO8601 format. If specified, all inventory summaries that have changed since then are returned. You must specify a date and time that is no earlier than 18 months prior to the date and time when you call the API. Note: Changes in inboundWorkingQuantity, inboundShippedQuantity and inboundReceivingQuantity are not detected.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sellerSkus",
            "in": "query",
            "description": "A list of seller SKUs for which to return inventory summaries. You may specify up to 50 SKUs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 50
          },
          {
            "name": "sellerSku",
            "in": "query",
            "description": "A single seller SKU used for querying the specified seller SKU inventory summaries.",
            "required": false,
            "type": "string"
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "String token returned in the response of your previous request. The string token will expire 30 seconds after being created.",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "The marketplace ID for the marketplace for which to return inventory summaries.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetInventorySummariesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetInventorySummariesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found.",
            "schema": {
              "$ref": "#/definitions/GetInventorySummariesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetInventorySummariesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetInventorySummariesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetInventorySummariesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetInventorySummariesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inventory/v1/items": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "x-amzn-api-sandbox-only": true,
      "post": {
        "tags": [
          "fbaInventory"
        ],
        "description": "Requests that Amazon create product-details in the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.",
        "operationId": "createInventoryItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createInventoryItemRequestBody",
            "in": "body",
            "description": "CreateInventoryItem Request Body Parameter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateInventoryItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found.",
            "schema": {
              "$ref": "#/definitions/CreateInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inventory/v1/items/{sellerSku}": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "x-amzn-api-sandbox-only": true,
      "delete": {
        "tags": [
          "fbaInventory"
        ],
        "description": "Requests that Amazon Deletes an item from the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.",
        "operationId": "deleteInventoryItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sellerSku",
            "in": "path",
            "description": "A single seller SKU used for querying the specified seller SKU inventory summaries.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The marketplace ID for the marketplace for which the sellerSku is to be deleted.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/DeleteInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found.",
            "schema": {
              "$ref": "#/definitions/DeleteInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/DeleteInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/DeleteInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/DeleteInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/DeleteInventoryItemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inventory/v1/items/inventory": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "x-amzn-api-sandbox-only": true,
      "post": {
        "tags": [
          "fbaInventory"
        ],
        "description": "Requests that Amazon add items to the Sandbox Inventory with desired amount of quantity in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.",
        "operationId": "addInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-amzn-idempotency-token",
            "in": "header",
            "description": "A unique token/requestId provided with each call to ensure idempotency.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addInventoryRequestBody",
            "in": "body",
            "description": "List of items to add to Sandbox inventory.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddInventoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/AddInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found.",
            "schema": {
              "$ref": "#/definitions/AddInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/AddInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/AddInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/AddInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/AddInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/feeds/2021-06-30/feeds": {
      "get": {
        "tags": [
          "Feeds"
        ],
        "description": "Returns feed details for the feeds that match the filters that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0222 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getFeeds",
        "parameters": [
          {
            "name": "feedTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "description": "A list of feed types used to filter feeds. When feedTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either feedTypes or nextToken is required.",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "marketplaceIds",
            "description": "A list of marketplace identifiers used to filter feeds. The feeds returned will match at least one of the marketplaces that you specify.",
            "in": "query",
            "required": false,
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of feeds to return in a single call.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 10
          },
          {
            "name": "processingStatuses",
            "in": "query",
            "description": "A list of processing statuses used to filter feeds.",
            "required": false,
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "CANCELLED",
                "DONE",
                "FATAL",
                "IN_PROGRESS",
                "IN_QUEUE"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "CANCELLED",
                  "description": "The feed was cancelled before it started processing."
                },
                {
                  "value": "DONE",
                  "description": "The feed has completed processing. Examine the contents of the result document to determine if there were any errors during processing."
                },
                {
                  "value": "FATAL",
                  "description": "The feed was aborted due to a fatal error. Some, none, or all of the operations within the feed may have completed successfully."
                },
                {
                  "value": "IN_PROGRESS",
                  "description": "The feed is being processed."
                },
                {
                  "value": "IN_QUEUE",
                  "description": "The feed has not yet started processing. It may be waiting for another IN_PROGRESS feed."
                }
              ]
            }
          },
          {
            "name": "createdSince",
            "in": "query",
            "description": "The earliest feed creation date and time for feeds included in the response, in ISO 8601 format. The default is 90 days ago. Feeds are retained for a maximum of 90 days.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdUntil",
            "in": "query",
            "description": "The latest feed creation date and time for feeds included in the response, in ISO 8601 format. The default is now.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getFeeds operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetFeedsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "feedTypes": {
                        "value": [
                          "POST_PRODUCT_DATA"
                        ]
                      },
                      "pageSize": {
                        "value": 10
                      },
                      "processingStatuses": {
                        "value": [
                          "CANCELLED",
                          "DONE"
                        ]
                      }
                    }
                  },
                  "response": {
                    "feeds": [
                      {
                        "feedId": "FeedId1",
                        "feedType": "POST_PRODUCT_DATA",
                        "createdTime": "2024-03-11T13:16:24.630Z",
                        "processingStatus": "CANCELLED",
                        "processingStartTime": "2024-03-11T13:16:24.630Z",
                        "processingEndTime": "2024-03-11T13:16:24.630Z"
                      }
                    ],
                    "nextToken": "VGhpcyB0b2tlbiBpcyBvcGFxdWUgYW5kIGludGVudGlvbmFsbHkgb2JmdXNjYXRlZA=="
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "feedTypes": {
                        "value": [
                          "POST_PRODUCT_DATA"
                        ]
                      },
                      "processingStatuses": {
                        "value": [
                          "BAD_VALUE",
                          "DONE"
                        ]
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Dates were not provided"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getFeeds"
      },
      "post": {
        "tags": [
          "Feeds"
        ],
        "description": "Creates a feed. Upload the contents of the feed document before calling this operation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0083 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).\n\nThe rate limit for the [`JSON_LISTINGS_FEED`](https://developer-docs.amazon.com/sp-api/docs/listings-feed-type-values#listings-feed) feed type differs from the rate limit for the [`createFeed`](https://developer-docs.amazon.com/sp-api/docs/feeds-api-v2021-06-30-reference#post-feeds2021-06-30feeds) operation. For more information, refer to the [Building Listings Management Workflows Guide](https://developer-docs.amazon.com/sp-api/docs/building-listings-management-workflows-guide#should-i-submit-in-bulk-using-the-json_listings_feed-or-individually-with-the-listings-items-api).",
        "operationId": "createFeed",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFeedSpecification"
            },
            "description": "Information required to create the feed."
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateFeedResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "feedType": "POST_PRODUCT_DATA",
                          "marketplaceIds": [
                            "ATVPDKIKX0DER",
                            "A1F83G8C2ARO7P"
                          ],
                          "inputFeedDocumentId": "3d4e42b5-1d6e-44e8-a89c-2abfca0625bb"
                        }
                      }
                    }
                  },
                  "response": {
                    "feedId": "3485934"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceIds": [
                            "ATVPDKIKX0DER",
                            "A1F83G8C2ARO7P"
                          ],
                          "inputFeedDocumentId": "badDocumentId"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "createFeed"
      },
      "parameters": []
    },
    "/feeds/2021-06-30/feeds/{feedId}": {
      "delete": {
        "tags": [
          "Feeds"
        ],
        "description": "Cancels the feed that you specify. Only feeds with `processingStatus=IN_QUEUE` can be cancelled. Cancelled feeds are returned in subsequent calls to the [`getFeed`](https://developer-docs.amazon.com/sp-api/docs/feeds-api-v2021-06-30-reference#getfeed) and [`getFeeds`](https://developer-docs.amazon.com/sp-api/docs/feeds-api-v2021-06-30-reference#getfeeds) operations.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "cancelFeed",
        "parameters": [
          {
            "name": "feedId",
            "in": "path",
            "description": "The identifier for the feed. This identifier is unique only in combination with a seller ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "feedId": {
                        "value": "ID1"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "feedId": {
                        "value": "BADID1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "cancelFeed"
      },
      "get": {
        "tags": [
          "Feeds"
        ],
        "description": "Returns feed details (including the `resultDocumentId`, if available) for the feed that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getFeed",
        "parameters": [
          {
            "name": "feedId",
            "in": "path",
            "description": "The identifier for the feed. This identifier is unique only in combination with a seller ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Feed"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "feedId": {
                        "value": "feedId1"
                      }
                    }
                  },
                  "response": {
                    "feedId": "FeedId1",
                    "feedType": "POST_PRODUCT_DATA",
                    "createdTime": "2024-03-11T13:16:24.630Z",
                    "processingStatus": "CANCELLED",
                    "processingStartTime": "2024-03-11T13:16:24.630Z",
                    "processingEndTime": "2024-03-11T13:16:24.630Z"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "feedId": {
                        "value": "badFeedId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getFeed"
      },
      "parameters": []
    },
    "/feeds/2021-06-30/documents": {
      "post": {
        "description": "Creates a feed document for the feed type that you specify. This operation returns a presigned URL for uploading the feed document contents. It also returns a `feedDocumentId` value that you can pass in with a subsequent call to the [`createFeed`](https://developer-docs.amazon.com/sp-api/docs/feeds-api-v2021-06-30-reference#createfeed) operation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createFeedDocument",
        "tags": [
          "Feeds"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFeedDocumentSpecification"
            },
            "description": "Specifies the content type for the createFeedDocument operation."
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created a feed document that is ready to receive contents.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CreateFeedDocumentResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "contentType": "text/tab-separated-values; charset=UTF-8"
                        }
                      }
                    }
                  },
                  "response": {
                    "feedDocumentId": "3d4e42b5-1d6e-44e8-a89c-2abfca0625bb",
                    "url": "https://d34o8swod1owfl.cloudfront.net/Feed_101__POST_PRODUCT_DATA_.xml"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {}
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "summary": "createFeedDocument"
      },
      "parameters": []
    },
    "/feeds/2021-06-30/documents/{feedDocumentId}": {
      "get": {
        "tags": [
          "Feeds"
        ],
        "description": "Returns the information required for retrieving a feed document's contents.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0222 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getFeedDocument",
        "parameters": [
          {
            "name": "feedDocumentId",
            "in": "path",
            "description": "The identifier of the feed document.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/FeedDocument"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "feedDocumentId": {
                        "value": "0356cf79-b8b0-4226-b4b9-0ee058ea5760"
                      }
                    }
                  },
                  "response": {
                    "feedDocumentId": "0356cf79-b8b0-4226-b4b9-0ee058ea5760",
                    "url": "https://d34o8swod1owfl.cloudfront.net/Feed_101__POST_PRODUCT_DATA_.xml"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "feedDocumentId": {
                        "value": "badDocumentId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getFeedDocument"
      }
    },
    "/finances/v0/financialEventGroups": {
      "get": {
        "description": "Returns financial event groups for a given date range. It may take up to 48 hours for orders to appear in your financial events.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listFinancialEventGroups",
        "parameters": [
          {
            "name": "MaxResultsPerPage",
            "in": "query",
            "description": "The maximum number of results to return per page. If the response exceeds the maximum number of transactions or 10 MB, the API responds with 'InvalidInput'.",
            "required": false,
            "type": "integer",
            "default": 10,
            "maximum": 100,
            "minimum": 1,
            "format": "int32"
          },
          {
            "name": "FinancialEventGroupStartedBefore",
            "in": "query",
            "description": "A date used for selecting financial event groups that opened before (but not at) a specified date and time, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. The date-time  must be later than FinancialEventGroupStartedAfter and no later than two minutes before the request was submitted. If FinancialEventGroupStartedAfter and FinancialEventGroupStartedBefore are more than 180 days apart, no financial event groups are returned.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "FinancialEventGroupStartedAfter",
            "in": "query",
            "description": "A date used for selecting financial event groups that opened after (or at) a specified date and time, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. The date-time must be no later than two minutes before the request was submitted.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response of your previous request.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ListFinancialEventGroupsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MaxResultsPerPage": {
                        "value": 1
                      },
                      "FinancialEventGroupStartedBefore": {
                        "value": "2019-10-31"
                      },
                      "FinancialEventGroupStartedAfter": {
                        "value": "2019-10-13"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "NextToken": "3493805734095308457308475",
                      "FinancialEventGroupList": [
                        {
                          "FinancialEventGroupId": "1",
                          "ProcessingStatus": "PROCESSED",
                          "FundTransferStatus": "TRANSFERED",
                          "OriginalTotal": {
                            "CurrencyCode": "USD",
                            "CurrencyAmount": 10.34
                          },
                          "ConvertedTotal": {
                            "CurrencyCode": "USD",
                            "CurrencyAmount": 39.43
                          },
                          "FundTransferDate": "2020-02-07T14:38:42.128Z",
                          "TraceId": "34550454504545",
                          "AccountTail": "4854564857",
                          "BeginningBalance": {
                            "CurrencyCode": "USD",
                            "CurrencyAmount": 55.33
                          },
                          "FinancialEventGroupStart": "2020-02-07T14:38:42.128Z",
                          "FinancialEventGroupEnd": "2020-02-07T14:38:42.128Z"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ListFinancialEventGroupsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MaxResultsPerPage": {
                        "value": 10
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Date range is invalid."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventGroupsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventGroupsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventGroupsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventGroupsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventGroupsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/v0/financialEventGroups/{eventGroupId}/financialEvents": {
      "get": {
        "description": "Returns all financial events for the specified financial event group. It may take up to 48 hours for orders to appear in your financial events.\n\n**Note:** This operation will only retrieve group's data for the past two years. If a request is submitted for data spanning more than two years, an empty response is returned.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listFinancialEventsByGroupId",
        "parameters": [
          {
            "name": "MaxResultsPerPage",
            "in": "query",
            "description": "The maximum number of results to return per page. If the response exceeds the maximum number of transactions or 10 MB, the API responds with 'InvalidInput'.",
            "required": false,
            "type": "integer",
            "default": 100,
            "maximum": 100,
            "minimum": 1,
            "format": "int32"
          },
          {
            "name": "PostedAfter",
            "in": "query",
            "description": "A date used for selecting financial events posted after (or at) a specified time. The date-time **must** be more than two minutes before the time of the request, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "PostedBefore",
            "in": "query",
            "description": "A date used for selecting financial events posted before (but not at) a specified time. The date-time must be later than `PostedAfter` and no later than two minutes before the request was submitted, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. If `PostedAfter` and `PostedBefore` are more than 180 days apart, no financial events are returned. You must specify the `PostedAfter` parameter if you specify the `PostedBefore` parameter. Default: Now minus two minutes.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "eventGroupId",
            "in": "path",
            "description": "The identifier of the financial event group to which the events belong.",
            "required": true,
            "type": "string"
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response of your previous request.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MaxResultsPerPage": {
                        "value": 10
                      },
                      "eventGroupId": {
                        "value": "485734534857"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "NextToken": "Next token value",
                      "FinancialEvents": {
                        "ChargebackEventList": [
                          {
                            "AmazonOrderId": "444-555-3343433",
                            "SellerOrderId": "454645645656456",
                            "MarketplaceName": "1",
                            "OrderChargeList": [
                              {
                                "ChargeType": "Tax",
                                "ChargeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "OrderChargeAdjustmentList": [
                              {
                                "ChargeType": "Tax",
                                "ChargeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "ShipmentFeeList": [
                              {
                                "FeeType": "FixedClosingFee",
                                "FeeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "ShipmentFeeAdjustmentList": [
                              {
                                "FeeType": "FixedClosingFee",
                                "FeeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "OrderFeeList": [
                              {
                                "FeeType": "FixedClosingFee",
                                "FeeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "OrderFeeAdjustmentList": [
                              {
                                "FeeType": "FixedClosingFee",
                                "FeeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "DirectPaymentList": [
                              {
                                "DirectPaymentType": "StoredValueCardRevenue",
                                "DirectPaymentAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "PostedDate": "2020-02-05T13:56:00.363Z",
                            "ShipmentItemList": [
                              {
                                "SellerSKU": "456454455464",
                                "OrderItemId": "4565465645646",
                                "OrderAdjustmentItemId": "456456465464",
                                "QuantityShipped": 0,
                                "ItemChargeList": [
                                  {
                                    "ChargeType": "Tax",
                                    "ChargeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "ItemChargeAdjustmentList": [
                                  {
                                    "ChargeType": "Tax",
                                    "ChargeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "ItemFeeList": [
                                  {
                                    "FeeType": "FixedClosingFee",
                                    "FeeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "ItemFeeAdjustmentList": [
                                  {
                                    "FeeType": "FixedClosingFee",
                                    "FeeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "ItemTaxWithheldList": [
                                  {
                                    "TaxCollectionModel": "Free",
                                    "TaxesWithheld": [
                                      {
                                        "ChargeType": "Tax",
                                        "ChargeAmount": {
                                          "CurrencyCode": "USD",
                                          "CurrencyAmount": 25.37
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "PromotionList": [
                                  {
                                    "PromotionType": "Free",
                                    "PromotionId": "546564565",
                                    "PromotionAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "PromotionAdjustmentList": [
                                  {
                                    "PromotionType": "Free",
                                    "PromotionId": "546564565",
                                    "PromotionAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "CostOfPointsGranted": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                },
                                "CostOfPointsReturned": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "ShipmentItemAdjustmentList": [
                              {
                                "SellerSKU": "456454455464",
                                "OrderItemId": "4565465645646",
                                "OrderAdjustmentItemId": "456456465464",
                                "QuantityShipped": 0,
                                "ItemChargeList": [
                                  {
                                    "ChargeType": "Tax",
                                    "ChargeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "ItemChargeAdjustmentList": [
                                  {
                                    "ChargeType": "Tax",
                                    "ChargeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "ItemFeeList": [
                                  {
                                    "FeeType": "FixedClosingFee",
                                    "FeeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "ItemFeeAdjustmentList": [
                                  {
                                    "FeeType": "FixedClosingFee",
                                    "FeeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "ItemTaxWithheldList": [
                                  {
                                    "TaxCollectionModel": "Free",
                                    "TaxesWithheld": [
                                      {
                                        "ChargeType": "Tax",
                                        "ChargeAmount": {
                                          "CurrencyCode": "USD",
                                          "CurrencyAmount": 25.37
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "PromotionList": [
                                  {
                                    "PromotionType": "Free",
                                    "PromotionId": "546564565",
                                    "PromotionAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "PromotionAdjustmentList": [
                                  {
                                    "PromotionType": "Free",
                                    "PromotionId": "546564565",
                                    "PromotionAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ],
                                "CostOfPointsGranted": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                },
                                "CostOfPointsReturned": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ]
                          }
                        ],
                        "ImagingServicesFeeEventList": [
                          {
                            "ImagingRequestBillingItemID": "456456456",
                            "ASIN": "4564565456456546456",
                            "PostedDate": "2020-02-05T13:56:00.363Z",
                            "FeeList": [
                              {
                                "FeeType": "FixedClosingFee",
                                "FeeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ]
                          }
                        ],
                        "NetworkComminglingTransactionEventList": [
                          {
                            "TransactionType": "Free",
                            "PostedDate": "2020-02-05T13:56:00.363Z",
                            "NetCoTransactionID": "4565645",
                            "SwapReason": "None",
                            "ASIN": "464567656576",
                            "MarketplaceId": "string",
                            "TaxExclusiveAmount": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "TaxAmount": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            }
                          }
                        ],
                        "AffordabilityExpenseReversalEventList": [
                          {
                            "AmazonOrderId": "444-555-3343433",
                            "PostedDate": "2020-02-05T13:56:00.363Z",
                            "MarketplaceId": "1",
                            "TransactionType": "Free",
                            "BaseExpense": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "TaxTypeCGST": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "TaxTypeSGST": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "TaxTypeIGST": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "TotalExpense": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            }
                          }
                        ],
                        "TrialShipmentEventList": [
                          {
                            "AmazonOrderId": "444-555-3343433",
                            "FinancialEventGroupId": "1",
                            "PostedDate": "2020-02-05T13:56:00.363Z",
                            "SKU": "456454455464",
                            "FeeList": [
                              {
                                "FeeType": "FixedClosingFee",
                                "FeeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ]
                          }
                        ],
                        "TaxWithholdingEventList": [
                          {
                            "PostedDate": "2020-02-05T13:56:00.363Z",
                            "BaseAmount": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "WithheldAmount": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "TaxWithholdingPeriod": {
                              "StartDate": "2020-02-05T13:56:00.363Z",
                              "EndDate": "2020-02-05T13:56:00.363Z"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "eventGroupId": {
                        "value": "BADID"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Bad event group ID provided."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/v0/orders/{orderId}/financialEvents": {
      "get": {
        "description": "Returns all financial events for the specified order. It may take up to 48 hours for orders to appear in your financial events.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listFinancialEventsByOrderId",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "An Amazon-defined order identifier, in 3-7-7 format.",
            "required": true,
            "type": "string"
          },
          {
            "name": "MaxResultsPerPage",
            "in": "query",
            "description": "The maximum number of results to return per page. If the response exceeds the maximum number of transactions or 10 MB, the API responds with 'InvalidInput'.",
            "required": false,
            "type": "integer",
            "default": 100,
            "maximum": 100,
            "minimum": 1,
            "format": "int32"
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response of your previous request.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Financial Events successfully retrieved.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MaxResultsPerPage": {
                        "value": 10
                      },
                      "orderId": {
                        "value": "485-734-5434857"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "NextToken": "Next token value",
                      "FinancialEvents": {
                        "RetrochargeEventList": [
                          {
                            "RetrochargeEventType": "Retrocharge",
                            "AmazonOrderId": "444-555-3343433",
                            "PostedDate": "2020-02-05T13:56:00.363Z",
                            "BaseTax": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "ShippingTax": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "MarketplaceName": "1",
                            "RetrochargeTaxWithheldList": [
                              {
                                "TaxCollectionModel": "Free",
                                "TaxesWithheld": [
                                  {
                                    "ChargeType": "Tax",
                                    "ChargeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "RentalTransactionEventList": [
                          {
                            "AmazonOrderId": "444-555-3343433",
                            "RentalEventType": "string",
                            "ExtensionLength": 0,
                            "PostedDate": "2020-02-05T13:56:00.363Z",
                            "RentalChargeList": [
                              {
                                "ChargeType": "Tax",
                                "ChargeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "RentalFeeList": [
                              {
                                "FeeType": "FixedClosingFee",
                                "FeeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "MarketplaceName": "1",
                            "RentalInitialValue": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "RentalReimbursement": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "RentalTaxWithheldList": [
                              {
                                "TaxCollectionModel": "Free",
                                "TaxesWithheld": [
                                  {
                                    "ChargeType": "Tax",
                                    "ChargeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "ProductAdsPaymentEventList": [
                          {
                            "postedDate": "2020-02-05T13:56:00.363Z",
                            "transactionType": "Free",
                            "invoiceId": "3454535453",
                            "baseValue": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "taxValue": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "transactionValue": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            }
                          }
                        ],
                        "ServiceFeeEventList": [
                          {
                            "AmazonOrderId": "444-555-3343433",
                            "FeeReason": "Free",
                            "FeeList": [
                              {
                                "FeeType": "FixedClosingFee",
                                "FeeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "SellerSKU": "456454455464",
                            "FnSKU": "Fn134",
                            "FeeDescription": "FeeDescription",
                            "ASIN": "KJHJ457648GHD"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "BAD-ORDER"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Bad order ID provided."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/v0/financialEvents": {
      "get": {
        "description": "Returns financial events for the specified data range. It may take up to 48 hours for orders to appear in your financial events. **Note:** in `ListFinancialEvents`, deferred events don't show up in responses until in they are released.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listFinancialEvents",
        "parameters": [
          {
            "name": "MaxResultsPerPage",
            "in": "query",
            "description": "The maximum number of results to return per page. If the response exceeds the maximum number of transactions or 10 MB, the API responds with 'InvalidInput'.",
            "required": false,
            "type": "integer",
            "default": 100,
            "maximum": 100,
            "minimum": 1,
            "format": "int32"
          },
          {
            "name": "PostedAfter",
            "in": "query",
            "description": "A date used for selecting financial events posted after (or at) a specified time. The date-time must be no later than two minutes before the request was submitted, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "PostedBefore",
            "in": "query",
            "description": "A date used for selecting financial events posted before (but not at) a specified time. The date-time must be later than PostedAfter and no later than two minutes before the request was submitted, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. If PostedAfter and PostedBefore are more than 180 days apart, no financial events are returned. You must specify the PostedAfter parameter if you specify the PostedBefore parameter. Default: Now minus two minutes.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response of your previous request.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MaxResultsPerPage": {
                        "value": 10
                      },
                      "NextToken": {
                        "value": "jehgri34yo7jr9e8f984tr9i4o"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "NextToken": "Next token value",
                      "FinancialEvents": {
                        "PayWithAmazonEventList": [
                          {
                            "SellerOrderId": "454645645656456",
                            "TransactionPostedDate": "2020-02-05T13:56:00.363Z",
                            "BusinessObjectType": "Free",
                            "SalesChannel": "None",
                            "Charge": {
                              "ChargeType": "Tax",
                              "ChargeAmount": {
                                "CurrencyCode": "USD",
                                "CurrencyAmount": 25.37
                              }
                            },
                            "FeeList": [
                              {
                                "FeeType": "FixedClosingFee",
                                "FeeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "PaymentAmountType": "Tax",
                            "AmountDescription": "Tax",
                            "FulfillmentChannel": "FulfillmentChannel",
                            "StoreName": "Etsy"
                          }
                        ],
                        "ServiceProviderCreditEventList": [
                          {
                            "ProviderTransactionType": "Free",
                            "SellerOrderId": "454645645656456",
                            "MarketplaceId": "1",
                            "MarketplaceCountryCode": "US",
                            "SellerId": "4564565546",
                            "SellerStoreName": "Etsy",
                            "ProviderId": "1",
                            "ProviderStoreName": "Etsy",
                            "TransactionAmount": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "TransactionCreationDate": "2020-02-05T13:56:00.363Z"
                          }
                        ],
                        "RentalTransactionEventList": [
                          {
                            "AmazonOrderId": "444-555-3343433",
                            "RentalEventType": "string",
                            "ExtensionLength": 0,
                            "PostedDate": "2020-02-05T13:56:00.363Z",
                            "RentalChargeList": [
                              {
                                "ChargeType": "Tax",
                                "ChargeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "RentalFeeList": [
                              {
                                "FeeType": "FixedClosingFee",
                                "FeeAmount": {
                                  "CurrencyCode": "USD",
                                  "CurrencyAmount": 25.37
                                }
                              }
                            ],
                            "MarketplaceName": "1",
                            "RentalInitialValue": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "RentalReimbursement": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "RentalTaxWithheldList": [
                              {
                                "TaxCollectionModel": "Free",
                                "TaxesWithheld": [
                                  {
                                    "ChargeType": "Tax",
                                    "ChargeAmount": {
                                      "CurrencyCode": "USD",
                                      "CurrencyAmount": 25.37
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "ProductAdsPaymentEventList": [
                          {
                            "postedDate": "2020-02-05T13:56:00.363Z",
                            "transactionType": "Free",
                            "invoiceId": "3454535453",
                            "baseValue": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "taxValue": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            },
                            "transactionValue": {
                              "CurrencyCode": "USD",
                              "CurrencyAmount": 25.37
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MaxResultsPerPage": {
                        "value": 2
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Input not valid."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ListFinancialEventsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/finances/2024-06-19/transactions": {
      "get": {
        "description": "Returns transactions for the given parameters. Orders from the last 48 hours might not be included in financial events.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).",
        "operationId": "listTransactions",
        "parameters": [
          {
            "name": "postedAfter",
            "in": "query",
            "description": "The response includes financial events posted after (or on) this date. This date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The date-time must be more than two minutes before the time of the request.",
            "required": true,
            "type": "string",
            "format": "date-time",
            "x-example": "2023-01-12"
          },
          {
            "name": "postedBefore",
            "in": "query",
            "description": "The response includes financial events posted before (but not on) this date. This date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.\n\nThe date-time must be later than `PostedAfter` and more than two minutes before the request was submitted. If `PostedAfter` and `PostedBefore` are more than 180 days apart, the response is empty.\n\n**Default:** Two minutes before the time of the request.",
            "required": false,
            "type": "string",
            "format": "date-time",
            "x-example": "2023-02-12"
          },
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The ID of the marketplace from which you want to retrieve transactions.",
            "required": false,
            "type": "string",
            "x-example": "ATIV93840DER"
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.",
            "required": false,
            "type": "string",
            "x-example": "jehgri34yo7jr9e8f984tr9i4o"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ListTransactionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "postedAfter": {
                        "value": "2023-03-07"
                      },
                      "nextToken": {
                        "value": "jehgri34yo7jr9e8f984tr9i4o"
                      }
                    }
                  },
                  "response": {
                    "nextToken": "Next token value",
                    "transactions": [
                      {
                        "sellingPartnerMetadata": {
                          "sellingPartnerId": "A3TH9S8BH6GOGM",
                          "accountType": "PAYABLE",
                          "marketplaceId": "ATIV93840DER"
                        },
                        "relatedIdentifiers": [
                          {
                            "relatedIdentifierName": "ORDER_ID",
                            "relatedIdentifierValue": "8129762527551"
                          }
                        ],
                        "transactionType": "Shipment",
                        "postedDate": "2020-07-14T03:35:13.214Z",
                        "totalAmount": {
                          "currencyAmount": 10,
                          "currencyCode": "USD"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "postedBefore": {
                        "value": "2022-03-07"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Start date cannot be null",
                        "details": "Start date cannot be null"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/plans": {
      "post": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns one or more inbound shipment plans, which provide the information you need to create one or more inbound shipments for a set of items that you specify. Multiple inbound shipment plans might be required so that items can be optimally placed in Amazon's fulfillment network—for example, positioning inventory closer to the customer. Alternatively, two inbound shipment plans might be created with the same Amazon fulfillment center destination if the two shipment plans require different processing—for example, items that require labels must be shipped separately from stickerless, commingled inventory.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createInboundShipmentPlan",
        "deprecated": true,
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateInboundShipmentPlanRequest"
            },
            "description": "The request schema for the CreateInboundShipmentPlanRequest operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateInboundShipmentPlanResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "ShipFromAddress": {
                            "Name": "Name",
                            "AddressLine1": "123 any st",
                            "AddressLine2": "AddressLine2",
                            "DistrictOrCounty": "Washtenaw",
                            "City": "Ann Arbor",
                            "StateOrProvinceCode": "MI",
                            "CountryCode": "US",
                            "PostalCode": "48188"
                          },
                          "LabelPrepPreference": "SELLER_LABEL",
                          "ShipToCountryCode": "ShipToCountryCode",
                          "ShipToCountrySubdivisionCode": "ShipToCountrySubdivisionCode",
                          "InboundShipmentPlanRequestItems": [
                            {
                              "SellerSKU": "SellerSKU",
                              "ASIN": "ASIN",
                              "Condition": "NewItem",
                              "Quantity": 1,
                              "QuantityInCase": 1,
                              "PrepDetailsList": [
                                {
                                  "PrepInstruction": "Polybagging",
                                  "PrepOwner": "AMAZON"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "InboundShipmentPlans": [
                        {
                          "ShipmentId": "ShipmentId",
                          "DestinationFulfillmentCenterId": "ABE2",
                          "ShipToAddress": {
                            "Name": "John Doe",
                            "AddressLine1": "123 any s",
                            "AddressLine2": "",
                            "DistrictOrCounty": "Wayne",
                            "City": "Detroit",
                            "StateOrProvinceCode": "MI",
                            "CountryCode": "US",
                            "PostalCode": "48110"
                          },
                          "LabelPrepType": "NO_LABEL",
                          "Items": [
                            {
                              "SellerSKU": "SellerSKU",
                              "FulfillmentNetworkSKU": "FulfillmentNetworkSKU",
                              "Quantity": 10,
                              "PrepDetailsList": [
                                {
                                  "PrepInstruction": "Polybagging",
                                  "PrepOwner": "AMAZON"
                                }
                              ]
                            }
                          ],
                          "EstimatedBoxContentsFee": {
                            "TotalUnits": 10,
                            "FeePerUnit": {
                              "CurrencyCode": "USD",
                              "Value": 10
                            },
                            "TotalFee": {
                              "CurrencyCode": "USD",
                              "Value": 10
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateInboundShipmentPlanResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "ShipFromAddress": {
                            "Name": "BADBAD NAME",
                            "AddressLine1": "BADAddressLine1",
                            "AddressLine2": "BADAddressLine2",
                            "DistrictOrCounty": "BADDistrictOrCounty",
                            "City": "BADCity",
                            "StateOrProvinceCode": "BADStateOrProvinceCode",
                            "CountryCode": "BADCountryCode",
                            "PostalCode": "BADPostalCodeg"
                          },
                          "LabelPrepPreference": "BADSELLER_LABEL",
                          "ShipToCountryCode": "BADShipToCountryCode",
                          "ShipToCountrySubdivisionCode": "BADShipToCountrySubdivisionCode",
                          "InboundShipmentPlanRequestItems": [
                            {
                              "SellerSKU": "BADSellerSKU",
                              "ASIN": "BADASIN",
                              "Condition": "BADNewItem",
                              "Quantity": 0,
                              "QuantityInCase": 0,
                              "PrepDetailsList": [
                                {
                                  "PrepInstruction": "BADPolybagging",
                                  "PrepOwner": "BADAMAZON"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Invalid data. Please check details"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/CreateInboundShipmentPlanResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateInboundShipmentPlanResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateInboundShipmentPlanResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateInboundShipmentPlanResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateInboundShipmentPlanResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateInboundShipmentPlanResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}": {
      "post": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns a new inbound shipment based on the specified shipmentId that was returned by the createInboundShipmentPlan operation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createInboundShipment",
        "deprecated": true,
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundShipmentRequest"
            },
            "description": "The request schema for the InboundShipmentRequest operation."
          },
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "InboundShipmentHeader": {
                            "ShipmentName": "43545345",
                            "ShipFromAddress": {
                              "Name": "35435345",
                              "AddressLine1": "123 any st",
                              "DistrictOrCounty": "Washtenaw",
                              "City": "Ann Arbor",
                              "StateOrProvinceCode": "Test",
                              "CountryCode": "US",
                              "PostalCode": "48103"
                            },
                            "DestinationFulfillmentCenterId": "AEB2",
                            "AreCasesRequired": true,
                            "ShipmentStatus": "WORKING",
                            "LabelPrepPreference": "SELLER_LABEL",
                            "IntendedBoxContentsSource": "NONE"
                          },
                          "InboundShipmentItems": [
                            {
                              "ShipmentId": "345453",
                              "SellerSKU": "34534545",
                              "FulfillmentNetworkSKU": "435435435",
                              "QuantityShipped": 0,
                              "QuantityReceived": 0,
                              "QuantityInCase": 0,
                              "ReleaseDate": "2020-04-23",
                              "PrepDetailsList": [
                                {
                                  "PrepInstruction": "Polybagging",
                                  "PrepOwner": "AMAZON"
                                }
                              ]
                            }
                          ],
                          "MarketplaceId": "MarketplaceId"
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ShipmentId": "ShipmentId"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "MarketplaceId": "BADATVPDKIKX0DER",
                          "InboundShipmentHeader": {
                            "ShipmentName": "Shipment for FBA15DJCQ1ZF",
                            "ShipFromAddress": {
                              "Name": "Uma Test",
                              "AddressLine1": "123 any st",
                              "AddressLine2": "",
                              "DistrictOrCounty": "Washtenaw",
                              "City": "Ann Arbor",
                              "StateOrProvinceCode": "MI",
                              "CountryCode": "US",
                              "PostalCode": "48103"
                            },
                            "DestinationFulfillmentCenterId": "ABE2",
                            "ShipmentStatus": "WORKING",
                            "LabelPrepPreference": "SELLER_LABEL"
                          },
                          "InboundShipmentItems": [
                            {
                              "ShipmentId": "FBA15DJCQ1ZF",
                              "SellerSKU": "PSMM-TEST-SKU-Apr-03_21_17_20-0379",
                              "FulfillmentNetworkSKU": "X0014ENQ7B",
                              "QuantityShipped": 1,
                              "QuantityReceived": 1,
                              "QuantityInCase": 1,
                              "ReleaseDate": "2020-02-27"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Updates or removes items from the inbound shipment identified by the specified shipment identifier. Adding new items is not supported.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateInboundShipment",
        "deprecated": true,
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundShipmentRequest"
            },
            "description": "The request schema for the InboundShipmentRequest operation."
          },
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "InboundShipmentHeader": {
                            "ShipmentName": "Shipment for FBA15DJCQ1ZF",
                            "ShipFromAddress": {
                              "Name": "Uma Test",
                              "AddressLine1": "123 any st",
                              "AddressLine2": "",
                              "DistrictOrCounty": "Washtenaw",
                              "City": "Ann Arbor",
                              "StateOrProvinceCode": "CO",
                              "CountryCode": "US",
                              "PostalCode": "48104"
                            },
                            "DestinationFulfillmentCenterId": "ABE2",
                            "ShipmentStatus": "WORKING",
                            "LabelPrepPreference": "SELLER_LABEL"
                          },
                          "InboundShipmentItems": [
                            {
                              "SellerSKU": "PSMM-TEST-SKU-Apr-03_21_17_20-0379",
                              "QuantityShipped": 1
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ShipmentId": "FBA15DJCQ1ZF"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "MarketplaceId": "BADID",
                          "InboundShipmentHeader": {
                            "ShipmentName": "Shipment for FBA15DJCQ1ZF",
                            "ShipFromAddress": {
                              "Name": "Uma Test",
                              "AddressLine1": "123 any st",
                              "AddressLine2": "",
                              "DistrictOrCounty": "Washtenaw",
                              "City": "Ann Arbor",
                              "StateOrProvinceCode": "CO",
                              "CountryCode": "US",
                              "PostalCode": "48104"
                            },
                            "DestinationFulfillmentCenterId": "ABE2",
                            "ShipmentStatus": "WORKING",
                            "LabelPrepPreference": "SELLER_LABEL"
                          },
                          "InboundShipmentItems": [
                            {
                              "SellerSKU": "PSMM-TEST-SKU-Apr-03_21_17_20-0379",
                              "QuantityShipped": 1
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/InboundShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/preorder": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns pre-order information, including dates, that a seller needs before confirming a shipment for pre-order. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getPreorderInfo",
        "deprecated": true,
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace the shipment is tied to.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetPreorderInfoResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId1"
                      },
                      "MarketplaceId": {
                        "value": "MarketplaceId1"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ShipmentContainsPreorderableItems": true,
                      "ShipmentConfirmedForPreorder": true,
                      "NeedByDate": "2020-04-23",
                      "ConfirmedFulfillableDate": "2020-04-23"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetPreorderInfoResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BADshipmentId1"
                      },
                      "MarketplaceId": {
                        "value": "BADMarketplaceId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetPreorderInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetPreorderInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetPreorderInfoResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetPreorderInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetPreorderInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetPreorderInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/preorder/confirm": {
      "put": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns information needed to confirm a shipment for pre-order. Call this operation after calling the getPreorderInfo operation to get the NeedByDate value and other pre-order information about the shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "confirmPreorder",
        "deprecated": true,
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "NeedByDate",
            "in": "query",
            "description": "Date that the shipment must arrive at the Amazon fulfillment center to avoid delivery promise breaks for pre-ordered items. Must be in YYYY-MM-DD format. The response to the getPreorderInfo operation returns this value.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace the shipment is tied to.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ConfirmPreorderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId1"
                      },
                      "NeedByDate": {
                        "value": "2020-10-10"
                      },
                      "MarketplaceId": {
                        "value": "MarketplaceId1"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ConfirmedNeedByDate": "2020-04-23",
                      "ConfirmedFulfillableDate": "2020-04-23"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ConfirmPreorderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BADshipmentId1"
                      },
                      "NeedByDate": {
                        "value": "2020-10-10"
                      },
                      "MarketplaceId": {
                        "value": "BADMarketplaceId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ConfirmPreorderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ConfirmPreorderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ConfirmPreorderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ConfirmPreorderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ConfirmPreorderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ConfirmPreorderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/prepInstructions": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon's fulfillment network.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getPrepInstructions",
        "parameters": [
          {
            "name": "ShipToCountryCode",
            "in": "query",
            "description": "The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.",
            "required": true,
            "type": "string",
            "format": "[A-Z]{2}"
          },
          {
            "name": "SellerSKUList",
            "in": "query",
            "description": "A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon's fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.\n\nNote: Include seller SKUs that you have used to list items on Amazon's retail website. If you include a seller SKU that you have never used to list an item on Amazon's retail website, the seller SKU is returned in the InvalidSKUList property in the response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 50
          },
          {
            "name": "ASINList",
            "in": "query",
            "description": "A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.\n\nNote: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "ShipToCountryCode": {
                        "value": "US"
                      },
                      "ASINList": {
                        "value": [
                          "ASIN1"
                        ]
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "SKUPrepInstructionsList": [
                        {
                          "SellerSKU": "SellerSKU",
                          "ASIN": "ASIN1",
                          "BarcodeInstruction": "RequiresFNSKULabel",
                          "PrepGuidance": "ConsultHelpDocuments",
                          "PrepInstructionList": [
                            "Polybagging"
                          ],
                          "AmazonPrepFeesDetailsList": [
                            {
                              "PrepInstruction": "Polybagging",
                              "FeePerUnit": {
                                "CurrencyCode": "USD",
                                "Value": 10
                              }
                            }
                          ]
                        }
                      ],
                      "InvalidSKUList": [
                        {
                          "SellerSKU": "SellerSKU",
                          "ErrorReason": "DoesNotExist"
                        }
                      ],
                      "ASINPrepInstructionsList": [
                        {
                          "ASIN": "ASIN1",
                          "BarcodeInstruction": "RequiresFNSKULabel",
                          "PrepGuidance": "ConsultHelpDocuments",
                          "PrepInstructionList": [
                            "Polybagging"
                          ]
                        }
                      ],
                      "InvalidASINList": [
                        {
                          "ASIN": "ASIN1",
                          "ErrorReason": "DoesNotExist"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "ShipToCountryCode": {
                        "value": "US"
                      },
                      "ASINList": {
                        "value": [
                          "BADASIN"
                        ]
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetPrepInstructionsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/transport": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns current transportation information about an inbound shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getTransportDetails",
        "deprecated": true,
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId1"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "TransportContent": {
                        "TransportHeader": {
                          "SellerId": "A3O2V2ZBRHE3NZ",
                          "ShipmentId": "FBA15DJCPTRK",
                          "IsPartnered": true,
                          "ShipmentType": "SP"
                        },
                        "TransportDetails": {
                          "PartneredSmallParcelData": {
                            "PackageList": [
                              {
                                "Dimensions": {
                                  "Length": 11,
                                  "Width": 11,
                                  "Height": 11,
                                  "Unit": "IN"
                                },
                                "Weight": {
                                  "Value": 11,
                                  "Unit": "pounds"
                                },
                                "CarrierName": "UNITED_PARCEL_SERVICE_INC",
                                "PackageStatus": "SHIPPED"
                              }
                            ]
                          }
                        },
                        "TransportResult": {
                          "TransportStatus": "WORKING"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BADshipmentId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Sends transportation information to Amazon about an inbound shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "putTransportDetails",
        "deprecated": true,
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutTransportDetailsRequest"
            },
            "description": "The request schema for the PutTransportDetailsRequest operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PutTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId1"
                      },
                      "body": {
                        "value": {
                          "IsPartnered": true,
                          "ShipmentType": "SP",
                          "TransportDetails": {
                            "PartneredSmallParcelData": {
                              "PackageList": [
                                {
                                  "Dimensions": {
                                    "Length": 11,
                                    "Width": 11,
                                    "Height": 11,
                                    "Unit": "inches"
                                  },
                                  "Weight": {
                                    "Value": 11,
                                    "Unit": "pounds"
                                  }
                                }
                              ],
                              "CarrierName": "string"
                            },
                            "NonPartneredSmallParcelData": {
                              "CarrierName": "USPS",
                              "PackageList": [
                                {
                                  "TrackingId": "werwrwerwrwrer"
                                }
                              ]
                            },
                            "PartneredLtlData": {
                              "Contact": {
                                "Name": "Test1",
                                "Phone": "234-343-3434",
                                "Email": "abc@test.com",
                                "Fax": "234-343-3434"
                              },
                              "BoxCount": 1,
                              "SellerFreightClass": "50",
                              "FreightReadyDate": "2020-03-27",
                              "PalletList": [
                                {
                                  "Dimensions": {
                                    "Length": 13,
                                    "Width": 13,
                                    "Height": 13,
                                    "Unit": "inches"
                                  },
                                  "Weight": {
                                    "Value": 13,
                                    "Unit": "pounds"
                                  },
                                  "IsStacked": true
                                }
                              ],
                              "TotalWeight": {
                                "Value": 13,
                                "Unit": "pounds"
                              },
                              "SellerDeclaredValue": {
                                "CurrencyCode": "USD",
                                "Value": 20
                              }
                            },
                            "NonPartneredLtlData": {
                              "CarrierName": "USPS",
                              "ProNumber": "3746274"
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "TransportResult": {
                        "TransportStatus": "WORKING"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/PutTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BADshipmentId1"
                      },
                      "body": {
                        "value": {
                          "IsPartnered": true,
                          "ShipmentType": "SP",
                          "TransportDetails": {
                            "PartneredSmallParcelData": {
                              "PackageList": [
                                {
                                  "Dimensions": {
                                    "Length": 11,
                                    "Width": 11,
                                    "Height": 11,
                                    "Unit": "inches"
                                  },
                                  "Weight": {
                                    "Value": 11,
                                    "Unit": "pounds"
                                  }
                                }
                              ],
                              "CarrierName": "string"
                            },
                            "NonPartneredSmallParcelData": {
                              "CarrierName": "USPS",
                              "PackageList": [
                                {
                                  "TrackingId": "werwrwerwrwrer"
                                }
                              ]
                            },
                            "PartneredLtlData": {
                              "Contact": {
                                "Name": "Test1",
                                "Phone": "234-343-3434",
                                "Email": "abc@test.com",
                                "Fax": "234-343-3434"
                              },
                              "BoxCount": 1,
                              "SellerFreightClass": "50",
                              "FreightReadyDate": "2020-03-27",
                              "PalletList": [
                                {
                                  "Dimensions": {
                                    "Length": 13,
                                    "Width": 13,
                                    "Height": 13,
                                    "Unit": "inches"
                                  },
                                  "Weight": {
                                    "Value": 13,
                                    "Unit": "pounds"
                                  },
                                  "IsStacked": true
                                }
                              ],
                              "TotalWeight": {
                                "Value": 13,
                                "Unit": "pounds"
                              },
                              "SellerDeclaredValue": {
                                "CurrencyCode": "USD",
                                "Value": 20
                              }
                            },
                            "NonPartneredLtlData": {
                              "CarrierName": "USPS",
                              "ProNumber": "3746274"
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/PutTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/PutTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/PutTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/PutTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/PutTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/PutTransportDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/transport/void": {
      "post": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Cancels a previously-confirmed request to ship an inbound shipment using an Amazon-partnered carrier.\n\nTo be successful, you must call this operation before the VoidDeadline date that is returned by the getTransportDetails operation.\n\nImportant: The VoidDeadline date is 24 hours after you confirm a Small Parcel shipment transportation request or one hour after you confirm a Less Than Truckload/Full Truckload (LTL/FTL) shipment transportation request. After the void deadline passes, your account will be charged for the shipping cost.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "voidTransport",
        "deprecated": true,
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/VoidTransportResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId1"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "TransportResult": {
                        "TransportStatus": "VOIDING"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/VoidTransportResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "badshipmentId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/VoidTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/VoidTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/VoidTransportResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/VoidTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/VoidTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/VoidTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/transport/estimate": {
      "post": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Initiates the process of estimating the shipping cost for an inbound shipment by an Amazon-partnered carrier.\n\nPrior to calling the estimateTransport operation, you must call the putTransportDetails operation to provide Amazon with the transportation information for the inbound shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "estimateTransport",
        "deprecated": true,
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/EstimateTransportResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId1"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "TransportResult": {
                        "TransportStatus": "ESTIMATING"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/EstimateTransportResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BadshipmentId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/EstimateTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/EstimateTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/EstimateTransportResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/EstimateTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/EstimateTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/EstimateTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/transport/confirm": {
      "post": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Confirms that the seller accepts the Amazon-partnered shipping estimate, agrees to allow Amazon to charge their account for the shipping cost, and requests that the Amazon-partnered carrier ship the inbound shipment.\n\nPrior to calling the confirmTransport operation, you should call the getTransportDetails operation to get the Amazon-partnered shipping estimate.\n\nImportant: After confirming the transportation request, if the seller decides that they do not want the Amazon-partnered carrier to ship the inbound shipment, you can call the voidTransport operation to cancel the transportation request. Note that for a Small Parcel shipment, the seller has 24 hours after confirming a transportation request to void the transportation request. For a Less Than Truckload/Full Truckload (LTL/FTL) shipment, the seller has one hour after confirming a transportation request to void it. After the grace period has expired the seller's account will be charged for the shipping cost.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "confirmTransport",
        "deprecated": true,
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ConfirmTransportResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId1"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "TransportResult": {
                        "TransportStatus": "CONFIRMING"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ConfirmTransportResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BADshipmentId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ConfirmTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ConfirmTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ConfirmTransportResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ConfirmTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ConfirmTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ConfirmTransportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/labels": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getLabels",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "PageType",
            "in": "query",
            "description": "The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.",
            "required": true,
            "type": "string",
            "enum": [
              "PackageLabel_Letter_2",
              "PackageLabel_Letter_4",
              "PackageLabel_Letter_6",
              "PackageLabel_Letter_6_CarrierLeft",
              "PackageLabel_A4_2",
              "PackageLabel_A4_4",
              "PackageLabel_Plain_Paper",
              "PackageLabel_Plain_Paper_CarrierBottom",
              "PackageLabel_Thermal",
              "PackageLabel_Thermal_Unified",
              "PackageLabel_Thermal_NonPCP",
              "PackageLabel_Thermal_No_Carrier_Rotation"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "PackageLabel_Letter_2",
                "description": "Two labels per US Letter label sheet. This is the only valid value for Amazon-partnered shipments in the US that use United Parcel Service (UPS) as the carrier. Supported in Canada and the US."
              },
              {
                "value": "PackageLabel_Letter_4",
                "description": "Four labels per US Letter label sheet. This is the only valid value for non-Amazon-partnered shipments in the US. Supported in Canada and the US."
              },
              {
                "value": "PackageLabel_Letter_6",
                "description": "Six labels per US Letter label sheet. This is the only valid value for non-Amazon-partnered shipments in the US. Supported in Canada and the US."
              },
              {
                "value": "PackageLabel_Letter_6_CarrierLeft",
                "description": "PackageLabel_Letter_6_CarrierLeft"
              },
              {
                "value": "PackageLabel_A4_2",
                "description": "Two labels per A4 label sheet."
              },
              {
                "value": "PackageLabel_A4_4",
                "description": "Four labels per A4 label sheet."
              },
              {
                "value": "PackageLabel_Plain_Paper",
                "description": "One label per sheet of US Letter paper. Only for non-Amazon-partnered shipments. "
              },
              {
                "value": "PackageLabel_Plain_Paper_CarrierBottom",
                "description": "PackageLabel_Plain_Paper_CarrierBottom"
              },
              {
                "value": "PackageLabel_Thermal",
                "description": "For use of a thermal printer. Supports Amazon-partnered shipments with UPS."
              },
              {
                "value": "PackageLabel_Thermal_Unified",
                "description": "For use of a thermal printer. Supports shipments with ATS."
              },
              {
                "value": "PackageLabel_Thermal_NonPCP",
                "description": "For use of a thermal printer. Supports non-Amazon-partnered shipments."
              },
              {
                "value": "PackageLabel_Thermal_No_Carrier_Rotation",
                "description": "For use of a thermal printer. Supports Amazon-partnered shipments with DHL."
              }
            ]
          },
          {
            "name": "LabelType",
            "in": "query",
            "description": "The type of labels requested. ",
            "required": true,
            "type": "string",
            "enum": [
              "BARCODE_2D",
              "UNIQUE",
              "PALLET"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "BARCODE_2D",
                "description": "This option is provided only for shipments where 2D Barcodes will be applied to all packages. Amazon strongly recommends using the UNIQUE option to get package labels instead of the BARCODE_2D option."
              },
              {
                "value": "UNIQUE",
                "description": "Document data for printing unique shipping labels and carrier labels for an inbound shipment."
              },
              {
                "value": "PALLET",
                "description": "Document data for printing pallet labels for a Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment."
              }
            ]
          },
          {
            "name": "NumberOfPackages",
            "in": "query",
            "description": "The number of packages in the shipment.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "PackageLabelsToPrint",
            "in": "query",
            "description": "A list of identifiers that specify packages for which you want package labels printed.\n\nIf you provide box content information with the [FBA Inbound Shipment Carton Information Feed](https://developer-docs.amazon.com/sp-api/docs/fulfillment-by-amazon-feed-type-values#fba-inbound-shipment-carton-information-feed), then `PackageLabelsToPrint` must match the `CartonId` values you provide through that feed. If you provide box content information with the Fulfillment Inbound API v2024-03-20, then `PackageLabelsToPrint` must match the `boxID` values from the [`listShipmentBoxes`](https://developer-docs.amazon.com/sp-api/docs/fulfillment-inbound-api-v2024-03-20-reference#listshipmentboxes) response. If these values do not match as required, the operation returns the `IncorrectPackageIdentifier` error code.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "NumberOfPallets",
            "in": "query",
            "description": "The number of pallets in the shipment. This returns four identical labels for each pallet.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "PageSize",
            "description": "The page size for paginating through the total packages' labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "PageStartIndex",
            "description": "The page start index for paginating through the total packages' labels. This is a required parameter for Non-Partnered LTL Shipments.",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "348975493"
                      },
                      "PageType": {
                        "value": "PackageLabel_Letter_2"
                      },
                      "LabelType": {
                        "value": "BARCODE_2D"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "DownloadURL": "http://www.labels.url.com"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BADVALUE"
                      },
                      "PageType": {
                        "value": "PackageLabel_Letter_2"
                      },
                      "LabelType": {
                        "value": "BARCODE_2D"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/billOfLading": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getBillOfLading",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier originally returned by the createInboundShipmentPlan operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "DownloadURL": "http://bill-of.lading.url.com"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "badid1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetBillOfLadingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns a list of inbound shipments based on criteria that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipments",
        "parameters": [
          {
            "name": "ShipmentStatusList",
            "in": "query",
            "description": "A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "WORKING",
                "READY_TO_SHIP",
                "SHIPPED",
                "RECEIVING",
                "CANCELLED",
                "DELETED",
                "CLOSED",
                "ERROR",
                "IN_TRANSIT",
                "DELIVERED",
                "CHECKED_IN"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "WORKING",
                  "description": "The shipment was created by the seller, but has not yet shipped."
                },
                {
                  "value": "READY_TO_SHIP",
                  "description": "The seller has printed box labels (for Small parcel shipments) or pallet labels (for Less Than Truckload shipments)."
                },
                {
                  "value": "SHIPPED",
                  "description": "The shipment was picked up by the carrier."
                },
                {
                  "value": "RECEIVING",
                  "description": "The shipment has arrived at the fulfillment center, but not all items have been marked as received."
                },
                {
                  "value": "CANCELLED",
                  "description": "The shipment was cancelled by the seller after the shipment was sent to the fulfillment center."
                },
                {
                  "value": "DELETED",
                  "description": "The shipment was cancelled by the seller before the shipment was sent to the  fulfillment center."
                },
                {
                  "value": "CLOSED",
                  "description": "The shipment has arrived at the fulfillment center and all items have been marked as received."
                },
                {
                  "value": "ERROR",
                  "description": "There was an error with the shipment and it was not processed by Amazon."
                },
                {
                  "value": "IN_TRANSIT",
                  "description": "The carrier has notified the fulfillment center that it is aware of the shipment."
                },
                {
                  "value": "DELIVERED",
                  "description": "The shipment was delivered by the carrier to the fulfillment center."
                },
                {
                  "value": "CHECKED_IN",
                  "description": "The shipment was checked-in at the receiving dock of the fulfillment center."
                }
              ]
            }
          },
          {
            "name": "ShipmentIdList",
            "in": "query",
            "description": "A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 999
          },
          {
            "name": "LastUpdatedAfter",
            "in": "query",
            "description": "A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "LastUpdatedBefore",
            "in": "query",
            "description": "A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "QueryType",
            "in": "query",
            "description": "Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.",
            "required": true,
            "type": "string",
            "enum": [
              "SHIPMENT",
              "DATE_RANGE",
              "NEXT_TOKEN"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "SHIPMENT",
                "description": "Returns shipments based on the shipment information provided by the ShipmentStatusList or ShipmentIdList parameters."
              },
              {
                "value": "DATE_RANGE",
                "description": "Returns shipments based on the date range information provided by the LastUpdatedAfter and LastUpdatedBefore parameters."
              },
              {
                "value": "NEXT_TOKEN",
                "description": "Returns shipments by using NextToken to continue returning items specified in a previous request."
              }
            ]
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response to your previous request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace where the product would be stored.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "QueryType": {
                        "value": "SHIPMENT"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ShipmentData": [
                        {
                          "ShipmentId": "FBA15DJ9S3J5",
                          "ShipmentName": "FBA (2/11/20, 11:18 AM) - 1",
                          "ShipFromAddress": {
                            "Name": "vungu+naperfectUS",
                            "AddressLine1": "501 Fairview Ave N",
                            "City": "Seattle",
                            "StateOrProvinceCode": "WA",
                            "CountryCode": "US",
                            "PostalCode": "98109"
                          },
                          "DestinationFulfillmentCenterId": "MKC6",
                          "ShipmentStatus": "SHIPPED",
                          "LabelPrepType": "SELLER_LABEL",
                          "BoxContentsSource": "INTERACTIVE"
                        }
                      ],
                      "NextToken": "AAAAAAAAAADwtRhfSFJXzbRgKc+wYysmXwEAAAAAAACLuoztkDYG/ClQt9ELs4kYW6MrmpJdFf1QQYk6hSIZSsy5ipek26YvTwmkD9i4cbQny1EWwuuU88wghPxa7770q5R+YYCuP4pYWVy3AVAzWzAib6BRlDr4B0msx6sOKcYCy6ms4J021964JOS9nZhRBGfJ86d96S91rhJPli55+r7Jp+VHPly2FCJ2mAuC53sGTsNP108IUuPdbZqq2myWZ5U+EggLjhRBvXhHFFxRclETG7XfyX46A9nCKKhJYEjDFmMPQoQPtqSuxtMAUMDLPs4MttashstL96Oiu79VYhjV84L13mdMNZS6g21HKgU5E6CDivHvsgS5kC7joXHrXGjwpXMeLcfJqwg+DocBFiU2NELMEbfksrIGXVVjFqiLxHtTiDBsuDxDLbYeVepW0E9oA/ppbZJK4c0nDbgT3WSxxfsgpmAZ42O6iVMhW/KVlJZFDjKsmmHATcq5S5c="
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "BADATVPDKIKX0DER"
                      },
                      "QueryType": {
                        "value": "BADSHIPMENT"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetShipmentsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipments/{shipmentId}/items": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns a list of items in a specified inbound shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipmentItemsByShipmentId",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "A shipment identifier used for selecting items in a specific inbound shipment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace where the product would be stored.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "shipmentId": {
                        "value": "FBA15DJ9SVVD"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ItemData": [
                        {
                          "ShipmentId": "FBA15DF2763D",
                          "SellerSKU": "CR-47K6-H6QN",
                          "FulfillmentNetworkSKU": "X0014BIZ8T",
                          "QuantityShipped": 4,
                          "QuantityReceived": 0,
                          "QuantityInCase": 0,
                          "ReleaseDate": "2013-05-29",
                          "PrepDetailsList": [
                            {
                              "PrepInstruction": "Labeling",
                              "PrepOwner": "SELLER"
                            },
                            {
                              "PrepInstruction": "Polybagging",
                              "PrepOwner": "SELLER"
                            }
                          ]
                        }
                      ],
                      "NextToken": "AAAAAAAAAABtqoY6CcWi1L8mJB7Nnt2gaQEAAAAAAAD6ehPTas9PliWJK6+QPwRpOgJJTgQphGOQ+9o1k7PBrBe5GrNyGDQYBmz2D4yDT4FVSHVhpbKi8Mgrw3tfRTLrkcMQOn5CvEySS5ePVzv8WhjCDxM9FGwBzoeDWLKx9OEy29XlAFkeBdwaxOAxEMF97uQkxGhUQS5sGeXdSAXNXMgCoOXMgw+JlsgzIq3Byt/yObIt8z9T0GPk440bqiQZl3ceVEiLX2g2LAa5qNwJBtCgYtizJsYSu/tX9zbR0Fe13bSqTOUEAXykYvQSTYCbuEPC3UFukVLobuP0lW+WZzZxcbWRxEzBTHnlgorzdsCc4cBnWVhTdp5nxTPeiYGbda9KilRFXtVl1vgXCHq5npDNV9yULsgjAqFPDBaz8YMlKoJgCe2E1GmbHzenJW21IHcIo3gtmujx+ib3Y9j23SwCfEbsUR9OrFNvGxiZ0VS7qYzm+fvElsU9jBx1PFrOigHnGD71Yq+y"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "BADATVPDKIKX0DER"
                      },
                      "shipmentId": {
                        "value": "BADFBA15DJ9SVVD"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/inbound/v0/shipmentItems": {
      "get": {
        "tags": [
          "fbaInbound"
        ],
        "description": "Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipmentItems",
        "parameters": [
          {
            "name": "LastUpdatedAfter",
            "in": "query",
            "description": "A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "LastUpdatedBefore",
            "in": "query",
            "description": "A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "QueryType",
            "in": "query",
            "description": "Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.",
            "required": true,
            "type": "string",
            "enum": [
              "DATE_RANGE",
              "NEXT_TOKEN"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "DATE_RANGE",
                "description": "Returns items based on the date range information provided by the LastUpdatedAfter and LastUpdatedBefore parameters."
              },
              {
                "value": "NEXT_TOKEN",
                "description": "Returns items by using NextToken to continue returning items specified in a previous request."
              }
            ]
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response to your previous request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace where the product would be stored.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "QueryType": {
                        "value": "SHIPMENT"
                      },
                      "NextToken": {
                        "value": "NextToken"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ItemData": [
                        {
                          "ShipmentId": "FBA15DF2763D",
                          "SellerSKU": "CR-47K6-H6QN",
                          "FulfillmentNetworkSKU": "X0014BIZ8T",
                          "QuantityShipped": 4,
                          "QuantityReceived": 0,
                          "QuantityInCase": 0,
                          "ReleaseDate": "2013-05-29",
                          "PrepDetailsList": [
                            {
                              "PrepInstruction": "Labeling",
                              "PrepOwner": "SELLER"
                            },
                            {
                              "PrepInstruction": "Polybagging",
                              "PrepOwner": "SELLER"
                            }
                          ]
                        }
                      ],
                      "NextToken": "AAAAAAAAAABtqoY6CcWi1L8mJB7Nnt2gaQEAAAAAAAD6ehPTas9PliWJK6QPwRpOgJJTgQphGOQ9o1k7PBrBe5GrNyGDQYBmz2D4yDT4FVSHVhpbKi8Mgrw3tfRTLrkcMQOn5CvEySS5ePVzv8WhjCDxM9FGwBzoeDWLKx9OEy29XlAFkeBdwaxOAxEMF97uQkxGhUQS5sGeXdSAXNXMgCoOXMgwJlsgzIq3BytyObIt8z9T0GPk440bqiQZl3ceVEiLX2g2LAa5qNwJBtCgYtizJsYSutX9zbR0Fe13bSqTOUEAXykYvQSTYCbuEPC3UFukVLobuP0lWWZzZxcbWRxEzBTHnlgorzdsCc4cBnWVhTdp5nxTPeiYGbda9KilRFXtVl1vgXCHq5npDNV9yULsgjAqFPDBaz8YMlKoJgCe2E1GmbHzenJW21IHcIo3gtmujxib3Y9j23SwCfEbsUR9OrFNvGxiZ0VS7qYzmfvElsU9jBx1PFrOigHnGD71Yq"
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "QueryType": {
                        "value": "SHIPMENT"
                      },
                      "NextToken": {
                        "value": "AAAAAAAAAABtqoY6CcWi1L8mJB7Nnt2gaQEAAAAAAAD6ehPTas9PliWJK6QPwRpOgJJTgQphGOQ9o1k7PBrBe5GrNyGDQYBmz2D4yDT4FVSHVhpbKi8Mgrw3tfRTLrkcMQOn5CvEySS5ePVzv8WhjCDxM9FGwBzoeDWLKx9OEy29XlAFkeBdwaxOAxEMF97uQkxGhUQS5sGeXdSAXNXMgCoOXMgwJlsgzIq3BytyObIt8z9T0GPk440bqiQZl3ceVEiLX2g2LAa5qNwJBtCgYtizJsYSutX9zbR0Fe13bSqTOUEAXykYvQSTYCbuEPC3UFukVLobuP0lWWZzZxcbWRxEzBTHnlgorzdsCc4cBnWVhTdp5nxTPeiYGbda9KilRFXtVl1vgXCHq5npDNV9yULsgjAqFPDBaz8YMlKoJgCe2E1GmbHzenJW21IHcIo3gtmujxib3Y9j23SwCfEbsUR9OrFNvGxiZ0VS7qYzmfvElsU9jBx1PFrOigHnGD71Yq"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ItemData": [
                        {
                          "ShipmentId": "FBA15DF2763D",
                          "SellerSKU": "CR-47K6-H6QN",
                          "FulfillmentNetworkSKU": "X0014BIZ8T",
                          "QuantityShipped": 4,
                          "QuantityReceived": 0,
                          "QuantityInCase": 0,
                          "ReleaseDate": "2013-05-29",
                          "PrepDetailsList": [
                            {
                              "PrepInstruction": "Labeling",
                              "PrepOwner": "SELLER"
                            },
                            {
                              "PrepInstruction": "Polybagging",
                              "PrepOwner": "SELLER"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "BADATVPDKIKX0DER"
                      },
                      "QueryType": {
                        "value": "BADSHIPMENT"
                      },
                      "NextToken": {
                        "value": "BADNextToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Data is invalid. Please check."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetShipmentItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The number of inbound plans to return in the response matching the given query.",
            "in": "query",
            "maximum": 30,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          },
          {
            "description": "The status of an inbound plan.",
            "enum": [
              "ACTIVE",
              "VOIDED",
              "SHIPPED"
            ],
            "in": "query",
            "name": "status",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "value": "ACTIVE",
                "description": "An inbound plan that is being worked on."
              },
              {
                "value": "VOIDED",
                "description": "An inbound plan with all shipment cancelled and can no longer be modified."
              },
              {
                "value": "SHIPPED",
                "description": "A completed inbound plan. Only minor modifications can be made at this time."
              }
            ]
          },
          {
            "description": "Sort by field.",
            "enum": [
              "LAST_UPDATED_TIME",
              "CREATION_TIME"
            ],
            "in": "query",
            "name": "sortBy",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "value": "LAST_UPDATED_TIME",
                "description": "Last updated time of the inbound plan."
              },
              {
                "value": "CREATION_TIME",
                "description": "Inbound plan creation time."
              }
            ]
          },
          {
            "description": "The sort order.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "sortOrder",
            "type": "string",
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Ascending order."
              },
              {
                "value": "DESC",
                "description": "Descending order."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "ListInboundPlans 200 response",
            "schema": {
              "$ref": "#/definitions/ListInboundPlansResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "status": {
                        "value": "ACTIVE"
                      },
                      "sortBy": {
                        "value": "LAST_UPDATED_TIME"
                      },
                      "sortOrder": {
                        "value": "ASC"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "inboundPlans": [
                      {
                        "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
                        "name": "FBA (03/08/2023, 01:15 PM)",
                        "createdAt": "2023-03-08T13:15:30Z",
                        "lastUpdatedAt": "2023-03-08T13:15:30Z",
                        "status": "ACTIVE",
                        "marketplaceIds": [
                          "A2EUQ1WTGCTBG2"
                        ],
                        "sourceAddress": {
                          "name": "name",
                          "companyName": "Acme",
                          "addressLine1": "123 example street",
                          "addressLine2": "Unit 102",
                          "city": "Toronto",
                          "countryCode": "CA",
                          "stateOrProvinceCode": "ON",
                          "postalCode": "M1M1M1",
                          "phoneNumber": "1234567890",
                          "email": "email@email.com"
                        }
                      },
                      {
                        "inboundPlanId": "wf2234abcd-1234-abcd-5678-1234abcd5678",
                        "name": "FBA (03/08/2023, 01:15 PM)",
                        "createdAt": "2023-03-08T13:15:30Z",
                        "lastUpdatedAt": "2023-03-08T13:15:30Z",
                        "status": "ACTIVE",
                        "marketplaceIds": [
                          "A2EUQ1WTGCTBG2"
                        ],
                        "sourceAddress": {
                          "name": "name",
                          "companyName": "Acme",
                          "addressLine1": "123 example street",
                          "addressLine2": "Unit 102",
                          "city": "Toronto",
                          "countryCode": "CA",
                          "stateOrProvinceCode": "ON",
                          "postalCode": "M1M1M1",
                          "phoneNumber": "1234567890",
                          "email": "email@email.com"
                        }
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "status": {
                        "value": "badStatus"
                      },
                      "sortBy": {
                        "value": "LAST_UPDATED_TIME"
                      },
                      "sortOrder": {
                        "value": "ASC"
                      },
                      "pageSize": {
                        "value": 5
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The status is invalid."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Provides a list of inbound plans with minimal information.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listInboundPlans",
        "summary": "listInboundPlans"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateInboundPlanRequest"
            },
            "description": "The body of the request to `createInboundPlan`."
          }
        ],
        "responses": {
          "202": {
            "description": "CreateInboundPlan 202 response",
            "schema": {
              "$ref": "#/definitions/CreateInboundPlanResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "name": "FBA (03/20/2024, 12:01 PM)",
                          "sourceAddress": {
                            "name": "name",
                            "companyName": "Acme",
                            "addressLine1": "123 example street",
                            "addressLine2": "Unit 102",
                            "city": "Toronto",
                            "countryCode": "CA",
                            "stateOrProvinceCode": "ON",
                            "postalCode": "M1M1M1",
                            "phoneNumber": "1234567890",
                            "email": "email@email.com"
                          },
                          "destinationMarketplaces": [
                            "A2EUQ1WTGCTBG2"
                          ],
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "name": "FBA (03/20/2024, 12:01 PM)",
                          "sourceAddress": {
                            "name": "name",
                            "companyName": "Acme",
                            "addressLine1": "123 example street",
                            "addressLine2": "Unit 102",
                            "city": "Toronto",
                            "countryCode": "CA",
                            "stateOrProvinceCode": "ON",
                            "postalCode": "M1M1M1",
                            "phoneNumber": "1234567890",
                            "email": "email@email.com"
                          },
                          "destinationMarketplaces": [
                            "badMarketplace"
                          ],
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "Invalid destinationMarketplace provided."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Creates an inbound plan. An inbound plan contains all the necessary information to send shipments into Amazon's fufillment network.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createInboundPlan",
        "summary": "createInboundPlan"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetInboundPlan 200 response",
            "schema": {
              "$ref": "#/definitions/InboundPlan"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
                    "name": "FBA (03/20/2024, 12:01 PM)",
                    "createdAt": "2024-03-20T12:01:00Z",
                    "lastUpdatedAt": "2024-03-28T13:15:30Z",
                    "status": "ACTIVE",
                    "marketplaceIds": [
                      "A2EUQ1WTGCTBG2"
                    ],
                    "packingOptions": [],
                    "placementOptions": [],
                    "shipments": [],
                    "sourceAddress": {
                      "name": "name",
                      "companyName": "Acme",
                      "addressLine1": "123 example street",
                      "addressLine2": "Unit 102",
                      "city": "Toronto",
                      "countryCode": "CA",
                      "stateOrProvinceCode": "ON",
                      "postalCode": "M1M1M1",
                      "phoneNumber": "1234567890",
                      "email": "email@email.com"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The inboundPlanId is malformed."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Fetches the top level information about an inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getInboundPlan",
        "summary": "getInboundPlan"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/boxes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of boxes to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListInboundPlanBoxes 200 response",
            "schema": {
              "$ref": "#/definitions/ListInboundPlanBoxesResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "boxes": [
                      {
                        "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                        "weight": {
                          "unit": "KG",
                          "value": 5.5
                        },
                        "dimensions": {
                          "unitOfMeasurement": "CM",
                          "length": 3,
                          "width": 4,
                          "height": 5
                        },
                        "quantity": 2,
                        "boxId": "boxId",
                        "templateName": "templateName",
                        "items": [
                          {
                            "quantity": 5,
                            "expiration": "2024-01-01",
                            "manufacturingLotCode": "manufacturingLotCode",
                            "prepInstructions": [
                              {
                                "prepType": "ITEM_POLYBAGGING",
                                "prepOwner": "AMAZON",
                                "fee": {
                                  "code": "USD",
                                  "amount": 10
                                }
                              }
                            ],
                            "msku": "msku",
                            "asin": "asin",
                            "fnsku": "fnsku",
                            "labelOwner": "AMAZON"
                          }
                        ],
                        "destinationRegion": {
                          "countryCode": "US",
                          "state": "CA",
                          "warehouseId": "ABC1"
                        },
                        "contentInformationSource": "BOX_CONTENT_PROVIDED"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inboundPlanId does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Provides a paginated list of box packages in an inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listInboundPlanBoxes",
        "summary": "listInboundPlanBoxes"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/cancellation": {
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "CancelInboundPlan 202 response",
            "schema": {
              "$ref": "#/definitions/CancelInboundPlanResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The inbound plan is already cancelled."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Cancels an Inbound Plan. Charges may apply if the cancellation is performed outside of a void window. The window for Amazon Partnered Carriers is 24 hours for Small Parcel Delivery (SPD) and one hour for Less-Than-Truckload (LTL) carrier shipments.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "cancelInboundPlan",
        "summary": "cancelInboundPlan"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of items to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListInboundPlanItems 200 response",
            "schema": {
              "$ref": "#/definitions/ListInboundPlanItemsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "items": [
                      {
                        "quantity": 5,
                        "expiration": "2024-01-01",
                        "manufacturingLotCode": "manufacturingLotCode",
                        "prepInstructions": [
                          {
                            "prepType": "ITEM_POLYBAGGING",
                            "prepOwner": "AMAZON",
                            "fee": {
                              "code": "USD",
                              "amount": 10
                            }
                          }
                        ],
                        "msku": "msku",
                        "asin": "asin",
                        "fnsku": "fnsku",
                        "labelOwner": "AMAZON"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 1
                      },
                      "paginationToken": {
                        "value": ""
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Provides a paginated list of item packages in an inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listInboundPlanItems",
        "summary": "listInboundPlanItems"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/name": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateInboundPlanNameRequest"
            },
            "description": "The body of the request to `updateInboundPlanName`."
          }
        ],
        "responses": {
          "204": {
            "description": "UpdateInboundPlanName 204 response",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "name": "updatedInboundPlanName"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "name": "name"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Updates the name of an existing inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateInboundPlanName",
        "summary": "updateInboundPlanName"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingGroups/{packingGroupId}/boxes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a packing group.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "packingGroupId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of packing group boxes to return in the response matching the given query.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListPackingGroupBoxes 200 response",
            "schema": {
              "$ref": "#/definitions/ListPackingGroupBoxesResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingGroupId": {
                        "value": "pg1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "boxes": [
                      {
                        "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                        "weight": {
                          "unit": "KG",
                          "value": 5.5
                        },
                        "dimensions": {
                          "unitOfMeasurement": "CM",
                          "length": 3,
                          "width": 4,
                          "height": 5
                        },
                        "quantity": 2,
                        "boxId": "boxId",
                        "templateName": "templateName",
                        "items": [
                          {
                            "quantity": 5,
                            "expiration": "2024-01-01",
                            "manufacturingLotCode": "manufacturingLotCode",
                            "prepInstructions": [
                              {
                                "prepType": "ITEM_POLYBAGGING",
                                "prepOwner": "AMAZON",
                                "fee": {
                                  "code": "USD",
                                  "amount": 10
                                }
                              }
                            ],
                            "msku": "msku",
                            "asin": "asin",
                            "fnsku": "fnsku",
                            "labelOwner": "AMAZON"
                          }
                        ],
                        "destinationRegion": {
                          "countryCode": "US",
                          "state": "CA",
                          "warehouseId": "ABC1"
                        },
                        "contentInformationSource": "BOX_CONTENT_PROVIDED"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingGroupId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested packingGroupId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Retrieves a page of boxes from a given packing group. These boxes were previously provided through the `setPackingInformation` operation. This API is used for workflows where boxes are packed before Amazon determines shipment splits.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listPackingGroupBoxes",
        "summary": "listPackingGroupBoxes"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingGroups/{packingGroupId}/items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a packing group.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "packingGroupId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of packing group items to return in the response matching the given query.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListPackingGroupItems 200 response",
            "schema": {
              "$ref": "#/definitions/ListPackingGroupItemsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingGroupId": {
                        "value": "pg1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "items": [
                      {
                        "quantity": 5,
                        "prepInstructions": [
                          {
                            "prepType": "ITEM_POLYBAGGING",
                            "prepOwner": "AMAZON",
                            "fee": {
                              "code": "USD",
                              "amount": 10
                            }
                          }
                        ],
                        "msku": "msku",
                        "asin": "asin",
                        "fnsku": "fnsku",
                        "labelOwner": "AMAZON"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingGroupId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested packingGroupId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Retrieves a page of items in a given packing group. Packing options must first be generated by the corresponding operation before packing group items can be listed.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listPackingGroupItems",
        "summary": "listPackingGroupItems"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingInformation": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPackingInformationRequest"
            },
            "description": "The body of the request to `setPackingInformation`."
          }
        ],
        "responses": {
          "202": {
            "description": "SetPackingInformation 202 response",
            "schema": {
              "$ref": "#/definitions/SetPackingInformationResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "packageGroupings": [
                            {
                              "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                              "packingGroupId": "pg1234abcd-1234-abcd-5678-1234abcd5678",
                              "boxes": [
                                {
                                  "items": [
                                    {
                                      "msku": "msku",
                                      "quantity": 5,
                                      "expiration": "2024-01-01",
                                      "prepOwner": "AMAZON",
                                      "labelOwner": "AMAZON",
                                      "manufacturingLotCode": "manufacturingLotCode"
                                    }
                                  ],
                                  "contentInformationSource": "BOX_CONTENT_PROVIDED",
                                  "weight": {
                                    "unit": "KG",
                                    "value": 5.5
                                  },
                                  "dimensions": {
                                    "unitOfMeasurement": "CM",
                                    "length": 3,
                                    "width": 4,
                                    "height": 5
                                  },
                                  "quantity": 2
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "packageGroupings": [
                            {
                              "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                              "packingGroupId": "bad234abcd-1234-abcd-5678-1234abcd5678",
                              "boxes": [
                                {
                                  "items": [
                                    {
                                      "msku": "msku",
                                      "quantity": 5,
                                      "expiration": "2024-01-01",
                                      "prepOwner": "AMAZON",
                                      "labelOwner": "AMAZON",
                                      "manufacturingLotCode": "manufacturingLotCode"
                                    }
                                  ],
                                  "contentInformationSource": "BOX_CONTENT_PROVIDED",
                                  "weight": {
                                    "unit": "KG",
                                    "value": 5.5
                                  },
                                  "dimensions": {
                                    "unitOfMeasurement": "CM",
                                    "length": 3,
                                    "width": 4,
                                    "height": 5
                                  },
                                  "quantity": 2
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested packingGroupId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Sets packing information for an inbound plan. This should be called after an inbound plan is created to populate the box level information required for planning and transportation estimates.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "setPackingInformation",
        "summary": "setPackingInformation"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingOptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of packing options to return in the response matching the given query.",
            "in": "query",
            "maximum": 20,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListPackingOptions 200 response",
            "schema": {
              "$ref": "#/definitions/ListPackingOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "packingOptions": [
                      {
                        "packingOptionId": "po1234abcd-1234-abcd-5678-1234abcd5678",
                        "packingGroups": [
                          "pg1234abcd-1234-abcd-5678-1234abcd5678"
                        ],
                        "fees": [
                          {
                            "value": {
                              "code": "USD",
                              "amount": 1
                            },
                            "type": "FEE",
                            "target": "Placement Services",
                            "description": "description"
                          }
                        ],
                        "discounts": [
                          {
                            "value": {
                              "code": "USD",
                              "amount": 1
                            },
                            "type": "DISCOUNT",
                            "target": "Placement Services",
                            "description": "description"
                          }
                        ],
                        "expiration": "2024-01-01T00:00:00.000Z",
                        "status": "OFFERED",
                        "supportedShippingConfigurations": [
                          {
                            "shippingSolution": "AMAZON_PARTNERED_CARRIER",
                            "shippingMode": "GROUND_SMALL_PARCEL"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Retrieves a list of all packing options for an inbound plan. Packing options must first be generated by the corresponding operation before becoming available.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listPackingOptions",
        "summary": "listPackingOptions"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "GeneratePackingOptions 202 response",
            "schema": {
              "$ref": "#/definitions/GeneratePackingOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The inbound plan is not in a valid state to generate packing options."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Generates available packing options for the inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "generatePackingOptions",
        "summary": "generatePackingOptions"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingOptions/{packingOptionId}/confirmation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a packing option.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "packingOptionId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ConfirmPackingOption 202 response",
            "schema": {
              "$ref": "#/definitions/ConfirmPackingOptionResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingOptionId": {
                        "value": "po1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "packingOptionId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested packingOptionId does not exist for the given inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Confirms the packing option for an inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "confirmPackingOption",
        "summary": "confirmPackingOption"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/pallets": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of pallets to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListInboundPlanPallets 200 response",
            "schema": {
              "$ref": "#/definitions/ListInboundPlanPalletsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "pallets": [
                      {
                        "stackability": "STACKABLE",
                        "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                        "weight": {
                          "unit": "KG",
                          "value": 5.5
                        },
                        "dimensions": {
                          "unitOfMeasurement": "CM",
                          "length": 3,
                          "width": 4,
                          "height": 5
                        },
                        "quantity": 2
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Provides a paginated list of pallet packages in an inbound plan. An inbound plan will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listInboundPlanPallets",
        "summary": "listInboundPlanPallets"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/placementOptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of placement options to return in the response matching the given query.",
            "in": "query",
            "maximum": 20,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListPlacementOptions 200 response",
            "schema": {
              "$ref": "#/definitions/ListPlacementOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "placementOptions": [
                      {
                        "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
                        "status": "OFFERED",
                        "fees": [
                          {
                            "value": {
                              "code": "USD",
                              "amount": 1
                            },
                            "type": "FEE",
                            "target": "Placement Services",
                            "description": "description"
                          }
                        ],
                        "discounts": [
                          {
                            "value": {
                              "code": "USD",
                              "amount": 1
                            },
                            "type": "DISCOUNT",
                            "target": "Placement Services",
                            "description": "description"
                          }
                        ],
                        "expiration": "2024-01-01T00:00:00.000Z",
                        "shipmentIds": [
                          "sh1234abcd-1234-abcd-5678-1234abcd5678"
                        ]
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Provides a list of all placement options for an inbound plan. Placement options must first be generated by the corresponding operation before becoming available.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listPlacementOptions",
        "summary": "listPlacementOptions"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneratePlacementOptionsRequest"
            },
            "description": "The body of the request to `generatePlacementOptions`."
          }
        ],
        "responses": {
          "202": {
            "description": "GeneratePlacementOptions 202 response",
            "schema": {
              "$ref": "#/definitions/GeneratePlacementOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "customPlacement": [
                            {
                              "warehouseId": "warehouseId",
                              "items": [
                                {
                                  "msku": "msku",
                                  "prepOwner": "AMAZON",
                                  "labelOwner": "AMAZON",
                                  "quantity": 2,
                                  "expiration": "2024-01-01",
                                  "manufacturingLotCode": "lotCode"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "customPlacement": [
                            {
                              "warehouseId": "badWarehouseId",
                              "items": [
                                {
                                  "msku": "msku",
                                  "prepOwner": "AMAZON",
                                  "labelOwner": "AMAZON",
                                  "quantity": 2,
                                  "expiration": "2024-01-01",
                                  "manufacturingLotCode": "lotCode"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The inbound plan is not in a valid state to generate placement options."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Generates placement options for the inbound plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "generatePlacementOptions",
        "summary": "generatePlacementOptions"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/placementOptions/{placementOptionId}/confirmation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "placementOptionId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ConfirmPlacementOption 202 response",
            "schema": {
              "$ref": "#/definitions/ConfirmPlacementOptionResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "placementOptionId": {
                        "value": "pl1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "placementOptionId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested placementOptionId does not exist for the given inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Confirms the placement option for an inbound plan. Once confirmed, it cannot be changed for the Inbound Plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "confirmPlacementOption",
        "summary": "confirmPlacementOption"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetShipment 200 response",
            "schema": {
              "$ref": "#/definitions/Shipment"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
                    "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                    "shipmentConfirmationId": "FBA1234ABCD",
                    "amazonReferenceId": "amazonReferenceId",
                    "selectedTransportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678",
                    "selectedDeliveryWindow": {
                      "startDate": "2024-01-01T00:00:00.000Z",
                      "endDate": "2024-01-01T06:00:00.000Z",
                      "editableUntil": "2024-01-01T06:00:00.000Z",
                      "availabilityType": "AVAILABLE",
                      "deliveryWindowOptionId": "dw1234abcd-1234-abcd-5678-1234abcd5678"
                    },
                    "name": "FBA (10/02/2023 20:07)-ABC1",
                    "source": {
                      "sourceType": "SELLER_FACILITY",
                      "address": {
                        "name": "name",
                        "companyName": "Acme",
                        "addressLine1": "123 example street",
                        "addressLine2": "Unit 102",
                        "city": "Toronto",
                        "countryCode": "CA",
                        "stateOrProvinceCode": "ON",
                        "postalCode": "M1M1M1",
                        "phoneNumber": "1234567890",
                        "email": "email@email.com"
                      }
                    },
                    "destination": {
                      "destinationType": "AMAZON_WAREHOUSE",
                      "address": {
                        "name": "name",
                        "companyName": "Acme",
                        "addressLine1": "123 example street",
                        "addressLine2": "Unit 102",
                        "city": "Toronto",
                        "countryCode": "CA",
                        "stateOrProvinceCode": "ON",
                        "postalCode": "M1M1M1",
                        "phoneNumber": "1234567890",
                        "email": "email@email.com"
                      },
                      "warehouseId": "YYZ5"
                    },
                    "dates": {
                      "readyToShipWindow": {
                        "start": "2024-01-01T00:00Z",
                        "end": "2024-01-08T00:00Z",
                        "editableUntil": "2024-01-07T00:00Z"
                      }
                    },
                    "status": "WORKING",
                    "trackingDetails": {
                      "spdTrackingDetail": {
                        "spdTrackingItems": [
                          {
                            "boxId": "boxId",
                            "trackingId": "trackingId",
                            "trackingNumberValidationStatus": "VALIDATED"
                          }
                        ]
                      },
                      "ltlTrackingDetail": {
                        "freightBillNumber": [
                          "freightBillNumber1"
                        ],
                        "billOfLadingNumber": "billOfLadingNumber"
                      }
                    },
                    "freightInformation": {
                      "freightClass": "FC_50",
                      "declaredValue": {
                        "code": "USD",
                        "amount": 500
                      }
                    },
                    "contactInformation": {
                      "name": "name",
                      "phoneNumber": "1234567890",
                      "email": "email@email.com"
                    },
                    "selfShipAppointmentDetails": [
                      {
                        "appointmentId": 1,
                        "appointmentSlotTime": {
                          "startTime": "2024-01-01T00:00:00.000Z",
                          "endTime": "2024-01-01T00:00:00.000Z"
                        },
                        "appointmentStatus": "appointmentStatus"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipment does not exist for the provided inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Provides the full details for a specific shipment within an inbound plan. The `transportationOptionId` inside `acceptedTransportationSelection` can be used to retrieve the transportation details for the shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipment",
        "summary": "getShipment"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/boxes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of boxes to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListShipmentBoxes 200 response",
            "schema": {
              "$ref": "#/definitions/ListShipmentBoxesResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "boxes": [
                      {
                        "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                        "weight": {
                          "unit": "KG",
                          "value": 5.5
                        },
                        "dimensions": {
                          "unitOfMeasurement": "CM",
                          "length": 3,
                          "width": 4,
                          "height": 5
                        },
                        "quantity": 2,
                        "boxId": "boxId",
                        "templateName": "templateName",
                        "items": [
                          {
                            "quantity": 5,
                            "expiration": "2024-01-01",
                            "manufacturingLotCode": "manufacturingLotCode",
                            "prepInstructions": [
                              {
                                "prepType": "ITEM_POLYBAGGING",
                                "prepOwner": "AMAZON",
                                "fee": {
                                  "code": "USD",
                                  "amount": 10
                                }
                              }
                            ],
                            "msku": "msku",
                            "asin": "asin",
                            "fnsku": "fnsku",
                            "labelOwner": "AMAZON"
                          }
                        ],
                        "destinationRegion": {
                          "countryCode": "US",
                          "state": "CA",
                          "warehouseId": "ABC1"
                        },
                        "contentInformationSource": "BOX_CONTENT_PROVIDED"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inboundPlanId does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Provides a paginated list of box packages in a shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listShipmentBoxes",
        "summary": "listShipmentBoxes"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of content update previews to return.",
            "in": "query",
            "maximum": 20,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListShipmentContentUpdatePreviews 200 response",
            "schema": {
              "$ref": "#/definitions/ListShipmentContentUpdatePreviewsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "contentUpdatePreviews": [
                      {
                        "contentUpdatePreviewId": "cu1234abcd-1234-abcd-5678-1234abcd5678",
                        "expiration": "2024-01-01T01:01:00.000Z",
                        "transportationOption": {
                          "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                          "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678",
                          "shippingSolution": "AMAZON_PARTNERED_CARRIER",
                          "carrier": {
                            "name": "name",
                            "alphaCode": "USPS"
                          },
                          "shippingMode": "GROUND_SMALL_PARCEL",
                          "quote": {
                            "cost": {
                              "code": "USD",
                              "amount": 500
                            },
                            "voidableUntil": "2024-01-01T00:00:00.000Z",
                            "expiration": "2024-01-01T00:00:00.000Z"
                          },
                          "carrierAppointment": {
                            "startTime": "2024-01-01T00:00:00.000Z",
                            "endTime": "2024-01-02T00:00:00.000Z"
                          },
                          "preconditions": [
                            "CONFIRMED_DELIVERY_WINDOW"
                          ]
                        },
                        "requestedUpdates": {
                          "boxes": [
                            {
                              "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                              "weight": {
                                "unit": "KG",
                                "value": 5.5
                              },
                              "dimensions": {
                                "unitOfMeasurement": "CM",
                                "length": 3,
                                "width": 4,
                                "height": 5
                              },
                              "quantity": 1,
                              "items": [
                                {
                                  "msku": "msku",
                                  "prepOwner": "AMAZON",
                                  "labelOwner": "AMAZON",
                                  "quantity": 2,
                                  "expiration": "2024-01-01",
                                  "manufacturingLotCode": "lotCode"
                                }
                              ],
                              "contentInformationSource": "BOX_CONTENT_PROVIDED"
                            }
                          ],
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ]
                        }
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Retrieve a paginated list of shipment content update previews for a given shipment. The shipment content update preview is a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listShipmentContentUpdatePreviews",
        "summary": "listShipmentContentUpdatePreviews"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateShipmentContentUpdatePreviewsRequest"
            },
            "description": "The body of the request to `generateShipmentContentUpdatePreviews`."
          }
        ],
        "responses": {
          "202": {
            "description": "GenerateShipmentContentUpdatePreviews 202 response",
            "schema": {
              "$ref": "#/definitions/GenerateShipmentContentUpdatePreviewsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "boxes": [
                            {
                              "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                              "weight": {
                                "unit": "KG",
                                "value": 5.5
                              },
                              "dimensions": {
                                "unitOfMeasurement": "CM",
                                "length": 3,
                                "width": 4,
                                "height": 5
                              },
                              "quantity": 1,
                              "items": [
                                {
                                  "msku": "msku",
                                  "prepOwner": "AMAZON",
                                  "labelOwner": "AMAZON",
                                  "quantity": 2,
                                  "expiration": "2024-01-01",
                                  "manufacturingLotCode": "lotCode"
                                }
                              ],
                              "contentInformationSource": "BOX_CONTENT_PROVIDED"
                            }
                          ],
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "boxes": [
                            {
                              "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                              "weight": {
                                "unit": "KG",
                                "value": 5.5
                              },
                              "dimensions": {
                                "unitOfMeasurement": "CM",
                                "length": 3,
                                "width": 4,
                                "height": 5
                              },
                              "quantity": 1,
                              "items": [
                                {
                                  "msku": "msku",
                                  "prepOwner": "AMAZON",
                                  "labelOwner": "AMAZON",
                                  "quantity": 2,
                                  "expiration": "2024-01-01",
                                  "manufacturingLotCode": "lotCode"
                                }
                              ],
                              "contentInformationSource": "BOX_CONTENT_PROVIDED"
                            }
                          ],
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipment does not exist under the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Generate a shipment content update preview given a set of intended boxes and/or items for a shipment with a confirmed carrier. The shipment content update preview will be viewable with the updated costs and contents prior to confirmation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "generateShipmentContentUpdatePreviews",
        "summary": "generateShipmentContentUpdatePreviews"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews/{contentUpdatePreviewId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a content update preview.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "contentUpdatePreviewId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetShipmentContentUpdatePreview 200 response",
            "schema": {
              "$ref": "#/definitions/ContentUpdatePreview"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "contentUpdatePreviewId": {
                        "value": "cu1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "contentUpdatePreviewId": "cu1234abcd-1234-abcd-5678-1234abcd5678",
                    "expiration": "2024-01-01T01:01:00.000Z",
                    "transportationOption": {
                      "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                      "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678",
                      "shippingSolution": "AMAZON_PARTNERED_CARRIER",
                      "carrier": {
                        "name": "name",
                        "alphaCode": "USPS"
                      },
                      "shippingMode": "GROUND_SMALL_PARCEL",
                      "quote": {
                        "cost": {
                          "code": "USD",
                          "amount": 500
                        },
                        "voidableUntil": "2024-01-01T00:00:00.000Z",
                        "expiration": "2024-01-01T00:00:00.000Z"
                      },
                      "carrierAppointment": {
                        "startTime": "2024-01-01T00:00:00.000Z",
                        "endTime": "2024-01-01T00:00:00.000Z"
                      },
                      "preconditions": [
                        "CONFIRMED_DELIVERY_WINDOW"
                      ]
                    },
                    "requestedUpdates": {
                      "boxes": [
                        {
                          "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                          "weight": {
                            "unit": "KG",
                            "value": 5.5
                          },
                          "dimensions": {
                            "unitOfMeasurement": "CM",
                            "length": 3,
                            "width": 4,
                            "height": 5
                          },
                          "quantity": 1,
                          "items": [
                            {
                              "msku": "msku",
                              "prepOwner": "AMAZON",
                              "labelOwner": "AMAZON",
                              "quantity": 2,
                              "expiration": "2024-01-01",
                              "manufacturingLotCode": "lotCode"
                            }
                          ],
                          "contentInformationSource": "BOX_CONTENT_PROVIDED"
                        }
                      ],
                      "items": [
                        {
                          "msku": "msku",
                          "prepOwner": "AMAZON",
                          "labelOwner": "AMAZON",
                          "quantity": 2,
                          "expiration": "2024-01-01",
                          "manufacturingLotCode": "lotCode"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "contentUpdatePreviewId": {
                        "value": "cu1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Retrieve a shipment content update preview which provides a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipmentContentUpdatePreview",
        "summary": "getShipmentContentUpdatePreview"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews/{contentUpdatePreviewId}/confirmation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a content update preview.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "contentUpdatePreviewId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ConfirmShipmentContentUpdatePreview 202 response",
            "schema": {
              "$ref": "#/definitions/ConfirmShipmentContentUpdatePreviewResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "contentUpdatePreviewId": {
                        "value": "cu1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "contentUpdatePreviewId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested contentUpdatePreviewId does not exist for the given shipment."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Confirm a shipment content update preview and accept the changes in transportation cost.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "confirmShipmentContentUpdatePreview",
        "summary": "confirmShipmentContentUpdatePreview"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryChallanDocument": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetDeliveryChallanDocument 200 response",
            "schema": {
              "$ref": "#/definitions/GetDeliveryChallanDocumentResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "documentDownload": {
                      "uri": "https://s3.amazonaws.com/bucket",
                      "downloadType": "URL",
                      "expiration": "2024-01-01T00:00:00.000Z"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Provide delivery challan document for PCP transportation in IN marketplace.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getDeliveryChallanDocument",
        "summary": "getDeliveryChallanDocument"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryWindowOptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The shipment to get delivery window options for.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of delivery window options to return in the response matching the given query.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListDeliveryWindowOptions 200 response",
            "schema": {
              "$ref": "#/definitions/ListDeliveryWindowOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "deliveryWindowOptions": [
                      {
                        "deliveryWindowOptionId": "dw1234abcd-1234-abcd-5678-1234abcd5678",
                        "startDate": "2024-01-01T00:00:00.000Z",
                        "endDate": "2024-01-01T06:00:00.000Z",
                        "availabilityType": "AVAILABLE",
                        "validUntil": "2024-01-01T06:00:00.000Z"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Retrieves all delivery window options for a shipment. Delivery window options must first be generated by the `generateDeliveryWindowOptions` operation before becoming available.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listDeliveryWindowOptions",
        "summary": "listDeliveryWindowOptions"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The shipment to generate delivery window options for.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "GenerateDeliveryWindowOptions 202 response",
            "schema": {
              "$ref": "#/definitions/GenerateDeliveryWindowOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The provided shipmentId is not valid for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Generates available delivery window options for a given shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "generateDeliveryWindowOptions",
        "summary": "generateDeliveryWindowOptions"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryWindowOptions/{deliveryWindowOptionId}/confirmation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The shipment to confirm the delivery window option for.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The id of the delivery window option to be confirmed.",
            "in": "path",
            "maxLength": 38,
            "minLength": 36,
            "name": "deliveryWindowOptionId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ConfirmDeliveryWindowOptions 202 response",
            "schema": {
              "$ref": "#/definitions/ConfirmDeliveryWindowOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "deliveryWindowOptionId": {
                        "value": "dw1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "deliveryWindowOptionId": {
                        "value": "dw1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist under the associated inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Confirms the delivery window option for chosen shipment within an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new delivery window options cannot be generated, but the chosen delivery window option can be updated before shipment closure. The window is used to provide the expected time when a shipment will arrive at the warehouse. All transportation options which have the program `CONFIRMED_DELIVERY_WINDOW` require a delivery window to be confirmed prior to transportation option confirmation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "confirmDeliveryWindowOptions",
        "summary": "confirmDeliveryWindowOptions"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/items": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of items to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListShipmentItems 200 response",
            "schema": {
              "$ref": "#/definitions/ListShipmentItemsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "items": [
                      {
                        "quantity": 5,
                        "expiration": "2024-01-01",
                        "manufacturingLotCode": "manufacturingLotCode",
                        "prepInstructions": [
                          {
                            "prepType": "ITEM_POLYBAGGING",
                            "prepOwner": "AMAZON",
                            "fee": {
                              "code": "USD",
                              "amount": 10
                            }
                          }
                        ],
                        "msku": "msku",
                        "asin": "asin",
                        "fnsku": "fnsku",
                        "labelOwner": "AMAZON"
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 1
                      },
                      "paginationToken": {
                        "value": ""
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Provides a paginated list of item packages in a shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listShipmentItems",
        "summary": "listShipmentItems"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/name": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateShipmentNameRequest"
            },
            "description": "The body of the request to `updateShipmentName`."
          }
        ],
        "responses": {
          "204": {
            "description": "UpdateShipmentName 204 response",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "name": "updatedShipmentName"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "name": "updatedShipmentName"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Updates the name of an existing shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateShipmentName",
        "summary": "updateShipmentName"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/pallets": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of pallets to return in the response matching the given query.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListShipmentPallets 200 response",
            "schema": {
              "$ref": "#/definitions/ListShipmentPalletsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "pallets": [
                      {
                        "stackability": "STACKABLE",
                        "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
                        "weight": {
                          "unit": "KG",
                          "value": 5.5
                        },
                        "dimensions": {
                          "unitOfMeasurement": "CM",
                          "length": 3,
                          "width": 4,
                          "height": 5
                        },
                        "quantity": 2
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested inbound plan does not exist."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Provides a paginated list of pallet packages in a shipment. A palletized shipment will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listShipmentPallets",
        "summary": "listShipmentPallets"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentCancellation": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelSelfShipAppointmentRequest"
            },
            "description": "The body of the request to `cancelSelfShipAppointment`."
          }
        ],
        "responses": {
          "202": {
            "description": "CancelSelfShipAppointment 202 response",
            "schema": {
              "$ref": "#/definitions/CancelSelfShipAppointmentResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "reasonComment": "OTHER"
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "reasonComment": "OTHER"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Cancels a self-ship appointment slot against a shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "cancelSelfShipAppointment",
        "summary": "cancelSelfShipAppointment"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentSlots": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of self ship appointment slots to return in the response matching the given query.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetSelfShipAppointmentSlots 200 response",
            "schema": {
              "$ref": "#/definitions/GetSelfShipAppointmentSlotsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "selfShipAppointmentSlotsAvailability": {
                      "expiresAt": "2024-01-02T00:00:00.000Z",
                      "slots": [
                        {
                          "slotId": "aa1234abcd-1234-abcd-5678-1234abcd5678",
                          "slotTime": {
                            "startTime": "2024-01-01T00:00:00.000Z",
                            "endTime": "2024-01-02T00:00:00.000Z"
                          }
                        }
                      ]
                    },
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the given inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Retrieves a list of available self-ship appointment slots used to drop off a shipment at a warehouse.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getSelfShipAppointmentSlots",
        "summary": "getSelfShipAppointmentSlots"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateSelfShipAppointmentSlotsRequest"
            },
            "description": "The body of the request to `generateSelfShipAppointmentSlots`."
          }
        ],
        "responses": {
          "201": {
            "description": "GenerateSelfShipAppointmentSlots 201 response",
            "schema": {
              "$ref": "#/definitions/GenerateSelfShipAppointmentSlotsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "desiredEndDate": "2024-01-15T00:00:00.000Z",
                          "desiredStartDate": "2024-01-16T00:00:00.000Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "desiredEndDate": "2024-01-15T00:00:00.000Z",
                          "desiredStartDate": "2024-01-16T00:00:00.000Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist in the inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Initiates the process of generating the appointment slots list.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "generateSelfShipAppointmentSlots",
        "summary": "generateSelfShipAppointmentSlots"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentSlots/{slotId}/schedule": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "An identifier to a self-ship appointment slot.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "slotId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleSelfShipAppointmentRequest"
            },
            "description": "The body of the request to `scheduleSelfShipAppointment`."
          }
        ],
        "responses": {
          "200": {
            "description": "ScheduleSelfShipAppointment 200 response",
            "schema": {
              "$ref": "#/definitions/ScheduleSelfShipAppointmentResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "slotId": {
                        "value": "aa1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "reasonComment": "OTHER"
                        }
                      }
                    }
                  },
                  "response": {
                    "selfShipAppointmentDetails": {
                      "appointmentId": 1000,
                      "appointmentSlotTime": {
                        "startTime": "2023-03-08T13:15:30Z",
                        "endTime": "2023-03-09T13:15:30Z"
                      },
                      "appointmentStatus": "ARRIVAL_SCHEDULED"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "slotId": {
                        "value": "aa1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "reasonComment": "OTHER"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Confirms or reschedules a self-ship appointment slot against a shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "scheduleSelfShipAppointment",
        "summary": "scheduleSelfShipAppointment"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/sourceAddress": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateShipmentSourceAddressRequest"
            },
            "description": "The body of the request to `updateShipmentSourceAddress`."
          }
        ],
        "responses": {
          "202": {
            "description": "UpdateShipmentSourceAddress 202 response",
            "schema": {
              "$ref": "#/definitions/UpdateShipmentSourceAddressResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "address": {
                            "name": "name",
                            "companyName": "Acme",
                            "addressLine1": "123 example street",
                            "addressLine2": "Unit 102",
                            "city": "Toronto",
                            "countryCode": "CA",
                            "stateOrProvinceCode": "ON",
                            "postalCode": "M1M1M1",
                            "phoneNumber": "1234567890",
                            "email": "email@email.com"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "address": {
                            "name": "name",
                            "companyName": "Acme",
                            "addressLine1": "123 example street",
                            "addressLine2": "Unit 102",
                            "city": "Toronto",
                            "countryCode": "CA",
                            "stateOrProvinceCode": "ON",
                            "postalCode": "M1M1M1",
                            "phoneNumber": "1234567890",
                            "email": "email@email.com"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Updates the source address of an existing shipment. The shipment source address can only be updated prior to the confirmation of the shipment carriers. As a result of the updated source address, existing transportation options will be invalidated and will need to be regenerated to capture the potential difference in transportation options and quotes due to the new source address.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateShipmentSourceAddress",
        "summary": "updateShipmentSourceAddress"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/trackingDetails": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of a shipment. A shipment contains the boxes and units being inbounded.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateShipmentTrackingDetailsRequest"
            },
            "description": "The body of the request to `updateShipmentTrackingDetails`."
          }
        ],
        "responses": {
          "202": {
            "description": "UpdateShipmentTrackingDetails 202 response",
            "schema": {
              "$ref": "#/definitions/UpdateShipmentTrackingDetailsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "trackingDetails": {
                            "ltlTrackingDetail": {
                              "freightBillNumber": [
                                "freightBillNumber1"
                              ],
                              "billOfLadingNumber": "billOfLadingNumber"
                            },
                            "spdTrackingDetail": {
                              "spdTrackingItems": [
                                {
                                  "boxId": "boxId",
                                  "trackingId": "trackingId"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "trackingDetails": {
                            "ltlTrackingDetail": {
                              "freightBillNumber": [
                                "freightBillNumber1"
                              ],
                              "billOfLadingNumber": "billOfLadingNumber"
                            },
                            "spdTrackingDetail": {
                              "spdTrackingItems": [
                                {
                                  "boxId": "boxId",
                                  "trackingId": "trackingId"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Updates a shipment's tracking details.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateShipmentTrackingDetails",
        "summary": "updateShipmentTrackingDetails"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/transportationOptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of transportation options to return in the response matching the given query.",
            "in": "query",
            "maximum": 20,
            "minimum": 1,
            "name": "pageSize",
            "type": "integer",
            "default": 10
          },
          {
            "description": "A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 0,
            "name": "paginationToken",
            "type": "string"
          },
          {
            "description": "The placement option to get transportation options for. Either `placementOptionId` or `shipmentId` must be specified.",
            "in": "query",
            "maxLength": 38,
            "minLength": 38,
            "name": "placementOptionId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "type": "string"
          },
          {
            "description": "The shipment to get transportation options for. Either `placementOptionId` or `shipmentId` must be specified.",
            "in": "query",
            "maxLength": 38,
            "minLength": 38,
            "name": "shipmentId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListTransportationOptions 200 response",
            "schema": {
              "$ref": "#/definitions/ListTransportationOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "placementOptionId": {
                        "value": "pl1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "sh1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "transportationOptions": [
                      {
                        "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                        "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678",
                        "shippingSolution": "AMAZON_PARTNERED_CARRIER",
                        "carrier": {
                          "name": "name",
                          "alphaCode": "USPS"
                        },
                        "shippingMode": "GROUND_SMALL_PARCEL",
                        "quote": {
                          "cost": {
                            "code": "USD",
                            "amount": 500
                          },
                          "voidableUntil": "2024-01-01T00:00:00.000Z",
                          "expiration": "2024-01-01T00:00:00.000Z"
                        },
                        "carrierAppointment": {
                          "startTime": "2024-01-01T00:00:00.000Z",
                          "endTime": "2024-01-02T00:00:00.000Z"
                        },
                        "preconditions": [
                          "CONFIRMED_DELIVERY_WINDOW"
                        ]
                      }
                    ],
                    "pagination": {
                      "nextToken": "nextPaginationToken"
                    }
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "placementOptionId": {
                        "value": "pl1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "shipmentId": {
                        "value": "bad234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "pageSize": {
                        "value": 2
                      },
                      "paginationToken": {
                        "value": "paginationToken"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist for the specified inbound plan."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Retrieves all transportation options for a shipment. Transportation options must first be generated by the `generateTransportationOptions` operation before becoming available.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listTransportationOptions",
        "summary": "listTransportationOptions"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateTransportationOptionsRequest"
            },
            "description": "The body of the request to `generateTransportationOptions`."
          }
        ],
        "responses": {
          "202": {
            "description": "GenerateTransportationOptions 202 response",
            "schema": {
              "$ref": "#/definitions/GenerateTransportationOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
                          "shipmentTransportationConfigurations": [
                            {
                              "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                              "readyToShipWindow": {
                                "start": "2024-01-01T00:00Z"
                              },
                              "contactInformation": {
                                "name": "name",
                                "phoneNumber": "1234567890",
                                "email": "email@email.com"
                              },
                              "freightInformation": {
                                "freightClass": "FC_50",
                                "declaredValue": {
                                  "code": "USD",
                                  "amount": 500
                                }
                              },
                              "pallets": [
                                {
                                  "stackability": "STACKABLE",
                                  "weight": {
                                    "unit": "KG",
                                    "value": 5.5
                                  },
                                  "dimensions": {
                                    "unitOfMeasurement": "CM",
                                    "length": 3,
                                    "width": 4,
                                    "height": 5
                                  },
                                  "quantity": 2
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
                          "shipmentTransportationConfigurations": [
                            {
                              "shipmentId": "bad234abcd-1234-abcd-5678-1234abcd5678",
                              "readyToShipWindow": {
                                "start": "2024-01-01T00:00Z"
                              },
                              "contactInformation": {
                                "name": "name",
                                "phoneNumber": "1234567890",
                                "email": "email@email.com"
                              },
                              "freightInformation": {
                                "freightClass": "FC_50",
                                "declaredValue": {
                                  "code": "USD",
                                  "amount": 500
                                }
                              },
                              "pallets": [
                                {
                                  "stackability": "STACKABLE",
                                  "weight": {
                                    "unit": "KG",
                                    "value": 5.5
                                  },
                                  "dimensions": {
                                    "unitOfMeasurement": "CM",
                                    "length": 3,
                                    "width": 4,
                                    "height": 5
                                  },
                                  "quantity": 2
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested shipmentId does not exist under the provided placement option."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Generates available transportation options for a given placement option.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "generateTransportationOptions",
        "summary": "generateTransportationOptions"
      }
    },
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/transportationOptions/confirmation": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an inbound plan.",
            "in": "path",
            "maxLength": 38,
            "minLength": 38,
            "name": "inboundPlanId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmTransportationOptionsRequest"
            },
            "description": "The body of the request to `confirmTransportationOptions`."
          }
        ],
        "responses": {
          "202": {
            "description": "ConfirmTransportationOptions 202 response",
            "schema": {
              "$ref": "#/definitions/ConfirmTransportationOptionsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wf1234abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "transportationSelections": [
                            {
                              "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                              "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678",
                              "contactInformation": {
                                "name": "name",
                                "phoneNumber": "1234567890",
                                "email": "email@email.com"
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "inboundPlanId": {
                        "value": "wfbad4abcd-1234-abcd-5678-1234abcd5678"
                      },
                      "body": {
                        "value": {
                          "transportationSelections": [
                            {
                              "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
                              "transportationOptionId": "bad234abcd-1234-abcd-5678-1234abcd5678",
                              "contactInformation": {
                                "name": "name",
                                "phoneNumber": "1234567890",
                                "email": "email@email.com"
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested transportationOptionId does not exist under the associated shipment."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Confirms all the transportation options for an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new transportation options can not be generated or confirmed for the Inbound Plan.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "confirmTransportationOptions",
        "summary": "confirmTransportationOptions"
      }
    },
    "/inbound/fba/2024-03-20/items/compliance": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "A list of merchant SKUs, a merchant-supplied identifier of a specific SKU.",
            "in": "query",
            "items": {
              "maxLength": 40,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "name": "mskus",
            "required": true,
            "type": "array"
          },
          {
            "description": "The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).",
            "in": "query",
            "maxLength": 20,
            "minLength": 1,
            "name": "marketplaceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListItemComplianceDetails 200 response",
            "schema": {
              "$ref": "#/definitions/ListItemComplianceDetailsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "mskus": {
                        "value": [
                          "msku1",
                          "msku2"
                        ]
                      },
                      "marketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      }
                    }
                  },
                  "response": {
                    "complianceDetails": [
                      {
                        "msku": "msku1",
                        "fnsku": "fnsku1",
                        "asin": "asin1",
                        "taxDetails": {
                          "hsnCode": "720299",
                          "declaredValue": {
                            "code": "USD",
                            "amount": 50
                          },
                          "taxRates": [
                            {
                              "taxType": "TOTAL_TAX",
                              "gstRate": 1,
                              "cessRate": 1
                            }
                          ]
                        }
                      },
                      {
                        "msku": "msku2",
                        "fnsku": "fnsku2",
                        "asin": "asin2",
                        "taxDetails": {
                          "hsnCode": "720299",
                          "declaredValue": {
                            "code": "USD",
                            "amount": 50
                          },
                          "taxRates": [
                            {
                              "taxType": "TOTAL_TAX",
                              "gstRate": 1,
                              "cessRate": 1
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "mskus": {
                        "value": [
                          "badmsku"
                        ]
                      },
                      "marketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested MSKU is not valid."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "List the inbound compliance details for MSKUs in a given marketplace.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listItemComplianceDetails",
        "summary": "listItemComplianceDetails"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).",
            "in": "query",
            "maxLength": 20,
            "minLength": 1,
            "name": "marketplaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateItemComplianceDetailsRequest"
            },
            "description": "The body of the request to `updateItemComplianceDetails`."
          }
        ],
        "responses": {
          "202": {
            "description": "UpdateItemComplianceDetails 202 response",
            "schema": {
              "$ref": "#/definitions/UpdateItemComplianceDetailsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "body": {
                        "value": {
                          "msku": "msku",
                          "taxDetails": {
                            "hsnCode": "720299",
                            "declaredValue": {
                              "code": "USD",
                              "amount": 50
                            },
                            "taxRates": [
                              {
                                "taxType": "TOTAL_TAX",
                                "gstRate": 1,
                                "cessRate": 1
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "body": {
                        "value": {
                          "msku": "badmsku",
                          "taxDetails": {
                            "hsnCode": "720299",
                            "declaredValue": {
                              "code": "USD",
                              "amount": 50
                            },
                            "taxRates": [
                              {
                                "taxType": "TOTAL_TAX",
                                "gstRate": 1,
                                "cessRate": 1
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested msku does not exist for the specified marketplace."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Update compliance details for a list of MSKUs. The details provided here are only used for the India (IN - A21TJRUUN4KGV) marketplace compliance validation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateItemComplianceDetails",
        "summary": "updateItemComplianceDetails"
      }
    },
    "/inbound/fba/2024-03-20/items/labels": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateMarketplaceItemLabelsRequest"
            },
            "description": "The body of the request to `createMarketplaceItemLabels`."
          }
        ],
        "responses": {
          "200": {
            "description": "CreateMarketplaceItemLabels 200 response",
            "schema": {
              "$ref": "#/definitions/CreateMarketplaceItemLabelsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "mskuQuantities": [
                            {
                              "msku": "msku1",
                              "quantity": 1
                            },
                            {
                              "msku": "msku2",
                              "quantity": 1
                            }
                          ],
                          "labelType": "STANDARD_FORMAT",
                          "pageType": "A4_21",
                          "localeCode": "en_US"
                        }
                      }
                    }
                  },
                  "response": {
                    "documentDownloads": [
                      {
                        "uri": "https://s3.amazonaws.com/bucket",
                        "downloadType": "URL",
                        "expiration": "2024-01-01T00:00:00.000Z"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "mskuQuantities": [
                            {
                              "msku": "msku1",
                              "quantity": 1
                            },
                            {
                              "msku": "msku2",
                              "quantity": 1
                            }
                          ],
                          "labelType": "THERMAL_PRINTING",
                          "height": 25,
                          "width": 100,
                          "localeCode": "en_US"
                        }
                      }
                    }
                  },
                  "response": {
                    "documentDownloads": [
                      {
                        "uri": "https://s3.amazonaws.com/bucket",
                        "downloadType": "URL",
                        "expiration": "2024-01-01T00:00:00.000Z"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "mskuQuantities": [
                            {
                              "msku": "badMsku",
                              "quantity": 1
                            }
                          ],
                          "labelType": "THERMAL_PRINTING",
                          "height": 25,
                          "width": 100,
                          "localeCode": "en_US"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested MSKU is not valid."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "For a given marketplace - creates labels for a list of MSKUs.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createMarketplaceItemLabels",
        "summary": "createMarketplaceItemLabels"
      }
    },
    "/inbound/fba/2024-03-20/items/prepDetails": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).",
            "in": "query",
            "maxLength": 20,
            "minLength": 1,
            "name": "marketplaceId",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of merchant SKUs, a merchant-supplied identifier of a specific SKU.",
            "in": "query",
            "items": {
              "maxLength": 40,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "name": "mskus",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ListPrepDetails 200 response",
            "schema": {
              "$ref": "#/definitions/ListPrepDetailsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "mskus": {
                        "value": [
                          "msku1",
                          "msku2"
                        ]
                      }
                    }
                  },
                  "response": {
                    "mskuPrepDetails": [
                      {
                        "msku": "msku1",
                        "prepCategory": "TEXTILE",
                        "prepTypes": [
                          "ITEM_LABELING",
                          "ITEM_POLYBAGGING"
                        ],
                        "prepOwnerConstraint": "AMAZON_ONLY",
                        "labelOwnerConstraint": "AMAZON_ONLY",
                        "allOwnersConstraint": "MUST_MATCH"
                      },
                      {
                        "msku": "msku2",
                        "prepCategory": "FRAGILE",
                        "prepTypes": [
                          "ITEM_LABELING",
                          "ITEM_BUBBLEWRAP"
                        ],
                        "allOwnersConstraint": "MUST_MATCH"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "mskus": {
                        "value": [
                          "badmsku"
                        ]
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested MSKU is not valid."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Get preparation details for a list of MSKUs in a specified marketplace.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listPrepDetails",
        "summary": "listPrepDetails"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPrepDetailsRequest"
            },
            "description": "The body of the request to `setPrepDetails`."
          }
        ],
        "responses": {
          "202": {
            "description": "SetPrepDetails 202 response",
            "schema": {
              "$ref": "#/definitions/SetPrepDetailsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "mskuPrepDetails": [
                            {
                              "msku": "msku",
                              "prepCategory": "TEXTILE",
                              "prepTypes": [
                                "ITEM_LABELING",
                                "ITEM_POLYBAGGING"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "mskuPrepDetails": [
                            {
                              "msku": "badSku",
                              "prepCategory": "TEXTILE",
                              "prepTypes": [
                                "ITEM_LABELING",
                                "ITEM_POLYBAGGING"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The requested MSKU is not valid."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Set the preparation details for a list of MSKUs in a specified marketplace.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "setPrepDetails",
        "summary": "setPrepDetails"
      }
    },
    "/inbound/fba/2024-03-20/operations/{operationId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Identifier of an asynchronous operation.",
            "in": "path",
            "maxLength": 38,
            "minLength": 36,
            "name": "operationId",
            "pattern": "^[a-zA-Z0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetInboundOperationStatus 200 response",
            "schema": {
              "$ref": "#/definitions/InboundOperationStatus"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "operationId": {
                        "value": "1234abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "operationId": "a440f2ff-cb08-416a-99e1-67a04eee88f6",
                    "operation": "operationName",
                    "operationStatus": "SUCCESS",
                    "operationProblems": [
                      {
                        "code": "DimensionMismatch",
                        "message": "The dimension does not match what is expected.",
                        "details": "",
                        "severity": "WARNING"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "operationId": {
                        "value": "bad4abcd-1234-abcd-5678-1234abcd5678"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BadRequest",
                        "message": "The operationId is malformed."
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              },
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "Fulfillment Inbound"
        ],
        "description": "Gets the status of the processing of an asynchronous API call.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 6 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getInboundOperationStatus",
        "summary": "getInboundOperationStatus"
      }
    },
    "/fba/outbound/2020-07-01/fulfillmentOrders/preview": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "post": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Returns a list of fulfillment order previews based on shipping criteria that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getFulfillmentPreview",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetFulfillmentPreviewRequest"
            },
            "description": "GetFulfillmentPreviewRequest parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentPreviewResponse"
            },
            "examples": {
              "payload": {
                "fulfillmentPreviews": [
                  {
                    "shippingSpeedCategory": "Standard",
                    "isFulfillable": true,
                    "estimatedShippingWeight": {
                      "unit": "POUNDS",
                      "value": "22"
                    },
                    "estimatedFees": [
                      {
                        "name": "FBAPerUnitFulfillmentFee",
                        "amount": {
                          "currencyCode": "USD",
                          "value": "19.71"
                        }
                      }
                    ],
                    "fulfillmentPreviewShipments": [
                      {
                        "earliestShipDate": "2020-02-11T18:16:16Z",
                        "latestShipDate": "2020-02-11T18:16:16Z",
                        "earliestArrivalDate": "2020-02-17T18:16:16Z",
                        "latestArrivalDate": "2020-02-17T18:16:16Z",
                        "fulfillmentPreviewItems": [
                          {
                            "sellerSku": "PSMM-TEST-SKU-Jan-21_19_39_23-0788",
                            "quantity": 1,
                            "sellerFulfillmentOrderItemId": "OrderItemID2",
                            "estimatedShippingWeight": {
                              "unit": "POUNDS",
                              "value": "20"
                            },
                            "shippingWeightCalculationMethod": "Package"
                          }
                        ]
                      }
                    ],
                    "unfulfillablePreviewItems": [],
                    "marketplaceId": "ATVPDKIKX0DER",
                    "featureConstraints": [
                      {
                        "featureName": "BLANK_BOX",
                        "featureFulfillmentPolicy": "NotRequired"
                      },
                      {
                        "featureName": "BLOCK_AMZL",
                        "featureFulfillmentPolicy": "Required"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentPreviewResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentPreviewResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentPreviewResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentPreviewResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentPreviewResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentPreviewResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentPreviewResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/deliveryOffers": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "post": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Returns delivery options that include an estimated delivery date and offer expiration, based on criteria that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "deliveryOffers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDeliveryOffersRequest"
            },
            "description": "GetDeliveryOffersRequest parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetDeliveryOffersResponse"
            },
            "examples": {
              "payload": {
                "deliveryOffers": [
                  {
                    "expiresAt": "2023-10-11T18:00:00Z",
                    "dateRange": {
                      "earliest": "2023-10-13T10:00:00Z",
                      "latest": "2023-10-14T16:00:00Z"
                    },
                    "policy": {
                      "messaging": {
                        "text": "Get it as soon as Wed, Aug 23",
                        "locale": "en_US"
                      }
                    }
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetDeliveryOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetDeliveryOffersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetDeliveryOffersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetDeliveryOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetDeliveryOffersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetDeliveryOffersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetDeliveryOffersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/fulfillmentOrders": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "get": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Returns a list of fulfillment orders fulfilled after (or at) a specified date-time, or indicated by the next token parameter.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)",
        "operationId": "listAllFulfillmentOrders",
        "parameters": [
          {
            "name": "queryStartDate",
            "in": "query",
            "description": "A date used to select fulfillment orders that were last updated after (or at) a specified time. An update is defined as any change in fulfillment order status, including the creation of a new fulfillment order.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "A string token returned in the response to your previous request.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ListAllFulfillmentOrdersResponse"
            },
            "examples": {
              "payload": {
                "fulfillmentOrders": [
                  {
                    "sellerFulfillmentOrderId": "902-6018020-0202003",
                    "displayableOrderId": "mws-test-query-20100713023203751",
                    "displayableOrderDate": "2020-01-09T19:46:45Z",
                    "displayableOrderComment": "TestOrder",
                    "shippingSpeedCategory": "Standard",
                    "destinationAddress": {
                      "name": "Amazon",
                      "addressLine1": "1234 Amazon Way",
                      "addressLine2": "Suite 123",
                      "addressLine3": "Lane1",
                      "city": "Troy",
                      "stateOrRegion": "MI",
                      "countryCode": "US",
                      "postalCode": "48084"
                    },
                    "fulfillmentPolicy": "FillOrKill",
                    "receivedDate": "2020-01-21T21:07:13Z",
                    "fulfillmentOrderStatus": "RECEIVED",
                    "statusUpdatedDate": "2020-01-21T21:07:30Z",
                    "featureConstraints": [
                      {
                        "featureName": "BLANK_BOX",
                        "featureFulfillmentPolicy": "Required"
                      },
                      {
                        "featureName": "BLOCK_AMZL",
                        "featureFulfillmentPolicy": "Required"
                      }
                    ]
                  },
                  {
                    "sellerFulfillmentOrderId": "601-2020200-12345678",
                    "displayableOrderId": "TestOrder-FBAOutbound",
                    "displayableOrderDate": "2020-01-09T19:46:45Z",
                    "displayableOrderComment": "TestOrder",
                    "shippingSpeedCategory": "Standard",
                    "destinationAddress": {
                      "name": "Amazon",
                      "addressLine1": "1234 Amazon Way",
                      "addressLine2": "Suite 123",
                      "addressLine3": "Lane1",
                      "city": "Troy",
                      "stateOrRegion": "MI",
                      "countryCode": "US",
                      "postalCode": "48084"
                    },
                    "fulfillmentPolicy": "FillOrKill",
                    "receivedDate": "2020-01-23T19:56:41Z",
                    "fulfillmentOrderStatus": "COMPLETE",
                    "statusUpdatedDate": "2020-01-24T15:28:27Z",
                    "featureConstraints": null
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ListAllFulfillmentOrdersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ListAllFulfillmentOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ListAllFulfillmentOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ListAllFulfillmentOrdersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ListAllFulfillmentOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ListAllFulfillmentOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ListAllFulfillmentOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Requests that Amazon ship items from the seller's inventory in Amazon's fulfillment network to a destination address.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)",
        "operationId": "createFulfillmentOrder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentOrderRequest"
            },
            "description": "CreateFulfillmentOrderRequest parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/tracking": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "get": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Returns delivery tracking information for a package in an outbound shipment for a Multi-Channel Fulfillment order.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getPackageTrackingDetails",
        "parameters": [
          {
            "name": "packageNumber",
            "in": "query",
            "description": "The unencrypted package identifier returned by the `getFulfillmentOrder` operation.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetPackageTrackingDetailsResponse"
            },
            "examples": {
              "payload": {
                "packageNumber": 212794778,
                "trackingNumber": "1Z50V7420354708051",
                "customerTrackingLink": "https%3A%2F%2Fwww.swiship.com%2Ftrack%3Fid%3D1Z50V7420354708051%0A",
                "carrierCode": "UPS",
                "shipToAddress": {
                  "name": "Amazon",
                  "addressLine1": "1234 Amazon Way",
                  "addressLine2": "Suite 123",
                  "addressLine3": "Lane1",
                  "city": "Troy",
                  "stateOrRegion": "MI",
                  "countryCode": "US",
                  "postalCode": "48084"
                },
                "currentStatus": "DELIVERED",
                "currentStatusDescription": "Delivered to the destination address",
                "additionalLocationInfo": "AS_INSTRUCTED",
                "trackingEvents": [
                  {
                    "eventDate": "2020-01-22T00:15:55Z",
                    "eventAddress": {
                      "city": "Troy",
                      "state": "MI",
                      "country": "US"
                    },
                    "eventCode": "EVENT_301",
                    "eventDescription": "Delivered."
                  },
                  {
                    "eventDate": "2019-10-30T23:33:28Z",
                    "eventAddress": {
                      "city": "Phoenix",
                      "state": "AZ",
                      "country": "US"
                    },
                    "eventCode": "EVENT_206",
                    "eventDescription": "In transit to pickup location"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetPackageTrackingDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetPackageTrackingDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetPackageTrackingDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetPackageTrackingDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetPackageTrackingDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetPackageTrackingDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetPackageTrackingDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/returnReasonCodes": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "get": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Returns a list of return reason codes for a seller SKU in a given marketplace. The parameters for this operation may contain special characters that require URL encoding. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listReturnReasonCodes",
        "parameters": [
          {
            "name": "sellerSku",
            "in": "query",
            "description": "The seller SKU for which return reason codes are required.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The marketplace for which the seller wants return reason codes.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sellerFulfillmentOrderId",
            "in": "query",
            "description": "The identifier assigned to the item by the seller when the fulfillment order was created. The service uses this value to determine the marketplace for which the seller wants return reason codes.",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language that the `TranslatedDescription` property of the `ReasonCodeDetails` response object should be translated into.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ListReturnReasonCodesResponse"
            },
            "examples": {
              "payload": {
                "reasonCodeDetails": [
                  {
                    "returnReasonCode": "CR-UNWANTED_ITEM",
                    "description": "No longer needed/wanted"
                  },
                  {
                    "returnReasonCode": "AMZ-PG-BAD-DESC",
                    "description": "Different from website description"
                  },
                  {
                    "returnReasonCode": "CR-DEFECTIVE",
                    "description": "Defective/Does not work properly"
                  },
                  {
                    "returnReasonCode": "CR-ORDERED_WRONG_ITEM",
                    "description": "Accidental order"
                  },
                  {
                    "returnReasonCode": "CR-FOUND_BETTER_PRICE",
                    "description": "Better price available"
                  },
                  {
                    "returnReasonCode": "CR-DAMAGED_BY_FC",
                    "description": "Damaged due to inappropriate packaging"
                  },
                  {
                    "returnReasonCode": "CR-MISSED_ESTIMATED_DELIVERY",
                    "description": "Missed estimated delivery date"
                  },
                  {
                    "returnReasonCode": "CR-MISSING_PARTS",
                    "description": "Missing parts or accessories"
                  },
                  {
                    "returnReasonCode": "CR-DAMAGED_BY_CARRIER",
                    "description": "Damaged during shipping"
                  },
                  {
                    "returnReasonCode": "CR-SWITCHEROO",
                    "description": "Different from what was ordered"
                  },
                  {
                    "returnReasonCode": "CR-EXTRA_ITEM",
                    "description": "Arrived in addition to what was ordered"
                  },
                  {
                    "returnReasonCode": "CR-UNAUTHORIZED_PURCHASE",
                    "description": "Unauthorized purchase"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ListReturnReasonCodesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ListReturnReasonCodesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ListReturnReasonCodesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ListReturnReasonCodesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ListReturnReasonCodesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ListReturnReasonCodesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ListReturnReasonCodesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/fulfillmentOrders/{sellerFulfillmentOrderId}/return": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "put": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Creates a fulfillment return.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createFulfillmentReturn",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentReturnRequest"
            },
            "description": "CreateFulfillmentReturnRequest parameter"
          },
          {
            "name": "sellerFulfillmentOrderId",
            "in": "path",
            "description": "An identifier assigned by the seller to the fulfillment order at the time it was created. The seller uses their own records to find the correct `SellerFulfillmentOrderId` value based on the buyer's request to return items.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentReturnResponse"
            },
            "examples": {
              "payload": {
                "returnItems": [
                  {
                    "sellerReturnItemId": "testReturn11",
                    "sellerFulfillmentOrderItemId": "OrderItemID2",
                    "amazonShipmentId": "D4yZjWZVN",
                    "returnComment": "TestReturn",
                    "amazonReturnReasonCode": "UNKNOWN_OTHER_REASON",
                    "status": "New",
                    "statusChangedDate": "2020-02-07T04:14:38Z",
                    "returnAuthorizationId": "RMA3JTIPBJM42UU6"
                  }
                ],
                "invalidReturnItems": [],
                "returnAuthorizations": [
                  {
                    "returnAuthorizationId": "RMA3JTIPBJM42UU6",
                    "fulfillmentCenterId": "TUS1",
                    "returnToAddress": {
                      "name": "Returns Department",
                      "addressLine1": "5333 W. Lower Buckeye Road",
                      "districtOrCounty": "US",
                      "city": "Phoenix",
                      "stateOrRegion": "AZ",
                      "countryCode": "US",
                      "postalCode": "85043"
                    },
                    "amazonRmaId": "D50WttPHRRMA",
                    "rmaPageURL": "https://www.amazon.com/gp/orc/rml/D50WttPHRRMA"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentReturnResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentReturnResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentReturnResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentReturnResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentReturnResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentReturnResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateFulfillmentReturnResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/fulfillmentOrders/{sellerFulfillmentOrderId}": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "get": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Returns the fulfillment order indicated by the specified order identifier.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getFulfillmentOrder",
        "parameters": [
          {
            "name": "sellerFulfillmentOrderId",
            "in": "path",
            "description": "The identifier assigned to the item by the seller when the fulfillment order was created.",
            "required": true,
            "type": "string",
            "maxLength": 40
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentOrderResponse"
            },
            "examples": {
              "payload": {
                "fulfillmentOrder": {
                  "sellerFulfillmentOrderId": "FBATestOrder-1",
                  "marketplaceId": "ATVPDKIKX0DER",
                  "displayableOrderId": "TestOrder-FBAOutbound",
                  "displayableOrderDate": "2020-01-09T19:46:45Z",
                  "displayableOrderComment": "TestOrder",
                  "shippingSpeedCategory": "Standard",
                  "destinationAddress": {
                    "name": "Amazon",
                    "addressLine1": "1234 Amazon Way",
                    "addressLine2": "Suite 123",
                    "addressLine3": "Lane1",
                    "city": "Troy",
                    "stateOrRegion": "MI",
                    "countryCode": "US",
                    "postalCode": "48084"
                  },
                  "fulfillmentAction": "Ship",
                  "fulfillmentPolicy": "FillOrKill",
                  "receivedDate": "2020-02-07T01:23:30Z",
                  "fulfillmentOrderStatus": "PROCESSING",
                  "statusUpdatedDate": "2020-02-07T02:33:31Z",
                  "notificationEmails": [
                    "test2@amazon.com",
                    "test1@amazon.com"
                  ]
                },
                "fulfillmentOrderItems": [
                  {
                    "sellerSku": "PSMM-TEST-SKU-Jan-21_19_59_44-0738",
                    "sellerFulfillmentOrderItemId": "OrderItemID2",
                    "quantity": 1,
                    "fulfillmentNetworkSku": "B07CGHKWZP",
                    "orderItemDisposition": "Sellable",
                    "cancelledQuantity": 0,
                    "unfulfillableQuantity": 0,
                    "estimatedShipDate": "2020-02-08T01:23:31Z",
                    "estimatedArrivalDate": "2020-02-15T01:23:31Z",
                    "perUnitDeclaredValue": {
                      "currencyCode": "USD",
                      "value": "18.99"
                    }
                  },
                  {
                    "sellerSku": "CR-47K6-H6QN",
                    "sellerFulfillmentOrderItemId": "OrderItemID1",
                    "quantity": 3,
                    "fulfillmentNetworkSku": "X0014BIZ8T",
                    "orderItemDisposition": "Sellable",
                    "cancelledQuantity": 0,
                    "unfulfillableQuantity": 0,
                    "estimatedShipDate": "2020-02-08T01:23:31Z",
                    "estimatedArrivalDate": "2020-02-15T01:23:31Z",
                    "perUnitDeclaredValue": {
                      "currencyCode": "USD",
                      "value": "2.00"
                    }
                  }
                ],
                "fulfillmentShipments": [
                  {
                    "amazonShipmentId": "DchKfcZ9N",
                    "fulfillmentCenterId": "RNO1",
                    "fulfillmentShipmentStatus": "PENDING",
                    "shippingDate": "2020-02-07T02:33:23Z",
                    "estimatedArrivalDate": "2020-02-07T02:33:23Z",
                    "fulfillmentShipmentItem": [
                      {
                        "sellerSku": "PSMM-TEST-SKU-Jan-21_19_59_44-0738",
                        "sellerFulfillmentOrderItemId": "OrderItemID2",
                        "quantity": 1,
                        "packageNumber": 0,
                        "serialNumber": "a1b2c"
                      },
                      {
                        "sellerSku": "CR-47K6-H6QN",
                        "sellerFulfillmentOrderItemId": "OrderItemID1",
                        "quantity": 3,
                        "packageNumber": 0,
                        "serialNumber": "",
                        "manufacturerLotCodes": [
                          "LOT0822-1234",
                          "LOT1030-5678"
                        ]
                      }
                    ]
                  }
                ],
                "returnItems": [],
                "returnAuthorizations": []
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Updates and/or requests shipment for a fulfillment order with an order hold on it.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateFulfillmentOrder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFulfillmentOrderRequest"
            },
            "description": "UpdateFulfillmentOrderRequest parameter"
          },
          {
            "name": "sellerFulfillmentOrderId",
            "in": "path",
            "description": "The identifier assigned to the item by the seller when the fulfillment order was created.",
            "required": true,
            "type": "string",
            "maxLength": 40
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/UpdateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/UpdateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/UpdateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/UpdateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/UpdateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/UpdateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/UpdateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/UpdateFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/fulfillmentOrders/{sellerFulfillmentOrderId}/cancel": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "put": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Requests that Amazon stop attempting to fulfill the fulfillment order indicated by the specified order identifier.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "cancelFulfillmentOrder",
        "parameters": [
          {
            "name": "sellerFulfillmentOrderId",
            "in": "path",
            "description": "The identifier assigned to the item by the seller when the fulfillment order was created.",
            "required": true,
            "type": "string",
            "maxLength": 40
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CancelFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CancelFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/CancelFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CancelFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/CancelFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CancelFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CancelFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CancelFulfillmentOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/fulfillmentOrders/{sellerFulfillmentOrderId}/status": {
      "x-amzn-api-sandbox-only": true,
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "put": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Requests that Amazon update the status of an order in the sandbox testing environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Fulfillment Outbound Dynamic Sandbox Guide](https://developer-docs.amazon.com/sp-api/docs/fulfillment-outbound-dynamic-sandbox-guide) and [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.",
        "operationId": "submitFulfillmentOrderStatusUpdate",
        "parameters": [
          {
            "name": "sellerFulfillmentOrderId",
            "in": "path",
            "description": "The identifier assigned to the item by the seller when the fulfillment order was created.",
            "required": true,
            "type": "string",
            "maxLength": 40
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitFulfillmentOrderStatusUpdateRequest"
            },
            "description": "The identifier assigned to the item by the seller when the fulfillment order was created."
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SubmitFulfillmentOrderStatusUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/SubmitFulfillmentOrderStatusUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/SubmitFulfillmentOrderStatusUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/SubmitFulfillmentOrderStatusUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/SubmitFulfillmentOrderStatusUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/SubmitFulfillmentOrderStatusUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/SubmitFulfillmentOrderStatusUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/SubmitFulfillmentOrderStatusUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/features": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "get": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Returns a list of features available for Multi-Channel Fulfillment orders in the marketplace you specify, and whether the seller for which you made the call is enrolled for each feature.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getFeatures",
        "parameters": [
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The marketplace for which to return the list of features.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetFeaturesResponse"
            },
            "examples": {
              "payload": {
                "features": [
                  {
                    "featureName": "BLANK_BOX",
                    "featureDescription": "Provides the ability to ship in non-Amazon branded packaging (blank boxes).",
                    "sellerEligible": true
                  },
                  {
                    "featureName": "PSLIP",
                    "featureDescription": "Provides the ability to insert customized packing slips with messages.",
                    "sellerEligible": true
                  }
                ],
                "schema": null
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetFeaturesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetFeaturesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetFeaturesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetFeaturesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetFeaturesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetFeaturesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetFeaturesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/features/inventory/{featureName}": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "get": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Returns a list of inventory items that are eligible for the fulfillment feature you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)..",
        "operationId": "getFeatureInventory",
        "parameters": [
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The marketplace for which to return a list of the inventory that is eligible for the specified feature.",
            "required": true,
            "type": "string"
          },
          {
            "name": "featureName",
            "in": "path",
            "description": "The name of the feature for which to return a list of eligible inventory.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "A string token returned in the response to your previous request that is used to return the next response page. A value of null will return the first page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryStartDate",
            "in": "query",
            "description": "A date that you can use to select inventory that has been updated since a specified date. An update is defined as any change in feature-enabled inventory availability. The date must be in the format yyyy-MM-ddTHH:mm:ss.sssZ",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetFeatureInventoryResponse"
            },
            "examples": {
              "payload": {
                "marketplaceId": "ATVPDKIKX0DER",
                "featureName": "TEST_FEATURE",
                "nextToken": null,
                "featureSkus": [
                  {
                    "sellerSku": "sellerSku1",
                    "fnSku": "fnSku",
                    "asin": "asin",
                    "skuCount": 23,
                    "overlappingSkus": [
                      "sellerSku2",
                      "sellerSku3",
                      "sellerSku4"
                    ]
                  },
                  {
                    "sellerSku": "sellerSku2",
                    "fnSku": "sadf",
                    "asin": "ssss",
                    "skuCount": 1,
                    "overlappingSkus": [
                      "sellerSku1",
                      "sellerSku3",
                      "sellerSku4"
                    ]
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetFeatureInventoryResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetFeatureInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetFeatureInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetFeatureInventoryResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetFeatureInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetFeatureInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetFeatureInventoryResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/fba/outbound/2020-07-01/features/inventory/{featureName}/{sellerSku}": {
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "get": {
        "tags": [
          "fbaOutbound"
        ],
        "description": "Returns the number of items with the sellerSKU you specify that can have orders fulfilled using the specified feature. Note that if the sellerSKU isn't eligible, the response will contain an empty skuInfo object. The parameters for this operation may contain special characters that require URL encoding. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getFeatureSKU",
        "parameters": [
          {
            "name": "marketplaceId",
            "in": "query",
            "description": "The marketplace for which to return the count.",
            "required": true,
            "type": "string"
          },
          {
            "name": "featureName",
            "in": "path",
            "description": "The name of the feature.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sellerSku",
            "in": "path",
            "description": "Used to identify an item in the given marketplace. `SellerSKU` is qualified by the seller's `SellerId`, which is included with every operation that you submit.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetFeatureSkuResponse"
            },
            "examples": {
              "payload": {
                "marketplaceId": "ATVPDKIKX0DER",
                "featureName": "BLANK_BOX",
                "isEligible": true,
                "ineligibleReasons": [],
                "skuInfo": {
                  "sellerSku": "TEST_SKU",
                  "fnSku": "TEST_fnSku",
                  "asin": "TEST_asin",
                  "skuCount": 33
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetFeatureSkuResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetFeatureSkuResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetFeatureSkuResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetFeatureSkuResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetFeatureSkuResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetFeatureSkuResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetFeatureSkuResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/tax/invoices/2024-06-19/attributes": {
      "get": {
        "tags": [
          "invoices"
        ],
        "description": "Returns marketplace-dependent schemas and their respective set of possible values.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getInvoicesAttributes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The marketplace identifier.",
            "type": "string",
            "name": "marketplaceId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/GetInvoicesAttributesResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "A2Q3Y263D00KWC"
                      }
                    }
                  },
                  "response": {
                    "invoicesAttributes": {
                      "invoiceStatusOptions": [
                        {
                          "description": "The government authorized the invoice.",
                          "value": "AUTHORIZED"
                        },
                        {
                          "description": "The government rejected the invoice.",
                          "value": "REJECTED"
                        },
                        {
                          "description": "The invoice is canceled.",
                          "value": "CANCELED"
                        }
                      ],
                      "invoiceTypeOptions": [],
                      "transactionIdentifierNameOptions": [],
                      "transactionTypeOptions": []
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "details": "Missing required parameter: 'marketplaceId'",
                        "message": "Invalid Request."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "A list of error responses returned when a request is unsuccessful.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/tax/invoices/2024-06-19/documents/{invoicesDocumentId}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "description": "Returns the invoice document's ID and URL. Use the URL to download the ZIP file, which contains the invoices from the corresponding `createInvoicesExport` request.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0167 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getInvoicesDocument",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The export document identifier.",
            "type": "string",
            "name": "invoicesDocumentId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/GetInvoicesDocumentResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "invoicesDocumentId": {
                        "value": "18c598f5-75db-4c1a-bd3e-4c64b36781c5"
                      }
                    }
                  },
                  "response": {
                    "invoicesDocument": {
                      "invoicesDocumentId": "18c598f5-75db-4c1a-bd3e-4c64b36781c5",
                      "invoicesDocumentUrl": "https://invoicesdocumentbucket.s3.eu-east-1.amazonaws.com/18c598f5-75db-4c1a-bd3e-4c64b36781c5.xml?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=<CREDENTIAL>&X-Amz-Date=20240710T171315Z&X-Amz-Expires=300&X-Amz-Signature=<SIGNATURE>&X-Amz-SignedHeaders=host"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "details": "Missing required parameter 'invoiceId'",
                        "message": "Invalid Request."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "A list of error responses returned when a request is unsuccessful.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/tax/invoices/2024-06-19/exports": {
      "post": {
        "tags": [
          "invoices"
        ],
        "description": "Creates an invoice export request.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.167 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createInvoicesExport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Information required to create the export request.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportInvoicesRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ExportInvoicesResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "dateEnd": "2024-07-30T23:59:59",
                          "dateStart": "2024-07-01T00:00:00",
                          "externalInvoiceId": "1283743",
                          "fileFormat": "XML",
                          "invoiceType": "SYMBOLIC_RETURN",
                          "marketplaceId": "A2Q3Y263D00KWC",
                          "series": "32",
                          "statuses": [
                            "AUTHORIZED"
                          ],
                          "transactionIdentifier": {
                            "name": "BUSINESS_TRANSACTION_ID",
                            "id": "94cd4e1a-5cc5-486d-b592-045a95a168e1"
                          },
                          "transactionType": "CUSTOMER_SALES"
                        }
                      }
                    }
                  },
                  "response": {
                    "exportId": "4bdd8293-0cd7-4208-bed5-78b2c6ecefef"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "details": "Missing required attribute(s): 'marketplaceId'.",
                        "message": "Request has missing or invalid parameters and cannot be parsed."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "A list of error responses returned when a request is unsuccessful.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      },
      "get": {
        "tags": [
          "invoices"
        ],
        "description": "Returns invoice exports details for exports that match the filters that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.1 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getInvoicesExports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The returned exports match the specified marketplace.",
            "type": "string",
            "name": "marketplaceId",
            "in": "query",
            "required": true
          },
          {
            "description": "The earliest export creation date and time for exports that you want to include in the response. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default is 30 days ago.",
            "type": "string",
            "name": "dateStart",
            "in": "query",
            "format": "date-time"
          },
          {
            "description": "The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.",
            "type": "string",
            "name": "nextToken",
            "in": "query"
          },
          {
            "description": "The maximum number of invoices to return in a single call.\n\nMinimum: 1\n\nMaximum: 100",
            "type": "integer",
            "name": "pageSize",
            "in": "query"
          },
          {
            "description": "The latest export creation date and time for exports that you want to include in the response. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default value is the time of the request.",
            "type": "string",
            "name": "dateEnd",
            "in": "query",
            "format": "date-time"
          },
          {
            "description": "Return exports matching the status specified. ",
            "type": "string",
            "name": "status",
            "in": "query",
            "enum": [
              "REQUESTED",
              "PROCESSING",
              "DONE",
              "ERROR"
            ],
            "x-docgen-enum-table-extension": [
              {
                "description": "The export request was created, but has not started yet.",
                "value": "REQUESTED"
              },
              {
                "description": "The export request is being processed",
                "value": "PROCESSING"
              },
              {
                "description": "The export request is finished with success. Use the document IDs to download the output documents.",
                "value": "DONE"
              },
              {
                "description": "The export request resulted in an error. Check the `errorMessage` attribute for more details.",
                "value": "ERROR"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/GetInvoicesExportsResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "dateEnd": {
                        "value": "2024-07-10T23:59:59.000Z"
                      },
                      "dateStart": {
                        "value": "2024-07-10T00:00:00.000Z"
                      },
                      "marketplaceId": {
                        "value": "A2Q3Y263D00KWC"
                      },
                      "pageSize": {
                        "value": 1
                      },
                      "status": {
                        "value": "DONE"
                      }
                    }
                  },
                  "response": {
                    "exports": [
                      {
                        "errorMessage": "",
                        "exportId": "4bdd8293-0cd7-4208-bed5-78b2c6ecefef",
                        "generateExportFinishedAt": "2024-07-10T16:00:00.000Z",
                        "generateExportStartedAt": "2024-07-10T15:00:00.000Z",
                        "invoicesDocumentIds": [
                          "18c598f5-75db-4c1a-bd3e-4c64b36781c5"
                        ],
                        "status": "DONE"
                      }
                    ],
                    "nextToken": "WTtGLzlBkat22iOI5C1yrpSPqMpz9UHYxdvm5U4DqEVJL5hqxv9xMuXe3eg35i17"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "A2Q3Y263D00KWC"
                      },
                      "nextToken": {
                        "value": "WTtGLzlBkat22iOI5C1yrpSPqMpz9UHYxdvm5U4DqEVJL5hqxv9xMuXe3eg35i17"
                      },
                      "status": {
                        "value": "DONE"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "details": "Specifying nextToken with any other parameters will cause the request to fail.",
                        "message": "Invalid Request."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "A list of error responses returned when a request is unsuccessful.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/tax/invoices/2024-06-19/exports/{exportId}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "description": "Returns invoice export details (including the `exportDocumentId`, if available) for the export that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getInvoicesExport",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the export.",
            "type": "string",
            "name": "exportId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/GetInvoicesExportResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "exportId": {
                        "value": "4bdd8293-0cd7-4208-bed5-78b2c6ecefef"
                      }
                    }
                  },
                  "response": {
                    "export": {
                      "errorMessage": "",
                      "exportId": "4bdd8293-0cd7-4208-bed5-78b2c6ecefef",
                      "generateExportFinishedAt": "2024-07-10T16:00:00.000Z",
                      "generateExportStartedAt": "2024-07-10T15:00:00.000Z",
                      "invoicesDocumentIds": [
                        "18c598f5-75db-4c1a-bd3e-4c64b36781c5"
                      ],
                      "status": "DONE"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "details": "Missing required parameter 'exportId'",
                        "message": "Invalid Request."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "A list of error responses returned when a request is unsuccessful.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/tax/invoices/2024-06-19/invoices": {
      "get": {
        "tags": [
          "invoices"
        ],
        "description": "Returns invoice details for the invoices that match the filters that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.1 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getInvoices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the transaction identifier filter. If you provide a value for this field, you must also provide a value for the `transactionIdentifierId` field.Use the `getInvoicesAttributes` operation to check `transactionIdentifierName` options.",
            "type": "string",
            "name": "transactionIdentifierName",
            "in": "query"
          },
          {
            "description": "The maximum number of invoices you want to return in a single call.\n\nMinimum: 1\n\nMaximum: 200",
            "type": "integer",
            "name": "pageSize",
            "in": "query"
          },
          {
            "description": "The latest invoice creation date for invoices that you want to include in the response. Dates are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default is the current date-time.",
            "type": "string",
            "name": "dateEnd",
            "in": "query",
            "format": "date-time"
          },
          {
            "description": "The response includes only the invoices that match the specified marketplace.",
            "type": "string",
            "name": "marketplaceId",
            "in": "query",
            "required": true
          },
          {
            "description": "The marketplace-specific classification of the transaction type for which the invoice was created. Use the `getInvoicesAttributes` operation to check `transactionType` options.",
            "type": "string",
            "name": "transactionType",
            "in": "query"
          },
          {
            "description": "The ID of the transaction identifier filter. If you provide a value for this field, you must also provide a value for the `transactionIdentifierName` field.",
            "type": "string",
            "name": "transactionIdentifierId",
            "in": "query"
          },
          {
            "description": "The earliest invoice creation date for invoices that you want to include in the response. Dates are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default is 24 hours prior to the time of the request.",
            "type": "string",
            "name": "dateStart",
            "in": "query",
            "format": "date-time"
          },
          {
            "description": "Return invoices with the specified series number.",
            "type": "string",
            "name": "series",
            "in": "query"
          },
          {
            "description": "The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.",
            "type": "string",
            "name": "nextToken",
            "in": "query"
          },
          {
            "description": "Sort the invoices in the response in ascending or descending order.",
            "type": "string",
            "name": "sortOrder",
            "in": "query",
            "enum": [
              "DESC",
              "ASC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "description": "Sort in descending order.",
                "value": "DESC"
              },
              {
                "description": "Sort in ascending order.",
                "value": "ASC"
              }
            ]
          },
          {
            "description": "The marketplace-specific classification of the invoice type. Use the `getInvoicesAttributes` operation to check `invoiceType` options.",
            "type": "string",
            "name": "invoiceType",
            "in": "query"
          },
          {
            "description": "A list of statuses that you can use to filter invoices. Use the `getInvoicesAttributes` operation to check invoice status options.\n\nMin count: 1",
            "type": "array",
            "name": "statuses",
            "in": "query",
            "collectionFormat": "csv",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          {
            "description": "Return invoices that match this external ID. This is typically the Government Invoice ID.",
            "type": "string",
            "name": "externalInvoiceId",
            "in": "query"
          },
          {
            "description": "The attribute by which you want to sort the invoices in the response.",
            "type": "string",
            "name": "sortBy",
            "in": "query",
            "enum": [
              "START_DATE_TIME"
            ],
            "x-docgen-enum-table-extension": [
              {
                "description": "Sort by date time.",
                "value": "START_DATE_TIME"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/GetInvoicesResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "dateEnd": {
                        "value": "2024-07-20T23:59:59"
                      },
                      "dateStart": {
                        "value": "2024-07-01T00:00:00"
                      },
                      "invoiceType": {
                        "value": "SYMBOLIC_RETURN"
                      },
                      "marketplaceId": {
                        "value": "A2Q3Y263D00KWC"
                      },
                      "pageSize": {
                        "value": 1
                      },
                      "sortBy": {
                        "value": "START_DATE_TIME"
                      },
                      "sortOrder": {
                        "value": "DESC"
                      },
                      "transactionIdentifierId": {
                        "value": "94cd4e1a-5cc5-486d-b592-045a95a168e1"
                      },
                      "transactionIdentifierName": {
                        "value": "BUSINESS_TRANSACTION_ID"
                      },
                      "transactionType": {
                        "value": "CUSTOMER_SALES"
                      }
                    }
                  },
                  "response": {
                    "invoices": [
                      {
                        "date": "2024-07-10T15:00:00.000Z",
                        "errorCode": "",
                        "externalInvoiceId": "1283743",
                        "govResponse": "",
                        "id": "ad5b9dcd-6981-4dc4-a3d7-dd2568298a94",
                        "invoiceType": "SYMBOLIC_RETURN",
                        "series": "32",
                        "status": "AUTHORIZED",
                        "transactionIds": [
                          {
                            "name": "BUSINESS_TRANSACTION_ID",
                            "id": "94cd4e1a-5cc5-486d-b592-045a95a168e1"
                          }
                        ],
                        "transactionType": "CUSTOMER_SALES"
                      }
                    ],
                    "nextToken": "WTtGLzlBkat22iOI5C1yrpSPqMpz9UHYxdvm5U4DqEVJL5hqxv9xMuXe3eg35i17"
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "externalInvoiceId": {
                        "value": "1283743"
                      },
                      "marketplaceId": {
                        "value": "A2Q3Y263D00KWC"
                      },
                      "series": {
                        "value": "32"
                      }
                    }
                  },
                  "response": {
                    "invoices": [
                      {
                        "date": "2024-07-10T15:00:00.000Z",
                        "errorCode": "",
                        "externalInvoiceId": "1283743",
                        "govResponse": "",
                        "id": "ad5b9dcd-6981-4dc4-a3d7-dd2568298a94",
                        "invoiceType": "SYMBOLIC_RETURN",
                        "series": "32",
                        "status": "AUTHORIZED",
                        "transactionIds": [
                          {
                            "name": "BUSINESS_TRANSACTION_ID",
                            "id": "94cd4e1a-5cc5-486d-b592-045a95a168e1"
                          }
                        ],
                        "transactionType": "CUSTOMER_SALES"
                      }
                    ],
                    "nextToken": "WTtGLzlBkat22iOI5C1yrpSPqMpz9UHYxdvm5U4DqEVJL5hqxv9xMuXe3eg35i17"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "A2Q3Y263D00KWC"
                      },
                      "nextToken": {
                        "value": "WTtGLzlBkat22iOI5C1yrpSPqMpz9UHYxdvm5U4DqEVJL5hqxv9xMuXe3eg35i17"
                      },
                      "statuses": {
                        "value": [
                          "REJECTED"
                        ]
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "details": "Specifying nextToken with any other parameters will cause the request to fail.",
                        "message": "Invalid Request."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "A list of error responses returned when a request is unsuccessful.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/tax/invoices/2024-06-19/invoices/{invoiceId}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "description": "Returns invoice data for the specified invoice. This operation returns only a subset of the invoices data; refer to the response definition to get all the possible attributes.\nTo get the full invoice, use the `createInvoicesExport` operation to start an export request.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getInvoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The marketplace from which you want the invoice.",
            "type": "string",
            "name": "marketplaceId",
            "in": "query",
            "required": true
          },
          {
            "description": "The invoice identifier.",
            "type": "string",
            "name": "invoiceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/GetInvoiceResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "invoiceId": {
                        "value": "ad5b9dcd-6981-4dc4-a3d7-dd2568298a94"
                      },
                      "marketplaceId": {
                        "value": "A2Q3Y263D00KWC"
                      }
                    }
                  },
                  "response": {
                    "invoice": {
                      "date": "2024-07-10T15:00:00.000Z",
                      "errorCode": "",
                      "externalInvoiceId": "1283743",
                      "govResponse": "",
                      "id": "ad5b9dcd-6981-4dc4-a3d7-dd2568298a94",
                      "invoiceType": "CUSTOMER_SALES",
                      "series": "32",
                      "status": "AUTHORIZED",
                      "transactionIds": [
                        {
                          "name": "BUSINESS_TRANSACTION_ID",
                          "id": "94cd4e1a-5cc5-486d-b592-045a95a168e1"
                        }
                      ],
                      "transactionType": "CUSTOMER_SALES_SYMBOLIC"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "marketplaceId": {
                        "value": "A2Q3Y263D00KWC"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "details": "Missing required parameter 'invoiceId'",
                        "message": "Invalid Request."
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "invoiceId": {
                        "value": "ad5b9dcd-6981-4dc4-a3d7-dd2568298a94"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "details": "Missing required parameter 'marketplaceId'",
                        "message": "Invalid Request."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "A list of error responses returned when a request is unsuccessful.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/listings/2021-08-01/items/{sellerId}/{sku}": {
      "delete": {
        "tags": [
          "Listings Items"
        ],
        "description": "Delete a listings item for a selling partner.\n\n**Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "deleteListingsItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sellerId",
            "description": "A selling partner identifier, such as a merchant account or vendor code.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "description": "A selling partner provided identifier for an Amazon listing.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "description": "A comma-delimited list of Amazon marketplace identifiers for the request.",
            "in": "query",
            "required": true,
            "type": "array",
            "maxItems": 1,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "ATVPDKIKX0DER"
          },
          {
            "name": "issueLocale",
            "description": "A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: `en_US`, `fr_CA`, `fr_FR`. Localized messages default to `en_US` when a localization is not available in the specified locale.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully understood the listings item delete request. See the response to determine whether the submission has been accepted.",
            "schema": {
              "$ref": "#/definitions/ListingsItemSubmissionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "sku": "GM-ZDPI-9B4E",
                "status": "ACCEPTED",
                "submissionId": "f1dc2914-75dd-11ea-bc55-0242ac130003",
                "issues": []
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "sku": "GM-ZDPI-9B4E",
                    "status": "ACCEPTED",
                    "submissionId": "f1dc2914-75dd-11ea-bc55-0242ac130003",
                    "issues": []
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sku": {
                        "value": "BadSKU"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BAD_REQUEST",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "summary": "deleteListingsItem"
      },
      "get": {
        "tags": [
          "Listings Items"
        ],
        "description": "Returns details about a listings item for a selling partner.\n\n**Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getListingsItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sellerId",
            "description": "A selling partner identifier, such as a merchant account or vendor code.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "description": "A selling partner provided identifier for an Amazon listing.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "description": "A comma-delimited list of Amazon marketplace identifiers for the request.",
            "in": "query",
            "required": true,
            "type": "array",
            "maxItems": 1,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "ATVPDKIKX0DER"
          },
          {
            "name": "issueLocale",
            "description": "A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: `en_US`, `fr_CA`, `fr_FR`. Localized messages default to `en_US` when a localization is not available in the specified locale.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          },
          {
            "name": "includedData",
            "description": "A comma-delimited list of data sets to include in the response. Default: `summaries`.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "enum": [
                "summaries",
                "attributes",
                "issues",
                "offers",
                "fulfillmentAvailability",
                "procurement"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "summaries",
                  "description": "Summary details of the listing item."
                },
                {
                  "value": "attributes",
                  "description": "A JSON object containing structured listing item attribute data keyed by attribute name."
                },
                {
                  "value": "issues",
                  "description": "The issues associated with the listing item."
                },
                {
                  "value": "offers",
                  "description": "The current offers for the listing item."
                },
                {
                  "value": "fulfillmentAvailability",
                  "description": "The fulfillment availability details for the listing item."
                },
                {
                  "value": "procurement",
                  "description": "The vendor procurement details for the listing item. "
                }
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "summaries",
            "default": [
              "summaries"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Item"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "sku": "GM-ZDPI-9B4E",
                "summaries": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "asin": "B071VG5N9D",
                    "productType": "LUGGAGE",
                    "conditionType": "new_new",
                    "status": [
                      "BUYABLE"
                    ],
                    "itemName": "Hardside Carry-On Spinner Suitcase Luggage",
                    "createdDate": "2021-02-01T00:00:00Z",
                    "lastUpdatedDate": "2021-03-01T00:00:00Z",
                    "mainImage": {
                      "link": "https://www.example.com/luggage.png",
                      "height": 500,
                      "width": 500
                    }
                  }
                ],
                "offers": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "offerType": "B2C",
                    "price": {
                      "currencyCode": "USD",
                      "amount": "100.00"
                    },
                    "audience": {
                      "value": "ALL",
                      "displayName": "Sell on Amazon"
                    }
                  }
                ],
                "fulfillmentAvailability": [
                  {
                    "fulfillmentChannelCode": "DEFAULT",
                    "quantity": 100
                  }
                ],
                "issues": [
                  {
                    "code": "90220",
                    "message": "'size' is required but not supplied.",
                    "severity": "ERROR",
                    "attributeNames": [
                      "size"
                    ],
                    "categories": [
                      "MISSING_ATTRIBUTE"
                    ]
                  },
                  {
                    "code": "18027",
                    "message": "We believe the main image has text, logo, graphic or watermark which is not permitted for this product type. Please submit a compliant image to lift the suppression. Also refer to Product image requirements.",
                    "severity": "ERROR",
                    "categories": [
                      "INVALID_IMAGE"
                    ],
                    "enforcements": {
                      "actions": [
                        {
                          "action": "SEARCH_SUPPRESSED"
                        }
                      ],
                      "exemption": {
                        "status": "EXEMPT_UNTIL_EXPIRY_DATE",
                        "expiryDate": "2025-05-28T00:36:48.914Z"
                      }
                    }
                  },
                  {
                    "code": "99300",
                    "message": "Product Detail Page Rules Violation (Inaccurate information on product detail page)",
                    "severity": "ERROR",
                    "categories": [],
                    "enforcements": {
                      "actions": [
                        {
                          "action": "ATTRIBUTE_SUPPRESSED"
                        }
                      ],
                      "exemption": {
                        "status": "EXEMPT"
                      }
                    }
                  },
                  {
                    "code": "18155",
                    "message": "The 'minimum price' is greater than the selling price (excluding shipping) for the listing. Please review and update your price and/or minimum price.",
                    "severity": "ERROR",
                    "categories": [
                      "INVALID_PRICE"
                    ],
                    "enforcements": {
                      "actions": [
                        {
                          "action": "LISTING_SUPPRESSED"
                        }
                      ],
                      "exemption": {
                        "status": "NOT_EXEMPT"
                      }
                    }
                  },
                  {
                    "code": "18742",
                    "message": "Restricted Products Policy Violation",
                    "severity": "ERROR",
                    "categories": [],
                    "enforcements": {
                      "actions": [
                        {
                          "action": "CATALOG_ITEM_REMOVED"
                        }
                      ],
                      "exemption": {
                        "status": "NOT_EXEMPT"
                      }
                    }
                  }
                ]
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {}
                    }
                  },
                  "response": {
                    "sku": "GM-ZDPI-9B4E",
                    "summaries": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "asin": "B071VG5N9D",
                        "productType": "LUGGAGE",
                        "conditionType": "new_new",
                        "status": [
                          "BUYABLE"
                        ],
                        "itemName": "Hardside Carry-On Spinner Suitcase Luggage",
                        "createdDate": "2021-02-01T00:00:00Z",
                        "lastUpdatedDate": "2021-03-01T00:00:00Z",
                        "mainImage": {
                          "link": "https://www.example.com/luggage.png",
                          "height": 500,
                          "width": 500
                        }
                      }
                    ],
                    "offers": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "offerType": "B2C",
                        "price": {
                          "currencyCode": "USD",
                          "amount": "100.00"
                        },
                        "audience": {
                          "value": "ALL",
                          "displayName": "Sell on Amazon"
                        }
                      }
                    ],
                    "fulfillmentAvailability": [
                      {
                        "fulfillmentChannelCode": "DEFAULT",
                        "quantity": 100
                      }
                    ],
                    "issues": [
                      {
                        "code": "90220",
                        "message": "'size' is required but not supplied.",
                        "severity": "ERROR",
                        "attributeNames": [
                          "size"
                        ],
                        "categories": [
                          "MISSING_ATTRIBUTE"
                        ]
                      },
                      {
                        "code": "18027",
                        "message": "We believe the main image has text, logo, graphic or watermark which is not permitted for this product type. Please submit a compliant image to lift the suppression. Also refer to Product image requirements.",
                        "severity": "ERROR",
                        "categories": [
                          "INVALID_IMAGE"
                        ],
                        "enforcements": {
                          "actions": [
                            {
                              "action": "SEARCH_SUPPRESSED"
                            }
                          ],
                          "exemption": {
                            "status": "EXEMPT_UNTIL_EXPIRY_DATE",
                            "expiryDate": "2025-05-28T00:36:48.914Z"
                          }
                        }
                      },
                      {
                        "code": "99300",
                        "message": "Product Detail Page Rules Violation (Inaccurate information on product detail page)",
                        "severity": "ERROR",
                        "categories": [],
                        "enforcements": {
                          "actions": [
                            {
                              "action": "ATTRIBUTE_SUPPRESSED"
                            }
                          ],
                          "exemption": {
                            "status": "EXEMPT"
                          }
                        }
                      },
                      {
                        "code": "18155",
                        "message": "The 'minimum price' is greater than the selling price (excluding shipping) for the listing. Please review and update your price and/or minimum price.",
                        "severity": "ERROR",
                        "categories": [
                          "INVALID_PRICE"
                        ],
                        "enforcements": {
                          "actions": [
                            {
                              "action": "LISTING_SUPPRESSED"
                            }
                          ],
                          "exemption": {
                            "status": "NOT_EXEMPT"
                          }
                        }
                      },
                      {
                        "code": "18742",
                        "message": "Restricted Products Policy Violation",
                        "severity": "ERROR",
                        "categories": [],
                        "enforcements": {
                          "actions": [
                            {
                              "action": "CATALOG_ITEM_REMOVED"
                            }
                          ],
                          "exemption": {
                            "status": "NOT_EXEMPT"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sku": {
                        "value": "BadSKU"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BAD_REQUEST",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "summary": "getListingsItem"
      },
      "patch": {
        "tags": [
          "Listings Items"
        ],
        "description": "Partially update (patch) a listings item for a selling partner. Only top-level listings item attributes can be patched. Patching nested attributes is not supported.\n\n**Note:** This operation has a throttling rate of one request per second when `mode` is `VALIDATION_PREVIEW`.\n\n**Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "patchListingsItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sellerId",
            "description": "A selling partner identifier, such as a merchant account or vendor code.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "description": "A selling partner provided identifier for an Amazon listing.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "description": "A comma-delimited list of Amazon marketplace identifiers for the request.",
            "in": "query",
            "required": true,
            "type": "array",
            "maxItems": 1,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "ATVPDKIKX0DER"
          },
          {
            "name": "includedData",
            "description": "A comma-delimited list of data sets to include in the response. Default: `issues`.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "enum": [
                "identifiers",
                "issues"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "identifiers",
                  "description": "Identifiers associated with the item in the Amazon catalog, such as Amazon Standard Identification Number (ASIN). Can only be requested when `mode` is `VALIDATION_PREVIEW`."
                },
                {
                  "value": "issues",
                  "description": "The issues associated with the listing item."
                }
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "issues",
            "default": [
              "issues"
            ]
          },
          {
            "name": "mode",
            "description": "The mode of operation for the request.",
            "in": "query",
            "enum": [
              "VALIDATION_PREVIEW"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "VALIDATION_PREVIEW",
                "description": "Indicates the submitted data should be validated using the values provided in the payload and validation errors the selling partner account may face. This will synchronously perform the same checks that are preformed on submissions after being accepted for processing, but without persisting to the selling partner's catalog."
              }
            ],
            "required": false,
            "type": "string",
            "x-example": "VALIDATION_PREVIEW"
          },
          {
            "name": "issueLocale",
            "description": "A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: `en_US`, `fr_CA`, `fr_FR`. Localized messages default to `en_US` when a localization is not available in the specified locale.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          },
          {
            "name": "body",
            "description": "The request body schema for the `patchListingsItem` operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListingsItemPatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully understood the listings item patch request. See the response to determine if the submission was accepted.",
            "schema": {
              "$ref": "#/definitions/ListingsItemSubmissionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "sku": "GM-ZDPI-9B4E",
                "status": "ACCEPTED",
                "submissionId": "f1dc2914-75dd-11ea-bc55-0242ac130003",
                "issues": []
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {}
                    }
                  },
                  "response": {
                    "sku": "GM-ZDPI-9B4E",
                    "status": "ACCEPTED",
                    "submissionId": "f1dc2914-75dd-11ea-bc55-0242ac130003",
                    "issues": []
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "sku": {
                        "value": "VALIDATION_VALID"
                      },
                      "marketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      },
                      "includedData": {
                        "value": [
                          "identifiers",
                          "issues"
                        ]
                      },
                      "mode": {
                        "value": "VALIDATION_PREVIEW"
                      }
                    }
                  },
                  "response": {
                    "sku": "VALIDATION_VALID",
                    "status": "VALID",
                    "submissionId": "1edc94ea-a3d7-210b-42bc-0ec72c1384762",
                    "identifiers": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "asin": "B07N4M94X4"
                      }
                    ],
                    "issues": []
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "sku": {
                        "value": "VALIDATION_INVALID"
                      },
                      "marketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      },
                      "includedData": {
                        "value": [
                          "identifiers",
                          "issues"
                        ]
                      },
                      "mode": {
                        "value": "VALIDATION_PREVIEW"
                      }
                    }
                  },
                  "response": {
                    "sku": "VALIDATION_INVALID",
                    "status": "INVALID",
                    "submissionId": "a1c562c2-1695-11ee-be56-0242ac120002",
                    "identifiers": [],
                    "issues": [
                      {
                        "code": "90000900",
                        "message": "The attributes are invalid.",
                        "severity": "ERROR",
                        "attributeNames": [
                          "fake_attribute"
                        ],
                        "categories": [
                          "INVALID_ATTRIBUTE"
                        ],
                        "enforcements": {
                          "actions": [
                            {
                              "action": "ATTRIBUTE_SUPPRESSED"
                            }
                          ],
                          "exemption": {
                            "status": "NOT_EXEMPT"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sku": {
                        "value": "BadSKU"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BAD_REQUEST",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "summary": "patchListingsItem"
      },
      "put": {
        "tags": [
          "Listings Items"
        ],
        "description": "Creates or fully updates an existing listings item for a selling partner.\n\n**Note:** This operation has a throttling rate of one request per second when `mode` is `VALIDATION_PREVIEW`.\n\n**Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "putListingsItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sellerId",
            "description": "A selling partner identifier, such as a merchant account or vendor code.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "description": "A selling partner provided identifier for an Amazon listing.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "description": "A comma-delimited list of Amazon marketplace identifiers for the request.",
            "in": "query",
            "required": true,
            "type": "array",
            "maxItems": 1,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "ATVPDKIKX0DER"
          },
          {
            "name": "includedData",
            "description": "A comma-delimited list of data sets to include in the response. Default: `issues`.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "enum": [
                "identifiers",
                "issues"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "identifiers",
                  "description": "Identifiers associated with the item in the Amazon catalog, such as Amazon Standard Identification Number (ASIN). Can only be requested when `mode` is `VALIDATION_PREVIEW`."
                },
                {
                  "value": "issues",
                  "description": "The issues associated with the listing item."
                }
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "issues",
            "default": [
              "issues"
            ]
          },
          {
            "name": "mode",
            "description": "The mode of operation for the request.",
            "in": "query",
            "enum": [
              "VALIDATION_PREVIEW"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "VALIDATION_PREVIEW",
                "description": "Indicates the submitted data should be validated using the values provided in the payload and validation errors the selling partner account may face. This will synchronously perform the same checks that are preformed on submissions after being accepted for processing, but without persisting to the selling partner's catalog."
              }
            ],
            "required": false,
            "type": "string",
            "x-example": "VALIDATION_PREVIEW"
          },
          {
            "name": "issueLocale",
            "description": "A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: `en_US`, `fr_CA`, `fr_FR`. Localized messages default to `en_US` when a localization is not available in the specified locale.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          },
          {
            "name": "body",
            "description": "The request body schema for the `putListingsItem` operation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListingsItemPutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully understood the request to create or fully-update a listings item. See the response to determine if the submission has been accepted.",
            "schema": {
              "$ref": "#/definitions/ListingsItemSubmissionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "sku": "GM-ZDPI-9B4E",
                "status": "ACCEPTED",
                "submissionId": "f1dc2914-75dd-11ea-bc55-0242ac130003",
                "issues": []
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {}
                    }
                  },
                  "response": {
                    "sku": "GM-ZDPI-9B4E",
                    "status": "ACCEPTED",
                    "submissionId": "f1dc2914-75dd-11ea-bc55-0242ac130003",
                    "issues": []
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "sku": {
                        "value": "VALIDATION_VALID"
                      },
                      "marketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      },
                      "includedData": {
                        "value": [
                          "identifiers",
                          "issues"
                        ]
                      },
                      "mode": {
                        "value": "VALIDATION_PREVIEW"
                      }
                    }
                  },
                  "response": {
                    "sku": "VALIDATION_VALID",
                    "status": "VALID",
                    "submissionId": "1edc94ea-a3d7-210b-42bc-0ec72c1384762",
                    "identifiers": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "asin": "B07N4M94X4"
                      }
                    ],
                    "issues": []
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "sku": {
                        "value": "VALIDATION_INVALID"
                      },
                      "marketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      },
                      "includedData": {
                        "value": [
                          "identifiers",
                          "issues"
                        ]
                      },
                      "mode": {
                        "value": "VALIDATION_PREVIEW"
                      }
                    }
                  },
                  "response": {
                    "sku": "VALIDATION_INVALID",
                    "status": "INVALID",
                    "submissionId": "a1c562c2-1695-11ee-be56-0242ac120002",
                    "identifiers": [],
                    "issues": [
                      {
                        "code": "90220",
                        "message": "'condition_type' is required but not supplied.",
                        "severity": "ERROR",
                        "attributeNames": [
                          "condition_type"
                        ],
                        "categories": [
                          "MISSING_ATTRIBUTE"
                        ],
                        "enforcements": {
                          "actions": [
                            {
                              "action": "LISTING_SUPPRESSED"
                            }
                          ],
                          "exemption": {
                            "status": "NOT_EXEMPT"
                          }
                        }
                      },
                      {
                        "code": "90000900",
                        "message": "The attributes are invalid.",
                        "severity": "ERROR",
                        "attributeNames": [
                          "fake_attribute"
                        ],
                        "categories": []
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sku": {
                        "value": "BadSKU"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BAD_REQUEST",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "summary": "putListingsItem"
      }
    },
    "/listings/2021-08-01/items/{sellerId}": {
      "get": {
        "tags": [
          "Listings Items"
        ],
        "description": "Search for and return list of listings items and respective details for a selling partner.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "searchListingsItems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sellerId",
            "description": "A selling partner identifier, such as a merchant account or vendor code.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "description": "A comma-delimited list of Amazon marketplace identifiers for the request.",
            "in": "query",
            "required": true,
            "type": "array",
            "maxItems": 1,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "ATVPDKIKX0DER"
          },
          {
            "name": "identifiers",
            "description": "A comma-delimited list of product identifiers to search for listings items by. \n\n**Note**: \n1. Required when `identifiersType` is provided.",
            "in": "query",
            "required": false,
            "type": "array",
            "maxItems": 20,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "GM-ZDPI-9B4E"
          },
          {
            "name": "identifiersType",
            "description": "Type of product identifiers to search for listings items by. \n\n**Note**: \n1. Required when `identifiers` is provided.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASIN",
              "EAN",
              "GTIN",
              "ISBN",
              "JAN",
              "MINSAN",
              "SKU",
              "UPC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASIN",
                "description": "Amazon Standard Identification Number."
              },
              {
                "value": "EAN",
                "description": "European Article Number."
              },
              {
                "value": "GTIN",
                "description": "Global Trade Item Number."
              },
              {
                "value": "ISBN",
                "description": "International Standard Book Number."
              },
              {
                "value": "JAN",
                "description": "Japanese Article Number."
              },
              {
                "value": "MINSAN",
                "description": "Minsan Code."
              },
              {
                "value": "SKU",
                "description": "Stock Keeping Unit, a seller-specified identifier for an Amazon listing."
              },
              {
                "value": "UPC",
                "description": "Universal Product Code."
              }
            ],
            "x-example": "SKU"
          },
          {
            "name": "pageSize",
            "description": "Number of results to be returned per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "maximum": 20,
            "default": 10,
            "x-example": 9
          },
          {
            "name": "pageToken",
            "description": "A token to fetch a certain page when there are multiple pages worth of results.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "sdlkj234lkj234lksjdflkjwdflkjsfdlkj234234234234"
          },
          {
            "name": "includedData",
            "description": "A comma-delimited list of data sets to include in the response. Default: summaries.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "enum": [
                "summaries",
                "attributes",
                "issues",
                "offers",
                "fulfillmentAvailability",
                "procurement"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "summaries",
                  "description": "Summary details of the listing item."
                },
                {
                  "value": "attributes",
                  "description": "JSON object containing structured listing item attribute data keyed by attribute name."
                },
                {
                  "value": "issues",
                  "description": "Issues associated with the listing item."
                },
                {
                  "value": "offers",
                  "description": "Current offers for the listing item."
                },
                {
                  "value": "fulfillmentAvailability",
                  "description": "Fulfillment availability details for the listing item."
                },
                {
                  "value": "procurement",
                  "description": "Vendor procurement details for the listing item. "
                }
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "summaries",
            "default": [
              "summaries"
            ]
          },
          {
            "name": "issueLocale",
            "description": "A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: \"en_US\", \"fr_CA\", \"fr_FR\". Localized messages default to \"en_US\" when a localization is not available in the specified locale.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ItemSearchResults"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "numberOfResults": 3,
                "pagination": {
                  "nextToken": "xsdflkj324lkjsdlkj3423klkjsdfkljlk2j34klj2l3k4jlksdjl234",
                  "previousToken": "ilkjsdflkj234lkjds234234lkjl234lksjdflkj234234lkjsfsdflkj333d"
                },
                "items": [
                  {
                    "sku": "GM-ZDPI-9B4E",
                    "summaries": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "asin": "B071VG5N9D",
                        "productType": "LUGGAGE",
                        "conditionType": "new_new",
                        "status": [
                          "BUYABLE"
                        ],
                        "itemName": "Hardside Carry-On Spinner Suitcase Luggage",
                        "createdDate": "2021-02-01T00:00:00Z",
                        "lastUpdatedDate": "2021-03-01T00:00:00Z",
                        "mainImage": {
                          "link": "https://www.example.com/luggage.png",
                          "height": 500,
                          "width": 500
                        }
                      }
                    ],
                    "attributes": {
                      "total_hdmi_ports": [
                        {
                          "value": 4,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "resolution": [
                        {
                          "language_tag": "en_US",
                          "value": "4K",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_weight": [
                        {
                          "unit": "pounds",
                          "value": 107.6,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "product_subcategory": [
                        {
                          "value": "50400120",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "bullet_point": [
                        {
                          "language_tag": "en_US",
                          "value": "SMART TV WITH UNIVERSAL GUIDE: Simple on-screen Guide is an easy way to find streaming content and live TV shows",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "100% COLOR VOLUME WITH QUANTUM DOTS: Powered by Quantum dots, Samsung’s 4K QLED TV offers over a billion shades of brilliant color and 100% color volume for exceptional depth of detail that will draw you in to the picture for the best 4K TV experience",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "QUANTUM PROCESSOR 4K: Intelligently powered processor instantly upscales content to 4K for sharp detail and refined color",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "QUANTUM HDR 4X: 4K depth of detail with high dynamic range powered by HDR10+ delivers the lightest to darkest colors, scene by scene, for amazing picture realism",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "AMBIENT MODE: Customizes and complements your living space by turning a blank screen of this big screen TV into enticing visuals including décor, info, photos and artwork",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "SMART TV FEATURES: OneRemote to control all compatible devices, Bixby voice command, on-screen universal guide, SmartThings to control compatible home appliances and devices, smart speaker expandability with Alexa and Google Assistant compatibility, and more",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_dimensions": [
                        {
                          "width": {
                            "unit": "inches",
                            "value": 72.4
                          },
                          "length": {
                            "unit": "inches",
                            "value": 2.4
                          },
                          "height": {
                            "unit": "inches",
                            "value": 41.4
                          },
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "brand": [
                        {
                          "language_tag": "en_US",
                          "value": "SAMSUNG",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "generic_keyword": [
                        {
                          "language_tag": "en_US",
                          "value": "oled 65 inch smart tv qled 75 inch tv 85 inch 4k tv smart tv 4k tv 65 inch qled 82 inch tv 8k tv oled 65 smart tv qled 65 inch 80 inch tv 4k 4k tv shield tv 2018",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "q9fn qled 2018 oled 4k 4k oled toshiba antenna dvd player outdoor tv kitchen tv fire tv firetv hdtv hd tv android shield tv gaming deals tv ears dvr speakers digital tv antenna tv android tv frame mount",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "4k hdr tv 70 tv shield tv 90 inch tv gaming tv 75 tv 65 inch 4k tv tv 65 inch smart tv 4k 65 inch 4k tv 65 inch 4k tv 4k tv uhd tv uhd tv 4k",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "smart tv 4k tv tv tv oled tv 65 inch smart tv 4k tv 65 inch smart tv shield tv 2018 tv 4k oled tv 65 4k tv 4k smart tv 4k hdr tv shield tv gaming tv 65 inch 4k tv tv 65 inch smart tv 4k 65 inch 4k tv 65 inch 4k tv 4k tv uhd tv uhd tv 4k",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "control_method": [
                        {
                          "value": "voice",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_package_dimensions": [
                        {
                          "length": {
                            "unit": "centimeters",
                            "value": 26.67
                          },
                          "width": {
                            "unit": "centimeters",
                            "value": 121.92
                          },
                          "height": {
                            "unit": "centimeters",
                            "value": 203.2
                          },
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "image_aspect_ratio": [
                        {
                          "language_tag": "en_US",
                          "value": "16:9",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "part_number": [
                        {
                          "value": "QN82Q60RAFXZA",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "includes_remote": [
                        {
                          "value": true,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "style": [
                        {
                          "language_tag": "en_US",
                          "value": "TV only",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_type_name": [
                        {
                          "language_tag": "en_US",
                          "value": "TV",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "battery": [
                        {
                          "cell_composition": [
                            {
                              "value": "alkaline"
                            }
                          ],
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "image_contrast_ratio": [
                        {
                          "language_tag": "en_US",
                          "value": "QLED 4K",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "manufacturer": [
                        {
                          "language_tag": "en_US",
                          "value": "Samsung",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "number_of_boxes": [
                        {
                          "value": 1,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "total_usb_ports": [
                        {
                          "value": 2,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "model_number": [
                        {
                          "value": "QN82Q60RAFXZA",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "supplier_declared_dg_hz_regulation": [
                        {
                          "value": "not_applicable",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "num_batteries": [
                        {
                          "quantity": 2,
                          "type": "aaa",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "california_proposition_65": [
                        {
                          "compliance_type": "on_product_combined_cancer_reproductive",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "compliance_type": "chemical",
                          "chemical_names": [
                            "di_2_ethylhexyl_phthalate_dehp"
                          ],
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "display": [
                        {
                          "resolution_maximum": [
                            {
                              "unit": "pixels",
                              "language_tag": "en_US",
                              "value": "3840 x 2160"
                            }
                          ],
                          "size": [
                            {
                              "unit": "inches",
                              "value": 82
                            }
                          ],
                          "type": [
                            {
                              "language_tag": "en_US",
                              "value": "QLED"
                            }
                          ],
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_name": [
                        {
                          "language_tag": "en_US",
                          "value": "Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series (2019) Ultra HD Smart TV with HDR and Alexa Compatibility",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "list_price": [
                        {
                          "currency": "USD",
                          "value": 3799.99,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "batteries_required": [
                        {
                          "value": false,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "includes_rechargable_battery": [
                        {
                          "value": false,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "product_site_launch_date": [
                        {
                          "value": "2019-03-11T08:00:01.000Z",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "product_category": [
                        {
                          "value": "50400100",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "batteries_included": [
                        {
                          "value": false,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "connectivity_technology": [
                        {
                          "language_tag": "en_US",
                          "value": "Bluetooth",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "USB",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Wireless",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "HDMI",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "included_components": [
                        {
                          "language_tag": "en_US",
                          "value": "QLED Standard Smart Remote",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Power Cable",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Stand",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Samsung Smart Control",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "specification_met": [
                        {
                          "language_tag": "en_US",
                          "value": "",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "parental_control_technology": [
                        {
                          "value": "V-Chip",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "power_consumption": [
                        {
                          "unit": "watts",
                          "value": 120,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "cpsia_cautionary_statement": [
                        {
                          "value": "no_warning_applicable",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_type_keyword": [
                        {
                          "value": "qled-televisions",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "number_of_items": [
                        {
                          "value": 1,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "warranty_description": [
                        {
                          "language_tag": "en_US",
                          "value": "1 year manufacturer",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "max_resolution": [
                        {
                          "unit": "pixels",
                          "value": 8.3,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "color": [
                        {
                          "language_tag": "en_US",
                          "value": "Black",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "screen_surface_description": [
                        {
                          "language_tag": "en_US",
                          "value": "Flat",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "item_package_weight": [
                        {
                          "unit": "kilograms",
                          "value": 62.142,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "speaker_type": [
                        {
                          "language_tag": "en_US",
                          "value": "2CH",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "supported_internet_services": [
                        {
                          "language_tag": "en_US",
                          "value": "Amazon Instant Video",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "YouTube",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Netflix",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Hulu",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Browser",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "tuner_technology": [
                        {
                          "language_tag": "en_US",
                          "value": "Analog Tuner",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "controller_type": [
                        {
                          "language_tag": "en_US",
                          "value": "SmartThings",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Voice Control",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "special_feature": [
                        {
                          "language_tag": "en_US",
                          "value": "100% Color Volume with Quantum Dot; Quantum Processor 4K; Ambient Mode; Quantum HDR 4X; Real Game Enhancer",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "wireless_communication_technology": [
                        {
                          "language_tag": "en_US",
                          "value": "Wi-Fi::Wi-Fi Direct::Bluetooth",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "model_year": [
                        {
                          "value": 2019,
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "power_source_type": [
                        {
                          "language_tag": "en_US",
                          "value": "Corded Electric",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "street_date": [
                        {
                          "value": "2019-03-21T00:00:01Z",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "mounting_type": [
                        {
                          "language_tag": "en_US",
                          "value": "Table Mount",
                          "marketplace_id": "ATVPDKIKX0DER"
                        },
                        {
                          "language_tag": "en_US",
                          "value": "Wall Mount",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ],
                      "refresh_rate": [
                        {
                          "unit": "hertz",
                          "language_tag": "en_US",
                          "value": "120",
                          "marketplace_id": "ATVPDKIKX0DER"
                        }
                      ]
                    },
                    "offers": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "offerType": "B2C",
                        "price": {
                          "currencyCode": "USD",
                          "amount": "100.00"
                        }
                      }
                    ],
                    "fulfillmentAvailability": [
                      {
                        "fulfillmentChannelCode": "DEFAULT",
                        "quantity": 100
                      }
                    ],
                    "issues": [
                      {
                        "code": "90220",
                        "message": "'size' is required but not supplied.",
                        "severity": "ERROR",
                        "attributeNames": [
                          "size"
                        ],
                        "categories": [
                          "MISSING_ATTRIBUTE"
                        ]
                      },
                      {
                        "code": "18027",
                        "message": "We believe the main image has text, logo, graphic or watermark which is not permitted for this product type. Please submit a compliant image to lift the suppression. Also refer to Product image requirements.",
                        "severity": "ERROR",
                        "categories": [
                          "INVALID_IMAGE"
                        ],
                        "enforcements": {
                          "actions": [
                            {
                              "action": "SEARCH_SUPPRESSED"
                            }
                          ],
                          "exemption": {
                            "status": "EXEMPT_UNTIL_EXPIRY_DATE",
                            "expiryDate": "2025-05-28T00:36:48.914Z"
                          }
                        }
                      },
                      {
                        "code": "99300",
                        "message": "Product Detail Page Rules Violation (Inaccurate information on product detail page)",
                        "severity": "ERROR",
                        "categories": [],
                        "enforcements": {
                          "actions": [
                            {
                              "action": "ATTRIBUTE_SUPPRESSED"
                            }
                          ],
                          "exemption": {
                            "status": "EXEMPT"
                          }
                        }
                      },
                      {
                        "code": "18155",
                        "message": "The 'minimum price' is greater than the selling price (excluding shipping) for the listing. Please review and update your price and/or minimum price.",
                        "severity": "ERROR",
                        "categories": [
                          "INVALID_PRICE"
                        ],
                        "enforcements": {
                          "actions": [
                            {
                              "action": "LISTING_SUPPRESSED"
                            }
                          ],
                          "exemption": {
                            "status": "NOT_EXEMPT"
                          }
                        }
                      },
                      {
                        "code": "18742",
                        "message": "Restricted Products Policy Violation",
                        "severity": "ERROR",
                        "categories": [],
                        "enforcements": {
                          "actions": [
                            {
                              "action": "CATALOG_ITEM_REMOVED"
                            }
                          ],
                          "exemption": {
                            "status": "NOT_EXEMPT"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "identifiersType": {
                        "value": "SKU"
                      },
                      "identifiers": {
                        "value": [
                          "GM-ZDPI-9B4E",
                          "HW-ZDPI-9B4E",
                          "TC-ZDPI-9B4E"
                        ]
                      },
                      "marketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      },
                      "includedData": {
                        "value": [
                          "summaries",
                          "offers",
                          "fulfillmentAvailability",
                          "issues"
                        ]
                      },
                      "pageSize": {
                        "value": 1
                      }
                    }
                  },
                  "response": {
                    "numberOfResults": 3,
                    "pagination": {
                      "nextToken": "xsdflkj324lkjsdlkj3423klkjsdfkljlk2j34klj2l3k4jlksdjl234",
                      "previousToken": "ilkjsdflkj234lkjds234234lkjl234lksjdflkj234234lkjsfsdflkj333d"
                    },
                    "items": [
                      {
                        "sku": "GM-ZDPI-9B4E",
                        "summaries": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "asin": "B071VG5N9D",
                            "productType": "LUGGAGE",
                            "conditionType": "new_new",
                            "status": [
                              "BUYABLE"
                            ],
                            "itemName": "Hardside Carry-On Spinner Suitcase Luggage",
                            "createdDate": "2021-02-01T00:00:00Z",
                            "lastUpdatedDate": "2021-03-01T00:00:00Z",
                            "mainImage": {
                              "link": "https://www.example.com/luggage.png",
                              "height": 500,
                              "width": 500
                            }
                          }
                        ],
                        "offers": [
                          {
                            "marketplaceId": "ATVPDKIKX0DER",
                            "offerType": "B2C",
                            "price": {
                              "currencyCode": "USD",
                              "amount": "100.00"
                            }
                          }
                        ],
                        "fulfillmentAvailability": [
                          {
                            "fulfillmentChannelCode": "DEFAULT",
                            "quantity": 100
                          }
                        ],
                        "issues": [
                          {
                            "code": "90220",
                            "message": "'size' is required but not supplied.",
                            "severity": "ERROR",
                            "attributeNames": [
                              "size"
                            ],
                            "categories": [
                              "MISSING_ATTRIBUTE"
                            ]
                          },
                          {
                            "code": "18027",
                            "message": "We believe the main image has text, logo, graphic or watermark which is not permitted for this product type. Please submit a compliant image to lift the suppression. Also refer to Product image requirements.",
                            "severity": "ERROR",
                            "categories": [
                              "INVALID_IMAGE"
                            ],
                            "enforcements": {
                              "actions": [
                                {
                                  "action": "SEARCH_SUPPRESSED"
                                }
                              ],
                              "exemption": {
                                "status": "EXEMPT_UNTIL_EXPIRY_DATE",
                                "expiryDate": "2025-05-28T00:36:48.914Z"
                              }
                            }
                          },
                          {
                            "code": "99300",
                            "message": "Product Detail Page Rules Violation (Inaccurate information on product detail page)",
                            "severity": "ERROR",
                            "categories": [],
                            "enforcements": {
                              "actions": [
                                {
                                  "action": "ATTRIBUTE_SUPPRESSED"
                                }
                              ],
                              "exemption": {
                                "status": "EXEMPT"
                              }
                            }
                          },
                          {
                            "code": "18155",
                            "message": "The 'minimum price' is greater than the selling price (excluding shipping) for the listing. Please review and update your price and/or minimum price.",
                            "severity": "ERROR",
                            "categories": [
                              "INVALID_PRICE"
                            ],
                            "enforcements": {
                              "actions": [
                                {
                                  "action": "LISTING_SUPPRESSED"
                                }
                              ],
                              "exemption": {
                                "status": "NOT_EXEMPT"
                              }
                            }
                          },
                          {
                            "code": "18742",
                            "message": "Restricted Products Policy Violation",
                            "severity": "ERROR",
                            "categories": [],
                            "enforcements": {
                              "actions": [
                                {
                                  "action": "CATALOG_ITEM_REMOVED"
                                }
                              ],
                              "exemption": {
                                "status": "NOT_EXEMPT"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "sellerId": {
                        "value": "SellerId"
                      },
                      "marketplaceIds": {
                        "value": [
                          "invalid"
                        ]
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BAD_REQUEST",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        },
        "summary": "searchListingsItems"
      }
    },
    "/listings/2021-08-01/restrictions": {
      "get": {
        "tags": [
          "listings"
        ],
        "description": "Returns listing restrictions for an item in the Amazon Catalog. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getListingsRestrictions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "asin",
            "in": "query",
            "description": "The Amazon Standard Identification Number (ASIN) of the item.",
            "required": true,
            "type": "string",
            "x-example": "B0000ASIN1"
          },
          {
            "name": "conditionType",
            "in": "query",
            "description": "The condition used to filter restrictions.",
            "required": false,
            "type": "string",
            "enum": [
              "new_new",
              "new_open_box",
              "new_oem",
              "refurbished_refurbished",
              "used_like_new",
              "used_very_good",
              "used_good",
              "used_acceptable",
              "collectible_like_new",
              "collectible_very_good",
              "collectible_good",
              "collectible_acceptable",
              "club_club"
            ],
            "x-example": "used_very_good",
            "x-docgen-enum-table-extension": [
              {
                "value": "new_new",
                "description": "New"
              },
              {
                "value": "new_open_box",
                "description": "New - Open Box."
              },
              {
                "value": "new_oem",
                "description": "New - OEM."
              },
              {
                "value": "refurbished_refurbished",
                "description": "Refurbished"
              },
              {
                "value": "used_like_new",
                "description": "Used - Like New."
              },
              {
                "value": "used_very_good",
                "description": "Used - Very Good."
              },
              {
                "value": "used_good",
                "description": "Used - Good."
              },
              {
                "value": "used_acceptable",
                "description": "Used - Acceptable."
              },
              {
                "value": "collectible_like_new",
                "description": "Collectible - Like New."
              },
              {
                "value": "collectible_very_good",
                "description": "Collectible - Very Good."
              },
              {
                "value": "collectible_good",
                "description": "Collectible - Good."
              },
              {
                "value": "collectible_acceptable",
                "description": "Collectible - Acceptable."
              },
              {
                "value": "club_club",
                "description": "Club"
              }
            ]
          },
          {
            "name": "sellerId",
            "in": "query",
            "description": "A selling partner identifier, such as a merchant account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A comma-delimited list of Amazon marketplace identifiers for the request.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "ATVPDKIKX0DER"
          },
          {
            "name": "reasonLocale",
            "in": "query",
            "description": "A locale for reason text localization. When not provided, the default language code of the first marketplace is used. Examples: \"en_US\", \"fr_CA\", \"fr_FR\". Localized messages default to \"en_US\" when a localization is not available in the specified locale.",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the listings restrictions.",
            "schema": {
              "$ref": "#/definitions/RestrictionList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "restrictions": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "conditionType": "used_acceptable",
                    "reasons": [
                      {
                        "message": "You cannot list the product in this condition.",
                        "links": [
                          {
                            "resource": "https://sellercentral.amazon.com/hz/approvalrequest/restrictions/approve?asin=B0000ASIN1",
                            "verb": "GET",
                            "title": "Request Approval via Seller Central.",
                            "type": "text/html"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {}
                    }
                  },
                  "response": {
                    "restrictions": [
                      {
                        "marketplaceId": "ATVPDKIKX0DER",
                        "conditionType": "used_acceptable",
                        "reasons": [
                          {
                            "message": "You cannot list the product in this condition.",
                            "links": [
                              {
                                "resource": "https://sellercentral.amazon.com/hz/approvalrequest/restrictions/approve?asin=B0000ASIN1",
                                "verb": "GET",
                                "title": "Request Approval via Seller Central.",
                                "type": "text/html"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "BAD_ASIN"
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "BAD_REQUEST",
                      "message": "Invalid 'asin' provided."
                    }
                  ]
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/mfn/v0/eligibleShippingServices": {
      "post": {
        "tags": [
          "merchantFulfillment"
        ],
        "description": "Returns a list of shipping service offers that satisfy the specified shipment request details.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 6 | 12 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getEligibleShipmentServices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The request schema for the `GetEligibleShipmentServices` operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetEligibleShipmentServicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetEligibleShipmentServicesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "ShipmentRequestDetails": {
                            "AmazonOrderId": "903-5563053-5647845",
                            "ItemList": [
                              {
                                "OrderItemId": "52986411826454",
                                "Quantity": 1
                              }
                            ],
                            "ShipFromAddress": {
                              "Name": "John Doe",
                              "AddressLine1": "300 Turnbull Ave",
                              "Email": "jdoeasdfllkj@yahoo.com",
                              "City": "Detroit",
                              "StateOrProvinceCode": "MI",
                              "PostalCode": "48123",
                              "CountryCode": "US",
                              "Phone": "7132341234"
                            },
                            "PackageDimensions": {
                              "Length": 10.25,
                              "Width": 10.25,
                              "Height": 10.25,
                              "Unit": "inches"
                            },
                            "Weight": {
                              "Value": 10.25,
                              "Unit": "oz"
                            },
                            "ShippingServiceOptions": {
                              "DeliveryExperience": "NoTracking",
                              "CarrierWillPickUp": false,
                              "CarrierWillPickUpOption": "ShipperWillDropOff"
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ShippingServiceList": [
                        {
                          "ShippingServiceName": "UPS 2nd Day Air®",
                          "CarrierName": "UPS®",
                          "ShippingServiceId": "UPS_PTP_2ND_DAY_AIR",
                          "ShippingServiceOfferId": "WHgxtyn6qjGGaCzOCog1azF5HLHje5Pz3Lc2Fmt5eKoZAReW8oJ1SMumuBS8lA/Hjuglhyiu0+KRLvyJxFV0PB9YFMDhygs3VyTL0WGYkGxiuRkmuEvpqldUn9rrkWVodqnR4vx2VtXvtER/Ju6RqYoddJZGy6RS2KLzzhQ2NclN0NYXMZVqpOe5RsRBddXaGuJr7oza3M52+JzChocAHzcurIhCRynpbxfmNLzZMQEbgnpGLzuaoSMzfxg90/NaXFR/Ou01du/uKd5AbfMW/AxAKP9ht6Oi9lDHq6WkGqvjkVLW0/jj/fBgblIwcs+t",
                          "ShipDate": "2019-10-28T16:36:36Z",
                          "EarliestEstimatedDeliveryDate": "2019-10-31T06:00:00Z",
                          "LatestEstimatedDeliveryDate": "2019-10-31T06:00:00Z",
                          "Rate": {
                            "CurrencyCode": "USD",
                            "Amount": 34.73
                          },
                          "ShippingServiceOptions": {
                            "DeliveryExperience": "NoTracking",
                            "CarrierWillPickUp": false,
                            "LabelFormat": ""
                          },
                          "AvailableLabelFormats": [
                            "ZPL203",
                            "ShippingServiceDefault",
                            "PDF",
                            "PNG"
                          ],
                          "AvailableFormatOptionsForLabel": [
                            {
                              "LabelFormat": "ZPL203"
                            },
                            {
                              "LabelFormat": "ShippingServiceDefault"
                            },
                            {
                              "LabelFormat": "PDF"
                            },
                            {
                              "LabelFormat": "PNG"
                            }
                          ],
                          "Benefits": {
                            "IncludedBenefits": [
                              "CLAIMS_PROTECTED"
                            ],
                            "ExcludedBenefits": []
                          }
                        },
                        {
                          "ShippingServiceName": "UPS Next Day Air Saver®",
                          "CarrierName": "UPS®",
                          "ShippingServiceId": "UPS_PTP_NEXT_DAY_AIR_SAVER",
                          "ShippingServiceOfferId": "WHgxtyn6qjGGaCzOCog1azF5HLHje5Pz3Lc2Fmt5eKqqhKGQ2YZmuxsXKVXmdgdWNvfxb1qfm5bGm8NuqlqnNT3eTiJ4viTctepggbeUKUSykClJ+Qmw43zdA8wsgREhQCmb4Bbo/skapLQS1F9uwH2FgY5SfMsj/egudyocpVRT45KSQAT0H5YiXW3OyyRAae9fZ0RzDJAABHiisOyYyXnB1mtWOZqc7rlGR4yyqN7jmiT4t8dmuGPX7ptY4qskrN+6VHZO9bM9tdDS0ysHhAVv4jO3Q5sWFg4nEPaARWSsrpa6zSGMLxAOj56O3tcP",
                          "ShipDate": "2019-10-28T16:36:36Z",
                          "EarliestEstimatedDeliveryDate": "2019-10-30T06:00:00Z",
                          "LatestEstimatedDeliveryDate": "2019-10-30T06:00:00Z",
                          "Rate": {
                            "CurrencyCode": "USD",
                            "Amount": 98.75
                          },
                          "ShippingServiceOptions": {
                            "DeliveryExperience": "NoTracking",
                            "CarrierWillPickUp": false,
                            "LabelFormat": ""
                          },
                          "AvailableLabelFormats": [
                            "ZPL203",
                            "ShippingServiceDefault",
                            "PDF",
                            "PNG"
                          ],
                          "AvailableFormatOptionsForLabel": [
                            {
                              "LabelFormat": "ZPL203"
                            },
                            {
                              "LabelFormat": "ShippingServiceDefault"
                            },
                            {
                              "LabelFormat": "PDF"
                            },
                            {
                              "LabelFormat": "PNG"
                            }
                          ],
                          "Benefits": {
                            "IncludedBenefits": [],
                            "ExcludedBenefits": [
                              {
                                "Benefit": "CLAIMS_PROTECTED",
                                "ReasonCodes": [
                                  "LATE_DELIVERY_RISK"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "TemporarilyUnavailableCarrierList": [
                        {
                          "CarrierName": "UPS®"
                        },
                        {
                          "CarrierName": "DHLECOMMERCE"
                        }
                      ],
                      "TermsAndConditionsNotAcceptedCarrierList": [
                        {
                          "CarrierName": "YANWEN"
                        },
                        {
                          "CarrierName": "CHINA_POST"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetEligibleShipmentServicesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "ShipmentRequestDetails": {
                            "AmazonOrderId": "TEST_CASE_400",
                            "ItemList": [
                              {
                                "OrderItemId": "52986411826454",
                                "Quantity": 1
                              }
                            ],
                            "ShipFromAddress": {
                              "Name": "John Doe",
                              "AddressLine1": "300 Turnbull Ave",
                              "Email": "jdoeasdfllkj@yahoo.com",
                              "City": "Detroit",
                              "StateOrProvinceCode": "MI",
                              "PostalCode": "48123",
                              "CountryCode": "USA",
                              "Phone": "7132341234"
                            },
                            "PackageDimensions": {
                              "Length": 10.25,
                              "Width": 10.25,
                              "Height": 10.25,
                              "Unit": "inches"
                            },
                            "Weight": {
                              "Value": 10.25,
                              "Unit": "oz"
                            },
                            "ShippingServiceOptions": {
                              "DeliveryExperience": "NoTracking",
                              "CarrierWillPickUp": false,
                              "CarrierWillPickUpOption": "ShipperWillDropOff"
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "1 validation error detected: Value 'USA' at 'shipmentRequestDetails.shipFromAddress.countryCode' failed to satisfy constraint: Member must have length less than or equal to 2",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetEligibleShipmentServicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetEligibleShipmentServicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetEligibleShipmentServicesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetEligibleShipmentServicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetEligibleShipmentServicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetEligibleShipmentServicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/mfn/v0/shipments/{shipmentId}": {
      "get": {
        "tags": [
          "merchantFulfillment"
        ],
        "description": "Returns the shipment information for an existing shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipment1",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "The Amazon-defined shipment identifier for the shipment.",
            "required": true,
            "type": "string",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "abcddcba-00c3-4f6f-a63a-639f76ee9253"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ShipmentId": "abcddcba-00c3-4f6f-a63a-639f76ee9253",
                      "AmazonOrderId": "903-5563053-5647845",
                      "SellerOrderId": "903-5563053-5647845",
                      "Insurance": {
                        "CurrencyCode": "USD",
                        "Amount": 0
                      },
                      "ItemList": [
                        {
                          "OrderItemId": "12958298061782",
                          "Quantity": 1
                        }
                      ],
                      "ShipFromAddress": {
                        "Name": "John Doe",
                        "AddressLine1": "300 Turnbull Ave",
                        "Email": "jdoeasdfllkj@yahoo.com",
                        "City": "Detroit",
                        "StateOrProvinceCode": "MI",
                        "PostalCode": "48123",
                        "CountryCode": "US",
                        "Phone": "7132341234"
                      },
                      "ShipToAddress": {
                        "Name": "New York",
                        "AddressLine1": "TIME WARNER CENTER",
                        "AddressLine2": "10 COLUMBUS CIR",
                        "Email": "",
                        "City": "NEW YORK",
                        "StateOrProvinceCode": "NY",
                        "PostalCode": "10019-1158",
                        "CountryCode": "US",
                        "Phone": ""
                      },
                      "PackageDimensions": {
                        "Length": 10.25,
                        "Width": 10.25,
                        "Height": 10.25,
                        "Unit": "inches"
                      },
                      "Weight": {
                        "Value": 10.25,
                        "Unit": "oz"
                      },
                      "ShippingService": {
                        "ShippingServiceName": "UPS 2nd Day Air®",
                        "CarrierName": "UPS®",
                        "ShippingServiceId": "UPS_PTP_2ND_DAY_AIR",
                        "ShippingServiceOfferId": "",
                        "ShipDate": "2019-10-28T18:00:00Z",
                        "Rate": {
                          "CurrencyCode": "USD",
                          "Amount": 34.73
                        },
                        "ShippingServiceOptions": {
                          "DeliveryExperience": "DeliveryConfirmationWithoutSignature",
                          "DeclaredValue": {
                            "CurrencyCode": "USD",
                            "Amount": 0
                          }
                        },
                        "RequiresAdditionalSellerInputs": false,
                        "Benefits": {
                          "IncludedBenefits": [],
                          "ExcludedBenefits": [
                            {
                              "Benefit": "CLAIMS_PROTECTED",
                              "ReasonCodes": [
                                "LATE_DELIVERY_RISK"
                              ]
                            }
                          ]
                        }
                      },
                      "Label": {
                        "Dimensions": {
                          "Length": 6,
                          "Width": 4,
                          "Unit": "inches"
                        },
                        "FileContents": {
                          "Contents": "H4sIAAAAAAAAAOS6dV",
                          "FileType": "image/png",
                          "Checksum": "9ALVyphCKfc3+Lb2ssyh8A=="
                        }
                      },
                      "Status": "Purchased",
                      "TrackingId": "1Z17E2100206868939",
                      "CreatedDate": "2019-10-28T18:29:34Z",
                      "LastUpdatedDate": "2019-10-28T18:30:35Z"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "aabbccdd-1beb-4cda-8bf4-7366cfddbec1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "1 validation error detected: Value 'TEST_CASE_400' at 'shipmentId' failed to satisfy constraint: Member must satisfy regular expression pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "merchantFulfillment"
        ],
        "description": "Cancel the shipment indicated by the specified shipment identifier.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "cancelShipment",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "The Amazon-defined shipment identifier for the shipment to cancel.",
            "required": true,
            "type": "string",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CancelShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "be7a0a53-00c3-4f6f-a63a-639f76ee9253"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ShipmentId": "be7a0a53-00c3-4f6f-a63a-639f76ee9253",
                      "AmazonOrderId": "903-5563053-5647845",
                      "SellerOrderId": "903-5563053-5647845",
                      "Insurance": {
                        "CurrencyCode": "USD",
                        "Amount": 0
                      },
                      "ItemList": [
                        {
                          "OrderItemId": "12958298061782",
                          "Quantity": 1
                        }
                      ],
                      "ShipFromAddress": {
                        "Name": "John Doe",
                        "AddressLine1": "300 Turnbull Ave",
                        "Email": "jdoeasdfllkj@yahoo.com",
                        "City": "Detroit",
                        "StateOrProvinceCode": "MI",
                        "PostalCode": "48123",
                        "CountryCode": "US",
                        "Phone": "7132341234"
                      },
                      "ShipToAddress": {
                        "Name": "New York",
                        "AddressLine1": "TIME WARNER CENTER",
                        "AddressLine2": "10 COLUMBUS CIR",
                        "Email": "",
                        "City": "NEW YORK",
                        "StateOrProvinceCode": "NY",
                        "PostalCode": "10019-1158",
                        "CountryCode": "US",
                        "Phone": ""
                      },
                      "PackageDimensions": {
                        "Length": 10.25,
                        "Width": 10.25,
                        "Height": 10.25,
                        "Unit": "inches"
                      },
                      "Weight": {
                        "Value": 10.25,
                        "Unit": "oz"
                      },
                      "ShippingService": {
                        "ShippingServiceName": "UPS 2nd Day Air®",
                        "CarrierName": "UPS®",
                        "ShippingServiceId": "UPS_PTP_2ND_DAY_AIR",
                        "ShippingServiceOfferId": "",
                        "ShipDate": "2019-10-28T18:00:00Z",
                        "Rate": {
                          "CurrencyCode": "USD",
                          "Amount": 34.73
                        },
                        "ShippingServiceOptions": {
                          "DeliveryExperience": "DeliveryConfirmationWithoutSignature",
                          "DeclaredValue": {
                            "CurrencyCode": "USD",
                            "Amount": 0
                          }
                        },
                        "RequiresAdditionalSellerInputs": false
                      },
                      "Label": {
                        "Dimensions": {},
                        "FileContents": {
                          "Contents": "",
                          "FileType": "",
                          "Checksum": ""
                        }
                      },
                      "Status": "RefundPending",
                      "TrackingId": "1Z17E2100206868939",
                      "CreatedDate": "2019-10-28T18:29:34Z",
                      "LastUpdatedDate": "2019-10-28T18:36:55Z"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CancelShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "87d20cf7-1beb-4cda-8bf4-7366cfddbec1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "1 validation error detected: Value 'TEST_CASE_400' at 'shipmentId' failed to satisfy constraint: Member must satisfy regular expression pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/CancelShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CancelShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CancelShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CancelShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CancelShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CancelShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/mfn/v0/shipments": {
      "post": {
        "tags": [
          "merchantFulfillment"
        ],
        "description": "Create a shipment with the information provided.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createShipment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The request schema for the `CreateShipment` operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateShipmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "ShipmentRequestDetails": {
                            "AmazonOrderId": "903-5563053-5647845",
                            "ItemList": [
                              {
                                "OrderItemId": "52986411826454",
                                "Quantity": 1
                              }
                            ],
                            "ShipFromAddress": {
                              "Name": "John Doe",
                              "AddressLine1": "300 Turnbull Ave",
                              "Email": "jdoeasdfllkj@yahoo.com",
                              "City": "Detroit",
                              "StateOrProvinceCode": "MI",
                              "PostalCode": "48123",
                              "CountryCode": "US",
                              "Phone": "7132341234"
                            },
                            "PackageDimensions": {
                              "Length": 10.25,
                              "Width": 10.25,
                              "Height": 10.25,
                              "Unit": "inches"
                            },
                            "Weight": {
                              "Value": 10.25,
                              "Unit": "oz"
                            },
                            "ShippingServiceOptions": {
                              "DeliveryExperience": "NoTracking",
                              "CarrierWillPickUp": false,
                              "CarrierWillPickUpOption": "ShipperWillDropOff"
                            }
                          },
                          "ShippingServiceId": "UPS_PTP_2ND_DAY_AIR",
                          "ShippingServiceOfferId": "WHgxtyn6qjGGaCzOCog1azF5HLHje5Pz3Lc2Fmt5eKoZAReW8oJ1SMumuBS8lA/Hjuglhyiu0+KRLvyJxFV0PB9YFMDhygs3VyTL0WGYkGxiuRkmuEvpqldUn9rrkWVodqnR4vx2VtXvtER/Ju6RqYoddJZGy6RS2KLzzhQ2NclN0NYXMZVqpOe5RsRBddXaGuJr7oza3M52+JzChocAHzcurIhCRynpbxfmNLzZMQEbgnpGLzuaoSMzfxg90/NaXFR/Ou01du/uKd5AbfMW/AxAKP9ht6Oi9lDHq6WkGqvjkVLW0/jj/fBgblIwcs+t"
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ShipmentId": "be7a0a53-00c3-4f6f-a63a-639f76ee9253",
                      "AmazonOrderId": "903-5563053-5647845",
                      "Insurance": {
                        "CurrencyCode": "USD",
                        "Amount": 0
                      },
                      "ItemList": [
                        {
                          "OrderItemId": "12958298061782",
                          "Quantity": 1
                        }
                      ],
                      "ShipFromAddress": {
                        "Name": "John Doe",
                        "AddressLine1": "300 Turnbull Ave",
                        "Email": "jdoeasdfllkj@yahoo.com",
                        "City": "Detroit",
                        "StateOrProvinceCode": "MI",
                        "PostalCode": "48123",
                        "CountryCode": "US",
                        "Phone": "7132341234"
                      },
                      "ShipToAddress": {
                        "Name": "New York",
                        "AddressLine1": "TIME WARNER CENTER",
                        "AddressLine2": "10 COLUMBUS CIR",
                        "Email": "",
                        "City": "NEW YORK",
                        "StateOrProvinceCode": "NY",
                        "PostalCode": "10019-1158",
                        "CountryCode": "US",
                        "Phone": ""
                      },
                      "PackageDimensions": {
                        "Length": 10.25,
                        "Width": 10.25,
                        "Height": 10.25,
                        "Unit": "inches"
                      },
                      "Weight": {
                        "Value": 10.25,
                        "Unit": "oz"
                      },
                      "ShippingService": {
                        "ShippingServiceName": "UPS 2nd Day Air®",
                        "CarrierName": "UPS®",
                        "ShippingServiceId": "UPS_PTP_2ND_DAY_AIR",
                        "ShippingServiceOfferId": "WHgxtyn6qjGGaCzOCog1azF5HLHje5Pz3Lc2Fmt5eKoZAReW8oJ1SMumuBS8lA/Hjuglhyiu0+KRLvyJxFV0PB9YFMDhygs3VyTL0WGYkGxiuRkmuEvpqldUn9rrkWVodqnR4vx2VtXvtER/Ju6RqYoddJZGy6RS2KLzzhQ2NclN0NYXMZVqpOe5RsRBddXaGuJr7oza3M52+JzChocAHzcurIhCRynpbxfmNLzZMQEbgnpGLzuaoSMzfxg90/NaXFR/Ou01du/uKd5AbfMW/AxAKP9ht6Oi9lDHq6WkGqvjkVLW0/jj/fBgblIwcs+t",
                        "ShipDate": "2019-10-28T16:37:37Z",
                        "EarliestEstimatedDeliveryDate": "2019-10-30T07:00:00Z",
                        "LatestEstimatedDeliveryDate": "2019-10-30T07:00:00Z",
                        "Rate": {
                          "CurrencyCode": "USD",
                          "Amount": 34.73
                        },
                        "ShippingServiceOptions": {
                          "DeliveryExperience": "NoTracking",
                          "DeclaredValue": {
                            "CurrencyCode": "USD",
                            "Amount": 0
                          }
                        },
                        "RequiresAdditionalSellerInputs": false,
                        "Benefits": {
                          "IncludedBenefits": [
                            "CLAIMS_PROTECTED"
                          ],
                          "ExcludedBenefits": []
                        }
                      },
                      "Label": {
                        "Dimensions": {
                          "Length": 6,
                          "Width": 4,
                          "Unit": "inches"
                        },
                        "FileContents": {
                          "Contents": "H4sIAAAAAAAAAOR",
                          "FileType": "image/png",
                          "Checksum": "d+eUxK5WTGxkGsTF0pmefQ=="
                        },
                        "LabelFormat": "PNG"
                      },
                      "Status": "Purchased",
                      "TrackingId": "1Z17E2100217295733",
                      "CreatedDate": "2019-10-28T16:37:43Z"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "ShipmentRequestDetails": {
                            "AmazonOrderId": "TEST_CASE_400",
                            "ItemList": [
                              {
                                "OrderItemId": "52986411826454",
                                "Quantity": 1
                              }
                            ],
                            "ShipFromAddress": {
                              "Name": "John Doe",
                              "AddressLine1": "300 Turnbull Ave",
                              "Email": "jdoeasdfllkj@yahoo.com",
                              "City": "Detroit",
                              "StateOrProvinceCode": "MI",
                              "PostalCode": "48123",
                              "CountryCode": "USA",
                              "Phone": "7132341234"
                            },
                            "PackageDimensions": {
                              "Length": 10,
                              "Width": 10,
                              "Height": 10,
                              "Unit": "inches"
                            },
                            "Weight": {
                              "Value": 10,
                              "Unit": "oz"
                            },
                            "ShippingServiceOptions": {
                              "DeliveryExperience": "NoTracking",
                              "CarrierWillPickUp": false,
                              "CarrierWillPickUpOption": "ShipperWillDropOff"
                            }
                          },
                          "ShippingServiceId": "UPS_PTP_2ND_DAY_AIR",
                          "ShippingServiceOfferId": "WHgxtyn6qjGGaCzOCog1azF5HLHje5Pz3Lc2Fmt5eKoZAReW8oJ1SMumuBS8lA/Hjuglhyiu0+KRLvyJxFV0PB9YFMDhygs3VyTL0WGYkGxiuRkmuEvpqldUn9rrkWVodqnR4vx2VtXvtER/Ju6RqYoddJZGy6RS2KLzzhQ2NclN0NYXMZVqpOe5RsRBddXaGuJr7oza3M52+JzChocAHzcurIhCRynpbxfmNLzZMQEbgnpGLzuaoSMzfxg90/NaXFR/Ou01du/uKd5AbfMW/AxAKP9ht6Oi9lDHq6WkGqvjkVLW0/jj/fBgblIwcs+t"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "1 validation error detected: Value 'USA' at 'shipmentRequestDetails.shipFromAddress.countryCode' failed to satisfy constraint: Member must have length less than or equal to 2",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/CreateShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateShipmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateShipmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/mfn/v0/additionalSellerInputs": {
      "post": {
        "tags": [
          "merchantFulfillment"
        ],
        "description": "Gets a list of additional seller inputs required for a ship method. This is generally used for international shipping.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getAdditionalSellerInputs",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The request schema for the `GetAdditionalSellerInputs` operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAdditionalSellerInputsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetAdditionalSellerInputsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "ShippingServiceId": "UPS_PTP_GND",
                          "ShipFromAddress": {
                            "Name": "John Doe",
                            "AddressLine1": "300 Turnbull Ave",
                            "Email": "jdoeasdfllkj@yahoo.com",
                            "City": "Detroit",
                            "StateOrProvinceCode": "MI",
                            "PostalCode": "48123",
                            "CountryCode": "US",
                            "Phone": "7132341234"
                          },
                          "OrderId": "903-5563053-5647845"
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ShipmentLevelFields": [
                        {
                          "AdditionalInputFieldName": "John Doe"
                        }
                      ],
                      "ItemLevelFieldsList": [
                        {
                          "Asin": "ASIN_ID_200",
                          "AdditionalInputs": []
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetAdditionalSellerInputsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "ShippingServiceId": "UPS_PTP_GND",
                          "ShipFromAddress": {
                            "Name": "John Doe",
                            "AddressLine1": "300 Turnbull Ave",
                            "Email": "jdoeasdfllkj@yahoo.com",
                            "City": "Detroit",
                            "StateOrProvinceCode": "MI",
                            "PostalCode": "48123",
                            "CountryCode": "XX",
                            "Phone": "7132341234"
                          },
                          "OrderId": "901-5563053-5647845"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Ship From Address when calling GetAdditionalSellerInputs",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetAdditionalSellerInputsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetAdditionalSellerInputsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetAdditionalSellerInputsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetAdditionalSellerInputsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetAdditionalSellerInputsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetAdditionalSellerInputsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}": {
      "get": {
        "tags": [
          "messaging"
        ],
        "description": "Returns a list of message types that are available for an order that you specify. A message type is represented by an actions object, which contains a path and query parameter(s). You can use the path and parameter(s) to call an operation that sends a message.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getMessagingActionsForOrder",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which you want a list of available message types.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns hypermedia links under the _links.actions key that specify which messaging actions are allowed for the order.",
            "schema": {
              "$ref": "#/definitions/GetMessagingActionsForOrderResponse"
            },
            "examples": {
              "application/hal+json": {
                "_links": {
                  "actions": [
                    {
                      "href": "/messaging/v1/orders/903-1671087-0812628/messages/negativeFeedbackRemoval?marketplaceIds=ATVPDKIKX0DER",
                      "name": "negativeFeedbackRemoval"
                    }
                  ],
                  "self": {
                    "href": "/messaging/v1/orders/903-1671087-0812628?marketplaceIds=ATVPDKIKX0DER"
                  }
                },
                "_embedded": {
                  "actions": [
                    {
                      "_links": {
                        "schema": {
                          "href": "/messaging/v1/orders/903-1671087-0812628/messages/negativeFeedbackRemoval/schema",
                          "name": "negativeFeedbackRemoval"
                        },
                        "self": {
                          "href": "/messaging/v1/orders/903-1671087-0812628/messages/negativeFeedbackRemoval?marketplaceIds=ATVPDKIKX0DER",
                          "name": "negativeFeedbackRemoval"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      }
                    }
                  },
                  "response": {
                    "_links": {
                      "actions": [
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/messages/confirmCustomizationDetails?marketplaceIds=ATVPDKIKX0DER",
                          "name": "confirmCustomizationDetails"
                        },
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/messages/confirmDeliveryDetails?marketplaceIds=ATVPDKIKX0DER",
                          "name": "confirmDeliveryDetails"
                        },
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/messages/legalDisclosure?marketplaceIds=ATVPDKIKX0DER",
                          "name": "legalDisclosure"
                        },
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/messages/negativeFeedbackRemoval?marketplaceIds=ATVPDKIKX0DER",
                          "name": "negativeFeedbackRemoval"
                        },
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/messages/confirmOrderDetails?marketplaceIds=ATVPDKIKX0DER",
                          "name": "confirmOrderDetails"
                        },
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/messages/confirmServiceDetails?marketplaceIds=ATVPDKIKX0DER",
                          "name": "confirmServiceDetails"
                        },
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/messages/amazonMotors?marketplaceIds=ATVPDKIKX0DER",
                          "name": "amazonMotors"
                        },
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/messages/digitalAccessKey?marketplaceIds=ATVPDKIKX0DER",
                          "name": "digitalAccessKey"
                        },
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/messages/unexpectedProblem?marketplaceIds=ATVPDKIKX0DER",
                          "name": "unexpectedProblem"
                        },
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/messages/warranty?marketplaceIds=ATVPDKIKX0DER",
                          "name": "warranty"
                        },
                        {
                          "href": "/messaging/v1/orders/123-1234567-1234567/attributes?marketplaceIds=ATVPDKIKX0DER",
                          "name": "attributes"
                        }
                      ],
                      "self": {
                        "href": "/messaging/v1/orders/123-1234567-1234567?marketplaceIds=ATVPDKIKX0DER"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetMessagingActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetMessagingActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetMessagingActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetMessagingActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetMessagingActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetMessagingActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetMessagingActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetMessagingActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/confirmCustomizationDetails": {
      "post": {
        "tags": [
          "messaging"
        ],
        "description": "Sends a message asking a buyer to provide or verify customization details such as name spelling, images, initials, etc.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "confirmCustomizationDetails",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateConfirmCustomizationDetailsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmCustomizationDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      },
                      "body": {
                        "value": {
                          "text": "My Message",
                          "attachments": [
                            {
                              "uploadDestinationId": "4e936e26-7b72-4b84-af27-e6baee1d546d",
                              "fileName": "AmazonMotors.txt"
                            },
                            {
                              "uploadDestinationId": "4e936e26-7b72-4b84-af27-e6baee1d546d",
                              "fileName": "AmazonMotors.txt"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmCustomizationDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmCustomizationDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmCustomizationDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmCustomizationDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmCustomizationDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmCustomizationDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmCustomizationDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmCustomizationDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/confirmDeliveryDetails": {
      "post": {
        "tags": [
          "messaging"
        ],
        "description": "Sends a message to a buyer to arrange a delivery or to confirm contact information for making a delivery.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createConfirmDeliveryDetails",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateConfirmDeliveryDetailsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmDeliveryDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      },
                      "body": {
                        "value": {
                          "text": "My Message"
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmDeliveryDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmDeliveryDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmDeliveryDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmDeliveryDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmDeliveryDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmDeliveryDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmDeliveryDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmDeliveryDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/legalDisclosure": {
      "post": {
        "tags": [
          "messaging"
        ],
        "description": "Sends a critical message that contains documents that a seller is legally obligated to provide to the buyer. This message should only be used to deliver documents that are required by law.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createLegalDisclosure",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateLegalDisclosureRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The legal disclosure message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateLegalDisclosureResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      },
                      "body": {
                        "value": {
                          "attachments": [
                            {
                              "uploadDestinationId": "4e936e26-7b72-4b84-af27-e6baee1d546d",
                              "fileName": "AmazonMotors.txt"
                            },
                            {
                              "uploadDestinationId": "4e936e26-7b72-4b84-af27-e6baee1d546d",
                              "fileName": "AmazonMotors.txt"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateLegalDisclosureResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateLegalDisclosureResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateLegalDisclosureResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateLegalDisclosureResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateLegalDisclosureResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateLegalDisclosureResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateLegalDisclosureResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateLegalDisclosureResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/negativeFeedbackRemoval": {
      "post": {
        "tags": [
          "messaging"
        ],
        "description": "Sends a non-critical message that asks a buyer to remove their negative feedback. This message should only be sent after the seller has resolved the buyer's problem.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createNegativeFeedbackRemoval",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          }
        ],
        "responses": {
          "201": {
            "description": "The negativeFeedbackRemoval message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateNegativeFeedbackRemovalResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateNegativeFeedbackRemovalResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateNegativeFeedbackRemovalResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateNegativeFeedbackRemovalResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateNegativeFeedbackRemovalResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateNegativeFeedbackRemovalResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateNegativeFeedbackRemovalResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateNegativeFeedbackRemovalResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateNegativeFeedbackRemovalResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/confirmOrderDetails": {
      "post": {
        "tags": [
          "messaging"
        ],
        "description": "Sends a message to ask a buyer an order-related question prior to shipping their order.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createConfirmOrderDetails",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateConfirmOrderDetailsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmOrderDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      },
                      "body": {
                        "value": {
                          "text": "My Message"
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmOrderDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmOrderDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmOrderDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmOrderDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmOrderDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmOrderDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmOrderDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmOrderDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/confirmServiceDetails": {
      "post": {
        "tags": [
          "messaging"
        ],
        "description": "Sends a message to contact a Home Service customer to arrange a service call or to gather information prior to a service call.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createConfirmServiceDetails",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateConfirmServiceDetailsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmServiceDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      },
                      "body": {
                        "value": {
                          "text": "My Message"
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmServiceDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmServiceDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmServiceDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmServiceDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmServiceDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmServiceDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmServiceDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateConfirmServiceDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/amazonMotors": {
      "post": {
        "tags": [
          "messaging"
        ],
        "description": "Sends a message to a buyer to provide details about an Amazon Motors order. This message can only be sent by Amazon Motors sellers.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "CreateAmazonMotors",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAmazonMotorsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateAmazonMotorsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      },
                      "body": {
                        "value": {
                          "attachments": [
                            {
                              "uploadDestinationId": "4e936e26-7b72-4b84-af27-e6baee1d546d",
                              "fileName": "AmazonMotors.txt"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateAmazonMotorsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateAmazonMotorsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateAmazonMotorsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateAmazonMotorsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateAmazonMotorsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateAmazonMotorsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateAmazonMotorsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateAmazonMotorsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/warranty": {
      "post": {
        "tags": [
          "messaging"
        ],
        "description": "Sends a message to a buyer to provide details about warranty information on a purchase in their order.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "CreateWarranty",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWarrantyRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateWarrantyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      },
                      "body": {
                        "value": {
                          "attachments": [
                            {
                              "uploadDestinationId": "8634452c-4d4f-4703-8cea-2ecc9dcb3279",
                              "fileName": "warranty.txt"
                            }
                          ],
                          "coverageStartDate": "2004-12-13T21:39:45.618-08:00",
                          "coverageEndDate": "2005-12-13T21:39:45.618-08:00"
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateWarrantyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateWarrantyResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateWarrantyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateWarrantyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateWarrantyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateWarrantyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateWarrantyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateWarrantyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/attributes": {
      "get": {
        "tags": [
          "messaging"
        ],
        "description": "Returns a response containing attributes related to an order. This includes buyer preferences.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |",
        "operationId": "GetAttributes",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Response has successfully been returned.",
            "schema": {
              "$ref": "#/definitions/GetAttributesResponse"
            },
            "examples": {
              "application/hal+json": {
                "buyer": {
                  "locale": "en-US"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      }
                    }
                  },
                  "response": {
                    "buyer": {
                      "locale": "en-US"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetAttributesResponse"
            },
            "examples": {
              "application/hal+json": {
                "errors": [
                  {
                    "code": "string",
                    "message": "string",
                    "details": "string"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetAttributesResponse"
            },
            "examples": {
              "application/hal+json": {
                "errors": [
                  {
                    "code": "string",
                    "message": "string",
                    "details": "string"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetAttributesResponse"
            },
            "examples": {
              "application/hal+json": {
                "errors": [
                  {
                    "code": "string",
                    "message": "string",
                    "details": "string"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetAttributesResponse"
            },
            "examples": {
              "application/hal+json": {
                "errors": [
                  {
                    "code": "string",
                    "message": "string",
                    "details": "string"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetAttributesResponse"
            },
            "examples": {
              "application/hal+json": {
                "errors": [
                  {
                    "code": "string",
                    "message": "string",
                    "details": "string"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetAttributesResponse"
            },
            "examples": {
              "application/hal+json": {
                "errors": [
                  {
                    "code": "string",
                    "message": "string",
                    "details": "string"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetAttributesResponse"
            },
            "examples": {
              "application/hal+json": {
                "errors": [
                  {
                    "code": "string",
                    "message": "string",
                    "details": "string"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetAttributesResponse"
            },
            "examples": {
              "application/hal+json": {
                "errors": [
                  {
                    "code": "string",
                    "message": "string",
                    "details": "string"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/digitalAccessKey": {
      "post": {
        "tags": [
          "messaging"
        ],
        "description": "Sends a message to a buyer to share a digital access key needed to utilize digital content in their order.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createDigitalAccessKey",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDigitalAccessKeyRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateDigitalAccessKeyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      },
                      "body": {
                        "value": {
                          "text": "My Message",
                          "attachments": [
                            {
                              "uploadDestinationId": "4e936e26-7b72-4b84-af27-e6baee1d546d",
                              "fileName": "AmazonMotors.txt"
                            },
                            {
                              "uploadDestinationId": "4e936e26-7b72-4b84-af27-e6baee1d546d",
                              "fileName": "AmazonMotors.txt"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateDigitalAccessKeyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateDigitalAccessKeyResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateDigitalAccessKeyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateDigitalAccessKeyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateDigitalAccessKeyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateDigitalAccessKeyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateDigitalAccessKeyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateDigitalAccessKeyResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/unexpectedProblem": {
      "post": {
        "tags": [
          "messaging"
        ],
        "description": "Sends a critical message to a buyer that an unexpected problem was encountered affecting the completion of the order.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createUnexpectedProblem",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a message is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUnexpectedProblemRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateUnexpectedProblemResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      },
                      "body": {
                        "value": {
                          "text": "My Message"
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateUnexpectedProblemResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-0000000"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateUnexpectedProblemResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateUnexpectedProblemResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateUnexpectedProblemResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateUnexpectedProblemResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateUnexpectedProblemResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateUnexpectedProblemResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateUnexpectedProblemResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/messaging/v1/orders/{amazonOrderId}/messages/invoice": {
      "post": {
        "description": "Sends a message providing the buyer an invoice",
        "operationId": "sendInvoice",
        "tags": [
          "messaging"
        ],
        "responses": {
          "201": {
            "description": "The message was created for the order.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "badOrderId"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          },
          "415": {
            "description": "The entity of the request is in a format not supported by the requested resource.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference id.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "amazonOrderId",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "An Amazon order identifier. This specifies the order for which a message is sent."
          },
          {
            "name": "marketplaceIds",
            "type": "array",
            "in": "query",
            "required": true,
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "schema": {
              "$ref": "#/definitions/InvoiceRequest"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ]
      }
    },
    "/notifications/v1/subscriptions/{notificationType}": {
      "get": {
        "tags": [
          "notifications"
        ],
        "description": "Returns information about subscription of the specified notification type and payload version. `payloadVersion` is an optional parameter. When `payloadVersion` is not provided, it will return latest payload version subscription's information. You can use this API to get subscription information when you do not have a subscription identifier.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getSubscription",
        "parameters": [
          {
            "$ref": "#/parameters/NotificationType"
          },
          {
            "name": "payloadVersion",
            "in": "query",
            "description": "The version of the payload object to be used in the notification.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionResponse"
            },
            "examples": {
              "Successful Response": {
                "payload": {
                  "subscriptionId": "7fcacc7e-727b-11e9-8848-1681be663d3e",
                  "payloadVersion": "1.0",
                  "destinationId": "3acafc7e-121b-1329-8ae8-1571be663aa2",
                  "processingDirective": {
                    "eventFilter": {
                      "marketplaceIds": [
                        "ATVPDKIKX0DER",
                        "A2EUQ1WTGCTBG2"
                      ],
                      "aggregationSettings": {
                        "aggregationTimePeriod": "FiveMinutes"
                      },
                      "eventFilterType": "ANY_OFFER_CHANGED"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": {
                      "subscriptionId": "TEST_CASE_200_SUBSCRIPTION_ID",
                      "payloadVersion": "1.0",
                      "destinationId": "TEST_CASE_200_DESTINATION_ID"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "notifications"
        ],
        "description": "Creates a subscription for the specified notification type to be delivered to the specified destination. Before you can subscribe, you must first create the destination by calling the `createDestination` operation. In cases where the specified notification type supports multiple payload versions, you can utilize this API to subscribe to a different payload version if you already have an existing subscription for a different payload version.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createSubscription",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionRequest"
            }
          },
          {
            "$ref": "#/parameters/NotificationType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            },
            "examples": {
              "Successful Response": {
                "payload": {
                  "subscriptionId": "7fcacc7e-727b-11e9-8848-1681be663d3e",
                  "payloadVersion": "1.0",
                  "destinationId": "3acafc7e-121b-1329-8ae8-1571be663aa2"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": {
                      "subscriptionId": "TEST_CASE_200_SUBSCRIPTION_ID",
                      "payloadVersion": "1.0",
                      "destinationId": "TEST_CASE_200_DESTINATION_ID"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "409": {
            "description": "The resource specified conflicts with the current state.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/notifications/v1/subscriptions/{notificationType}/{subscriptionId}": {
      "get": {
        "tags": [
          "notifications"
        ],
        "description": "Returns information about a subscription for the specified notification type. The `getSubscriptionById` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getSubscriptionById",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The identifier for the subscription that you want to get.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/NotificationType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionByIdResponse"
            },
            "examples": {
              "Successful Response": {
                "payload": {
                  "subscriptionId": "7fcacc7e-727b-11e9-8848-1681be663d3e",
                  "payloadVersion": "1.0",
                  "destinationId": "3acafc7e-121b-1329-8ae8-1571be663aa2"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": {
                      "subscriptionId": "TEST_CASE_200_SUBSCRIPTION_ID",
                      "payloadVersion": "1.0",
                      "destinationId": "TEST_CASE_200_DESTINATION_ID"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "409": {
            "description": "The resource specified conflicts with the current state.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notifications"
        ],
        "description": "Deletes the subscription indicated by the subscription identifier and notification type that you specify. The subscription identifier can be for any subscription associated with your application. After you successfully call this operation, notifications will stop being sent for the associated subscription. The `deleteSubscriptionById` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "deleteSubscriptionById",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The identifier for the subscription that you want to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/NotificationType"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionByIdResponse"
            },
            "examples": {
              "Successful Operation Response": {}
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "409": {
            "description": "The resource specified conflicts with the current state.",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionByIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/notifications/v1/destinations": {
      "get": {
        "tags": [
          "notifications"
        ],
        "description": "Returns information about all destinations. The `getDestinations` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getDestinations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetDestinationsResponse"
            },
            "examples": {
              "Successful Response": {
                "payload": [
                  {
                    "destinationId": "9e7a83ee-7730-11e9-8f9e-2a86e4085a59",
                    "name": "SQSDestination",
                    "resource": {
                      "sqs": {
                        "arn": "arn:aws:sqs:us-east-2:444455556666:queue1"
                      }
                    }
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": [
                      {
                        "destinationId": "TEST_CASE_200",
                        "resource": {
                          "sqs": {
                            "arn": "arn:aws:sqs:us-east-2:444455556666:queue1"
                          }
                        },
                        "name": "SQSDestination"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetDestinationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetDestinationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetDestinationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "409": {
            "description": "The resource specified conflicts with the current state.",
            "schema": {
              "$ref": "#/definitions/GetDestinationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetDestinationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetDestinationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetDestinationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetDestinationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetDestinationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "notifications"
        ],
        "description": "Creates a destination resource to receive notifications. The `createDestination` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createDestination",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDestinationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateDestinationResponse"
            },
            "examples": {
              "Successful Response": {
                "payload": {
                  "destinationId": "9e7a83ee-7730-11e9-8f9e-2a86e4085a59",
                  "resource": {
                    "sqs": {
                      "arn": "arn:aws:sqs:us-east-2:444455556666:queue1"
                    }
                  },
                  "name": "SQSDestination"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": {
                      "destinationId": "TEST_CASE_200_DESTINATION_ID",
                      "resource": {
                        "sqs": {
                          "arn": "arn:aws:sqs:us-east-2:444455556666:queue1"
                        }
                      },
                      "name": "SQSDestination"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateDestinationResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "409": {
            "description": "The resource specified conflicts with the current state.",
            "schema": {
              "$ref": "#/definitions/CreateDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/notifications/v1/destinations/{destinationId}": {
      "get": {
        "tags": [
          "notifications"
        ],
        "description": "Returns information about the destination that you specify. The `getDestination` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getDestination",
        "parameters": [
          {
            "name": "destinationId",
            "in": "path",
            "description": "The identifier generated when you created the destination.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetDestinationResponse"
            },
            "examples": {
              "Successful Response": {
                "payload": {
                  "destinationId": "9e7a83ee-7730-11e9-8f9e-2a86e4085a59",
                  "name": "SQSDestination",
                  "resource": {
                    "sqs": {
                      "arn": "arn:aws:sqs:us-east-2:444455556666:queue1"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": {
                      "destinationId": "TEST_CASE_200_DESTINATION",
                      "resource": {
                        "sqs": {
                          "arn": "arn:aws:sqs:us-east-2:444455556666:queue1"
                        }
                      },
                      "name": "SQSDestination"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetDestinationResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "409": {
            "description": "The resource specified conflicts with the current state.",
            "schema": {
              "$ref": "#/definitions/GetDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notifications"
        ],
        "description": "Deletes the destination that you specify. The `deleteDestination` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "deleteDestination",
        "parameters": [
          {
            "name": "destinationId",
            "in": "path",
            "description": "The identifier for the destination that you want to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/DeleteDestinationResponse"
            },
            "examples": {
              "Successful Response": {}
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/DeleteDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/DeleteDestinationResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/DeleteDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "409": {
            "description": "The resource specified conflicts with the current state.",
            "schema": {
              "$ref": "#/definitions/DeleteDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/DeleteDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/DeleteDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/DeleteDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/DeleteDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/DeleteDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/orders/v0/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Returns orders that are created or updated during the specified time period. If you want to return specific types of orders, you can apply filters to your request. `NextToken` doesn't affect any filters that you include in your request; it only impacts the pagination for the filtered orders response. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0167 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) in the Selling Partner API documentation.",
        "operationId": "getOrders",
        "parameters": [
          {
            "name": "CreatedAfter",
            "in": "query",
            "description": "Use this date to select orders created after (or at) a specified time. Only orders placed after the specified time are returned. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.\n\n**Note**: Either the `CreatedAfter` parameter or the `LastUpdatedAfter` parameter is required. Both cannot be empty. `LastUpdatedAfter` and `LastUpdatedBefore` cannot be set when `CreatedAfter` is set.",
            "required": false,
            "type": "string"
          },
          {
            "name": "CreatedBefore",
            "in": "query",
            "description": "Use this date to select orders created before (or at) a specified time. Only orders placed before the specified time are returned. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.\n\n**Note**: `CreatedBefore` is optional when `CreatedAfter` is set. If specified, `CreatedBefore` must be equal to or after the `CreatedAfter` date and at least two minutes before current time.",
            "required": false,
            "type": "string"
          },
          {
            "name": "LastUpdatedAfter",
            "in": "query",
            "description": "Use this date to select orders that were last updated after (or at) a specified time. An update is defined as any change in order status, including the creation of a new order. Includes updates made by Amazon and by the seller. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.\n\n**Note**: Either the `CreatedAfter` parameter or the `LastUpdatedAfter` parameter is required. Both cannot be empty. `CreatedAfter` or `CreatedBefore` cannot be set when `LastUpdatedAfter` is set.",
            "required": false,
            "type": "string"
          },
          {
            "name": "LastUpdatedBefore",
            "in": "query",
            "description": "Use this date to select orders that were last updated before (or at) a specified time. An update is defined as any change in order status, including the creation of a new order. Includes updates made by Amazon and by the seller. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.\n\n**Note**: `LastUpdatedBefore` is optional when `LastUpdatedAfter` is set. But if specified, `LastUpdatedBefore` must be equal to or after the `LastUpdatedAfter` date and at least two minutes before current time.",
            "required": false,
            "type": "string"
          },
          {
            "name": "OrderStatuses",
            "in": "query",
            "description": "A list of `OrderStatus` values used to filter the results.\n\n**Possible values:**\n- `PendingAvailability` (This status is available for pre-orders only. The order has been placed, payment has not been authorized, and the release date of the item is in the future.)\n- `Pending` (The order has been placed but payment has not been authorized.)\n- `Unshipped` (Payment has been authorized and the order is ready for shipment, but no items in the order have been shipped.)\n- `PartiallyShipped` (One or more, but not all, items in the order have been shipped.)\n- `Shipped` (All items in the order have been shipped.)\n- `InvoiceUnconfirmed` (All items in the order have been shipped. The seller has not yet given confirmation to Amazon that the invoice has been shipped to the buyer.)\n- `Canceled` (The order has been canceled.)\n- `Unfulfillable` (The order cannot be fulfilled. This state applies only to Multi-Channel Fulfillment orders.)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "MarketplaceIds",
            "in": "query",
            "description": "A list of `MarketplaceId` values. Used to select orders that were placed in the specified marketplaces.\n\nRefer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) for a complete list of `marketplaceId` values.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 50
          },
          {
            "name": "FulfillmentChannels",
            "in": "query",
            "description": "A list that indicates how an order was fulfilled. Filters the results by fulfillment channel. \n\n**Possible values**: `AFN` (fulfilled by Amazon), `MFN` (fulfilled by seller).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "PaymentMethods",
            "in": "query",
            "description": "A list of payment method values. Use this field to select orders that were paid with the specified payment methods.\n\n**Possible values**: `COD` (cash on delivery), `CVS` (convenience store), `Other` (Any payment method other than COD or CVS).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "BuyerEmail",
            "in": "query",
            "description": "The email address of a buyer. Used to select orders that contain the specified email address.",
            "required": false,
            "type": "string"
          },
          {
            "name": "SellerOrderId",
            "in": "query",
            "description": "An order identifier that is specified by the seller. Used to select only the orders that match the order identifier. If `SellerOrderId` is specified, then `FulfillmentChannels`, `OrderStatuses`, `PaymentMethod`, `LastUpdatedAfter`, LastUpdatedBefore, and `BuyerEmail` cannot be specified.",
            "required": false,
            "type": "string"
          },
          {
            "name": "MaxResultsPerPage",
            "in": "query",
            "description": "A number that indicates the maximum number of orders that can be returned per page. Value must be 1 - 100. Default 100.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "EasyShipShipmentStatuses",
            "in": "query",
            "description": "A list of `EasyShipShipmentStatus` values. Used to select Easy Ship orders with statuses that match the specified values. If `EasyShipShipmentStatus` is specified, only Amazon Easy Ship orders are returned.\n\n**Possible values:**\n- `PendingSchedule` (The package is awaiting the schedule for pick-up.)\n- `PendingPickUp` (Amazon has not yet picked up the package from the seller.)\n- `PendingDropOff` (The seller will deliver the package to the carrier.)\n- `LabelCanceled` (The seller canceled the pickup.)\n- `PickedUp` (Amazon has picked up the package from the seller.)\n- `DroppedOff` (The package is delivered to the carrier by the seller.)\n- `AtOriginFC` (The packaged is at the origin fulfillment center.)\n- `AtDestinationFC` (The package is at the destination fulfillment center.)\n- `Delivered` (The package has been delivered.)\n- `RejectedByBuyer` (The package has been rejected by the buyer.)\n- `Undeliverable` (The package cannot be delivered.)\n- `ReturningToSeller` (The package was not delivered and is being returned to the seller.)\n- `ReturnedToSeller` (The package was not delivered and was returned to the seller.)\n- `Lost` (The package is lost.)\n- `OutForDelivery` (The package is out for delivery.)\n- `Damaged` (The package was damaged by the carrier.)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "ElectronicInvoiceStatuses",
            "in": "query",
            "description": "A list of `ElectronicInvoiceStatus` values. Used to select orders with electronic invoice statuses that match the specified values.\n\n**Possible values:**\n- `NotRequired` (Electronic invoice submission is not required for this order.)\n- `NotFound` (The electronic invoice was not submitted for this order.)\n- `Processing` (The electronic invoice is being processed for this order.)\n- `Errored` (The last submitted electronic invoice was rejected for this order.)\n- `Accepted` (The last submitted electronic invoice was submitted and accepted.)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response of your previous request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "AmazonOrderIds",
            "in": "query",
            "description": "A list of `AmazonOrderId` values. An `AmazonOrderId` is an Amazon-defined order identifier, in 3-7-7 format.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 50
          },
          {
            "name": "ActualFulfillmentSupplySourceId",
            "in": "query",
            "description": "The `sourceId` of the location from where you want the order fulfilled.",
            "required": false,
            "type": "string"
          },
          {
            "name": "IsISPU",
            "in": "query",
            "description": "When true, this order is marked to be picked up from a store rather than delivered.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "StoreChainStoreId",
            "in": "query",
            "description": "The store chain store identifier. Linked to a specific store in a store chain.",
            "required": false,
            "type": "string"
          },
          {
            "name": "EarliestDeliveryDateBefore",
            "in": "query",
            "description": "Use this date to select orders with a earliest delivery date before (or at) a specified time. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "EarliestDeliveryDateAfter",
            "in": "query",
            "description": "Use this date to select orders with a earliest delivery date after (or at) a specified time. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "LatestDeliveryDateBefore",
            "in": "query",
            "description": "Use this date to select orders with a latest delivery date before (or at) a specified time. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "LatestDeliveryDateAfter",
            "in": "query",
            "description": "Use this date to select orders with a latest delivery date after (or at) a specified time. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetOrdersResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "NextToken": "2YgYW55IGNhcm5hbCBwbGVhc3VyZS4",
                  "Orders": [
                    {
                      "AmazonOrderId": "902-3159896-1390916",
                      "PurchaseDate": "2017-01-20T19:49:35Z",
                      "LastUpdateDate": "2017-01-20T19:49:35Z",
                      "OrderStatus": "Pending",
                      "FulfillmentChannel": "SellerFulfilled",
                      "NumberOfItemsShipped": 0,
                      "NumberOfItemsUnshipped": 0,
                      "PaymentMethod": "Other",
                      "PaymentMethodDetails": [
                        "CreditCard",
                        "GiftCerificate"
                      ],
                      "MarketplaceId": "ATVPDKIKX0DER",
                      "ShipmentServiceLevelCategory": "Standard",
                      "OrderType": "StandardOrder",
                      "EarliestShipDate": "2017-01-20T19:51:16Z",
                      "LatestShipDate": "2017-01-25T19:49:35Z",
                      "IsBusinessOrder": false,
                      "IsPrime": false,
                      "IsAccessPointOrder": false,
                      "IsGlobalExpressEnabled": false,
                      "IsPremiumOrder": false,
                      "IsSoldByAB": false,
                      "IsIBA": false,
                      "ShippingAddress": {
                        "Name": "Michigan address",
                        "AddressLine1": "1 Cross St.",
                        "City": "Canton",
                        "StateOrRegion": "MI",
                        "PostalCode": "48817",
                        "CountryCode": "US"
                      },
                      "BuyerInfo": {
                        "BuyerEmail": "user@example.com",
                        "BuyerName": "John Doe",
                        "BuyerTaxInfo": {
                          "CompanyLegalName": "A Company Name"
                        },
                        "PurchaseOrderNumber": "1234567890123"
                      }
                    }
                  ]
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "CreatedAfter": {
                        "value": "TEST_CASE_200"
                      },
                      "MarketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "CreatedBefore": "1.569521782042E9",
                      "Orders": [
                        {
                          "AmazonOrderId": "902-1845936-5435065",
                          "PurchaseDate": "1970-01-19T03:58:30Z",
                          "LastUpdateDate": "1970-01-19T03:58:32Z",
                          "OrderStatus": "Unshipped",
                          "FulfillmentChannel": "MFN",
                          "SalesChannel": "Amazon.com",
                          "ShipServiceLevel": "Std US D2D Dom",
                          "OrderTotal": {
                            "CurrencyCode": "USD",
                            "Amount": "11.01"
                          },
                          "NumberOfItemsShipped": 0,
                          "NumberOfItemsUnshipped": 1,
                          "PaymentMethod": "Other",
                          "PaymentMethodDetails": [
                            "Standard"
                          ],
                          "IsReplacementOrder": false,
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "ShipmentServiceLevelCategory": "Standard",
                          "OrderType": "StandardOrder",
                          "EarliestShipDate": "1970-01-19T03:59:27Z",
                          "LatestShipDate": "1970-01-19T04:05:13Z",
                          "EarliestDeliveryDate": "1970-01-19T04:06:39Z",
                          "LatestDeliveryDate": "1970-01-19T04:15:17Z",
                          "IsBusinessOrder": false,
                          "IsPrime": false,
                          "IsGlobalExpressEnabled": false,
                          "IsPremiumOrder": false,
                          "IsSoldByAB": false,
                          "IsIBA": false,
                          "DefaultShipFromLocationAddress": {
                            "Name": "MFNIntegrationTestMerchant",
                            "AddressLine1": "2201 WESTLAKE AVE",
                            "City": "SEATTLE",
                            "StateOrRegion": "WA",
                            "PostalCode": "98121-2778",
                            "CountryCode": "US",
                            "Phone": "+1 480-386-0930 ext. 73824",
                            "AddressType": "Commercial"
                          },
                          "FulfillmentInstruction": {
                            "FulfillmentSupplySourceId": "sampleSupplySourceId"
                          },
                          "IsISPU": false,
                          "IsAccessPointOrder": false,
                          "AutomatedShippingSettings": {
                            "HasAutomatedShippingSettings": false
                          },
                          "EasyShipShipmentStatus": "PendingPickUp",
                          "ElectronicInvoiceStatus": "NotRequired"
                        },
                        {
                          "AmazonOrderId": "902-8745147-1934268",
                          "PurchaseDate": "1970-01-19T03:58:30Z",
                          "LastUpdateDate": "1970-01-19T03:58:32Z",
                          "OrderStatus": "Unshipped",
                          "FulfillmentChannel": "MFN",
                          "SalesChannel": "Amazon.com",
                          "ShipServiceLevel": "Std US D2D Dom",
                          "OrderTotal": {
                            "CurrencyCode": "USD",
                            "Amount": "11.01"
                          },
                          "NumberOfItemsShipped": 0,
                          "NumberOfItemsUnshipped": 1,
                          "PaymentMethod": "Other",
                          "PaymentMethodDetails": [
                            "Standard"
                          ],
                          "IsReplacementOrder": false,
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "ShipmentServiceLevelCategory": "Standard",
                          "OrderType": "StandardOrder",
                          "EarliestShipDate": "1970-01-19T03:59:27Z",
                          "LatestShipDate": "1970-01-19T04:05:13Z",
                          "EarliestDeliveryDate": "1970-01-19T04:06:39Z",
                          "LatestDeliveryDate": "1970-01-19T04:15:17Z",
                          "IsBusinessOrder": false,
                          "IsPrime": false,
                          "IsAccessPointOrder": false,
                          "IsGlobalExpressEnabled": false,
                          "IsPremiumOrder": false,
                          "IsSoldByAB": false,
                          "IsIBA": false,
                          "EasyShipShipmentStatus": "PendingPickUp",
                          "ElectronicInvoiceStatus": "NotRequired"
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "CreatedAfter": {
                        "value": "TEST_CASE_200_NEXT_TOKEN"
                      },
                      "MarketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "NextToken": "2YgYW55IGNhcm5hbCBwbGVhc3VyZS4",
                      "Orders": [
                        {
                          "AmazonOrderId": "902-3159896-1390916",
                          "PurchaseDate": "2017-01-20T19:49:35Z",
                          "LastUpdateDate": "2017-01-20T19:49:35Z",
                          "OrderStatus": "Pending",
                          "FulfillmentChannel": "SellerFulfilled",
                          "NumberOfItemsShipped": 0,
                          "NumberOfItemsUnshipped": 0,
                          "PaymentMethod": "Other",
                          "PaymentMethodDetails": [
                            "CreditCard",
                            "GiftCerificate"
                          ],
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "ShipmentServiceLevelCategory": "Standard",
                          "OrderType": "StandardOrder",
                          "EasyShipShipmentStatus": "PendingPickUp",
                          "ElectronicInvoiceStatus": "NotRequired",
                          "EarliestShipDate": "2017-01-20T19:51:16Z",
                          "LatestShipDate": "2017-01-25T19:49:35Z",
                          "IsBusinessOrder": false,
                          "IsPrime": false,
                          "IsAccessPointOrder": false,
                          "IsGlobalExpressEnabled": false,
                          "IsPremiumOrder": false,
                          "IsSoldByAB": false,
                          "IsIBA": false
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "CreatedAfter": {
                        "value": "TEST_CASE_200_NEXT_TOKEN"
                      },
                      "MarketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      },
                      "NextToken": {
                        "value": "2YgYW55IGNhcm5hbCBwbGVhc3VyZS4"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "Orders": [
                        {
                          "AmazonOrderId": "902-3159896-1390916",
                          "PurchaseDate": "2017-01-20T19:49:35Z",
                          "LastUpdateDate": "2017-01-20T19:49:35Z",
                          "OrderStatus": "Pending",
                          "FulfillmentChannel": "SellerFulfilled",
                          "NumberOfItemsShipped": 0,
                          "NumberOfItemsUnshipped": 0,
                          "PaymentMethod": "Other",
                          "PaymentMethodDetails": [
                            "CreditCard",
                            "GiftCerificate"
                          ],
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "ShipmentServiceLevelCategory": "Standard",
                          "OrderType": "StandardOrder",
                          "EasyShipShipmentStatus": "PendingPickUp",
                          "ElectronicInvoiceStatus": "NotRequired",
                          "EarliestShipDate": "2017-01-20T19:51:16Z",
                          "LatestShipDate": "2017-01-25T19:49:35Z",
                          "IsBusinessOrder": false,
                          "IsPrime": false,
                          "IsAccessPointOrder": false,
                          "IsGlobalExpressEnabled": false,
                          "IsPremiumOrder": false,
                          "IsSoldByAB": false,
                          "IsIBA": false
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetOrdersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "CreatedAfter": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetOrdersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getOrders"
      }
    },
    "/orders/v0/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Returns the order that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "An Amazon-defined order identifier, in 3-7-7 format.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetOrderResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "AmazonOrderId": "902-3159896-1390916",
                  "PurchaseDate": "2017-01-20T19:49:35Z",
                  "LastUpdateDate": "2017-01-20T19:49:35Z",
                  "OrderStatus": "Pending",
                  "FulfillmentChannel": "SellerFulfilled",
                  "NumberOfItemsShipped": 0,
                  "NumberOfItemsUnshipped": 0,
                  "PaymentMethod": "Other",
                  "PaymentMethodDetails": [
                    "CreditCard",
                    "GiftCerificate"
                  ],
                  "MarketplaceId": "ATVPDKIKX0DER",
                  "ShipmentServiceLevelCategory": "Standard",
                  "OrderType": "StandardOrder",
                  "EarliestShipDate": "2017-01-20T19:51:16Z",
                  "LatestShipDate": "2017-01-25T19:49:35Z",
                  "IsBusinessOrder": false,
                  "IsPrime": false,
                  "IsGlobalExpressEnabled": false,
                  "IsPremiumOrder": false,
                  "IsSoldByAB": false,
                  "IsIBA": false,
                  "DefaultShipFromLocationAddress": {
                    "Name": "MFNIntegrationTestMerchant",
                    "AddressLine1": "2201 WESTLAKE AVE",
                    "City": "SEATTLE",
                    "StateOrRegion": "WA",
                    "PostalCode": "98121-2778",
                    "CountryCode": "US",
                    "Phone": "+1 480-386-0930 ext. 73824",
                    "AddressType": "Commercial"
                  },
                  "FulfillmentInstruction": {
                    "FulfillmentSupplySourceId": "sampleSupplySourceId"
                  },
                  "IsISPU": false,
                  "IsAccessPointOrder": false,
                  "ShippingAddress": {
                    "Name": "Michigan address",
                    "AddressLine1": "1 Cross St.",
                    "City": "Canton",
                    "StateOrRegion": "MI",
                    "PostalCode": "48817",
                    "CountryCode": "US"
                  },
                  "BuyerInfo": {
                    "BuyerEmail": "user@example.com",
                    "BuyerName": "John Doe",
                    "BuyerTaxInfo": {
                      "CompanyLegalName": "A Company Name"
                    },
                    "PurchaseOrderNumber": "1234567890123"
                  },
                  "AutomatedShippingSettings": {
                    "HasAutomatedShippingSettings": false
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_200"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "AmazonOrderId": "902-1845936-5435065",
                      "PurchaseDate": "1970-01-19T03:58:30Z",
                      "LastUpdateDate": "1970-01-19T03:58:32Z",
                      "OrderStatus": "Unshipped",
                      "FulfillmentChannel": "MFN",
                      "SalesChannel": "Amazon.com",
                      "ShipServiceLevel": "Std US D2D Dom",
                      "OrderTotal": {
                        "CurrencyCode": "USD",
                        "Amount": "11.01"
                      },
                      "NumberOfItemsShipped": 0,
                      "NumberOfItemsUnshipped": 1,
                      "PaymentMethod": "Other",
                      "PaymentMethodDetails": [
                        "Standard"
                      ],
                      "IsReplacementOrder": false,
                      "MarketplaceId": "ATVPDKIKX0DER",
                      "ShipmentServiceLevelCategory": "Standard",
                      "OrderType": "StandardOrder",
                      "EarliestShipDate": "1970-01-19T03:59:27Z",
                      "LatestShipDate": "1970-01-19T04:05:13Z",
                      "EarliestDeliveryDate": "1970-01-19T04:06:39Z",
                      "LatestDeliveryDate": "1970-01-19T04:15:17Z",
                      "IsBusinessOrder": false,
                      "IsPrime": false,
                      "IsGlobalExpressEnabled": false,
                      "IsPremiumOrder": false,
                      "IsSoldByAB": false,
                      "IsIBA": false,
                      "DefaultShipFromLocationAddress": {
                        "Name": "MFNIntegrationTestMerchant",
                        "AddressLine1": "2201 WESTLAKE AVE",
                        "City": "SEATTLE",
                        "StateOrRegion": "WA",
                        "PostalCode": "98121-2778",
                        "CountryCode": "US",
                        "Phone": "+1 480-386-0930 ext. 73824",
                        "AddressType": "Commercial"
                      },
                      "FulfillmentInstruction": {
                        "FulfillmentSupplySourceId": "sampleSupplySourceId"
                      },
                      "IsISPU": false,
                      "IsAccessPointOrder": false,
                      "AutomatedShippingSettings": {
                        "HasAutomatedShippingSettings": false
                      },
                      "EasyShipShipmentStatus": "PendingPickUp",
                      "ElectronicInvoiceStatus": "NotRequired"
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_IBA_200"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "AmazonOrderId": "921-3175655-0452641",
                      "PurchaseDate": "2019-05-07T15:42:57.058Z",
                      "LastUpdateDate": "2019-05-08T21:59:59Z",
                      "OrderStatus": "Shipped",
                      "FulfillmentChannel": "AFN",
                      "SalesChannel": "Amazon.de",
                      "ShipServiceLevel": "Standard",
                      "OrderTotal": {
                        "CurrencyCode": "EUR",
                        "Amount": "100.00"
                      },
                      "NumberOfItemsShipped": 1,
                      "NumberOfItemsUnshipped": 0,
                      "PaymentMethod": "Other",
                      "PaymentMethodDetails": [
                        "Invoice"
                      ],
                      "IsReplacementOrder": false,
                      "MarketplaceId": "A1PA6795UKMFR9",
                      "ShipmentServiceLevelCategory": "Standard",
                      "OrderType": "StandardOrder",
                      "EarliestShipDate": "1970-01-19T03:59:27Z",
                      "LatestShipDate": "2019-05-08T21:59:59Z",
                      "EarliestDeliveryDate": "2019-05-10T21:59:59Z",
                      "LatestDeliveryDate": "2019-05-12T21:59:59Z",
                      "IsBusinessOrder": true,
                      "IsPrime": false,
                      "IsGlobalExpressEnabled": false,
                      "IsPremiumOrder": false,
                      "IsSoldByAB": true,
                      "IsIBA": true,
                      "DefaultShipFromLocationAddress": {
                        "Name": "MFNIntegrationTestMerchant",
                        "AddressLine1": "2201 WESTLAKE AVE",
                        "City": "SEATTLE",
                        "StateOrRegion": "WA",
                        "PostalCode": "98121-2778",
                        "CountryCode": "US",
                        "Phone": "+1 480-386-0930 ext. 73824",
                        "AddressType": "Commercial"
                      },
                      "FulfillmentInstruction": {
                        "FulfillmentSupplySourceId": "sampleSupplySourceId"
                      },
                      "IsISPU": false,
                      "IsAccessPointOrder": false,
                      "AutomatedShippingSettings": {
                        "HasAutomatedShippingSettings": false
                      },
                      "EasyShipShipmentStatus": "PendingPickUp",
                      "ElectronicInvoiceStatus": "NotRequired"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getOrder"
      }
    },
    "/orders/v0/orders/{orderId}/buyerInfo": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Returns buyer information for the order that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getOrderBuyerInfo",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "An `orderId` is an Amazon-defined order identifier, in 3-7-7 format.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetOrderBuyerInfoResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "AmazonOrderId": "902-3159896-1390916",
                  "BuyerEmail": "user@example.com",
                  "BuyerName": "John Smith",
                  "BuyerTaxInfo": {
                    "CompanyLegalName": "Company Name"
                  },
                  "PurchaseOrderNumber": "1234567890123"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_200"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "AmazonOrderId": "902-1845936-5435065",
                      "BuyerEmail": "fzyrv6gwkhbb15c@example.com",
                      "BuyerName": "MFNIntegrationTestMerchant"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetOrderBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetOrderBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetOrderBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetOrderBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetOrderBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetOrderBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getOrderBuyerInfo"
      }
    },
    "/orders/v0/orders/{orderId}/address": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Returns the shipping address for the order that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getOrderAddress",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "An `orderId` is an Amazon-defined order identifier, in 3-7-7 format.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetOrderAddressResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "AmazonOrderId": "902-3159896-1390916",
                  "ShippingAddress": {
                    "Name": "Michigan address",
                    "AddressLine1": "1 cross st",
                    "City": "Canton",
                    "StateOrRegion": "MI",
                    "PostalCode": "48817",
                    "CountryCode": "US"
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_200"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "AmazonOrderId": "902-1845936-5435065",
                      "ShippingAddress": {
                        "Name": "MFNIntegrationTestMerchant",
                        "AddressLine1": "2201 WESTLAKE AVE",
                        "City": "SEATTLE",
                        "StateOrRegion": "WA",
                        "PostalCode": "98121-2778",
                        "CountryCode": "US",
                        "Phone": "+1 480-386-0930 ext. 73824",
                        "AddressType": "Commercial"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetOrderAddressResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetOrderAddressResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetOrderAddressResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetOrderAddressResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetOrderAddressResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetOrderAddressResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getOrderAddress"
      }
    },
    "/orders/v0/orders/{orderId}/orderItems": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Returns detailed order item information for the order that you specify. If `NextToken` is provided, it's used to retrieve the next page of order items.\n\n__Note__: When an order is in the Pending state (the order has been placed but payment has not been authorized), the getOrderItems operation does not return information about pricing, taxes, shipping charges, gift status or promotions for the order items in the order. After an order leaves the Pending state (this occurs when payment has been authorized) and enters the Unshipped, Partially Shipped, or Shipped state, the getOrderItems operation returns information about pricing, taxes, shipping charges, gift status and promotions for the order items in the order.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getOrderItems",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "An Amazon-defined order identifier, in 3-7-7 format.",
            "required": true,
            "type": "string"
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response of your previous request.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "AmazonOrderId": "903-1671087-0812628",
                  "NextToken": "2YgYW55IGNhcm5hbCBwbGVhc3VyZS4",
                  "OrderItems": [
                    {
                      "ASIN": "BT0093TELA",
                      "OrderItemId": "68828574383266",
                      "SellerSKU": "CBA_OTF_1",
                      "Title": "Example item name",
                      "QuantityOrdered": 1,
                      "QuantityShipped": 1,
                      "PointsGranted": {
                        "PointsNumber": 10,
                        "PointsMonetaryValue": {
                          "CurrencyCode": "JPY",
                          "Amount": "10.00"
                        }
                      },
                      "ItemPrice": {
                        "CurrencyCode": "JPY",
                        "Amount": "25.99"
                      },
                      "ShippingPrice": {
                        "CurrencyCode": "JPY",
                        "Amount": "1.26"
                      },
                      "ScheduledDeliveryEndDate": "2013-09-09T01:30:00Z",
                      "ScheduledDeliveryStartDate": "2013-09-07T02:00:00Z",
                      "CODFee": {
                        "CurrencyCode": "JPY",
                        "Amount": "10.00"
                      },
                      "CODFeeDiscount": {
                        "CurrencyCode": "JPY",
                        "Amount": "1.00"
                      },
                      "PriceDesignation": "BusinessPrice",
                      "BuyerInfo": {
                        "BuyerCustomizedInfo": {
                          "CustomizedURL": "https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1"
                        },
                        "GiftMessageText": "For you!",
                        "GiftWrapPrice": {
                          "CurrencyCode": "GBP",
                          "Amount": "41.99"
                        },
                        "GiftWrapLevel": "Classic"
                      },
                      "BuyerRequestedCancel": {
                        "IsBuyerRequestedCancel": "true",
                        "BuyerCancelReason": "Found cheaper somewhere else."
                      },
                      "SerialNumbers": [
                        "854"
                      ]
                    },
                    {
                      "ASIN": "BCTU1104UEFB",
                      "OrderItemId": "79039765272157",
                      "SellerSKU": "CBA_OTF_5",
                      "Title": "Example item name",
                      "QuantityOrdered": 2,
                      "ItemPrice": {
                        "CurrencyCode": "JPY",
                        "Amount": "17.95"
                      },
                      "PromotionIds": [
                        "FREESHIP"
                      ],
                      "ConditionId": "Used",
                      "ConditionSubtypeId": "Mint",
                      "ConditionNote": "Example ConditionNote",
                      "PriceDesignation": "BusinessPrice",
                      "BuyerInfo": {
                        "BuyerCustomizedInfo": {
                          "CustomizedURL": "https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1"
                        },
                        "GiftMessageText": "For you!",
                        "GiftWrapPrice": {
                          "CurrencyCode": "JPY",
                          "Amount": "1.99"
                        },
                        "GiftWrapLevel": "Classic"
                      },
                      "BuyerRequestedCancel": {
                        "IsBuyerRequestedCancel": "true",
                        "BuyerCancelReason": "Found cheaper somewhere else."
                      }
                    }
                  ]
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_200"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "AmazonOrderId": "902-1845936-5435065",
                      "OrderItems": [
                        {
                          "ASIN": "B00551Q3CS",
                          "OrderItemId": "05015851154158",
                          "SellerSKU": "NABetaASINB00551Q3CS",
                          "Title": "B00551Q3CS [Card Book]",
                          "QuantityOrdered": 1,
                          "QuantityShipped": 0,
                          "ProductInfo": {
                            "NumberOfItems": "1"
                          },
                          "ItemPrice": {
                            "CurrencyCode": "USD",
                            "Amount": "10.00"
                          },
                          "ItemTax": {
                            "CurrencyCode": "USD",
                            "Amount": "1.01"
                          },
                          "PromotionDiscount": {
                            "CurrencyCode": "USD",
                            "Amount": "0.00"
                          },
                          "IsGift": "false",
                          "ConditionId": "New",
                          "ConditionSubtypeId": "New",
                          "IsTransparency": false,
                          "SerialNumberRequired": false,
                          "IossNumber": "",
                          "DeemedResellerCategory": "IOSS",
                          "StoreChainStoreId": "ISPU_StoreId",
                          "BuyerRequestedCancel": {
                            "IsBuyerRequestedCancel": "true",
                            "BuyerCancelReason": "Found cheaper somewhere else."
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getOrderItems"
      }
    },
    "/orders/v0/orders/{orderId}/orderItems/buyerInfo": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Returns buyer information for the order items in the order that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getOrderItemsBuyerInfo",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "An Amazon-defined order identifier, in 3-7-7 format.",
            "required": true,
            "type": "string"
          },
          {
            "name": "NextToken",
            "in": "query",
            "description": "A string token returned in the response of your previous request.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsBuyerInfoResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "OrderItemId": "903-1671087-0812628",
                  "BuyerCustomizedInfo": {
                    "CustomizedURL": "https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1"
                  },
                  "GiftMessageText": "For you!",
                  "GiftWrapPrice": {
                    "CurrencyCode": "JPY",
                    "Amount": "1.99"
                  },
                  "GiftWrapLevel": "Classic"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_200"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "AmazonOrderId": "902-1845936-5435065",
                      "OrderItems": [
                        {
                          "BuyerCustomizedInfo": {
                            "CustomizedURL": "https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1"
                          },
                          "GiftMessageText": "Et toi!",
                          "GiftWrapPrice": {
                            "CurrencyCode": "JPY",
                            "Amount": "1.99"
                          },
                          "GiftWrapLevel": "Classic"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetOrderItemsBuyerInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getOrderItemsBuyerInfo"
      }
    },
    "/orders/v0/orders/{orderId}/shipment": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Update the shipment status for an order that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateShipmentStatus",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "An Amazon-defined order identifier, in 3-7-7 format.",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "The request body for the `updateShipmentStatus` operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateShipmentStatusRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {}
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "marketplaceId": "1",
                          "shipmentStatus": "ReadyForPickup"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Marketplace ID is not defined",
                        "details": "1001"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateShipmentStatusErrorResponse"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateShipmentStatusErrorResponse"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateShipmentStatusErrorResponse"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateShipmentStatusErrorResponse"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateShipmentStatusErrorResponse"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateShipmentStatusErrorResponse"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateShipmentStatusErrorResponse"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateShipmentStatusErrorResponse"
            }
          }
        },
        "summary": "updateShipmentStatus"
      }
    },
    "/orders/v0/orders/{orderId}/regulatedInfo": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Returns regulated information for the order that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getOrderRegulatedInfo",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "An Amazon-defined order identifier, in 3-7-7 format.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetOrderRegulatedInfoResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "902-3159896-1390916"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "AmazonOrderId": "902-3159896-1390916",
                      "RequiresDosageLabel": false,
                      "RegulatedInformation": {
                        "Fields": [
                          {
                            "FieldId": "pet_prescription_name",
                            "FieldLabel": "Name",
                            "FieldType": "Text",
                            "FieldValue": "Ruffus"
                          },
                          {
                            "FieldId": "pet_prescription_species",
                            "FieldLabel": "Species",
                            "FieldType": "Text",
                            "FieldValue": "Dog"
                          }
                        ]
                      },
                      "RegulatedOrderVerificationStatus": {
                        "Status": "Pending",
                        "RequiresMerchantAction": true,
                        "ValidRejectionReasons": [
                          {
                            "RejectionReasonId": "shield_pom_vps_reject_product",
                            "RejectionReasonDescription": "This medicine is not suitable for your pet."
                          },
                          {
                            "RejectionReasonId": "shield_pom_vps_reject_age",
                            "RejectionReasonDescription": "Your pet is too young for this medicine."
                          },
                          {
                            "RejectionReasonId": "shield_pom_vps_reject_incorrect_weight",
                            "RejectionReasonDescription": "Your pet's weight does not match ordered size."
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "902-2592119-3531015"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "AmazonOrderId": "902-2592119-3531015",
                      "RequiresDosageLabel": false,
                      "RegulatedInformation": {
                        "Fields": [
                          {
                            "FieldId": "pets_rx_scName",
                            "FieldLabel": "Pet name",
                            "FieldType": "Text",
                            "FieldValue": "Woofer"
                          },
                          {
                            "FieldId": "pets_rx_scType",
                            "FieldLabel": "Pet type",
                            "FieldType": "Text",
                            "FieldValue": "Dog"
                          },
                          {
                            "FieldId": "pets_rx_scBreed",
                            "FieldLabel": "Pet breed",
                            "FieldType": "Text",
                            "FieldValue": "Husky"
                          },
                          {
                            "FieldId": "pets_rx_scGender",
                            "FieldLabel": "Pet gender",
                            "FieldType": "Text",
                            "FieldValue": "Female"
                          },
                          {
                            "FieldId": "pets_rx_scDateOfBirth",
                            "FieldLabel": "Pet Birth Date",
                            "FieldType": "Text",
                            "FieldValue": "2016-05-01"
                          },
                          {
                            "FieldId": "pets_rx_scWeight",
                            "FieldLabel": "Weight",
                            "FieldType": "Text",
                            "FieldValue": "12"
                          },
                          {
                            "FieldId": "pets_rx_scWeightUnit",
                            "FieldLabel": "Weight Unit",
                            "FieldType": "Text",
                            "FieldValue": "Pound"
                          },
                          {
                            "FieldId": "pets_rx_scHasAllergies",
                            "FieldLabel": "Does your pet have allergies?",
                            "FieldType": "Text",
                            "FieldValue": "False"
                          },
                          {
                            "FieldId": "pets_rx_scTakesAdditionalMedications",
                            "FieldLabel": "Is your pet on any other medication?",
                            "FieldType": "Text",
                            "FieldValue": "False"
                          },
                          {
                            "FieldId": "pets_rx_scHasOtherProblems",
                            "FieldLabel": "Any pet health problems?",
                            "FieldType": "Text",
                            "FieldValue": "False"
                          },
                          {
                            "FieldId": "pets_rx_scSourceClinicId",
                            "FieldLabel": "Source Clinic ID",
                            "FieldType": "Text",
                            "FieldValue": "Clinic-1234"
                          },
                          {
                            "FieldId": "pets_rx_scVetClinicName",
                            "FieldLabel": "Vet Clinic Name",
                            "FieldType": "Text",
                            "FieldValue": "Test Clinic"
                          },
                          {
                            "FieldId": "pets_rx_scVetClinicCity",
                            "FieldLabel": "Vet Clinic City",
                            "FieldType": "Text",
                            "FieldValue": "Seattle"
                          },
                          {
                            "FieldId": "pets_rx_scVetClinicState",
                            "FieldLabel": "Vet Clinic State",
                            "FieldType": "Text",
                            "FieldValue": "WA"
                          },
                          {
                            "FieldId": "pets_rx_scVetClinicZipCode",
                            "FieldLabel": "Vet Clinic Zip Code",
                            "FieldType": "Text",
                            "FieldValue": "98000"
                          },
                          {
                            "FieldId": "pets_rx_scVetClinicPhoneNumber",
                            "FieldLabel": "Vet Clinic Phone Number",
                            "FieldType": "Text",
                            "FieldValue": "2060000000"
                          }
                        ]
                      },
                      "RegulatedOrderVerificationStatus": {
                        "Status": "Pending",
                        "RequiresMerchantAction": true,
                        "ValidRejectionReasons": [
                          {
                            "RejectionReasonId": "pets_rx_sc_incorrect_product",
                            "RejectionReasonDescription": "Canceled order due to veterinarian indicating wrong product ordered"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_no_vcpr",
                            "RejectionReasonDescription": "Canceled order due to veterinarian indicating they do not have you as their client"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_visit_required",
                            "RejectionReasonDescription": "Canceled order due to veterinarian indicating they need to see your pet for an appointment"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_wrx_required",
                            "RejectionReasonDescription": "Canceled order due to veterinarian policy requiring you pick up a written prescription and mail to pharmacy"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_other",
                            "RejectionReasonDescription": "Canceled order due to prescription denied - contact your vetinarian"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_therapy_change",
                            "RejectionReasonDescription": "Canceled order due to a change in therapy, follow up with your veterinarian"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_wrong_weight",
                            "RejectionReasonDescription": "Canceled order due to incorrect pet weight on file, update weight and replace order or order correct product"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_early_refill",
                            "RejectionReasonDescription": "Canceled due to refilling prescription order too soon"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_wrong_species",
                            "RejectionReasonDescription": "Canceled due to ordering for wrong pet species, replace order for correct product"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_duplicate",
                            "RejectionReasonDescription": "Canceled due to duplicate order identified"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_invalid_rx",
                            "RejectionReasonDescription": "Canceled due to not receiving a valid prescription"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_address_validation_error",
                            "RejectionReasonDescription": "Canceled due to a non-verified address, correct address and replace order"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_no_clinic_match",
                            "RejectionReasonDescription": "Canceled due to no valid clinic match, provide complete and accurate details for vet clinic and replace order"
                          },
                          {
                            "RejectionReasonId": "pets_rx_sc_pharmacist_canceled",
                            "RejectionReasonDescription": "Order canceled by pharmacy"
                          }
                        ],
                        "ValidVerificationDetails": [
                          {
                            "VerificationDetailType": "prescriptionDetail",
                            "ValidVerificationStatuses": [
                              "Approved"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "PendingOrder": {
                "payload": {
                  "AmazonOrderId": "902-3159896-1390916",
                  "RequiresDosageLabel": false,
                  "RegulatedInformation": {
                    "Fields": [
                      {
                        "FieldId": "pet_prescription_name",
                        "FieldLabel": "Name",
                        "FieldType": "Text",
                        "FieldValue": "Ruffus"
                      },
                      {
                        "FieldId": "pet_prescription_species",
                        "FieldLabel": "Species",
                        "FieldType": "Text",
                        "FieldValue": "Dog"
                      }
                    ]
                  },
                  "RegulatedOrderVerificationStatus": {
                    "Status": "Pending",
                    "RequiresMerchantAction": true,
                    "ValidRejectionReasons": [
                      {
                        "RejectionReasonId": "shield_pom_vps_reject_product",
                        "RejectionReasonDescription": "This medicine is not suitable for your pet."
                      },
                      {
                        "RejectionReasonId": "shield_pom_vps_reject_age",
                        "RejectionReasonDescription": "Your pet is too young for this medicine."
                      },
                      {
                        "RejectionReasonId": "shield_pom_vps_reject_incorrect_weight",
                        "RejectionReasonDescription": "Your pet's weight does not match ordered size."
                      }
                    ]
                  }
                }
              },
              "ApprovedOrder": {
                "payload": {
                  "AmazonOrderId": "902-3159896-1390916",
                  "RequiresDosageLabel": false,
                  "RegulatedInformation": {
                    "Fields": [
                      {
                        "FieldId": "pet_prescription_name",
                        "FieldLabel": "Name",
                        "FieldType": "Text",
                        "FieldValue": "Ruffus"
                      },
                      {
                        "FieldId": "pet_prescription_species",
                        "FieldLabel": "Species",
                        "FieldType": "Text",
                        "FieldValue": "Dog"
                      }
                    ]
                  },
                  "RegulatedOrderVerificationStatus": {
                    "Status": "Approved",
                    "RequiresMerchantAction": false,
                    "ValidRejectionReasons": [],
                    "ExternalReviewerId": "externalId",
                    "ReviewDate": "1970-01-19T03:59:27Z"
                  }
                }
              },
              "RejectedOrder": {
                "payload": {
                  "AmazonOrderId": "902-3159896-1390916",
                  "RequiresDosageLabel": false,
                  "RegulatedInformation": {
                    "Fields": [
                      {
                        "FieldId": "pet_prescription_name",
                        "FieldLabel": "Name",
                        "FieldType": "Text",
                        "FieldValue": "Ruffus"
                      },
                      {
                        "FieldId": "pet_prescription_species",
                        "FieldLabel": "Species",
                        "FieldType": "Text",
                        "FieldValue": "Dog"
                      }
                    ]
                  },
                  "RegulatedOrderVerificationStatus": {
                    "Status": "Rejected",
                    "RequiresMerchantAction": false,
                    "RejectionReason": {
                      "RejectionReasonId": "shield_pom_vps_reject_species",
                      "RejectionReasonDescription": "This medicine is not suitable for this type of pet."
                    },
                    "ValidRejectionReasons": [],
                    "ExternalReviewerId": "externalId",
                    "ReviewDate": "1970-01-19T03:59:27Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetOrderRegulatedInfoResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetOrderRegulatedInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetOrderRegulatedInfoResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetOrderRegulatedInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetOrderRegulatedInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetOrderRegulatedInfoResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getOrderRegulatedInfo"
      },
      "patch": {
        "tags": [
          "Orders"
        ],
        "description": "Updates (approves or rejects) the verification status of an order containing regulated products.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 30 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateVerificationStatus",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "An Amazon-defined order identifier, in 3-7-7 format.",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "The request body for the `updateVerificationStatus` operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateVerificationStatusRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "902-3159896-1390916"
                      },
                      "body": {
                        "value": {
                          "regulatedOrderVerificationStatus": {
                            "status": "Rejected",
                            "externalReviewerId": "reviewer1234",
                            "rejectionReasonId": "shield_pom_vps_reject_incorrect_weight"
                          }
                        }
                      }
                    }
                  },
                  "response": {}
                },
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "902-3159896-1390916"
                      },
                      "body": {
                        "value": {
                          "regulatedOrderVerificationStatus": {
                            "externalReviewerId": "reviewer1234",
                            "verificationDetails": {
                              "prescriptionDetail": {
                                "prescriptionId": "Rx-1234",
                                "expirationDate": "2024-01-01T00:00:00Z",
                                "writtenQuantity": 3,
                                "totalRefillsAuthorized": 10,
                                "usageInstructions": "Take one per day by mouth with food",
                                "refillsRemaining": 10,
                                "clinicId": "ABC-1234"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "902-3159896-1390916"
                      },
                      "body": {
                        "value": {
                          "regulatedOrderVerificationStatus": {
                            "status": "Rejected"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing request parameter: rejectionReasonId."
                      },
                      {
                        "code": "InvalidInput",
                        "message": "Missing request parameter: externalReviewerId."
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "902-3159896-1390916"
                      },
                      "body": {
                        "value": {
                          "regulatedOrderVerificationStatus": {
                            "status": "Cancelled",
                            "externalReviewerId": "reviewer1234"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid request parameter `status`. Must be one of [Approved, Rejected]."
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "902-3159896-1390916"
                      },
                      "body": {
                        "value": {
                          "regulatedOrderVerificationStatus": {
                            "status": "Rejected",
                            "rejectionReasonId": "shield_pom_vps_reject_incorrect_weight",
                            "verificationDetails": {
                              "prescriptionDetail": {
                                "prescriptionId": "Rx-1234",
                                "expirationDate": "2024-01-01T00:00:00Z",
                                "writtenQuantity": 3,
                                "totalRefillsAuthorized": 10,
                                "usageInstructions": "Take one per day by mouth with food",
                                "refillsRemaining": 10,
                                "clinicId": "ABC-1234"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Verification Detail `prescriptionDetail` is not supported when order is in Rejected status."
                      },
                      {
                        "code": "InvalidInput",
                        "message": "Missing request parameter: externalReviewerId."
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "902-3159896-1390916"
                      },
                      "body": {
                        "value": {
                          "regulatedOrderVerificationStatus": {
                            "externalReviewerId": "reviewer1234",
                            "verificationDetails": {
                              "prescriptionDetail": {
                                "prescriptionId": "Rx-1234",
                                "expirationDate": "2024-01-01T00:00:00Z",
                                "writtenQuantity": 3,
                                "totalRefillsAuthorized": 10,
                                "usageInstructions": "Take one per day by mouth with food",
                                "refillsRemaining": 10
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing required parameter(s) from prescriptionDetail value: clinicId"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateVerificationStatusErrorResponse"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateVerificationStatusErrorResponse"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateVerificationStatusErrorResponse"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateVerificationStatusErrorResponse"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateVerificationStatusErrorResponse"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateVerificationStatusErrorResponse"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateVerificationStatusErrorResponse"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/UpdateVerificationStatusErrorResponse"
            }
          }
        },
        "summary": "updateVerificationStatus"
      }
    },
    "/orders/v0/orders/{orderId}/shipmentConfirmation": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Updates the shipment confirmation status for a specified order.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "confirmShipment",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "An Amazon-defined order identifier, in 3-7-7 format.",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "Request body of `confirmShipment`.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmShipmentRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "902-1106328-1059050"
                      },
                      "body": {
                        "value": {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "packageDetail": {
                            "packageReferenceId": "1",
                            "carrierCode": "FedEx",
                            "carrierName": "FedEx",
                            "shippingMethod": "FedEx Ground",
                            "trackingNumber": "112345678",
                            "shipDate": "2022-02-11T01:00:00.000Z",
                            "shipFromSupplySourceId": "057d3fcc-b750-419f-bbcd-4d340c60c430",
                            "orderItems": [
                              {
                                "orderItemId": "79039765272157",
                                "quantity": 1,
                                "transparencyCodes": [
                                  "09876543211234567890"
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ConfirmShipmentErrorResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "orderId": {
                        "value": "902-1106328-1059050"
                      },
                      "body": {
                        "value": {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "packageDetail": {
                            "packageReferenceId": "1",
                            "carrierCode": "FedEx",
                            "carrierName": "FedEx",
                            "shippingMethod": "FedEx Ground",
                            "trackingNumber": "112345678",
                            "shipDate": "02/21/2022",
                            "shipFromSupplySourceId": "057d3fcc-b750-419f-bbcd-4d340c60c430",
                            "orderItems": [
                              {
                                "orderItemId": "79039765272157",
                                "quantity": 1,
                                "transparencyCodes": [
                                  "09876543211234567890"
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "Invalid Input",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ConfirmShipmentErrorResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ConfirmShipmentErrorResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ConfirmShipmentErrorResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ConfirmShipmentErrorResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ConfirmShipmentErrorResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ConfirmShipmentErrorResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "confirmShipment"
      }
    },
    "/products/fees/v0/listings/{SellerSKU}/feesEstimate": {
      "post": {
        "tags": [
          "fees"
        ],
        "description": "Returns the estimated fees for the item indicated by the specified seller SKU in the marketplace specified in the request body.\n\n**Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\nYou can call `getMyFeesEstimateForSKU` for an item on behalf of a selling partner before the selling partner sets the item's price. The selling partner can then take any estimated fees into account. Each fees estimate request must include an original identifier. This identifier is included in the fees estimate so that you can correlate a fees estimate with the original request.\n\n**Note:** This identifier value is used to identify an estimate. Actual costs may vary. Search \"fees\" in [Seller Central](https://sellercentral.amazon.com/) and consult the store-specific fee schedule for the most up-to-date information.\n\n**Note:** When sellers use the `getMyFeesEstimateForSKU` operation with their `SellerSKU`, they get accurate fees based on real item measurements, but only after they've sent their items to Amazon.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getMyFeesEstimateForSKU",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateRequest"
            }
          },
          {
            "name": "SellerSKU",
            "in": "path",
            "description": "Used to identify an item in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "FeesEstimateRequest": {
                            "MarketplaceId": "ATVPDKIKX0DER",
                            "IsAmazonFulfilled": false,
                            "PriceToEstimateFees": {
                              "ListingPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "Shipping": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "Points": {
                                "PointsNumber": 0,
                                "PointsMonetaryValue": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                }
                              }
                            },
                            "Identifier": "UmaS1"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "FeesEstimateResult": {
                        "Status": "Success",
                        "FeesEstimateIdentifier": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "IdType": "ASIN",
                          "SellerId": "AXXXXXXXXXXXXX",
                          "SellerInputIdentifier": "UmaS1",
                          "IsAmazonFulfilled": false,
                          "IdValue": "B00V5DG6IQ",
                          "PriceToEstimateFees": {
                            "ListingPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "Shipping": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "Points": {
                              "PointsNumber": 0,
                              "PointsMonetaryValue": {
                                "CurrencyCode": "USD",
                                "Amount": 0
                              }
                            }
                          }
                        },
                        "FeesEstimate": {
                          "TimeOfFeesEstimation": "Mon Oct 28 18:49:32 UTC 2019",
                          "TotalFeesEstimate": {
                            "CurrencyCode": "USD",
                            "Amount": 3
                          },
                          "FeeDetailList": []
                        },
                        "Error": {
                          "Type": "",
                          "Code": "",
                          "Message": "",
                          "Detail": []
                        }
                      }
                    }
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "FeesEstimateRequest": {
                            "MarketplaceId": "WRNGMRKTPLCE"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Incorrect Marketplace identifier.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/products/fees/v0/items/{Asin}/feesEstimate": {
      "post": {
        "tags": [
          "fees"
        ],
        "description": "Returns the estimated fees for the item indicated by the specified ASIN in the marketplace specified in the request body.\n\nYou can call `getMyFeesEstimateForASIN` for an item on behalf of a selling partner before the selling partner sets the item's price. The selling partner can then take estimated fees into account. Each fees request must include an original identifier. This identifier is included in the fees estimate so you can correlate a fees estimate with the original request.\n\n**Note:** This identifier value is used to identify an estimate. Actual costs may vary. Search \"fees\" in [Seller Central](https://sellercentral.amazon.com/) and consult the store-specific fee schedule for the most up-to-date information.\n\n**Note:** When using the `getMyFeesEstimateForASIN` operation with an ASIN, the fee estimates might be different. This is because these estimates use the item's catalog size, which might not always match the actual size of the item sent to Amazon.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getMyFeesEstimateForASIN",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateRequest"
            }
          },
          {
            "name": "Asin",
            "in": "path",
            "description": "The Amazon Standard Identification Number (ASIN) of the item.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "FeesEstimateRequest": {
                            "MarketplaceId": "ATVPDKIKX0DER",
                            "IsAmazonFulfilled": false,
                            "PriceToEstimateFees": {
                              "ListingPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "Shipping": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "Points": {
                                "PointsNumber": 0,
                                "PointsMonetaryValue": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                }
                              }
                            },
                            "Identifier": "UmaS1"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "FeesEstimateResult": {
                        "Status": "Success",
                        "FeesEstimateIdentifier": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "IdType": "ASIN",
                          "SellerId": "AXXXXXXXXXXXXX",
                          "SellerInputIdentifier": "UmaS1",
                          "IsAmazonFulfilled": false,
                          "IdValue": "B00V5DG6IQ",
                          "PriceToEstimateFees": {
                            "ListingPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "Shipping": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "Points": {
                              "PointsNumber": 0,
                              "PointsMonetaryValue": {
                                "CurrencyCode": "USD",
                                "Amount": 0
                              }
                            }
                          }
                        },
                        "FeesEstimate": {
                          "TimeOfFeesEstimation": "Mon Oct 28 18:49:32 UTC 2019",
                          "TotalFeesEstimate": {
                            "CurrencyCode": "USD",
                            "Amount": 3
                          },
                          "FeeDetailList": []
                        },
                        "Error": {
                          "Type": "",
                          "Code": "",
                          "Message": "",
                          "Detail": []
                        }
                      }
                    }
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "FeesEstimateRequest": {
                            "MarketplaceId": "WRNGMRKTPLCE"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Incorrect Marketplace identifier.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/products/fees/v0/feesEstimate": {
      "post": {
        "tags": [
          "fees"
        ],
        "description": "Returns the estimated fees for a list of products.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getMyFeesEstimates",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimatesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": [
                          {
                            "FeesEstimateRequest": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "IsAmazonFulfilled": false,
                              "PriceToEstimateFees": {
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "Points": {
                                  "PointsNumber": 0,
                                  "PointsMonetaryValue": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              },
                              "Identifier": "UmaS1"
                            },
                            "IdType": "ASIN",
                            "IdValue": "asin123"
                          },
                          {
                            "FeesEstimateRequest": {
                              "MarketplaceId": "A1AM78C64UM0Y8",
                              "IsAmazonFulfilled": true,
                              "PriceToEstimateFees": {
                                "ListingPrice": {
                                  "CurrencyCode": "MXN",
                                  "Amount": 10
                                },
                                "Shipping": {
                                  "CurrencyCode": "MXN",
                                  "Amount": 10
                                },
                                "Points": {
                                  "PointsNumber": 0,
                                  "PointsMonetaryValue": {
                                    "CurrencyCode": "MXN",
                                    "Amount": 0
                                  }
                                }
                              },
                              "Identifier": "UmaS2"
                            },
                            "IdType": "SellerSKU",
                            "IdValue": "sku123"
                          }
                        ]
                      }
                    }
                  },
                  "response": [
                    {
                      "Status": "Success",
                      "FeesEstimateIdentifier": {
                        "MarketplaceId": "ATVPDKIKX0DER",
                        "IdType": "ASIN",
                        "SellerId": "AXXXXXXXXXXXXX",
                        "SellerInputIdentifier": "UmaS1",
                        "IsAmazonFulfilled": false,
                        "IdValue": "asin123",
                        "PriceToEstimateFees": {
                          "ListingPrice": {
                            "CurrencyCode": "USD",
                            "Amount": 10
                          },
                          "Shipping": {
                            "CurrencyCode": "USD",
                            "Amount": 10
                          },
                          "Points": {
                            "PointsNumber": 0,
                            "PointsMonetaryValue": {
                              "CurrencyCode": "USD",
                              "Amount": 0
                            }
                          }
                        }
                      },
                      "FeesEstimate": {
                        "TimeOfFeesEstimation": "Mon Oct 28 18:49:32 UTC 2019",
                        "TotalFeesEstimate": {
                          "CurrencyCode": "USD",
                          "Amount": 3
                        },
                        "FeeDetailList": []
                      },
                      "Error": {
                        "Type": "",
                        "Code": "",
                        "Message": "",
                        "Detail": []
                      }
                    },
                    {
                      "Status": "Success",
                      "FeesEstimateIdentifier": {
                        "MarketplaceId": "A1AM78C64UM0Y8",
                        "IdType": "SellerSKU",
                        "SellerId": "AXXXXXXXXXXXXX",
                        "SellerInputIdentifier": "UmaS2",
                        "IsAmazonFulfilled": false,
                        "IdValue": "sku123",
                        "PriceToEstimateFees": {
                          "ListingPrice": {
                            "CurrencyCode": "MXN",
                            "Amount": 10
                          },
                          "Shipping": {
                            "CurrencyCode": "MXN",
                            "Amount": 10
                          },
                          "Points": {
                            "PointsNumber": 0,
                            "PointsMonetaryValue": {
                              "CurrencyCode": "MXN",
                              "Amount": 0
                            }
                          }
                        }
                      },
                      "FeesEstimate": {
                        "TimeOfFeesEstimation": "Mon Oct 28 18:49:32 UTC 2019",
                        "TotalFeesEstimate": {
                          "CurrencyCode": "MXN",
                          "Amount": 3
                        },
                        "FeeDetailList": []
                      },
                      "Error": {
                        "Type": "",
                        "Code": "",
                        "Message": "",
                        "Detail": []
                      }
                    }
                  ]
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimatesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": [
                          {
                            "FeesEstimateRequest": {
                              "MarketplaceId": "INVALIDMARKETPLACEID",
                              "IsAmazonFulfilled": false,
                              "PriceToEstimateFees": {
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "Points": {
                                  "PointsNumber": 0,
                                  "PointsMonetaryValue": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              },
                              "Identifier": "UmaS1"
                            },
                            "IdType": "ASIN",
                            "IdValue": "asin123"
                          }
                        ]
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Incorrect Marketplace identifier.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimatesErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimatesErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include **Access Denied**, **Unauthorized**, **Expired Token**, or **Invalid Signature**.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimatesErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimatesErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimatesErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimatesErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetMyFeesEstimatesErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/products/pricing/v0/price": {
      "get": {
        "tags": [
          "productPricing"
        ],
        "description": "Returns pricing information for a seller's offer listings based on seller SKU or ASIN.\n\n**Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getPricing",
        "parameters": [
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace for which prices are returned.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Asins",
            "in": "query",
            "description": "A list of up to twenty Amazon Standard Identification Number (ASIN) values used to identify items in the given marketplace.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 20
          },
          {
            "name": "Skus",
            "in": "query",
            "description": "A list of up to twenty seller SKU values used to identify items in the given marketplace.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 20
          },
          {
            "name": "ItemType",
            "in": "query",
            "description": "Indicates whether ASIN values or seller SKU values are used to identify items. If you specify Asin, the information in the response will be dependent on the list of Asins you provide in the Asins parameter. If you specify Sku, the information in the response will be dependent on the list of Skus you provide in the Skus parameter.",
            "required": true,
            "type": "string",
            "enum": [
              "Asin",
              "Sku"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "Asin",
                "description": "The Amazon Standard Identification Number (ASIN)."
              },
              {
                "value": "Sku",
                "description": "The seller SKU."
              }
            ]
          },
          {
            "name": "ItemCondition",
            "in": "query",
            "description": "Filters the offer listings based on item condition. Possible values: New, Used, Collectible, Refurbished, Club.",
            "required": false,
            "type": "string",
            "enum": [
              "New",
              "Used",
              "Collectible",
              "Refurbished",
              "Club"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "New",
                "description": "New"
              },
              {
                "value": "Used",
                "description": "Used"
              },
              {
                "value": "Collectible",
                "description": "Collectible"
              },
              {
                "value": "Refurbished",
                "description": "Refurbished"
              },
              {
                "value": "Club",
                "description": "Club"
              }
            ]
          },
          {
            "name": "OfferType",
            "in": "query",
            "description": "Indicates whether to request pricing information for the seller's B2C or B2B offers. Default is B2C.",
            "required": false,
            "type": "string",
            "enum": [
              "B2C",
              "B2B"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "B2C",
                "description": "B2C"
              },
              {
                "value": "B2B",
                "description": "B2B"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "ItemType": {
                        "value": "Asin"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "status": "Success",
                        "ASIN": "B00V5DG6IQ",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00V5DG6IQ"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "",
                              "SellerId": "",
                              "SellerSKU": ""
                            }
                          },
                          "Offers": [
                            {
                              "BuyingPrice": {
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "LandedPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                }
                              },
                              "RegularPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "FulfillmentChannel": "MERCHANT",
                              "ItemCondition": "New",
                              "ItemSubCondition": "New",
                              "SellerSKU": "NABetaASINB00V5DG6IQ"
                            }
                          ]
                        }
                      },
                      {
                        "status": "Success",
                        "ASIN": "B00551Q3CS",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00551Q3CS"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "",
                              "SellerId": "",
                              "SellerSKU": ""
                            }
                          },
                          "Offers": [
                            {
                              "BuyingPrice": {
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "LandedPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                }
                              },
                              "RegularPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "FulfillmentChannel": "MERCHANT",
                              "ItemCondition": "New",
                              "ItemSubCondition": "New",
                              "SellerSKU": "NABetaASINB00551Q3CS"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "ItemType": {
                        "value": "Sku"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "status": "Success",
                        "SellerSKU": "NABetaASINB00V5DG6IQ",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00V5DG6IQ"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "SellerId": "AXXXXXXXXXXXXX",
                              "SellerSKU": "NABetaASINB00V5DG6IQ"
                            }
                          },
                          "Offers": [
                            {
                              "BuyingPrice": {
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "LandedPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                }
                              },
                              "RegularPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "FulfillmentChannel": "MERCHANT",
                              "ItemCondition": "New",
                              "ItemSubCondition": "New",
                              "SellerSKU": "NABetaASINB00V5DG6IQ"
                            }
                          ]
                        }
                      },
                      {
                        "status": "Success",
                        "SellerSKU": "NABetaASINB00551Q3CS",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00551Q3CS"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "SellerId": "AXXXXXXXXXXXXX",
                              "SellerSKU": "NABetaASINB00551Q3CS"
                            }
                          },
                          "Offers": [
                            {
                              "BuyingPrice": {
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "LandedPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                }
                              },
                              "RegularPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "FulfillmentChannel": "MERCHANT",
                              "ItemCondition": "New",
                              "ItemSubCondition": "New",
                              "SellerSKU": "NABetaASINB00551Q3CS"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "ItemType": {
                        "value": "Asin"
                      },
                      "OfferType": {
                        "value": "B2B"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "status": "Success",
                        "ASIN": "B00V5DG6IQ",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00V5DG6IQ"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "",
                              "SellerId": "",
                              "SellerSKU": ""
                            }
                          },
                          "Offers": [
                            {
                              "offerType": "B2B",
                              "BuyingPrice": {
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 9.5
                                },
                                "LandedPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 9.5
                                },
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                }
                              },
                              "RegularPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "quantityDiscountPrices": [
                                {
                                  "quantityTier": 2,
                                  "quantityDiscountType": "QUANTITY_DISCOUNT",
                                  "listingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 8
                                  }
                                },
                                {
                                  "quantityTier": 3,
                                  "quantityDiscountType": "QUANTITY_DISCOUNT",
                                  "listingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 7
                                  }
                                }
                              ],
                              "FulfillmentChannel": "MERCHANT",
                              "ItemCondition": "New",
                              "ItemSubCondition": "New",
                              "SellerSKU": "NABetaASINB00V5DG6IQ"
                            }
                          ]
                        }
                      },
                      {
                        "status": "Success",
                        "ASIN": "B00551Q3CS",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00551Q3CS"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "",
                              "SellerId": "",
                              "SellerSKU": ""
                            }
                          },
                          "Offers": [
                            {
                              "offerType": "B2B",
                              "BuyingPrice": {
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 8
                                },
                                "LandedPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 8
                                },
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                }
                              },
                              "RegularPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "FulfillmentChannel": "MERCHANT",
                              "ItemCondition": "New",
                              "ItemSubCondition": "New",
                              "SellerSKU": "NABetaASINB00551Q3CS"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          }
        }
      }
    },
    "/products/pricing/v0/competitivePrice": {
      "get": {
        "tags": [
          "productPricing"
        ],
        "description": "Returns competitive pricing information for a seller's offer listings based on seller SKU or ASIN.\n\n**Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getCompetitivePricing",
        "parameters": [
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace for which prices are returned.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Asins",
            "in": "query",
            "description": "A list of up to twenty Amazon Standard Identification Number (ASIN) values used to identify items in the given marketplace.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 20
          },
          {
            "name": "Skus",
            "in": "query",
            "description": "A list of up to twenty seller SKU values used to identify items in the given marketplace.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 20
          },
          {
            "name": "ItemType",
            "in": "query",
            "description": "Indicates whether ASIN values or seller SKU values are used to identify items. If you specify Asin, the information in the response will be dependent on the list of Asins you provide in the Asins parameter. If you specify Sku, the information in the response will be dependent on the list of Skus you provide in the Skus parameter. Possible values: Asin, Sku.",
            "required": true,
            "type": "string",
            "enum": [
              "Asin",
              "Sku"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "Asin",
                "description": "The Amazon Standard Identification Number (ASIN)."
              },
              {
                "value": "Sku",
                "description": "The seller SKU."
              }
            ]
          },
          {
            "name": "CustomerType",
            "in": "query",
            "description": "Indicates whether to request pricing information from the point of view of Consumer or Business buyers. Default is Consumer.",
            "required": false,
            "type": "string",
            "enum": [
              "Consumer",
              "Business"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "Consumer",
                "description": "Consumer"
              },
              {
                "value": "Business",
                "description": "Business"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "ItemType": {
                        "value": "Asin"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "status": "Success",
                        "ASIN": "B00V5DG6IQ",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00V5DG6IQ"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "",
                              "SellerId": "",
                              "SellerSKU": ""
                            }
                          },
                          "CompetitivePricing": {
                            "CompetitivePrices": [
                              {
                                "CompetitivePriceId": "4545645646",
                                "Price": {
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 130
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 120
                                  },
                                  "Points": {
                                    "PointsNumber": 130,
                                    "PointsMonetaryValue": {
                                      "CurrencyCode": "USD",
                                      "Amount": 10
                                    }
                                  }
                                },
                                "condition": "new",
                                "belongsToRequester": true
                              }
                            ],
                            "NumberOfOfferListings": [
                              {
                                "Count": 20,
                                "condition": "new"
                              }
                            ],
                            "TradeInValue": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            }
                          },
                          "SalesRankings": [
                            {
                              "ProductCategoryId": "325345",
                              "Rank": 1
                            }
                          ]
                        }
                      },
                      {
                        "status": "Success",
                        "ASIN": "B00551Q3CS",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00551Q3CS"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "",
                              "SellerId": "",
                              "SellerSKU": ""
                            }
                          },
                          "CompetitivePricing": {
                            "CompetitivePrices": [
                              {
                                "CompetitivePriceId": "45456452646",
                                "Price": {
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 130
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 120
                                  },
                                  "Points": {
                                    "PointsNumber": 130,
                                    "PointsMonetaryValue": {
                                      "CurrencyCode": "USD",
                                      "Amount": 10
                                    }
                                  }
                                },
                                "condition": "new",
                                "belongsToRequester": true
                              }
                            ],
                            "NumberOfOfferListings": [
                              {
                                "Count": 1,
                                "condition": "new"
                              }
                            ],
                            "TradeInValue": {
                              "CurrencyCode": "string",
                              "Amount": 0
                            }
                          },
                          "SalesRankings": [
                            {
                              "ProductCategoryId": "54564",
                              "Rank": 1
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "ItemType": {
                        "value": "Sku"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "status": "Success",
                        "SellerSKU": "NABetaASINB00V5DG6IQ",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00V5DG6IQ"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "SellerId": "AXXXXXXXXXXXXX",
                              "SellerSKU": "NABetaASINB00V5DG6IQ"
                            }
                          },
                          "CompetitivePricing": {
                            "CompetitivePrices": [
                              {
                                "CompetitivePriceId": "3454535",
                                "Price": {
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 130
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 120
                                  },
                                  "Points": {
                                    "PointsNumber": 130,
                                    "PointsMonetaryValue": {
                                      "CurrencyCode": "USD",
                                      "Amount": 10
                                    }
                                  }
                                },
                                "condition": "new",
                                "belongsToRequester": true
                              }
                            ],
                            "NumberOfOfferListings": [
                              {
                                "Count": 402,
                                "condition": "new"
                              }
                            ],
                            "TradeInValue": {
                              "CurrencyCode": "USD",
                              "Amount": 20
                            }
                          },
                          "SalesRankings": [
                            {
                              "ProductCategoryId": "676554",
                              "Rank": 1
                            }
                          ]
                        }
                      },
                      {
                        "status": "Success",
                        "SellerSKU": "NABetaASINB00551Q3CS",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00551Q3CS"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "SellerId": "AXXXXXXXXXXXXX",
                              "SellerSKU": "NABetaASINB00551Q3CS"
                            }
                          },
                          "CompetitivePricing": {
                            "CompetitivePrices": [
                              {
                                "CompetitivePriceId": "4545645646",
                                "Price": {
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 130
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 120
                                  },
                                  "Points": {
                                    "PointsNumber": 130,
                                    "PointsMonetaryValue": {
                                      "CurrencyCode": "USD",
                                      "Amount": 10
                                    }
                                  }
                                },
                                "condition": "new",
                                "belongsToRequester": true
                              }
                            ],
                            "NumberOfOfferListings": [
                              {
                                "Count": 402,
                                "condition": "new"
                              }
                            ],
                            "TradeInValue": {
                              "CurrencyCode": "USD",
                              "Amount": 20
                            }
                          },
                          "SalesRankings": [
                            {
                              "ProductCategoryId": "35345",
                              "Rank": 1
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "ItemType": {
                        "value": "Asin"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "status": "Success",
                        "ASIN": "B00V5DG6IQ",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00V5DG6IQ"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "",
                              "SellerId": "",
                              "SellerSKU": ""
                            }
                          },
                          "CompetitivePricing": {
                            "CompetitivePrices": [],
                            "NumberOfOfferListings": [
                              {
                                "Count": 1,
                                "condition": "New"
                              },
                              {
                                "Count": 1,
                                "condition": "Any"
                              }
                            ]
                          },
                          "SalesRankings": [
                            {
                              "ProductCategoryId": "office_product_display_on_website",
                              "Rank": 19
                            },
                            {
                              "ProductCategoryId": "1069616",
                              "Rank": 1
                            },
                            {
                              "ProductCategoryId": "705333011",
                              "Rank": 1
                            },
                            {
                              "ProductCategoryId": "1069242",
                              "Rank": 17
                            }
                          ]
                        }
                      },
                      {
                        "status": "Success",
                        "ASIN": "B00551Q3CS",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00551Q3CS"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "",
                              "SellerId": "",
                              "SellerSKU": ""
                            }
                          },
                          "CompetitivePricing": {
                            "CompetitivePrices": [],
                            "NumberOfOfferListings": [
                              {
                                "Count": 1,
                                "condition": "New"
                              },
                              {
                                "Count": 1,
                                "condition": "Any"
                              }
                            ]
                          },
                          "SalesRankings": [
                            {
                              "ProductCategoryId": "464394",
                              "Rank": 224
                            },
                            {
                              "ProductCategoryId": "12954861",
                              "Rank": 1057
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "ItemType": {
                        "value": "Sku"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "status": "Success",
                        "SellerSKU": "NABetaASINB00V5DG6IQ",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00V5DG6IQ"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "SellerId": "AXXXXXXXXXXXXX",
                              "SellerSKU": "NABetaASINB00V5DG6IQ"
                            }
                          },
                          "CompetitivePricing": {
                            "CompetitivePrices": [],
                            "NumberOfOfferListings": [
                              {
                                "Count": 1,
                                "condition": "New"
                              },
                              {
                                "Count": 1,
                                "condition": "Any"
                              }
                            ]
                          },
                          "SalesRankings": [
                            {
                              "ProductCategoryId": "office_product_display_on_website",
                              "Rank": 19
                            },
                            {
                              "ProductCategoryId": "1069616",
                              "Rank": 1
                            },
                            {
                              "ProductCategoryId": "705333011",
                              "Rank": 1
                            },
                            {
                              "ProductCategoryId": "1069242",
                              "Rank": 17
                            }
                          ]
                        }
                      },
                      {
                        "status": "Success",
                        "SellerSKU": "NABetaASINB00551Q3CS",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00551Q3CS"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "SellerId": "AXXXXXXXXXXXXX",
                              "SellerSKU": "NABetaASINB00551Q3CS"
                            }
                          },
                          "CompetitivePricing": {
                            "CompetitivePrices": [],
                            "NumberOfOfferListings": [
                              {
                                "Count": 1,
                                "condition": "New"
                              },
                              {
                                "Count": 1,
                                "condition": "Any"
                              }
                            ]
                          },
                          "SalesRankings": [
                            {
                              "ProductCategoryId": "464394",
                              "Rank": 224
                            },
                            {
                              "ProductCategoryId": "12954861",
                              "Rank": 1057
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "ItemType": {
                        "value": "Asin"
                      },
                      "CustomerType": {
                        "value": "Business"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "status": "Success",
                        "ASIN": "B00V5DG6IQ",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00V5DG6IQ"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "",
                              "SellerId": "",
                              "SellerSKU": ""
                            }
                          },
                          "CompetitivePricing": {
                            "CompetitivePrices": [
                              {
                                "CompetitivePriceId": "1",
                                "Price": {
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 120
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 130
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Points": {
                                    "PointsNumber": 130,
                                    "PointsMonetaryValue": {
                                      "CurrencyCode": "USD",
                                      "Amount": 10
                                    }
                                  }
                                },
                                "condition": "new",
                                "offerType": "B2C",
                                "sellerId": "AXXXXXXXXXXXXX",
                                "belongsToRequester": true
                              },
                              {
                                "CompetitivePriceId": "1",
                                "Price": {
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 115
                                  }
                                },
                                "condition": "new",
                                "offerType": "B2B",
                                "quantityTier": 3,
                                "quantityDiscountType": "QUANTITY_DISCOUNT",
                                "sellerId": "AXXXXXXXXXXXXX",
                                "belongsToRequester": true
                              },
                              {
                                "CompetitivePriceId": "1",
                                "Price": {
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 110
                                  }
                                },
                                "condition": "new",
                                "offerType": "B2B",
                                "quantityTier": 5,
                                "quantityDiscountType": "QUANTITY_DISCOUNT",
                                "sellerId": "AXXXXXXXXXXXXX",
                                "belongsToRequester": true
                              }
                            ],
                            "NumberOfOfferListings": [
                              {
                                "Count": 3,
                                "condition": "new"
                              }
                            ],
                            "TradeInValue": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            }
                          },
                          "SalesRankings": [
                            {
                              "ProductCategoryId": "325345",
                              "Rank": 1
                            }
                          ]
                        }
                      },
                      {
                        "status": "Success",
                        "ASIN": "B00551Q3CS",
                        "Product": {
                          "Identifiers": {
                            "MarketplaceASIN": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ASIN": "B00551Q3CS"
                            },
                            "SKUIdentifier": {
                              "MarketplaceId": "",
                              "SellerId": "",
                              "SellerSKU": ""
                            }
                          },
                          "CompetitivePricing": {
                            "CompetitivePrices": [
                              {
                                "CompetitivePriceId": "1",
                                "Price": {
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 130
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 120
                                  },
                                  "Points": {
                                    "PointsNumber": 130,
                                    "PointsMonetaryValue": {
                                      "CurrencyCode": "USD",
                                      "Amount": 10
                                    }
                                  }
                                },
                                "condition": "new",
                                "offerType": "B2B",
                                "sellerId": "AXXXXXXXXXXXXX",
                                "belongsToRequester": true
                              }
                            ],
                            "NumberOfOfferListings": [
                              {
                                "Count": 1,
                                "condition": "new"
                              }
                            ],
                            "TradeInValue": {
                              "CurrencyCode": "string",
                              "Amount": 0
                            }
                          },
                          "SalesRankings": [
                            {
                              "ProductCategoryId": "54564",
                              "Rank": 1
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "MarketplaceId": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetPricingResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          }
        }
      }
    },
    "/products/pricing/v0/listings/{SellerSKU}/offers": {
      "get": {
        "tags": [
          "productPricing"
        ],
        "description": "Returns the lowest priced offers for a single SKU listing.\n\n**Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getListingOffers",
        "parameters": [
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace for which prices are returned.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ItemCondition",
            "in": "query",
            "description": "Filters the offer listings based on item condition. Possible values: New, Used, Collectible, Refurbished, Club.",
            "required": true,
            "type": "string",
            "enum": [
              "New",
              "Used",
              "Collectible",
              "Refurbished",
              "Club"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "New",
                "description": "New"
              },
              {
                "value": "Used",
                "description": "Used"
              },
              {
                "value": "Collectible",
                "description": "Collectible"
              },
              {
                "value": "Refurbished",
                "description": "Refurbished"
              },
              {
                "value": "Club",
                "description": "Club"
              }
            ]
          },
          {
            "name": "SellerSKU",
            "in": "path",
            "description": "Identifies an item in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit.",
            "required": true,
            "type": "string"
          },
          {
            "name": "CustomerType",
            "in": "query",
            "description": "Indicates whether to request Consumer or Business offers. Default is Consumer.",
            "required": false,
            "type": "string",
            "enum": [
              "Consumer",
              "Business"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "Consumer",
                "description": "Consumer"
              },
              {
                "value": "Business",
                "description": "Business"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "SellerSKU": {
                        "value": "NABetaASINB00V5DG6IQ"
                      },
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "SKU": "NABetaASINB00V5DG6IQ",
                      "status": "Success",
                      "ItemCondition": "New",
                      "Identifier": {
                        "MarketplaceId": "ATVPDKIKX0DER",
                        "ItemCondition": "New",
                        "SellerSKU": "NABetaASINB00V5DG6IQ"
                      },
                      "Summary": {
                        "LowestPrices": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant",
                            "LandedPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "ListingPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "Shipping": {
                              "CurrencyCode": "USD",
                              "Amount": 0
                            }
                          }
                        ],
                        "NumberOfOffers": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant"
                          }
                        ],
                        "BuyBoxEligibleOffers": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant"
                          }
                        ],
                        "TotalOfferCount": 1
                      },
                      "Offers": [
                        {
                          "Shipping": {
                            "CurrencyCode": "USD",
                            "Amount": 0
                          },
                          "ListingPrice": {
                            "CurrencyCode": "USD",
                            "Amount": 10
                          },
                          "ShippingTime": {
                            "maximumHours": 48,
                            "minimumHours": 24,
                            "availabilityType": "NOW"
                          },
                          "SellerFeedbackRating": {
                            "FeedbackCount": 0,
                            "SellerPositiveFeedbackRating": 0
                          },
                          "ShipsFrom": {
                            "State": "WA",
                            "Country": "US"
                          },
                          "SubCondition": "new",
                          "IsFeaturedMerchant": false,
                          "SellerId": "AXXXXXXXXXXXXX",
                          "MyOffer": true,
                          "IsFulfilledByAmazon": false
                        }
                      ],
                      "MarketplaceID": "ATVPDKIKX0DER"
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "SellerSKU": {
                        "value": "NABetaASINB00V5DG6IQ"
                      },
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "CustomerType": {
                        "value": "Business"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "SKU": "NABetaASINB00V5DG6IQ",
                      "status": "Success",
                      "ItemCondition": "New",
                      "Identifier": {
                        "MarketplaceId": "ATVPDKIKX0DER",
                        "ItemCondition": "New",
                        "SellerSKU": "NABetaASINB00V5DG6IQ"
                      },
                      "Summary": {
                        "LowestPrices": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant",
                            "offerType": "B2B",
                            "LandedPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "ListingPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "Shipping": {
                              "CurrencyCode": "USD",
                              "Amount": 0
                            }
                          },
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant",
                            "offerType": "B2B",
                            "quantityTier": 20,
                            "quantityDiscountType": "QUANTITY_DISCOUNT",
                            "ListingPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 8
                            }
                          },
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant",
                            "offerType": "B2B",
                            "quantityTier": 30,
                            "quantityDiscountType": "QUANTITY_DISCOUNT",
                            "ListingPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 6
                            }
                          }
                        ],
                        "NumberOfOffers": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant"
                          }
                        ],
                        "BuyBoxEligibleOffers": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant"
                          }
                        ],
                        "BuyBoxPrices": [
                          {
                            "condition": "new",
                            "offerType": "B2B",
                            "ListingPrice": {
                              "Amount": 9,
                              "CurrencyCode": "USD"
                            },
                            "Shipping": {
                              "Amount": 0,
                              "CurrencyCode": "USD"
                            },
                            "LandedPrice": {
                              "Amount": 9,
                              "CurrencyCode": "USD"
                            },
                            "sellerId": "AXXXXXXXXXXXXX"
                          },
                          {
                            "condition": "new",
                            "offerType": "B2B",
                            "quantityTier": 20,
                            "quantityDiscountType": "QUANTITY_DISCOUNT",
                            "ListingPrice": {
                              "Amount": 8,
                              "CurrencyCode": "USD"
                            },
                            "sellerId": "AXXXXXXXXXXXXX"
                          },
                          {
                            "condition": "new",
                            "offerType": "B2B",
                            "quantityTier": 30,
                            "quantityDiscountType": "QUANTITY_DISCOUNT",
                            "ListingPrice": {
                              "Amount": 7,
                              "CurrencyCode": "USD"
                            },
                            "sellerId": "AXXXXXXXXXXXXX"
                          }
                        ],
                        "TotalOfferCount": 4
                      },
                      "Offers": [
                        {
                          "Shipping": {
                            "CurrencyCode": "USD",
                            "Amount": 0
                          },
                          "ListingPrice": {
                            "CurrencyCode": "USD",
                            "Amount": 10
                          },
                          "quantityDiscountPrices": [
                            {
                              "quantityTier": 2,
                              "quantityDiscountType": "QUANTITY_DISCOUNT",
                              "listingPrice": {
                                "Amount": 8,
                                "CurrencyCode": "USD"
                              }
                            },
                            {
                              "quantityTier": 3,
                              "quantityDiscountType": "QUANTITY_DISCOUNT",
                              "listingPrice": {
                                "Amount": 7,
                                "CurrencyCode": "USD"
                              }
                            }
                          ],
                          "ShippingTime": {
                            "maximumHours": 48,
                            "minimumHours": 24,
                            "availabilityType": "NOW"
                          },
                          "SellerFeedbackRating": {
                            "FeedbackCount": 0,
                            "SellerPositiveFeedbackRating": 0
                          },
                          "ShipsFrom": {
                            "State": "WA",
                            "Country": "US"
                          },
                          "SubCondition": "new",
                          "IsFeaturedMerchant": false,
                          "SellerId": "AXXXXXXXXXXXXX",
                          "MyOffer": true,
                          "IsFulfilledByAmazon": false
                        }
                      ],
                      "MarketplaceID": "ATVPDKIKX0DER"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "SellerSKU": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          }
        }
      }
    },
    "/products/pricing/v0/items/{Asin}/offers": {
      "get": {
        "tags": [
          "productPricing"
        ],
        "description": "Returns the lowest priced offers for a single item based on ASIN.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getItemOffers",
        "parameters": [
          {
            "name": "MarketplaceId",
            "in": "query",
            "description": "A marketplace identifier. Specifies the marketplace for which prices are returned.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ItemCondition",
            "in": "query",
            "description": "Filters the offer listings to be considered based on item condition. Possible values: New, Used, Collectible, Refurbished, Club.",
            "required": true,
            "type": "string",
            "enum": [
              "New",
              "Used",
              "Collectible",
              "Refurbished",
              "Club"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "New",
                "description": "New"
              },
              {
                "value": "Used",
                "description": "Used"
              },
              {
                "value": "Collectible",
                "description": "Collectible"
              },
              {
                "value": "Refurbished",
                "description": "Refurbished"
              },
              {
                "value": "Club",
                "description": "Club"
              }
            ]
          },
          {
            "name": "Asin",
            "in": "path",
            "description": "The Amazon Standard Identification Number (ASIN) of the item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "CustomerType",
            "in": "query",
            "description": "Indicates whether to request Consumer or Business offers. Default is Consumer.",
            "required": false,
            "type": "string",
            "enum": [
              "Consumer",
              "Business"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "Consumer",
                "description": "Consumer"
              },
              {
                "value": "Business",
                "description": "Business"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "Asin": {
                        "value": "B00V5DG6IQ"
                      },
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ASIN": "B00V5DG6IQ",
                      "status": "Success",
                      "ItemCondition": "New",
                      "Identifier": {
                        "MarketplaceId": "ATVPDKIKX0DER",
                        "ItemCondition": "New",
                        "ASIN": "B00V5DG6IQ"
                      },
                      "Summary": {
                        "LowestPrices": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant",
                            "LandedPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "ListingPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "Shipping": {
                              "CurrencyCode": "USD",
                              "Amount": 0
                            }
                          }
                        ],
                        "NumberOfOffers": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant"
                          }
                        ],
                        "BuyBoxEligibleOffers": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant"
                          }
                        ],
                        "TotalOfferCount": 1
                      },
                      "Offers": [
                        {
                          "Shipping": {
                            "CurrencyCode": "USD",
                            "Amount": 0
                          },
                          "ListingPrice": {
                            "CurrencyCode": "USD",
                            "Amount": 10
                          },
                          "ShippingTime": {
                            "maximumHours": 48,
                            "minimumHours": 24,
                            "availabilityType": "NOW"
                          },
                          "SellerFeedbackRating": {
                            "FeedbackCount": 0,
                            "SellerPositiveFeedbackRating": 0
                          },
                          "ShipsFrom": {
                            "State": "WA",
                            "Country": "US"
                          },
                          "SubCondition": "new",
                          "IsFeaturedMerchant": false,
                          "SellerId": "AXXXXXXXXXXXXX",
                          "IsFulfilledByAmazon": false
                        }
                      ],
                      "MarketplaceID": "ATVPDKIKX0DER"
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "Asin": {
                        "value": "B00V5DG6IQ"
                      },
                      "MarketplaceId": {
                        "value": "ATVPDKIKX0DER"
                      },
                      "CustomerType": {
                        "value": "Business"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ASIN": "B00V5DG6IQ",
                      "status": "Success",
                      "ItemCondition": "New",
                      "Identifier": {
                        "MarketplaceId": "ATVPDKIKX0DER",
                        "ItemCondition": "New",
                        "ASIN": "B00V5DG6IQ"
                      },
                      "Summary": {
                        "LowestPrices": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant",
                            "offerType": "B2B",
                            "LandedPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "ListingPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 10
                            },
                            "Shipping": {
                              "CurrencyCode": "USD",
                              "Amount": 0
                            }
                          },
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant",
                            "offerType": "B2B",
                            "quantityTier": 20,
                            "quantityDiscountType": "QUANTITY_DISCOUNT",
                            "ListingPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 8
                            }
                          },
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant",
                            "offerType": "B2B",
                            "quantityTier": 30,
                            "quantityDiscountType": "QUANTITY_DISCOUNT",
                            "ListingPrice": {
                              "CurrencyCode": "USD",
                              "Amount": 6
                            }
                          }
                        ],
                        "NumberOfOffers": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant"
                          }
                        ],
                        "BuyBoxEligibleOffers": [
                          {
                            "condition": "new",
                            "fulfillmentChannel": "Merchant"
                          }
                        ],
                        "BuyBoxPrices": [
                          {
                            "condition": "new",
                            "offerType": "B2B",
                            "ListingPrice": {
                              "Amount": 9,
                              "CurrencyCode": "USD"
                            },
                            "Shipping": {
                              "Amount": 0,
                              "CurrencyCode": "USD"
                            },
                            "LandedPrice": {
                              "Amount": 9,
                              "CurrencyCode": "USD"
                            },
                            "sellerId": "AXXXXXXXXXXXXX"
                          },
                          {
                            "condition": "new",
                            "offerType": "B2B",
                            "quantityTier": 20,
                            "quantityDiscountType": "QUANTITY_DISCOUNT",
                            "ListingPrice": {
                              "Amount": 8,
                              "CurrencyCode": "USD"
                            },
                            "sellerId": "AXXXXXXXXXXXXX"
                          },
                          {
                            "condition": "new",
                            "offerType": "B2B",
                            "quantityTier": 30,
                            "quantityDiscountType": "QUANTITY_DISCOUNT",
                            "ListingPrice": {
                              "Amount": 7,
                              "CurrencyCode": "USD"
                            },
                            "sellerId": "AXXXXXXXXXXXXX"
                          }
                        ],
                        "TotalOfferCount": 4
                      },
                      "Offers": [
                        {
                          "Shipping": {
                            "CurrencyCode": "USD",
                            "Amount": 0
                          },
                          "ListingPrice": {
                            "CurrencyCode": "USD",
                            "Amount": 10
                          },
                          "quantityDiscountPrices": [
                            {
                              "quantityTier": 20,
                              "quantityDiscountType": "QUANTITY_DISCOUNT",
                              "listingPrice": {
                                "Amount": 8,
                                "CurrencyCode": "USD"
                              }
                            },
                            {
                              "quantityTier": 30,
                              "quantityDiscountType": "QUANTITY_DISCOUNT",
                              "listingPrice": {
                                "Amount": 7,
                                "CurrencyCode": "USD"
                              }
                            }
                          ],
                          "ShippingTime": {
                            "maximumHours": 48,
                            "minimumHours": 24,
                            "availabilityType": "NOW"
                          },
                          "SellerFeedbackRating": {
                            "FeedbackCount": 0,
                            "SellerPositiveFeedbackRating": 0
                          },
                          "ShipsFrom": {
                            "State": "WA",
                            "Country": "US"
                          },
                          "SubCondition": "new",
                          "IsFeaturedMerchant": false,
                          "SellerId": "AXXXXXXXXXXXXX",
                          "MyOffer": true,
                          "IsFulfilledByAmazon": false
                        }
                      ],
                      "MarketplaceID": "ATVPDKIKX0DER"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "Asin": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          }
        }
      }
    },
    "/batches/products/pricing/v0/itemOffers": {
      "post": {
        "tags": [
          "productPricing"
        ],
        "description": "Returns the lowest priced offers for a batch of items based on ASIN.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.1 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getItemOffersBatch",
        "parameters": [
          {
            "name": "getItemOffersBatchRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetItemOffersBatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates that requests were run in batch.  Check the batch response status lines for information on whether a batch request succeeded.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "requests": [
                            {
                              "uri": "/products/pricing/v0/items/B000P6Q7MY/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/items/B001Q3KU9Q/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/items/B007Z07UK6/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/items/B000OQA3N4/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/items/B07PTMKYS7/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/items/B001PYUTII/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/items/B00505DW2I/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/items/B00CGZQU42/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/items/B01LY2ZYRF/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/items/B00KFRNZY6/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "responses": [
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "ASIN": "B000P6Q7MY",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "ASIN": "B000P6Q7MY"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 21
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 21
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "BuyBoxPrices": [
                                {
                                  "condition": "new",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 21
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 21
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "toy_display_on_website",
                                  "Rank": 48602
                                },
                                {
                                  "ProductCategoryId": "166064011",
                                  "Rank": 1168
                                },
                                {
                                  "ProductCategoryId": "251920011",
                                  "Rank": 1304
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 26
                              },
                              "TotalOfferCount": 1
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 21
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": true,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "2889aa8a-77b4-4d11-99f9-5fc24994dc0f",
                          "Date": "Tue, 28 Jun 2022 14:21:22 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "Asin": "B000P6Q7MY",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "ASIN": "B001Q3KU9Q",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "ASIN": "B001Q3KU9Q"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 24.99
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 24.99
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 20.49
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10.49
                                  }
                                }
                              ],
                              "BuyBoxPrices": [
                                {
                                  "condition": "new",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 24.99
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 24.99
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 0
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "toy_display_on_website",
                                  "Rank": 6674
                                },
                                {
                                  "ProductCategoryId": "251947011",
                                  "Rank": 33
                                },
                                {
                                  "ProductCategoryId": "23627232011",
                                  "Rank": 41
                                },
                                {
                                  "ProductCategoryId": "251913011",
                                  "Rank": 88
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 27.99
                              },
                              "TotalOfferCount": 2
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 24.99
                                },
                                "ShippingTime": {
                                  "maximumHours": 0,
                                  "minimumHours": 0,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": true,
                                  "IsNationalPrime": true
                                },
                                "SubCondition": "new",
                                "SellerId": "A1OHOT6VONX3KA",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": true,
                                "IsFulfilledByAmazon": true
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "5ff728ac-8f9c-4caa-99a7-704f898eec9c",
                          "Date": "Tue, 28 Jun 2022 14:21:22 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "Asin": "B001Q3KU9Q",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "ASIN": "B007Z07UK6",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "ASIN": "B007Z07UK6"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 18
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 11
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 7
                                  }
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 1
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 1
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "BuyBoxPrices": [
                                {
                                  "condition": "new",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 5.01
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 4.99
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 2
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 11
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 2
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 0
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 2
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "fashion_display_on_website",
                                  "Rank": 34481
                                },
                                {
                                  "ProductCategoryId": "3421050011",
                                  "Rank": 24
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "TotalOfferCount": 14
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 1
                                },
                                "ShippingTime": {
                                  "maximumHours": 720,
                                  "minimumHours": 504,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "AFQSGY2BVBPU2",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 3.5
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "ARLPNLRVRA0WL",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3QO25ZNO05UF8",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": true,
                                  "IsNationalPrime": true
                                },
                                "SubCondition": "new",
                                "SellerId": "AQBXQGCOQTJS6",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5.5
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "ATAQTPUEAJ499",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 4.99
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5.01
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "AEMQJEQHIGU8X",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": true,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3GAR3KWWUHTHC",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 12
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2YE02EFDC36RW",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 20
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A17VVVVNIJPQI4",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 50
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": true,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3ALR9P0658YQT",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 100
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A35LOCZQ3NFRAA",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "ab062f54-6b1c-4eab-9c59-f9c85847c3cc",
                          "Date": "Tue, 28 Jun 2022 14:21:22 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "Asin": "B007Z07UK6",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "ASIN": "B000OQA3N4",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "ASIN": "B000OQA3N4"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 3
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 0
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "sports_display_on_website",
                                  "Rank": 232244
                                },
                                {
                                  "ProductCategoryId": "3395921",
                                  "Rank": 242
                                },
                                {
                                  "ProductCategoryId": "19574752011",
                                  "Rank": 1579
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 25
                              },
                              "TotalOfferCount": 3
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3TH9S8BH6GOGM",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 3.99
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 9.99
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A09263691NO8MK5LA75X2",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 20
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "110f73fc-463d-4a68-a042-3a675ee37367",
                          "Date": "Tue, 28 Jun 2022 14:21:22 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "Asin": "B000OQA3N4",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "ASIN": "B07PTMKYS7",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "ASIN": "B07PTMKYS7"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 200
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 200
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 12
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 12
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 2
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 0
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 0
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "video_games_display_on_website",
                                  "Rank": 2597
                                },
                                {
                                  "ProductCategoryId": "19497044011",
                                  "Rank": 33
                                },
                                {
                                  "ProductCategoryId": "14670126011",
                                  "Rank": 45
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 399
                              },
                              "TotalOfferCount": 3
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 12
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3TH9S8BH6GOGM",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 20
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "f5b23d61-455e-40c4-b615-ca03fd0a25de",
                          "Date": "Tue, 28 Jun 2022 14:21:22 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "Asin": "B07PTMKYS7",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "ASIN": "B001PYUTII",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "ASIN": "B001PYUTII"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 1
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 1
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 17.99
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 17.99
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 20
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 20
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0.5
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0.5
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "BuyBoxPrices": [
                                {
                                  "condition": "new",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 4270
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 14
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 8
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 0
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 2
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "toy_display_on_website",
                                  "Rank": 30959
                                },
                                {
                                  "ProductCategoryId": "196604011",
                                  "Rank": 94
                                },
                                {
                                  "ProductCategoryId": "251910011",
                                  "Rank": 13863
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 17.99
                              },
                              "TotalOfferCount": 4286
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0.5
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A21GPS04ENK3GH",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 9
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A1NHJ2GQHJYKDD",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A1EZPZGQPCQEQR",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": true,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2BSRKTUYRBQX7",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 12.99
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A14RRT8J7KHRG0",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A29DD74D3MDLD3",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 15
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A1EZPZGQPCQEQR",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 17.99
                                },
                                "ShippingTime": {
                                  "maximumHours": 0,
                                  "minimumHours": 0,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": true,
                                  "IsNationalPrime": true
                                },
                                "SubCondition": "new",
                                "SellerId": "A1OHOT6VONX3KA",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": true
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 23
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2NO69NJS5R7BW",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 23
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3J2OPDM7RLS9A",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 30
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "AA7AN6LI5ZZMD",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 30
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 30
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A29DD74D3MDLD3",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 50
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3D4MFKTUUP0RS",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 1400
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A16ZGNLKQR74W7",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "5b4ebbf3-cd9f-4e5f-a252-1aed3933ae0e",
                          "Date": "Tue, 28 Jun 2022 14:21:25 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "Asin": "B001PYUTII",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "ASIN": "B00505DW2I",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "ASIN": "B00505DW2I"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 14.99
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 4.99
                                  }
                                }
                              ],
                              "BuyBoxPrices": [
                                {
                                  "condition": "new",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 14.99
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 4.99
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 3
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 3
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "toy_display_on_website",
                                  "Rank": 6581
                                },
                                {
                                  "ProductCategoryId": "14194715011",
                                  "Rank": 11
                                },
                                {
                                  "ProductCategoryId": "251975011",
                                  "Rank": 15
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 36
                              },
                              "TotalOfferCount": 3
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 4.99
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A5LI4TEX5CN80",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": true,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 15
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 33
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "AH2OYH1RAT8PM",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "da27fbae-3066-44b5-8f08-d472152eea0b",
                          "Date": "Tue, 28 Jun 2022 14:21:22 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "Asin": "B00505DW2I",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "ASIN": "B00CGZQU42",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "ASIN": "B00CGZQU42"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 100
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 100
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 50
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 50
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "BuyBoxPrices": [
                                {
                                  "condition": "new",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 50
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 50
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 2
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "fashion_display_on_website",
                                  "Rank": 1093666
                                },
                                {
                                  "ProductCategoryId": "1045012",
                                  "Rank": 2179
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 18.99
                              },
                              "TotalOfferCount": 3
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 50
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3CTKJEUROOISL",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 50
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": true,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 100
                                },
                                "ShippingTime": {
                                  "maximumHours": 0,
                                  "minimumHours": 0,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": true,
                                  "IsNationalPrime": true
                                },
                                "SubCondition": "new",
                                "SellerId": "A16V258PS36Q2H",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "IsFulfilledByAmazon": true
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "057b337c-3c17-4bbd-9bbf-79c1ef756dc0",
                          "Date": "Tue, 28 Jun 2022 14:21:22 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "Asin": "B00CGZQU42",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "ASIN": "B01LY2ZYRF",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "ASIN": "B01LY2ZYRF"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 22
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 22
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "BuyBoxPrices": [
                                {
                                  "condition": "new",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 22
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 22
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 59.5
                              },
                              "TotalOfferCount": 1
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 22
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": true,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "196a1220-82c4-4b07-8a73-a7d92511f6ef",
                          "Date": "Tue, 28 Jun 2022 14:21:22 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "Asin": "B01LY2ZYRF",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "ASIN": "B00KFRNZY6",
                            "status": "NoBuyableOffers",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "ASIN": "B00KFRNZY6"
                            },
                            "Summary": {
                              "TotalOfferCount": 0
                            },
                            "Offers": [],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "7e49bdbb-7347-46fe-8c66-beb7b9c08118",
                          "Date": "Tue, 28 Jun 2022 14:21:23 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "Asin": "B00KFRNZY6",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/GetItemOffersBatchResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "requests": [
                            {
                              "uri": "/products/pricing/v0/items/B000P6Q7MY/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          }
        }
      }
    },
    "/batches/products/pricing/v0/listingOffers": {
      "post": {
        "tags": [
          "productPricing"
        ],
        "description": "Returns the lowest priced offers for a batch of listings by SKU.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.5 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getListingOffersBatch",
        "parameters": [
          {
            "name": "getListingOffersBatchRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetListingOffersBatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates that requests were run in batch.  Check the batch response status lines for information on whether a batch request succeeded.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "requests": [
                            {
                              "uri": "/products/pricing/v0/listings/GC-QTMS-SV2I/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/listings/VT-DEIT-57TQ/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/listings/NA-H7X1-JYTM/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/listings/RL-JVOC-MBSL/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            },
                            {
                              "uri": "/products/pricing/v0/listings/74-64KG-H9W9/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "responses": [
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "SKU": "GC-QTMS-SV2I",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "SellerSKU": "GC-QTMS-SV2I"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 1
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 1
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 17.99
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 17.99
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 20
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 20
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0.5
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0.5
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "BuyBoxPrices": [
                                {
                                  "condition": "new",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 4270
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 14
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant"
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Amazon"
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant"
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant"
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "toy_display_on_website",
                                  "Rank": 30959
                                },
                                {
                                  "ProductCategoryId": "196604011",
                                  "Rank": 94
                                },
                                {
                                  "ProductCategoryId": "251910011",
                                  "Rank": 13863
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 17.99
                              },
                              "TotalOfferCount": 4286
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0.5
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A21GPS04ENK3GH",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 9
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A1NHJ2GQHJYKDD",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A1EZPZGQPCQEQR",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": true,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2BSRKTUYRBQX7",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 12.99
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A14RRT8J7KHRG0",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A29DD74D3MDLD3",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 15
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A1EZPZGQPCQEQR",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 17.99
                                },
                                "ShippingTime": {
                                  "maximumHours": 0,
                                  "minimumHours": 0,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": true,
                                  "IsNationalPrime": true
                                },
                                "SubCondition": "new",
                                "SellerId": "A1OHOT6VONX3KA",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": true
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 23
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2NO69NJS5R7BW",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 23
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3J2OPDM7RLS9A",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 30
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "AA7AN6LI5ZZMD",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 30
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": true,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 30
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A29DD74D3MDLD3",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 50
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3D4MFKTUUP0RS",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 1400
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A16ZGNLKQR74W7",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "ffd73923-1728-4d57-a45b-8e07a5e10366",
                          "Date": "Tue, 28 Jun 2022 14:18:08 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "SellerSKU": "GC-QTMS-SV2I",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "SKU": "VT-DEIT-57TQ",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "SellerSKU": "VT-DEIT-57TQ"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 14.99
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 4.99
                                  }
                                }
                              ],
                              "BuyBoxPrices": [
                                {
                                  "condition": "new",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 14.99
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 4.99
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 3
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant"
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "toy_display_on_website",
                                  "Rank": 6581
                                },
                                {
                                  "ProductCategoryId": "14194715011",
                                  "Rank": 11
                                },
                                {
                                  "ProductCategoryId": "251975011",
                                  "Rank": 15
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 36
                              },
                              "TotalOfferCount": 3
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 4.99
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A5LI4TEX5CN80",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": true,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 15
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "MyOffer": true,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 33
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "AH2OYH1RAT8PM",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "96372776-dae8-4cd3-8edf-c9cd2d708c0c",
                          "Date": "Tue, 28 Jun 2022 14:18:05 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "SellerSKU": "VT-DEIT-57TQ",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "SKU": "NA-H7X1-JYTM",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "SellerSKU": "NA-H7X1-JYTM"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 18
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 11
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 7
                                  }
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 1
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 1
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "BuyBoxPrices": [
                                {
                                  "condition": "new",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 5.01
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 4.99
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 2
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 11
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "used",
                                  "fulfillmentChannel": "Merchant"
                                },
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant"
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant"
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "fashion_display_on_website",
                                  "Rank": 34481
                                },
                                {
                                  "ProductCategoryId": "3421050011",
                                  "Rank": 24
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 10
                              },
                              "TotalOfferCount": 14
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 1
                                },
                                "ShippingTime": {
                                  "maximumHours": 720,
                                  "minimumHours": 504,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "AFQSGY2BVBPU2",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 3.5
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "ARLPNLRVRA0WL",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3QO25ZNO05UF8",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": true,
                                  "IsNationalPrime": true
                                },
                                "SubCondition": "new",
                                "SellerId": "AQBXQGCOQTJS6",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5.5
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "ATAQTPUEAJ499",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 4.99
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 5.01
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "AEMQJEQHIGU8X",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": true,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3GAR3KWWUHTHC",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 12
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2YE02EFDC36RW",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 20
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A17VVVVNIJPQI4",
                                "IsFeaturedMerchant": true,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 50
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": true,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3ALR9P0658YQT",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 100
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A35LOCZQ3NFRAA",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "0160ecba-a238-40ba-8ef9-647e9a0baf55",
                          "Date": "Tue, 28 Jun 2022 14:18:05 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "SellerSKU": "NA-H7X1-JYTM",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "SKU": "RL-JVOC-MBSL",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "SellerSKU": "RL-JVOC-MBSL"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 10
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 3
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant"
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "sports_display_on_website",
                                  "Rank": 232244
                                },
                                {
                                  "ProductCategoryId": "3395921",
                                  "Rank": 242
                                },
                                {
                                  "ProductCategoryId": "19574752011",
                                  "Rank": 1579
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 25
                              },
                              "TotalOfferCount": 3
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 10
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3TH9S8BH6GOGM",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 3.99
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 9.99
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A09263691NO8MK5LA75X2",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 20
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": true,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "09d9fb32-661e-44f3-ac59-b2f91bb3d88e",
                          "Date": "Tue, 28 Jun 2022 14:18:05 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "SellerSKU": "RL-JVOC-MBSL",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      },
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "OK"
                        },
                        "body": {
                          "payload": {
                            "SKU": "74-64KG-H9W9",
                            "status": "Success",
                            "ItemCondition": "New",
                            "Identifier": {
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "SellerSKU": "74-64KG-H9W9"
                            },
                            "Summary": {
                              "LowestPrices": [
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 200
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 200
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "LandedPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 12
                                  },
                                  "ListingPrice": {
                                    "CurrencyCode": "USD",
                                    "Amount": 12
                                  },
                                  "Shipping": {
                                    "CurrencyCode": "USD",
                                    "Amount": 0
                                  }
                                }
                              ],
                              "NumberOfOffers": [
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 1
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant",
                                  "OfferCount": 2
                                }
                              ],
                              "BuyBoxEligibleOffers": [
                                {
                                  "condition": "collectible",
                                  "fulfillmentChannel": "Merchant"
                                },
                                {
                                  "condition": "new",
                                  "fulfillmentChannel": "Merchant"
                                }
                              ],
                              "SalesRankings": [
                                {
                                  "ProductCategoryId": "video_games_display_on_website",
                                  "Rank": 2597
                                },
                                {
                                  "ProductCategoryId": "19497044011",
                                  "Rank": 33
                                },
                                {
                                  "ProductCategoryId": "14670126011",
                                  "Rank": 45
                                }
                              ],
                              "ListPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 399
                              },
                              "TotalOfferCount": 3
                            },
                            "Offers": [
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 12
                                },
                                "ShippingTime": {
                                  "maximumHours": 48,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A3TH9S8BH6GOGM",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": false,
                                "IsFulfilledByAmazon": false
                              },
                              {
                                "Shipping": {
                                  "CurrencyCode": "USD",
                                  "Amount": 0
                                },
                                "ListingPrice": {
                                  "CurrencyCode": "USD",
                                  "Amount": 20
                                },
                                "ShippingTime": {
                                  "maximumHours": 24,
                                  "minimumHours": 24,
                                  "availabilityType": "NOW"
                                },
                                "ShipsFrom": {
                                  "Country": "US"
                                },
                                "PrimeInformation": {
                                  "IsPrime": false,
                                  "IsNationalPrime": false
                                },
                                "SubCondition": "new",
                                "SellerId": "A2SNBFWOFW4SWG",
                                "IsFeaturedMerchant": false,
                                "IsBuyBoxWinner": false,
                                "MyOffer": true,
                                "IsFulfilledByAmazon": false
                              }
                            ],
                            "marketplaceId": "ATVPDKIKX0DER"
                          }
                        },
                        "headers": {
                          "x-amzn-RequestId": "0df944c2-6de5-48d1-9c9c-df138c00e797",
                          "Date": "Tue, 28 Jun 2022 14:18:05 GMT"
                        },
                        "request": {
                          "MarketplaceId": "ATVPDKIKX0DER",
                          "SellerSKU": "74-64KG-H9W9",
                          "CustomerType": "Consumer",
                          "ItemCondition": "New"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "schema": {
              "$ref": "#/definitions/GetListingOffersBatchResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "requests": [
                            {
                              "uri": "/products/pricing/v0/listings/GC-QTMS-SV2I/offers",
                              "method": "GET",
                              "MarketplaceId": "ATVPDKIKX0DER",
                              "ItemCondition": "New",
                              "CustomerType": "Consumer"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          }
        }
      }
    },
    "/batches/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice": {
      "post": {
        "tags": [
          "productPricing"
        ],
        "description": "Returns the set of responses that correspond to the batched list of up to 40 requests defined in the request body. The response for each successful (HTTP status code 200) request in the set includes the computed listing price at or below which a seller can expect to become the featured offer (before applicable promotions). This is called the featured offer expected price (FOEP). Featured offer is not guaranteed because competing offers might change. Other offers might be featured based on factors such as fulfillment capabilities to a specific customer. The response to an unsuccessful request includes the available error text.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.033 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) in the Selling Partner API.",
        "operationId": "getFeaturedOfferExpectedPriceBatch",
        "parameters": [
          {
            "name": "getFeaturedOfferExpectedPriceBatchRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetFeaturedOfferExpectedPriceBatchRequest"
            },
            "description": "The batch of `getFeaturedOfferExpectedPrice` requests."
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetFeaturedOfferExpectedPriceBatchResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "examples": {
              "application/json": {
                "responses": [
                  {
                    "request": {
                      "marketplaceId": "MARKETPLACE_ID",
                      "sku": "MY_SKU"
                    },
                    "status": {
                      "statusCode": 200,
                      "reasonPhrase": "Success"
                    },
                    "headers": {},
                    "body": {
                      "offerIdentifier": {
                        "asin": "ASIN",
                        "sku": "MY_SKU",
                        "marketplaceId": "MARKETPLACE_ID",
                        "fulfillmentType": "AFN",
                        "sellerId": "MY_SELLER_ID"
                      },
                      "featuredOfferExpectedPriceResults": [
                        {
                          "featuredOfferExpectedPrice": {
                            "listingPrice": {
                              "amount": 10,
                              "currencyCode": "USD"
                            },
                            "points": {
                              "pointsNumber": 3,
                              "pointsMonetaryValue": {
                                "amount": 0.03,
                                "currencyCode": "USD"
                              }
                            }
                          },
                          "resultStatus": "VALID_FOEP",
                          "competingFeaturedOffer": {
                            "offerIdentifier": {
                              "asin": "ASIN",
                              "marketplaceId": "MARKETPLACE_ID",
                              "fulfillmentType": "AFN",
                              "sellerId": "OTHER_SELLER_ID"
                            },
                            "condition": "New",
                            "price": {
                              "listingPrice": {
                                "amount": 12,
                                "currencyCode": "USD"
                              },
                              "shippingPrice": {
                                "amount": 0,
                                "currencyCode": "USD"
                              },
                              "points": {
                                "pointsNumber": 3,
                                "pointsMonetaryValue": {
                                  "amount": 0.03,
                                  "currencyCode": "USD"
                                }
                              }
                            }
                          },
                          "currentFeaturedOffer": {
                            "offerIdentifier": {
                              "asin": "ASIN",
                              "marketplaceId": "MARKETPLACE_ID",
                              "fulfillmentType": "AFN",
                              "sellerId": "OTHER_SELLER_ID"
                            },
                            "condition": "New",
                            "price": {
                              "listingPrice": {
                                "amount": 12,
                                "currencyCode": "USD"
                              },
                              "shippingPrice": {
                                "amount": 0,
                                "currencyCode": "USD"
                              },
                              "points": {
                                "pointsNumber": 3,
                                "pointsMonetaryValue": {
                                  "amount": 0.03,
                                  "currencyCode": "USD"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "request": {
                      "marketplaceId": "MARKETPLACE_ID",
                      "sku": "MY_UNIQUE_SKU"
                    },
                    "status": {
                      "statusCode": 200,
                      "reasonPhrase": "Success"
                    },
                    "headers": {},
                    "body": {
                      "offerIdentifier": {
                        "asin": "ASIN",
                        "sku": "MY_UNIQUE_SKU",
                        "marketplaceId": "MARKETPLACE_ID",
                        "fulfillmentType": "AFN",
                        "sellerId": "MY_SELLER_ID"
                      },
                      "featuredOfferExpectedPriceResults": [
                        {
                          "resultStatus": "NO_COMPETING_OFFERS",
                          "currentFeaturedOffer": {
                            "offerIdentifier": {
                              "asin": "ASIN",
                              "marketplaceId": "MARKETPLACE_ID",
                              "fulfillmentType": "AFN",
                              "sellerId": "MY_SELLER_ID"
                            },
                            "condition": "New",
                            "price": {
                              "listingPrice": {
                                "amount": 12,
                                "currencyCode": "USD"
                              },
                              "shippingPrice": {
                                "amount": 0,
                                "currencyCode": "USD"
                              },
                              "points": {
                                "pointsNumber": 3,
                                "pointsMonetaryValue": {
                                  "amount": 0.03,
                                  "currencyCode": "USD"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "request": {
                      "marketplaceId": "MARKETPLACE_ID",
                      "sku": "MY_NONEXISTENT_SKU"
                    },
                    "status": {
                      "statusCode": 400,
                      "reasonPhrase": "Client Error"
                    },
                    "headers": {},
                    "body": {
                      "errors": [
                        {
                          "code": "INVALID_SKU",
                          "message": "The requested SKU does not exist for the seller in the requested marketplace."
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "requests": [
                            {
                              "marketplaceId": "MARKETPLACE_ID",
                              "sku": "MY_SKU",
                              "method": "GET",
                              "uri": "/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice"
                            },
                            {
                              "marketplaceId": "MARKETPLACE_ID",
                              "sku": "MY_UNIQUE_SKU",
                              "method": "GET",
                              "uri": "/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice"
                            },
                            {
                              "marketplaceId": "MARKETPLACE_ID",
                              "sku": "INVALID_SKU",
                              "method": "GET",
                              "uri": "/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "responses": [
                      {
                        "request": {
                          "marketplaceId": "MARKETPLACE_ID",
                          "sku": "MY_SKU"
                        },
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "Success"
                        },
                        "headers": {},
                        "body": {
                          "offerIdentifier": {
                            "asin": "ASIN",
                            "sku": "MY_SKU",
                            "marketplaceId": "MARKETPLACE_ID",
                            "fulfillmentType": "AFN",
                            "sellerId": "MY_SELLER_ID"
                          },
                          "featuredOfferExpectedPriceResults": [
                            {
                              "featuredOfferExpectedPrice": {
                                "listingPrice": {
                                  "amount": 10,
                                  "currencyCode": "USD"
                                },
                                "points": {
                                  "pointsNumber": 3,
                                  "pointsMonetaryValue": {
                                    "amount": 0.03,
                                    "currencyCode": "USD"
                                  }
                                }
                              },
                              "resultStatus": "VALID_FOEP",
                              "competingFeaturedOffer": {
                                "offerIdentifier": {
                                  "asin": "ASIN",
                                  "marketplaceId": "MARKETPLACE_ID",
                                  "fulfillmentType": "AFN",
                                  "sellerId": "OTHER_SELLER_ID"
                                },
                                "condition": "New",
                                "price": {
                                  "listingPrice": {
                                    "amount": 12,
                                    "currencyCode": "USD"
                                  },
                                  "shippingPrice": {
                                    "amount": 0,
                                    "currencyCode": "USD"
                                  },
                                  "points": {
                                    "pointsNumber": 3,
                                    "pointsMonetaryValue": {
                                      "amount": 0.03,
                                      "currencyCode": "USD"
                                    }
                                  }
                                }
                              },
                              "currentFeaturedOffer": {
                                "offerIdentifier": {
                                  "asin": "ASIN",
                                  "marketplaceId": "MARKETPLACE_ID",
                                  "fulfillmentType": "AFN",
                                  "sellerId": "OTHER_SELLER_ID"
                                },
                                "condition": "New",
                                "price": {
                                  "listingPrice": {
                                    "amount": 12,
                                    "currencyCode": "USD"
                                  },
                                  "shippingPrice": {
                                    "amount": 0,
                                    "currencyCode": "USD"
                                  },
                                  "points": {
                                    "pointsNumber": 3,
                                    "pointsMonetaryValue": {
                                      "amount": 0.03,
                                      "currencyCode": "USD"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "request": {
                          "marketplaceId": "MARKETPLACE_ID",
                          "sku": "MY_UNIQUE_SKU"
                        },
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "Success"
                        },
                        "headers": {},
                        "body": {
                          "offerIdentifier": {
                            "asin": "ASIN",
                            "sku": "MY_UNIQUE_SKU",
                            "marketplaceId": "MARKETPLACE_ID",
                            "fulfillmentType": "AFN",
                            "sellerId": "MY_SELLER_ID"
                          },
                          "featuredOfferExpectedPriceResults": [
                            {
                              "resultStatus": "NO_COMPETING_OFFERS",
                              "currentFeaturedOffer": {
                                "offerIdentifier": {
                                  "asin": "ASIN",
                                  "marketplaceId": "MARKETPLACE_ID",
                                  "fulfillmentType": "AFN",
                                  "sellerId": "MY_SELLER_ID"
                                },
                                "condition": "New",
                                "price": {
                                  "listingPrice": {
                                    "amount": 12,
                                    "currencyCode": "USD"
                                  },
                                  "shippingPrice": {
                                    "amount": 0,
                                    "currencyCode": "USD"
                                  },
                                  "points": {
                                    "pointsNumber": 3,
                                    "pointsMonetaryValue": {
                                      "amount": 0.03,
                                      "currencyCode": "USD"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "request": {
                          "marketplaceId": "MARKETPLACE_ID",
                          "sku": "MY_NONEXISTENT_SKU"
                        },
                        "status": {
                          "statusCode": 400,
                          "reasonPhrase": "Client Error"
                        },
                        "headers": {},
                        "body": {
                          "errors": [
                            {
                              "code": "INVALID_SKU",
                              "message": "The requested SKU does not exist for the seller in the requested marketplace."
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "requests": [
                            {
                              "marketplaceId": "MARKETPLACE_ID",
                              "sku": "INVALID_SKU",
                              "method": "GET",
                              "uri": "/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "INVALID_SKU",
                        "message": "The requested SKU does not exist for the seller in the requested marketplace."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/batches/products/pricing/2022-05-01/items/competitiveSummary": {
      "post": {
        "tags": [
          "productPricing"
        ],
        "description": "Returns the competitive summary response, including featured buying options for the ASIN and `marketplaceId` combination.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.033 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) in the Selling Partner API.",
        "operationId": "getCompetitiveSummary",
        "parameters": [
          {
            "name": "requests",
            "in": "body",
            "description": "The batch of `getCompetitiveSummary` requests.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompetitiveSummaryBatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CompetitiveSummaryBatchResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "examples": {
              "application/json": {
                "responses": [
                  {
                    "status": {
                      "statusCode": 200,
                      "reasonPhrase": "Success"
                    },
                    "body": {
                      "asin": "B00ZIAODGE",
                      "marketplaceId": "ATVPDKIKX0DER",
                      "featuredBuyingOptions": [
                        {
                          "buyingOptionType": "New",
                          "segmentedFeaturedOffers": [
                            {
                              "sellerId": "A3DJR8M9Y3OUPG",
                              "condition": "New",
                              "fulfillmentType": "MFN",
                              "listingPrice": {
                                "amount": 18.11,
                                "currencyCode": "USD"
                              },
                              "shippingOptions": [
                                {
                                  "shippingOptionType": "DEFAULT",
                                  "price": {
                                    "amount": 2.5,
                                    "currencyCode": "USD"
                                  }
                                }
                              ],
                              "points": {
                                "pointsNumber": 3,
                                "pointsMonetaryValue": {
                                  "amount": 0.03,
                                  "currencyCode": "USD"
                                }
                              },
                              "featuredOfferSegments": [
                                {
                                  "customerMembership": "PRIME",
                                  "segmentDetails": {
                                    "glanceViewWeightPercentage": 72
                                  }
                                },
                                {
                                  "customerMembership": "NON_PRIME",
                                  "segmentDetails": {
                                    "glanceViewWeightPercentage": 18
                                  }
                                }
                              ]
                            },
                            {
                              "sellerId": "A2ZWOLFOFDPJL1",
                              "condition": "New",
                              "fulfillmentType": "MFN",
                              "listingPrice": {
                                "amount": 17.15,
                                "currencyCode": "USD"
                              },
                              "shippingOptions": [
                                {
                                  "shippingOptionType": "DEFAULT",
                                  "price": {
                                    "amount": 2.5,
                                    "currencyCode": "USD"
                                  }
                                }
                              ],
                              "points": {
                                "pointsNumber": 3,
                                "pointsMonetaryValue": {
                                  "amount": 0.03,
                                  "currencyCode": "USD"
                                }
                              },
                              "featuredOfferSegments": [
                                {
                                  "customerMembership": "NON_PRIME",
                                  "segmentDetails": {
                                    "glanceViewWeightPercentage": 10
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "referencePrices": [
                        {
                          "name": "CompetitivePriceThreshold",
                          "price": {
                            "amount": 18.11,
                            "currencyCode": "USD"
                          }
                        },
                        {
                          "name": "WasPrice",
                          "price": {
                            "amount": 18.49,
                            "currencyCode": "USD"
                          }
                        }
                      ],
                      "lowestPricedOffers": [
                        {
                          "lowestPricedOffersInput": {
                            "itemCondition": "New",
                            "offerType": "Consumer"
                          },
                          "offers": [
                            {
                              "listingPrice": {
                                "currencyCode": "USD",
                                "amount": 17.15
                              },
                              "shippingOptions": [
                                {
                                  "shippingOptionType": "DEFAULT",
                                  "price": {
                                    "amount": 2.5,
                                    "currencyCode": "USD"
                                  }
                                }
                              ],
                              "points": {
                                "pointsMonetaryValue": {
                                  "amount": 0.5,
                                  "currencyCode": "USD"
                                },
                                "pointsNumber": 50
                              },
                              "primeDetails": {
                                "eligibility": "REGIONAL"
                              },
                              "subCondition": "New",
                              "sellerId": "A2ZWOLFOFDPJL1",
                              "fulfillmentType": "MFN"
                            },
                            {
                              "listingPrice": {
                                "amount": 18.11,
                                "currencyCode": "USD"
                              },
                              "shippingOptions": [
                                {
                                  "shippingOptionType": "DEFAULT",
                                  "price": {
                                    "amount": 2.5,
                                    "currencyCode": "USD"
                                  }
                                }
                              ],
                              "points": {
                                "pointsNumber": 3,
                                "pointsMonetaryValue": {
                                  "amount": 0.03,
                                  "currencyCode": "USD"
                                }
                              },
                              "primeDetails": {
                                "eligibility": "NATIONAL"
                              },
                              "sellerId": "A3DJR8M9Y3OUPG",
                              "subCondition": "New",
                              "fulfillmentType": "MFN"
                            }
                          ]
                        },
                        {
                          "lowestPricedOffersInput": {
                            "itemCondition": "Used",
                            "offerType": "Consumer"
                          },
                          "offers": [
                            {
                              "listingPrice": {
                                "CurrencyCode": "USD",
                                "Amount": 12
                              },
                              "shippingOptions": [
                                {
                                  "shippingOptionType": "DEFAULT",
                                  "price": {
                                    "amount": 2.5,
                                    "currencyCode": "USD"
                                  }
                                }
                              ],
                              "primeDetails": {
                                "eligibility": "REGIONAL"
                              },
                              "subCondition": "Acceptable",
                              "sellerId": "A3DH5AGPM3JVAB",
                              "fulfillmentType": "AFN"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "requests": [
                            {
                              "asin": "B00ZIAODGE",
                              "marketplaceId": "ATVPDKIKX0DER",
                              "includedData": [
                                "featuredBuyingOptions",
                                "referencePrices",
                                "lowestPricedOffers"
                              ],
                              "lowestPricedOffersInputs": [
                                {
                                  "itemCondition": "New",
                                  "offerType": "Consumer"
                                },
                                {
                                  "itemCondition": "Used",
                                  "offerType": "Consumer"
                                }
                              ],
                              "uri": "/products/pricing/2022-05-01/items/competitiveSummary",
                              "method": "GET"
                            },
                            {
                              "asin": "11_AABB_123",
                              "marketplaceId": "ATVPDKIKX0DER",
                              "includedData": [
                                "featuredBuyingOptions"
                              ],
                              "uri": "/products/pricing/2022-05-01/items/competitiveSummary",
                              "method": "GET"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "responses": [
                      {
                        "status": {
                          "statusCode": 200,
                          "reasonPhrase": "Success"
                        },
                        "body": {
                          "asin": "B00ZIAODGE",
                          "marketplaceId": "ATVPDKIKX0DER",
                          "featuredBuyingOptions": [
                            {
                              "buyingOptionType": "New",
                              "segmentedFeaturedOffers": [
                                {
                                  "sellerId": "A3DJR8M9Y3OUPG",
                                  "condition": "New",
                                  "fulfillmentType": "MFN",
                                  "listingPrice": {
                                    "amount": 18.11,
                                    "currencyCode": "USD"
                                  },
                                  "shippingOptions": [
                                    {
                                      "shippingOptionType": "DEFAULT",
                                      "price": {
                                        "amount": 2.5,
                                        "currencyCode": "USD"
                                      }
                                    }
                                  ],
                                  "points": {
                                    "pointsNumber": 3,
                                    "pointsMonetaryValue": {
                                      "amount": 0.03,
                                      "currencyCode": "USD"
                                    }
                                  },
                                  "featuredOfferSegments": [
                                    {
                                      "customerMembership": "NON_PRIME",
                                      "segmentDetails": {
                                        "glanceViewWeightPercentage": 72
                                      }
                                    },
                                    {
                                      "customerMembership": "PRIME",
                                      "segmentDetails": {
                                        "glanceViewWeightPercentage": 10
                                      }
                                    }
                                  ]
                                },
                                {
                                  "sellerId": "A2ZWOLFOFDPJL1",
                                  "condition": "New",
                                  "fulfillmentType": "MFN",
                                  "listingPrice": {
                                    "amount": 17.15,
                                    "currencyCode": "USD"
                                  },
                                  "shippingOptions": [
                                    {
                                      "shippingOptionType": "DEFAULT",
                                      "price": {
                                        "amount": 2.5,
                                        "currencyCode": "USD"
                                      }
                                    }
                                  ],
                                  "points": {
                                    "pointsNumber": 3,
                                    "pointsMonetaryValue": {
                                      "amount": 0.03,
                                      "currencyCode": "USD"
                                    }
                                  },
                                  "featuredOfferSegments": [
                                    {
                                      "customerMembership": "NON_PRIME",
                                      "segmentDetails": {
                                        "glanceViewWeightPercentage": 18
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "referencePrices": [
                            {
                              "name": "CompetitivePriceThreshold",
                              "price": {
                                "amount": 18.11,
                                "currencyCode": "USD"
                              }
                            },
                            {
                              "name": "WasPrice",
                              "price": {
                                "amount": 18.49,
                                "currencyCode": "USD"
                              }
                            }
                          ],
                          "lowestPricedOffers": [
                            {
                              "lowestPricedOffersInput": {
                                "itemCondition": "New",
                                "offerType": "Consumer"
                              },
                              "offers": [
                                {
                                  "listingPrice": {
                                    "currencyCode": "USD",
                                    "amount": 17.15
                                  },
                                  "shippingOptions": [
                                    {
                                      "shippingOptionType": "DEFAULT",
                                      "price": {
                                        "amount": 2.5,
                                        "currencyCode": "USD"
                                      }
                                    }
                                  ],
                                  "points": {
                                    "pointsMonetaryValue": {
                                      "amount": 0.5,
                                      "currencyCode": "USD"
                                    },
                                    "pointsNumber": 50
                                  },
                                  "primeDetails": {
                                    "eligibility": "REGIONAL"
                                  },
                                  "subCondition": "New",
                                  "sellerId": "A2ZWOLFOFDPJL1",
                                  "fulfillmentType": "MFN"
                                },
                                {
                                  "listingPrice": {
                                    "amount": 18.11,
                                    "currencyCode": "USD"
                                  },
                                  "shippingOptions": [
                                    {
                                      "shippingOptionType": "DEFAULT",
                                      "price": {
                                        "amount": 2.5,
                                        "currencyCode": "USD"
                                      }
                                    }
                                  ],
                                  "points": {
                                    "pointsNumber": 3,
                                    "pointsMonetaryValue": {
                                      "amount": 0.03,
                                      "currencyCode": "USD"
                                    }
                                  },
                                  "primeDetails": {
                                    "eligibility": "NATIONAL"
                                  },
                                  "sellerId": "A3DJR8M9Y3OUPG",
                                  "subCondition": "New",
                                  "fulfillmentType": "MFN"
                                }
                              ]
                            },
                            {
                              "lowestPricedOffersInput": {
                                "itemCondition": "Used",
                                "offerType": "Consumer"
                              },
                              "offers": [
                                {
                                  "listingPrice": {
                                    "currencyCode": "USD",
                                    "amount": 12
                                  },
                                  "shippingOptions": [
                                    {
                                      "shippingOptionType": "DEFAULT",
                                      "price": {
                                        "amount": 2.5,
                                        "currencyCode": "USD"
                                      }
                                    }
                                  ],
                                  "primeDetails": {
                                    "eligibility": "REGIONAL"
                                  },
                                  "subCondition": "Acceptable",
                                  "sellerId": "A3DH5AGPM3JVAB",
                                  "fulfillmentType": "AFN"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "status": {
                          "statusCode": 400,
                          "reasonPhrase": "Client Error"
                        },
                        "body": {
                          "asin": "11_AABB_123",
                          "marketplaceId": "ATVPDKIKX0DER",
                          "errors": [
                            {
                              "code": "INVALID_ASIN",
                              "message": "11_AABB_123 is not a valid ASIN"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "requests": [
                            {
                              "asin": "11_AABB_123",
                              "marketplaceId": "ATVPDKIKX0DER",
                              "includedData": [
                                "featuredBuyingOptions"
                              ],
                              "uri": "/products/pricing/2022-05-01/items/competitiveSummary",
                              "method": "GET"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "INVALID_ASIN",
                        "message": "11_AABB_123 is not a valid ASIN"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/definitions/2020-09-01/productTypes": {
      "get": {
        "tags": [
          "definitions"
        ],
        "description": "Search for and return a list of Amazon product types that have definitions available.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 5 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "searchDefinitionsProductTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "description": "A comma-delimited list of keywords to search product types. **Note:** Cannot be used with `itemName`.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "LUGGAGE"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A comma-delimited list of Amazon marketplace identifiers for the request.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "ATVPDKIKX0DER"
          },
          {
            "name": "itemName",
            "description": "The title of the ASIN to get the product type recommendation. **Note:** Cannot be used with `keywords`.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "Running shoes"
          },
          {
            "name": "locale",
            "description": "The locale for the display names in the response. Defaults to the primary locale of the marketplace.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          },
          {
            "name": "searchLocale",
            "description": "The locale used for the `keywords` and `itemName` parameters. Defaults to the primary locale of the marketplace.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "en_US"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a list of Amazon product types that have definitions available.",
            "schema": {
              "$ref": "#/definitions/ProductTypeList"
            },
            "examples": {
              "application/json": {
                "productTypes": [
                  {
                    "name": "LUGGAGE",
                    "displayName": "Luggage",
                    "marketplaceIds": [
                      "ATVPDKIKX0DER"
                    ]
                  }
                ],
                "productTypeVersion": "UHqSqmb4FNUk="
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "productTypes": [
                      {
                        "name": "LUGGAGE",
                        "displayName": "Luggage",
                        "marketplaceIds": [
                          "ATVPDKIKX0DER"
                        ]
                      }
                    ],
                    "productTypeVersion": "UHqSqmb4FNUk="
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "keywords": {
                        "value": [
                          "Invalid Request"
                        ]
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BAD_REQUEST",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/definitions/2020-09-01/productTypes/{productType}": {
      "get": {
        "tags": [
          "definitions"
        ],
        "description": "Retrieve an Amazon product type definition.\n\n**Usage Plans:**\n\n| Plan type | Rate (requests per second) | Burst |\n| ---- | ---- | ---- |\n|Default| 5 | 10 |\n|Selling partner specific| Variable | Variable |\n\nThe x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getDefinitionsProductType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "The Amazon product type name.",
            "required": true,
            "type": "string",
            "x-example": "LUGGAGE"
          },
          {
            "name": "sellerId",
            "in": "query",
            "description": "A selling partner identifier. When provided, seller-specific requirements and values are populated within the product type definition schema, such as brand names associated with the selling partner.",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A comma-delimited list of Amazon marketplace identifiers for the request.\nNote: This parameter is limited to one marketplaceId at this time.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "x-example": "ATVPDKIKX0DER"
          },
          {
            "name": "productTypeVersion",
            "in": "query",
            "description": "The version of the Amazon product type to retrieve. Defaults to \"LATEST\",. Prerelease versions of product type definitions may be retrieved with \"RELEASE_CANDIDATE\". If no prerelease version is currently available, the \"LATEST\" live version will be provided.",
            "required": false,
            "type": "string",
            "default": "LATEST",
            "x-example": "LATEST"
          },
          {
            "name": "requirements",
            "in": "query",
            "description": "The name of the requirements set to retrieve requirements for.",
            "required": false,
            "type": "string",
            "default": "LISTING",
            "enum": [
              "LISTING",
              "LISTING_PRODUCT_ONLY",
              "LISTING_OFFER_ONLY"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "LISTING",
                "description": "Request schema containing product facts and sales terms."
              },
              {
                "value": "LISTING_PRODUCT_ONLY",
                "description": "Request schema containing product facts only."
              },
              {
                "value": "LISTING_OFFER_ONLY",
                "description": "Request schema containing sales terms only."
              }
            ],
            "x-example": "LISTING"
          },
          {
            "name": "requirementsEnforced",
            "in": "query",
            "description": "Identifies if the required attributes for a requirements set are enforced by the product type definition schema. Non-enforced requirements enable structural validation of individual attributes without all the required attributes being present (such as for partial updates).",
            "required": false,
            "type": "string",
            "default": "ENFORCED",
            "enum": [
              "ENFORCED",
              "NOT_ENFORCED"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ENFORCED",
                "description": "Request schema with required and conditionally required attributes enforced (used for full payload validation)."
              },
              {
                "value": "NOT_ENFORCED",
                "description": "Request schema with required and conditionally required attributes not enforced (used for partial payload validation, such as for single attributes)."
              }
            ],
            "x-example": "ENFORCED"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale for retrieving display labels and other presentation details. Defaults to the default language of the first marketplace in the request.",
            "required": false,
            "type": "string",
            "default": "DEFAULT",
            "enum": [
              "DEFAULT",
              "ar",
              "ar_AE",
              "de",
              "de_DE",
              "en",
              "en_AE",
              "en_AU",
              "en_CA",
              "en_GB",
              "en_IN",
              "en_SG",
              "en_US",
              "es",
              "es_ES",
              "es_MX",
              "es_US",
              "fr",
              "fr_CA",
              "fr_FR",
              "it",
              "it_IT",
              "ja",
              "ja_JP",
              "nl",
              "nl_NL",
              "pl",
              "pl_PL",
              "pt",
              "pt_BR",
              "pt_PT",
              "sv",
              "sv_SE",
              "tr",
              "tr_TR",
              "zh",
              "zh_CN",
              "zh_TW"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "DEFAULT",
                "description": "Default locale of the requested Amazon marketplace."
              },
              {
                "value": "ar",
                "description": "Arabic"
              },
              {
                "value": "ar_AE",
                "description": "Arabic (U.A.E.)"
              },
              {
                "value": "de",
                "description": "German"
              },
              {
                "value": "de_DE",
                "description": "German (Germany)"
              },
              {
                "value": "en",
                "description": "English"
              },
              {
                "value": "en_AE",
                "description": "English (U.A.E.)"
              },
              {
                "value": "en_AU",
                "description": "English (Australia)"
              },
              {
                "value": "en_CA",
                "description": "English (Canada)"
              },
              {
                "value": "en_GB",
                "description": "English (United Kingdom)"
              },
              {
                "value": "en_IN",
                "description": "English (India)"
              },
              {
                "value": "en_SG",
                "description": "English (Singapore)"
              },
              {
                "value": "en_US",
                "description": "English (United States)"
              },
              {
                "value": "es",
                "description": "Spanish"
              },
              {
                "value": "es_ES",
                "description": "Spanish (Spain)"
              },
              {
                "value": "es_MX",
                "description": "Spanish (Mexico)"
              },
              {
                "value": "es_US",
                "description": "Spanish (United States)"
              },
              {
                "value": "fr",
                "description": "French"
              },
              {
                "value": "fr_CA",
                "description": "French (Canada)"
              },
              {
                "value": "fr_FR",
                "description": "French (France)"
              },
              {
                "value": "it",
                "description": "Italian"
              },
              {
                "value": "it_IT",
                "description": "Italian (Italy)"
              },
              {
                "value": "ja",
                "description": "Japanese"
              },
              {
                "value": "ja_JP",
                "description": "Japanese (Japan)"
              },
              {
                "value": "nl",
                "description": "Dutch"
              },
              {
                "value": "nl_NL",
                "description": "Dutch (Netherlands)"
              },
              {
                "value": "pl",
                "description": "Polish"
              },
              {
                "value": "pl_PL",
                "description": "Polish (Poland)"
              },
              {
                "value": "pt",
                "description": "Portuguese"
              },
              {
                "value": "pt_BR",
                "description": "Portuguese (Brazil)"
              },
              {
                "value": "pt_PT",
                "description": "Portuguese (Portugal)"
              },
              {
                "value": "sv",
                "description": "Swedish"
              },
              {
                "value": "sv_SE",
                "description": "Swedish (Sweden)"
              },
              {
                "value": "tr",
                "description": "Turkish"
              },
              {
                "value": "tr_TR",
                "description": "Turkish (Turkey)"
              },
              {
                "value": "zh",
                "description": "Chinese"
              },
              {
                "value": "zh_CN",
                "description": "Chinese (Simplified)"
              },
              {
                "value": "zh_TW",
                "description": "Chinese (Traditional)"
              }
            ],
            "x-example": "DEFAULT"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved an Amazon product type definition.",
            "schema": {
              "$ref": "#/definitions/ProductTypeDefinition"
            },
            "examples": {
              "application/json": {
                "metaSchema": {
                  "link": {
                    "resource": "https://meta-schema-url",
                    "verb": "GET"
                  },
                  "checksum": "c7af9479ca7261645cea9db56c5f720d"
                },
                "schema": {
                  "link": {
                    "resource": "https://schema-url",
                    "verb": "GET"
                  },
                  "checksum": "c7af9479ca7261645cea9db56c5f720d"
                },
                "requirements": "LISTING",
                "requirementsEnforced": "ENFORCED",
                "propertyGroups": {
                  "product_identity": {
                    "title": "Product Identity",
                    "description": "Information to uniquely identify your product (e.g., UPC, EAN, GTIN, Product Type, Brand)",
                    "propertyNames": [
                      "item_name",
                      "brand",
                      "external_product_id",
                      "gtin_exemption_reason",
                      "merchant_suggested_asin",
                      "product_type",
                      "product_category",
                      "product_subcategory",
                      "item_type_keyword"
                    ]
                  }
                },
                "locale": "en_US",
                "marketplaceIds": [
                  "ATVPDKIKX0DER"
                ],
                "productType": "LUGGAGE",
                "displayName": "Luggage",
                "productTypeVersion": {
                  "version": "UHqSqmb4FNUk=",
                  "latest": true,
                  "releaseCandidate": false
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "metaSchema": {
                      "link": {
                        "resource": "https://meta-schema-url",
                        "verb": "GET"
                      },
                      "checksum": "c7af9479ca7261645cea9db56c5f720d"
                    },
                    "schema": {
                      "link": {
                        "resource": "https://schema-url",
                        "verb": "GET"
                      },
                      "checksum": "c7af9479ca7261645cea9db56c5f720d"
                    },
                    "requirements": "LISTING",
                    "requirementsEnforced": "ENFORCED",
                    "propertyGroups": {
                      "product_identity": {
                        "title": "Product Identity",
                        "description": "Information to uniquely identify your product (e.g., UPC, EAN, GTIN, Product Type, Brand)",
                        "propertyNames": [
                          "item_name",
                          "brand",
                          "external_product_id",
                          "gtin_exemption_reason",
                          "merchant_suggested_asin",
                          "product_type",
                          "product_category",
                          "product_subcategory",
                          "item_type_keyword"
                        ]
                      }
                    },
                    "locale": "en_US",
                    "marketplaceIds": [
                      "ATVPDKIKX0DER"
                    ],
                    "productType": "LUGGAGE",
                    "displayName": "Luggage",
                    "productTypeVersion": {
                      "version": "UHqSqmb4FNUk=",
                      "latest": true,
                      "releaseCandidate": false
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "productType": {
                        "value": "INVALID"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "BAD_REQUEST",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/replenishment/2022-11-07/sellingPartners/metrics/search": {
      "post": {
        "tags": [
          "sellingpartners"
        ],
        "description": "Returns aggregated replenishment program metrics for a selling partner. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getSellingPartnerMetrics",
        "parameters": [
          {
            "name": "body",
            "description": "The request body for the `getSellingPartnerMetrics` operation.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetSellingPartnerMetricsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetSellingPartnerMetricsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "examples": {
              "application/json": {
                "metrics": [
                  {
                    "subscriberAverageRevenue": 125.93,
                    "nonSubscriberAverageRevenue": 73.62,
                    "shippedSubscriptionUnits": 5290,
                    "notDeliveredDueToOOS": 5.54,
                    "totalSubscriptionsRevenue": 131340.24,
                    "activeSubscriptions": 0,
                    "lostRevenueDueToOOS": 38493.29,
                    "subscriberAverageReorders": 3.25,
                    "nonSubscriberAverageReorders": 1.11,
                    "couponsRevenuePenetration": 0,
                    "currencyCode": "USD",
                    "timeInterval": {
                      "endDate": "2023-05-09T22:36:56Z",
                      "startDate": "2022-05-09T22:36:56Z"
                    }
                  }
                ]
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "aggregationFrequency": "YEAR",
                          "timeInterval": {
                            "startDate": "2022-01-01T00:00:00Z",
                            "endDate": "2022-12-31T00:00:00Z"
                          },
                          "metrics": [
                            "TOTAL_SUBSCRIPTIONS_REVENUE"
                          ],
                          "timePeriodType": "PERFORMANCE",
                          "marketplaceId": "ATVPDKIKX0DER",
                          "programTypes": [
                            "SUBSCRIBE_AND_SAVE"
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "metrics": [
                      {
                        "subscriberAverageRevenue": 125.93,
                        "nonSubscriberAverageRevenue": 73.62,
                        "shippedSubscriptionUnits": 5290,
                        "notDeliveredDueToOOS": 5.54,
                        "totalSubscriptionsRevenue": 131340.24,
                        "activeSubscriptions": 0,
                        "lostRevenueDueToOOS": 38493.29,
                        "subscriberAverageReorders": 3.25,
                        "nonSubscriberAverageReorders": 1.11,
                        "couponsRevenuePenetration": 0,
                        "currencyCode": "USD",
                        "timeInterval": {
                          "endDate": "2023-05-09T22:36:56Z",
                          "startDate": "2022-05-09T22:36:56Z"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "aggregationFrequency": "DAY",
                          "timeInterval": {
                            "startDate": "2022-01-01T00:00:00Z",
                            "endDate": "2023-01-01T00:00:00Z"
                          },
                          "metrics": [
                            "SHIPPED_SUBSCRIPTION_UNITS",
                            "TOTAL_SUBSCRIPTIONS_REVENUE",
                            "NOT_DELIVERED_DUE_TO_OOS",
                            "ACTIVE_SUBSCRIPTIONS",
                            "SUBSCRIBER_NON_SUBSCRIBER_AVERAGE_REVENUE",
                            "LOST_REVENUE_DUE_TO_OOS",
                            "SUBSCRIBER_NON_SUBSCRIBER_AVERAGE_REORDERS",
                            "COUPONS_REVENUE_PENETRATION"
                          ],
                          "timePeriodType": "PERFORMANCE",
                          "marketplaceId": "ATVPDKIKX0DER",
                          "programTypes": [
                            "SUBSCRIBE_AND_SAVE"
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Unsupported aggregationFrequency is provided. Only WEEK, MONTH, QUARTER and YEAR are supported"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/replenishment/2022-11-07/offers/metrics/search": {
      "post": {
        "tags": [
          "offers"
        ],
        "description": "Returns aggregated replenishment program metrics for a selling partner's offers.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listOfferMetrics",
        "parameters": [
          {
            "name": "body",
            "description": "The request body for the `listOfferMetrics` operation.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ListOfferMetricsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ListOfferMetricsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "examples": {
              "application/json": {
                "offers": [
                  {
                    "notDeliveredDueToOOS": 30.78,
                    "shippedSubscriptionUnits": 20,
                    "totalSubscriptionsRevenue": 12.89,
                    "asin": "B000TMUDOW",
                    "revenuePenetration": 10.34,
                    "lostRevenueDueToOOS": 12.32,
                    "couponsRevenuePenetration": 10,
                    "timeInterval": {
                      "endDate": "2023-03-11T00:00:00Z",
                      "startDate": "2023-03-05T00:00:00Z"
                    },
                    "currencyCode": "USD"
                  },
                  {
                    "notDeliveredDueToOOS": 40.78,
                    "shippedSubscriptionUnits": 40,
                    "totalSubscriptionsRevenue": 34.03,
                    "asin": "B004CLH5CY",
                    "revenuePenetration": 9.87,
                    "lostRevenueDueToOOS": 17.82,
                    "couponsRevenuePenetration": 17,
                    "timeInterval": {
                      "endDate": "2023-03-11T00:00:00Z",
                      "startDate": "2023-03-05T00:00:00Z"
                    },
                    "currencyCode": "USD"
                  }
                ],
                "pagination": {
                  "totalResults": 17
                }
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "filters": {
                            "aggregationFrequency": "YEAR",
                            "timeInterval": {
                              "startDate": "2022-01-01T00:00:00Z",
                              "endDate": "2022-12-31T00:00:00Z"
                            },
                            "marketplaceId": "ATVPDKIKX0DER",
                            "programTypes": [
                              "SUBSCRIBE_AND_SAVE"
                            ],
                            "timePeriodType": "PERFORMANCE",
                            "asins": [
                              "B07CYBR5GZ",
                              "B07CYJJW8H"
                            ]
                          },
                          "pagination": {
                            "limit": 2,
                            "offset": 0
                          },
                          "sort": {
                            "order": "ASC",
                            "key": "TOTAL_SUBSCRIPTIONS_REVENUE"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "offers": [
                      {
                        "asin": "B07CYBR5GZ",
                        "notDeliveredDueToOOS": 10.2,
                        "totalSubscriptionsRevenue": 100.45,
                        "revenuePenetration": 23.6,
                        "shippedSubscriptionUnits": 100,
                        "activeSubscriptions": 100,
                        "lostRevenueDueToOOS": 12.32,
                        "couponsRevenuePenetration": 10,
                        "timeInterval": {
                          "startDate": "2022-01-01T00:00:00Z",
                          "endDate": "2022-12-31T00:00:00Z"
                        },
                        "currencyCode": "USD"
                      },
                      {
                        "asin": "B07CYJJW8H",
                        "notDeliveredDueToOOS": 12.78,
                        "totalSubscriptionsRevenue": 80.11,
                        "revenuePenetration": 35.9,
                        "shippedSubscriptionUnits": 100,
                        "activeSubscriptions": 100,
                        "lostRevenueDueToOOS": 17.82,
                        "couponsRevenuePenetration": 17,
                        "timeInterval": {
                          "startDate": "2022-01-01T00:00:00Z",
                          "endDate": "2022-12-31T00:00:00Z"
                        },
                        "currencyCode": "USD"
                      }
                    ],
                    "pagination": {
                      "totalResults": 17
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "filters": {
                            "aggregationFrequency": "DAY",
                            "timeInterval": {
                              "startDate": "2022-01-01T00:00:00Z",
                              "endDate": "2022-12-31T00:00:00Z"
                            },
                            "marketplaceId": "ATVPDKIKX0DER",
                            "programTypes": [
                              "SUBSCRIBE_AND_SAVE"
                            ],
                            "timePeriodType": "PERFORMANCE",
                            "asins": [
                              "B07CYBR5GZ"
                            ]
                          },
                          "pagination": {
                            "limit": 1,
                            "offset": 0
                          },
                          "sort": {
                            "order": "ASC",
                            "key": "TOTAL_SUBSCRIPTIONS_REVENUE"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Unsupported aggregationFrequency is provided. Only WEEK, MONTH, QUARTER and YEAR are supported"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/replenishment/2022-11-07/offers/search": {
      "post": {
        "tags": [
          "offers"
        ],
        "description": "Returns the details of a selling partner's replenishment program offers.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "listOffers",
        "parameters": [
          {
            "name": "body",
            "description": "The request body for the `listOffers` operation.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ListOffersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ListOffersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "examples": {
              "application/json": {
                "offers": [
                  {
                    "marketplaceId": "ATVPDKIKX0DER",
                    "offerProgramConfiguration": {
                      "preferences": {
                        "autoEnrollment": "OPTED_IN"
                      },
                      "promotions": {
                        "sellingPartnerFundedBaseDiscount": {
                          "percentage": 5
                        },
                        "sellingPartnerFundedTieredDiscount": {
                          "percentage": 0
                        },
                        "amazonFundedBaseDiscount": {
                          "percentage": 5
                        },
                        "amazonFundedTieredDiscount": {
                          "percentage": 10
                        }
                      },
                      "enrollmentMethod": "AUTOMATIC"
                    },
                    "programType": "SUBSCRIBE_AND_SAVE",
                    "eligibility": "ELIGIBLE",
                    "asin": "B09KR5B7FH",
                    "sku": "SKU_OPTED_IN"
                  }
                ],
                "pagination": {
                  "totalResults": 1
                }
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "filters": {
                            "eligibilities": [
                              "ELIGIBLE"
                            ],
                            "marketplaceId": "ATVPDKIKX0DER",
                            "programTypes": [
                              "SUBSCRIBE_AND_SAVE"
                            ],
                            "preferences": {
                              "autoEnrollment": [
                                "OPTED_IN",
                                "OPTED_OUT"
                              ]
                            },
                            "promotions": {
                              "sellingPartnerFundedTieredDiscount": {
                                "percentage": [
                                  0,
                                  5,
                                  10
                                ]
                              }
                            }
                          },
                          "pagination": {
                            "limit": 25,
                            "offset": 0
                          },
                          "sort": {
                            "order": "ASC",
                            "key": "ASIN"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "offers": [
                      {
                        "asin": "B07CYBR5GZ",
                        "marketplaceId": "ATVPDKIKX0DER",
                        "sku": "TEST_SKU_A",
                        "eligibility": "ELIGIBLE",
                        "vendorCodes": [
                          "ABCDE",
                          "PQRST"
                        ],
                        "offerProgramConfiguration": {
                          "preferences": {
                            "autoEnrollment": "OPTED_IN"
                          },
                          "promotions": {
                            "sellingPartnerFundedBaseDiscount": {
                              "percentage": 0
                            },
                            "sellingPartnerFundedTieredDiscount": {
                              "percentage": 5
                            },
                            "amazonFundedBaseDiscount": {
                              "percentage": 10
                            },
                            "amazonFundedTieredDiscount": {
                              "percentage": 15
                            }
                          },
                          "enrollmentMethod": "AUTOMATIC"
                        },
                        "programType": "SUBSCRIBE_AND_SAVE"
                      },
                      {
                        "asin": "B07CYCR5GZ",
                        "marketplaceId": "ATVPDKIKX0DER",
                        "sku": "TEST_SKU_A",
                        "eligibility": "ELIGIBLE",
                        "vendorCodes": [
                          "ABCDE",
                          "PQRST"
                        ],
                        "offerProgramConfiguration": {
                          "preferences": {
                            "autoEnrollment": "OPTED_IN"
                          },
                          "promotions": {
                            "sellingPartnerFundedBaseDiscount": {
                              "percentage": 5
                            },
                            "sellingPartnerFundedTieredDiscount": {
                              "percentage": 0
                            },
                            "amazonFundedBaseDiscount": {
                              "percentage": 5
                            },
                            "amazonFundedTieredDiscount": {
                              "percentage": 10
                            }
                          },
                          "enrollmentMethod": "AUTOMATIC"
                        },
                        "programType": "SUBSCRIBE_AND_SAVE"
                      }
                    ],
                    "pagination": {
                      "totalResults": 2
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "filters": {
                            "eligibilities": [
                              "BAD_VALUE"
                            ],
                            "marketplaceId": "ATVPDKIKX0DER",
                            "programTypes": [
                              "SUBSCRIBE_AND_SAVE"
                            ]
                          },
                          "pagination": {
                            "limit": 25,
                            "offset": 0
                          },
                          "sort": {
                            "order": "ASC",
                            "key": "ASIN"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Unsupported eligibility is provided. Only ELIGIBLE, INELIGIBLE, SUSPENDED and REPLENISHMENT_ONLY_ORDERING are supported"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/2021-06-30/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getReports",
        "description": "Returns report details for the reports that match the filters that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0222 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "reportTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "description": "A list of report types used to filter reports. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information. When reportTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either reportTypes or nextToken is required.",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "processingStatuses",
            "in": "query",
            "description": "A list of processing statuses used to filter reports.",
            "required": false,
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "CANCELLED",
                "DONE",
                "FATAL",
                "IN_PROGRESS",
                "IN_QUEUE"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "CANCELLED",
                  "description": "The report was cancelled. There are two ways a report can be cancelled: an explicit cancellation request before the report starts processing, or an automatic cancellation if there is no data to return."
                },
                {
                  "value": "DONE",
                  "description": "The report has completed processing."
                },
                {
                  "value": "FATAL",
                  "description": "The report was aborted due to a fatal error."
                },
                {
                  "value": "IN_PROGRESS",
                  "description": "The report is being processed."
                },
                {
                  "value": "IN_QUEUE",
                  "description": "The report has not yet started processing. It may be waiting for another `IN_PROGRESS` report."
                }
              ]
            }
          },
          {
            "name": "marketplaceIds",
            "description": "A list of marketplace identifiers used to filter reports. The reports returned will match at least one of the marketplaces that you specify.",
            "in": "query",
            "required": false,
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of reports to return in a single call.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 10
          },
          {
            "name": "createdSince",
            "in": "query",
            "description": "The earliest report creation date and time for reports to include in the response, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format. The default is 90 days ago. Reports are retained for a maximum of 90 days.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdUntil",
            "in": "query",
            "description": "The latest report creation date and time for reports to include in the response, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format. The default is now.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "A string token returned in the response to your previous request. `nextToken` is returned when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the `getReports` operation and include this token as the only parameter. Specifying `nextToken` with any other parameters will cause the request to fail.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetReportsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportTypes": {
                        "value": [
                          "FEE_DISCOUNTS_REPORT",
                          "GET_AFN_INVENTORY_DATA"
                        ]
                      },
                      "processingStatuses": {
                        "value": [
                          "IN_QUEUE",
                          "IN_PROGRESS"
                        ]
                      }
                    }
                  },
                  "response": {
                    "nextToken": "VGhpcyB0b2tlbiBpcyBvcGFxdWUgYW5kIGludGVudGlvbmFsbHkgb2JmdXNjYXRlZA==",
                    "reports": [
                      {
                        "reportId": "ReportId1",
                        "reportType": "FEE_DISCOUNTS_REPORT",
                        "dataStartTime": "2024-03-11T13:47:20.677Z",
                        "dataEndTime": "2024-03-12T13:47:20.677Z",
                        "createdTime": "2024-03-10T13:47:20.677Z",
                        "processingStatus": "IN_PROGRESS",
                        "processingStartTime": "2024-03-10T13:47:20.677Z",
                        "processingEndTime": "2024-03-12T13:47:20.677Z"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportTypes": {
                        "value": [
                          "FEE_DISCOUNTS_REPORT",
                          "GET_AFN_INVENTORY_DATA"
                        ]
                      },
                      "processingStatuses": {
                        "value": [
                          "BAD_VALUE",
                          "IN_PROGRESS"
                        ]
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input in processing status"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getReports"
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "createReport",
        "description": "Creates a report.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0167 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReportSpecification"
            },
            "description": "Information required to create the report."
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateReportResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "reportType": "GET_MERCHANT_LISTINGS_ALL_DATA",
                          "dataStartTime": "2024-03-10T20:11:24.000Z",
                          "marketplaceIds": [
                            "A1PA6795UKMFR9",
                            "ATVPDKIKX0DER"
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "reportId": "ID323"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "reportType": "BAD_FEE_DISCOUNTS_REPORT",
                          "dataStartTime": "2024-03-10T20:11:24.000Z",
                          "marketplaceIds": [
                            "A1PA6795UKMFR9",
                            "ATVPDKIKX0DER"
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "createReport"
      },
      "parameters": []
    },
    "/reports/2021-06-30/reports/{reportId}": {
      "delete": {
        "tags": [
          "Reports"
        ],
        "operationId": "cancelReport",
        "description": "Cancels the report that you specify. Only reports with `processingStatus=IN_QUEUE` can be cancelled. Cancelled reports are returned in subsequent calls to the `getReport` and `getReports` operations.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0222 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The identifier for the report. This identifier is unique only in combination with a seller ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportId": {
                        "value": "ID"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "cancelReport"
      },
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getReport",
        "description": "Returns report details (including the `reportDocumentId`, if available) for the report that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 2 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "description": "The identifier for the report. This identifier is unique only in combination with a seller ID.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Report"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportId": {
                        "value": "ID323"
                      }
                    }
                  },
                  "response": {
                    "reportId": "ReportId1",
                    "reportType": "FEE_DISCOUNTS_REPORT",
                    "dataStartTime": "2024-03-11T13:47:20.677Z",
                    "dataEndTime": "2024-03-12T13:47:20.677Z",
                    "createdTime": "2024-03-10T13:47:20.677Z",
                    "processingStatus": "IN_PROGRESS",
                    "processingStartTime": "2024-03-10T13:47:20.677Z",
                    "processingEndTime": "2024-03-12T13:47:20.677Z"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportId": {
                        "value": "badReportId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getReport"
      },
      "parameters": []
    },
    "/reports/2021-06-30/schedules": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getReportSchedules",
        "description": "Returns report schedule details that match the filters that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0222 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "reportTypes",
            "in": "query",
            "required": true,
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "description": "A list of report types used to filter report schedules. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information.",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ReportScheduleList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportTypes": {
                        "value": [
                          "FEE_DISCOUNTS_REPORT",
                          "GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA"
                        ]
                      }
                    }
                  },
                  "response": {
                    "reportSchedules": [
                      {
                        "reportType": "FEE_DISCOUNTS_REPORT",
                        "marketplaceIds": [
                          "ATVPDKIKX0DER"
                        ],
                        "reportScheduleId": "ID1",
                        "period": "PT5M",
                        "nextReportCreationTime": "2024-03-11T15:03:44.973Z"
                      },
                      {
                        "reportType": "GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA",
                        "reportScheduleId": "ID2",
                        "period": "PT5M",
                        "nextReportCreationTime": "2024-03-11T15:03:44.973Z"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportTypes": {
                        "value": [
                          "BAD_FEE_DISCOUNTS_REPORT",
                          "BAD_GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA"
                        ]
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getReportSchedules"
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "createReportSchedule",
        "description": "Creates a report schedule. If a report schedule with the same report type and marketplace IDs already exists, it will be cancelled and replaced with this one.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0222 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReportScheduleSpecification"
            },
            "description": "Information required to create the report schedule."
          }
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateReportScheduleResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "reportType": "FEE_DISCOUNTS_REPORT",
                          "period": "PT5M",
                          "nextReportCreationTime": "2024-03-10T20:11:24.000Z",
                          "marketplaceIds": [
                            "A1PA6795UKMFR9",
                            "ATVPDKIKX0DER"
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "reportScheduleId": "ID323"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "reportType": "BAD_FEE_DISCOUNTS_REPORT",
                          "period": "PT5M",
                          "nextReportCreationTime": "2024-03-10T20:11:24.000Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "createReportSchedule"
      },
      "parameters": []
    },
    "/reports/2021-06-30/schedules/{reportScheduleId}": {
      "delete": {
        "tags": [
          "Reports"
        ],
        "operationId": "cancelReportSchedule",
        "description": "Cancels the report schedule that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0222 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "reportScheduleId",
            "in": "path",
            "description": "The identifier for the report schedule. This identifier is unique only in combination with a seller ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportScheduleId": {
                        "value": "ID"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "cancelReportSchedule"
      },
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getReportSchedule",
        "description": "Returns report schedule details for the report schedule that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0222 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "name": "reportScheduleId",
            "in": "path",
            "required": true,
            "description": "The identifier for the report schedule. This identifier is unique only in combination with a seller ID.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ReportSchedule"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportScheduleId": {
                        "value": "ID323"
                      }
                    }
                  },
                  "response": {
                    "reportScheduleId": "ReportScheduleId1",
                    "reportType": "FEE_DISCOUNTS_REPORT",
                    "period": "PT5M",
                    "nextReportCreationTime": "2024-03-12T13:47:20.677Z"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportScheduleId": {
                        "value": "badReportId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getReportSchedule"
      },
      "parameters": []
    },
    "/reports/2021-06-30/documents/{reportDocumentId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "Returns the information required for retrieving a report document's contents.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.0167 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getReportDocument",
        "parameters": [
          {
            "name": "reportDocumentId",
            "in": "path",
            "description": "The identifier for the report document.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ReportDocument"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportDocumentId": {
                        "value": "0356cf79-b8b0-4226-b4b9-0ee058ea5760"
                      }
                    }
                  },
                  "response": {
                    "reportDocumentId": "0356cf79-b8b0-4226-b4b9-0ee058ea5760",
                    "url": "https://d34o8swod1owfl.cloudfront.net/Report_47700__GET_MERCHANT_LISTINGS_ALL_DATA_.txt"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reportDocumentId": {
                        "value": "badDocumentId1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Invalid input",
                        "details": "Invalid input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "getReportDocument"
      }
    },
    "/sales/v1/orderMetrics": {
      "get": {
        "tags": [
          "sales"
        ],
        "description": "Returns aggregated order metrics for given interval, broken down by granularity, for given buyer type.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| .5 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getOrderMetrics",
        "parameters": [
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.\n\nFor example, ATVPDKIKX0DER indicates the US marketplace.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "A time interval used for selecting order metrics. This takes the form of two dates separated by two hyphens (first date is inclusive; second date is exclusive). Dates are in ISO8601 format and must represent absolute time (either Z notation or offset notation). Example: 2018-09-01T00:00:00-07:00--2018-09-04T00:00:00-07:00 requests order metrics for Sept 1st, 2nd and 3rd in the -07:00 zone.",
            "required": true,
            "type": "string"
          },
          {
            "name": "granularityTimeZone",
            "in": "query",
            "description": "An IANA-compatible time zone for determining the day boundary. Required when specifying a granularity value greater than Hour. The granularityTimeZone value must align with the offset of the specified interval value. For example, if the interval value uses Z notation, then granularityTimeZone must be UTC. If the interval value uses an offset, then granularityTimeZone must be an IANA-compatible time zone that matches the offset. Example: US/Pacific to compute day boundaries, accounting for daylight time savings, for US/Pacific zone.",
            "required": false,
            "type": "string"
          },
          {
            "name": "granularity",
            "in": "query",
            "description": "The granularity of the grouping of order metrics, based on a unit of time. Specifying granularity=Hour results in a successful request only if the interval specified is less than or equal to 30 days from now. For all other granularities, the interval specified must be less or equal to 2 years from now. Specifying granularity=Total results in order metrics that are aggregated over the entire interval that you specify. If the interval start and end date don’t align with the specified granularity, the head and tail end of the response interval will contain partial data. Example: Day to get a daily breakdown of the request interval, where the day boundary is defined by the granularityTimeZone.",
            "required": true,
            "type": "string",
            "enum": [
              "Hour",
              "Day",
              "Week",
              "Month",
              "Year",
              "Total"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "Hour",
                "description": "Hour"
              },
              {
                "value": "Day",
                "description": "Day"
              },
              {
                "value": "Week",
                "description": "Week"
              },
              {
                "value": "Month",
                "description": "Month"
              },
              {
                "value": "Year",
                "description": "Year"
              },
              {
                "value": "Total",
                "description": "Total"
              }
            ]
          },
          {
            "name": "buyerType",
            "in": "query",
            "description": "Filters the results by the buyer type that you specify, B2B (business to business) or B2C (business to customer). Example: B2B, if you want the response to include order metrics for only B2B buyers.",
            "required": false,
            "type": "string",
            "default": "All",
            "enum": [
              "B2B",
              "B2C",
              "All"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "B2B",
                "description": "Business to business."
              },
              {
                "value": "B2C",
                "description": "Business to customer."
              },
              {
                "value": "All",
                "description": "Business to business and business to customer."
              }
            ]
          },
          {
            "name": "fulfillmentNetwork",
            "in": "query",
            "description": "Filters the results by the fulfillment network that you specify, MFN (merchant fulfillment network) or AFN (Amazon fulfillment network). Do not include this filter if you want the response to include order metrics for all fulfillment networks. Example: AFN, if you want the response to include order metrics for only Amazon fulfillment network.",
            "required": false,
            "type": "string"
          },
          {
            "name": "firstDayOfWeek",
            "in": "query",
            "description": "Specifies the day that the week starts on when granularity=Week, either Monday or Sunday. Default: Monday. Example: Sunday, if you want the week to start on a Sunday.",
            "required": false,
            "type": "string",
            "default": "Monday",
            "enum": [
              "Monday",
              "Sunday"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "Monday",
                "description": "Monday"
              },
              {
                "value": "Sunday",
                "description": "Sunday"
              }
            ]
          },
          {
            "name": "asin",
            "in": "query",
            "description": "Filters the results by the ASIN that you specify. Specifying both ASIN and SKU returns an error. Do not include this filter if you want the response to include order metrics for all ASINs. Example: B0792R1RSN, if you want the response to include order metrics for only ASIN B0792R1RSN.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "query",
            "description": "Filters the results by the SKU that you specify. Specifying both ASIN and SKU returns an error. Do not include this filter if you want the response to include order metrics for all SKUs. Example: TestSKU, if you want the response to include order metrics for only SKU TestSKU.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OrderMetric action taken on the resource OrderMetrics.",
            "schema": {
              "$ref": "#/definitions/GetOrderMetricsResponse"
            },
            "examples": {
              "payload": {
                "dayGranularity": {
                  "metrics": [
                    {
                      "interval": "2018-05-01T00:00-07:00--2018-05-02T00:00-07:00",
                      "unitCount": 1,
                      "orderItemCount": 1,
                      "orderCount": 1,
                      "averageUnitPrice": {
                        "amount": "22.95",
                        "currencyCode": "USD"
                      },
                      "totalSales": {
                        "amount": "22.95",
                        "currencyCode": "USD"
                      }
                    },
                    {
                      "interval": "2018-05-02T00:00-07:00--2018-05-03T00:00-07:00",
                      "unitCount": 1,
                      "orderItemCount": 1,
                      "orderCount": 1,
                      "averageUnitPrice": {
                        "amount": "2.05",
                        "currencyCode": "USD"
                      },
                      "totalSales": {
                        "amount": "2.05",
                        "currencyCode": "USD"
                      }
                    }
                  ]
                },
                "totalGranularity": {
                  "metrics": [
                    {
                      "interval": "2018-05-01T00:00-07:00--2018-05-03T00:00-07:00",
                      "unitCount": 2,
                      "orderItemCount": 2,
                      "orderCount": 2,
                      "averageUnitPrice": {
                        "amount": "12.5",
                        "currencyCode": "USD"
                      },
                      "totalSales": {
                        "amount": "25",
                        "currencyCode": "USD"
                      }
                    }
                  ]
                },
                "asinFilter": {
                  "metrics": [
                    {
                      "interval": "2018-05-01T00:00-07:00--2018-05-02T00:00-07:00",
                      "unitCount": 1,
                      "orderItemCount": 1,
                      "orderCount": 1,
                      "averageUnitPrice": {
                        "amount": "22.95",
                        "currencyCode": "USD"
                      },
                      "totalSales": {
                        "amount": "22.95",
                        "currencyCode": "USD"
                      }
                    },
                    {
                      "interval": "2018-05-02T00:00-07:00--2018-05-03T00:00-07:00",
                      "unitCount": 0,
                      "orderItemCount": 0,
                      "orderCount": 0,
                      "averageUnitPrice": {
                        "amount": "0",
                        "currencyCode": "USD"
                      },
                      "totalSales": {
                        "amount": "0",
                        "currencyCode": "USD"
                      }
                    }
                  ]
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "unique request reference id."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "granularity": {
                        "value": "Total"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "interval": "2019-08-01T00:00-07:00--2018-08-03T00:00-07:00",
                        "unitCount": 2,
                        "orderItemCount": 2,
                        "orderCount": 2,
                        "averageUnitPrice": {
                          "amount": "12.5",
                          "currencyCode": "USD"
                        },
                        "totalSales": {
                          "amount": "25",
                          "currencyCode": "USD"
                        }
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "granularity": {
                        "value": "Day"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "interval": "2019-08-01T00:00-07:00--2018-08-02T00:00-07:00",
                        "unitCount": 1,
                        "orderItemCount": 1,
                        "orderCount": 1,
                        "averageUnitPrice": {
                          "amount": "22.95",
                          "currencyCode": "USD"
                        },
                        "totalSales": {
                          "amount": "22.95",
                          "currencyCode": "USD"
                        }
                      },
                      {
                        "interval": "2019-08-02T00:00-07:00--2018-08-03T00:00-07:00",
                        "unitCount": 1,
                        "orderItemCount": 1,
                        "orderCount": 1,
                        "averageUnitPrice": {
                          "amount": "2.05",
                          "currencyCode": "USD"
                        },
                        "totalSales": {
                          "amount": "2.05",
                          "currencyCode": "USD"
                        }
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "granularity": {
                        "value": "Total"
                      },
                      "asin": {
                        "value": "B008OLKVEW"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "interval": "2018-05-01T00:00-07:00--2018-05-03T00:00-07:00",
                        "unitCount": 1,
                        "orderItemCount": 1,
                        "orderCount": 1,
                        "averageUnitPrice": {
                          "amount": "22.95",
                          "currencyCode": "USD"
                        },
                        "totalSales": {
                          "amount": "22.95",
                          "currencyCode": "USD"
                        }
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "granularity": {
                        "value": "Day"
                      },
                      "asin": {
                        "value": "B008OLKVEW"
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "interval": "2018-05-01T00:00-07:00--2018-05-02T00:00-07:00",
                        "unitCount": 1,
                        "orderItemCount": 1,
                        "orderCount": 1,
                        "averageUnitPrice": {
                          "amount": "22.95",
                          "currencyCode": "USD"
                        },
                        "totalSales": {
                          "amount": "22.95",
                          "currencyCode": "USD"
                        }
                      },
                      {
                        "interval": "2018-05-02T00:00-07:00--2018-05-03T00:00-07:00",
                        "unitCount": 0,
                        "orderItemCount": 0,
                        "orderCount": 0,
                        "averageUnitPrice": {
                          "amount": "0",
                          "currencyCode": "USD"
                        },
                        "totalSales": {
                          "amount": "0",
                          "currencyCode": "USD"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetOrderMetricsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "403": {
            "description": "403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found.",
            "schema": {
              "$ref": "#/definitions/GetOrderMetricsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetOrderMetricsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetOrderMetricsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "415": {
            "description": "The entity of the request is in a format not supported by the requested resource.",
            "schema": {
              "$ref": "#/definitions/GetOrderMetricsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetOrderMetricsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetOrderMetricsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetOrderMetricsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          }
        }
      }
    },
    "/sellers/v1/marketplaceParticipations": {
      "get": {
        "tags": [
          "sellers"
        ],
        "description": "Returns a list of marketplaces where the seller can list items and information about the seller's participation in those marketplaces.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.016 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getMarketplaceParticipations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Marketplace participations successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/GetMarketplaceParticipationsResponse"
            },
            "examples": {
              "payload": [
                {
                  "marketplace": {
                    "id": "ATVPDKIKX0DER",
                    "name": "Amazon.com",
                    "countryCode": "US",
                    "defaultCurrencyCode": "USD",
                    "defaultLanguageCode": "en_US",
                    "domainName": "www.amazon.com"
                  },
                  "participation": {
                    "isParticipating": true,
                    "hasSuspendedListings": false
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": [
                      {
                        "marketplace": {
                          "id": "ATVPDKIKX0DER",
                          "countryCode": "US",
                          "name": "Amazon.com",
                          "defaultCurrencyCode": "USD",
                          "defaultLanguageCode": "en_US",
                          "domainName": "www.amazon.com"
                        },
                        "participation": {
                          "isParticipating": true,
                          "hasSuspendedListings": false
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetMarketplaceParticipationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found.",
            "schema": {
              "$ref": "#/definitions/GetMarketplaceParticipationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetMarketplaceParticipationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetMarketplaceParticipationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The entity of the request is in a format not supported by the requested resource.",
            "schema": {
              "$ref": "#/definitions/GetMarketplaceParticipationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetMarketplaceParticipationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetMarketplaceParticipationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetMarketplaceParticipationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/sellers/v1/account": {
      "get": {
        "tags": [
          "sellers"
        ],
        "description": "Returns information about a seller account and its marketplaces.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 0.016 | 15 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "businessType": "PRIVATE_LIMITED",
                  "marketplaceLevelAttributes": [
                    {
                      "marketplace": {
                        "id": "ATVPDKIKX0DER",
                        "name": "United States",
                        "countryCode": "US",
                        "domainName": "www.amazon.com"
                      },
                      "storeName": "BestSellerStore",
                      "listingStatus": "ACTIVE",
                      "sellingPlan": "PROFESSIONAL"
                    }
                  ],
                  "business": {
                    "name": "BestSeller Inc.",
                    "nonLatinName": "ベストセラー株式会社",
                    "registeredBusinessAddress": {
                      "addressLine1": "123 Main St",
                      "addressLine2": "Suite 500",
                      "city": "Seattle",
                      "stateOrProvinceCode": "WA",
                      "postalCode": "98101",
                      "countryCode": "US"
                    },
                    "companyRegistrationNumber": "123456789"
                  },
                  "primaryContact": {
                    "name": "John Doe",
                    "nonLatinName": "ジョン・ドゥ",
                    "address": {
                      "addressLine1": "456 Oak St",
                      "addressLine2": "Apt 12",
                      "city": "Seattle",
                      "stateOrProvinceCode": "WA",
                      "postalCode": "98102",
                      "countryCode": "US"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "response": {
                    "payload": {
                      "marketplaceLevelAttributes": [
                        {
                          "marketplace": {
                            "id": "ATVPDKIKX0DER",
                            "name": "United States",
                            "countryCode": "US",
                            "domainName": "www.amazon.com"
                          },
                          "storeName": "BestSellerStore",
                          "listingStatus": "ACTIVE",
                          "sellingPlan": "PROFESSIONAL"
                        }
                      ],
                      "businessType": "SOLE_PROPRIETORSHIP",
                      "business": {
                        "name": "BestSeller Inc.",
                        "registeredBusinessAddress": {
                          "addressLine1": "123 Main St",
                          "addressLine2": "Suite 500",
                          "city": "Seattle",
                          "stateOrProvinceCode": "WA",
                          "postalCode": "98101",
                          "countryCode": "US"
                        },
                        "companyTaxIdentificationNumber": "TAX123456"
                      },
                      "primaryContact": {
                        "name": "John Doe",
                        "nonLatinName": "ジョン・ドゥ",
                        "address": {
                          "addressLine1": "456 Oak St",
                          "addressLine2": "Apt 12",
                          "city": "Seattle",
                          "stateOrProvinceCode": "WA",
                          "postalCode": "98102",
                          "countryCode": "US"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "400",
                    "message": "Validation failed for obfuscatedId:ACUULBDVZHYZ1"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "response": {
                    "errors": [
                      {
                        "code": "400",
                        "message": "Validation failed for obfuscatedId:ACUULBDVZHYZ1"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/service/v1/serviceJobs/{serviceJobId}": {
      "get": {
        "tags": [
          "service"
        ],
        "description": "Gets details of service job indicated by the provided `serviceJobID`.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 20 | 40 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getServiceJobByServiceJobId",
        "parameters": [
          {
            "name": "serviceJobId",
            "in": "path",
            "description": "A service job identifier.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": {}
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      }
                    }
                  },
                  "response": {
                    "payload": {}
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceJobs/{serviceJobId}/cancellations": {
      "put": {
        "tags": [
          "service"
        ],
        "description": "Cancels the service job indicated by the service job identifier specified.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "cancelServiceJobByServiceJobId",
        "parameters": [
          {
            "name": "serviceJobId",
            "in": "path",
            "description": "An Amazon defined service job identifier.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "name": "cancellationReasonCode",
            "in": "query",
            "description": "A cancel reason code that specifies the reason for cancelling a service job.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[A-Z0-9_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/CancelServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      },
                      "cancellationReasonCode": {
                        "value": "V1"
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CancelServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "nullJobId"
                      },
                      "cancellationReasonCode": {
                        "value": "V1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [serviceJobId]",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      },
                      "cancellationReasonCode": {
                        "value": "NULL"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [cancellationReasonCode]",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "nullJobId"
                      },
                      "cancellationReasonCode": {
                        "value": "NULL"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [serviceJobId, cancellationReasonCode]",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CancelServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "unauthorizedJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      },
                      "cancellationReasonCode": {
                        "value": "V1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedAction",
                        "message": "Not authorized to access this resource.Please check your input again",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {}
                }
              ]
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CancelServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CancelServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CancelServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/CancelServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "completedJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      },
                      "cancellationReasonCode": {
                        "value": "V1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Job with jobId completedJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut and jobStatus COMPLETED cannot be cancelled",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      },
                      "cancellationReasonCode": {
                        "value": "INV1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Received invalid input reason code IV1 for jobId validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "invalidJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      },
                      "cancellationReasonCode": {
                        "value": "V1"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Job not found for jobId invalidJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CancelServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CancelServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CancelServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceJobs/{serviceJobId}/completions": {
      "put": {
        "tags": [
          "service"
        ],
        "description": "Completes the service job indicated by the service job identifier specified.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "completeServiceJobByServiceJobId",
        "parameters": [
          {
            "name": "serviceJobId",
            "in": "path",
            "description": "An Amazon defined service job identifier.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/CompleteServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CompleteServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "nullJobId"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [serviceJobId]",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CompleteServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "unauthorizedJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedAction",
                        "message": "Not authorized to access this resource.Please check your input again",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CompleteServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CompleteServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CompleteServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/CompleteServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "cancelledJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Operation not allowed on job with jobId : cancelledJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut and jobState : CANCELLED",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "invalidJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Job not found for jobId invalidJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CompleteServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CompleteServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CompleteServiceJobByServiceJobIdResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceJobs": {
      "get": {
        "tags": [
          "service"
        ],
        "description": "Gets service job details for the specified filter query.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 40 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getServiceJobs",
        "parameters": [
          {
            "name": "serviceOrderIds",
            "in": "query",
            "description": "List of service order ids for the query you want to perform.Max values supported 20.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 20,
            "minItems": 1
          },
          {
            "name": "serviceJobStatus",
            "in": "query",
            "description": "A list of one or more job status by which to filter the list of jobs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NOT_SERVICED",
                "CANCELLED",
                "COMPLETED",
                "PENDING_SCHEDULE",
                "NOT_FULFILLABLE",
                "HOLD",
                "PAYMENT_DECLINED"
              ],
              "x-docgen-enum-table-extension": [
                {
                  "value": "NOT_SERVICED",
                  "description": "Jobs which are not serviced."
                },
                {
                  "value": "CANCELLED",
                  "description": "Jobs which are cancelled."
                },
                {
                  "value": "COMPLETED",
                  "description": "Jobs successfully completed."
                },
                {
                  "value": "PENDING_SCHEDULE",
                  "description": "Jobs which are pending schedule."
                },
                {
                  "value": "NOT_FULFILLABLE",
                  "description": "Jobs which are not fulfillable."
                },
                {
                  "value": "HOLD",
                  "description": "Jobs which are on hold."
                },
                {
                  "value": "PAYMENT_DECLINED",
                  "description": "Jobs for which payment was declined."
                }
              ]
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "String returned in the response of your previous request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "A non-negative integer that indicates the maximum number of jobs to return in the list, Value must be 1 - 20. Default 20.",
            "required": false,
            "type": "integer",
            "default": 20,
            "maximum": 20,
            "minimum": 1
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort fields on which you want to sort the output.",
            "required": false,
            "type": "string",
            "enum": [
              "JOB_DATE",
              "JOB_STATUS"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "JOB_DATE",
                "description": "Sort on job date."
              },
              {
                "value": "JOB_STATUS",
                "description": "Sort on job status."
              }
            ]
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order for the query you want to perform.",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Sort in ascending order."
              },
              {
                "value": "DESC",
                "description": "Sort in descending order."
              }
            ]
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "A date used for selecting jobs created at or after a specified time. Must be in ISO 8601 format. Required if `LastUpdatedAfter` is not specified. Specifying both `CreatedAfter` and `LastUpdatedAfter` returns an error.",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "A date used for selecting jobs created at or before a specified time. Must be in ISO 8601 format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastUpdatedAfter",
            "in": "query",
            "description": "A date used for selecting jobs updated at or after a specified time. Must be in ISO 8601 format. Required if `createdAfter` is not specified. Specifying both `CreatedAfter` and `LastUpdatedAfter` returns an error.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastUpdatedBefore",
            "in": "query",
            "description": "A date used for selecting jobs updated at or before a specified time. Must be in ISO 8601 format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "scheduleStartDate",
            "in": "query",
            "description": "A date used for filtering jobs schedules at or after a specified time. Must be in ISO 8601 format. Schedule end date should not be earlier than schedule start date.",
            "required": false,
            "type": "string"
          },
          {
            "name": "scheduleEndDate",
            "in": "query",
            "description": "A date used for filtering jobs schedules at or before a specified time. Must be in ISO 8601 format. Schedule end date should not be earlier than schedule start date.",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "Used to select jobs that were placed in the specified marketplaces.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "name": "asins",
            "in": "query",
            "description": "List of Amazon Standard Identification Numbers (ASIN) of the items. Max values supported is 20.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 10,
              "maxLength": 10
            },
            "maxItems": 20,
            "minItems": 1
          },
          {
            "name": "requiredSkills",
            "in": "query",
            "description": "A defined set of related knowledge, skills, experience, tools, materials, and work processes common to service delivery for a set of products and/or service scenarios. Max values supported is 20.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            },
            "maxItems": 20,
            "minItems": 1
          },
          {
            "name": "storeIds",
            "in": "query",
            "description": "List of Amazon-defined identifiers for the region scope. Max values supported is 50.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "maxItems": 50,
            "minItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": {
                      "totalResultSize": 1,
                      "nextPageToken": "merchantSklktoreIdbcdcd2ad-5883-4e48-b114-f13328a9e9f",
                      "previousPageToken": "merchantSklktoreIdbcdcd2ad-5883-4e48-b114-f13328a9e9f",
                      "jobs": [
                        {
                          "serviceOrderId": "2345324",
                          "serviceJobId": "34534399990035",
                          "createTime": "2019-12-11T14:49:53.952Z",
                          "serviceJobStatus": "COMPLETED",
                          "buyer": {
                            "name": "nameExample"
                          },
                          "appointments": [
                            {
                              "appointmentId": "appointmentIdExample",
                              "appointmentStatus": "COMPLETED",
                              "appointmentTime": {
                                "startTime": "2020-01-31T06:38:56.961Z",
                                "durationInMinutes": 60
                              },
                              "assignedTechnicians": [
                                {
                                  "technicianId": "technicianIdExample",
                                  "name": "nameExample"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "createdAfter": {
                        "value": "TEST_CASE_400"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetServiceJobsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceJobs/{serviceJobId}/appointments": {
      "post": {
        "tags": [
          "service"
        ],
        "description": "Adds an appointment to the service job indicated by the service job identifier specified.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "addAppointmentForServiceJobByServiceJobId",
        "parameters": [
          {
            "name": "serviceJobId",
            "in": "path",
            "description": "An Amazon defined service job identifier.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Add appointment operation input details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddAppointmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "appointmentId": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-2-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z",
                            "durationInMinutes": 60
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "appointmentId": "validJobId-2-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "nullJobId"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z",
                            "durationInMinutes": 60
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [serviceJobId]",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "unauthorizedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedAction",
                        "message": "Not authorized to access this resource. Please check your input again.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000+05:30"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "ISO8601 time 2021-01-01T10:00:00.000+05:30 is not in UTC.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10-00:00.000Z"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to parse ISO8601 input: 2021-01-01T10-00:00.000Z",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "No job exist with jobId : invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "completedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Operation not allowed on job with jobId : completedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468 and jobState : COMPLETED",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "withActiveAppointmentJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to add appointment for jobId : withActiveAppointmentJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason : Job already has an active appointmentId.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2019-01-01T10:00:00.000Z"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to add appointment for jobId : validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason : Start time of appointment should be in the future.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2022-01-01T10:00:00.000Z"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to add appointment for jobId : validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason : Start time for appointment is beyond the maximum allowed period of 365 days.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:15:00.000Z"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to add appointment for jobId : validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason : Appointment slot is not available.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceJobs/{serviceJobId}/appointments/{appointmentId}": {
      "post": {
        "tags": [
          "service"
        ],
        "description": "Reschedules an appointment for the service job indicated by the service job identifier specified.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "rescheduleAppointmentForServiceJobByServiceJobId",
        "parameters": [
          {
            "name": "serviceJobId",
            "in": "path",
            "description": "An Amazon defined service job identifier.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "name": "appointmentId",
            "in": "path",
            "description": "An existing appointment identifier for the Service Job.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Reschedule appointment operation input details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RescheduleAppointmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z"
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "appointmentId": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468_new_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-2-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-2-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z",
                            "durationInMinutes": 60
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "appointmentId": "validJobId-2-9cb9bc29-3d7d-5e49-5709-efb693d34468_new_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-3-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-3-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z",
                            "durationInMinutes": 60
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "appointmentId": "validJobId-3-9cb9bc29-3d7d-5e49-5709-efb693d34468_new_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a",
                    "warnings": [
                      {
                        "code": "RESOURCES_UNASSIGNED",
                        "message": "Unassigned resources : ATechnicianId,BTechnicianId"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "nullJobId"
                      },
                      "appointmentId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z",
                            "durationInMinutes": 60
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [serviceJobId]",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "nullAppointmentId"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z",
                            "durationInMinutes": 60
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [appointmentId]",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "unauthorizedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "unauthorizedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z"
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedAction",
                        "message": "Not authorized to access this resource. Please check your input again.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000+05:30"
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "ISO8601 time 2021-01-01T10:00:00.000+05:30 is not in UTC.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10-00:00.000Z"
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to parse ISO8601 input: 2021-01-01T10-00:00.000Z",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z"
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "No job exist with jobId : invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "completedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "completedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z"
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Operation not allowed on job with jobId : completedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468 and jobState : COMPLETED",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2019-01-01T10:00:00.000Z"
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to add appointment for jobId : validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason : Start time of appointment should be in the future.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2022-01-01T10:00:00.000Z"
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to add appointment for jobId : validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason : Start time for appointment is beyond the maximum allowed period of 365 days.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:15:00.000Z"
                          },
                          "rescheduleReasonCode": "R1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to add appointment for jobId : validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason : Appointment slot is not available.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentTime": {
                            "startTime": "2021-01-01T10:00:00.000Z"
                          },
                          "rescheduleReasonCode": "U1"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to add appointment for jobId : validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason : Appointment reschedule reason code is not valid.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/SetAppointmentResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceJobs/{serviceJobId}/appointments/{appointmentId}/resources": {
      "put": {
        "tags": [
          "service"
        ],
        "description": "Assigns new resource(s) or overwrite/update the existing one(s) to a service job appointment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 2 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "assignAppointmentResources",
        "parameters": [
          {
            "name": "serviceJobId",
            "in": "path",
            "description": "An Amazon-defined service job identifier. Get this value by calling the `getServiceJobs` operation of the Services API.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "name": "appointmentId",
            "in": "path",
            "description": "An Amazon-defined identifier of active service job appointment.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "validResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {}
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {}
                          ]
                        }
                      }
                    }
                  },
                  "response": {}
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "overBookedResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "warnings": [
                        {
                          "code": "RESOURCES_OVERBOOKED",
                          "message": "Resources overbooked for this time window."
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "nullJobId"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "validResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [serviceJobId]",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "nullAppointmentId"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "validResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [appointmentId]",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "nullJobId"
                      },
                      "appointmentId": {
                        "value": "nullAppointmentId"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "validResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [appointmentId, serviceJobId]",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {}
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Resources not provided in input JSON payload.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": []
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Resources must have size greater than or equal to 1.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "unauthorizedJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "validResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "UnauthorizedAction",
                        "message": "Not authorized to access this resource. Please check your input again.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "invalidJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "validResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "No job exists with jobId : invalidJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "invalidAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "validResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Failed to Update Appointment for jobId : invalidJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687, appointmentId : invalidAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d, reason : No appointment exists with appointmentId: invalidAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "badResourceId"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid resourceId : badResourceId provided in the input.",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "completedJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "completedAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "validResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Operation not allowed on job with jobId : completedJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687 and jobState : COMPLETED",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "cancelledJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "cancelledAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "validResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Operation not allowed on job with jobId : cancelledJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687 and jobState : CANCELLED",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "cancelledAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "validResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "validResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Appointment metadata update is not allowed for appointmentId cancelledAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "resources": [
                            {
                              "resourceId": "invalidResourceId-A8B3M999LMHF2"
                            },
                            {
                              "resourceId": "invalidResourceId-AMIDIAX1H5V"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "RESOURCES_MISMATCHED_SERVICE_LOCATION_TYPE",
                        "message": "Resources do not have same service location type as job. Applicable resources: A8B3M999LMHF2,AMIDIAX1H5V",
                        "details": ""
                      },
                      {
                        "code": "RESOURCES_MISSING_REQUIRED_SKILLS",
                        "message": "Resources Missing required XYZ skills. Applicable resources: A8B3M999LMHF2,AMIDIAX1H5V",
                        "details": ""
                      },
                      {
                        "code": "RESOURCES_NOT_AVAILABLE_IN_LOCATION",
                        "message": "Resources are not available in the store. Applicable resources: A8B3M999LMHF2,AMIDIAX1H5V",
                        "details": ""
                      },
                      {
                        "code": "RESOURCES_NOT_REGISTERED_UNDER_MERCHANT",
                        "message": "Resources are not registered under this Merchant. Applicable resources: A8B3M999LMHF2,AMIDIAX1H5V",
                        "details": ""
                      },
                      {
                        "code": "RESOURCES_BACKGROUND_CHECK_INCOMPLETE",
                        "message": "Resources background check is incomplete. Applicable resources: A8B3M999LMHF2,AMIDIAX1H5V",
                        "details": ""
                      },
                      {
                        "code": "RESOURCES_NOT_AVAILABLE_IN_TIME_WINDOW",
                        "message": "Resources do not have sufficient available capacity. Applicable resources: A8B3M999LMHF2,AMIDIAX1H5V",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/AssignAppointmentResourcesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceJobs/{serviceJobId}/appointments/{appointmentId}/fulfillment": {
      "put": {
        "tags": [
          "service"
        ],
        "description": "Updates the appointment fulfillment data related to a given `jobID` and `appointmentID`.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "setAppointmentFulfillmentData",
        "parameters": [
          {
            "name": "serviceJobId",
            "in": "path",
            "description": "An Amazon-defined service job identifier. Get this value by calling the `getServiceJobs` operation of the Services API.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "name": "appointmentId",
            "in": "path",
            "description": "An Amazon-defined identifier of active service job appointment.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Appointment fulfillment data collection details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetAppointmentFulfillmentDataRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success response.",
            "schema": {
              "type": "string"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "validUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": ""
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          }
                        }
                      }
                    }
                  },
                  "response": ""
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": ""
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": ""
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": ""
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": ""
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d"
                      },
                      "body": {
                        "value": {
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": ""
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "nullJobId"
                      },
                      "appointmentId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "validUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Missing or invalid request parameters: [serviceJobId]"
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "nullAppointmentId"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "validUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Missing or invalid request parameters: [appointmentId]"
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "nullAppointmentId"
                      },
                      "body": {
                        "value": {}
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "No fulfillment artifacts provided in JSON payload.",
                      "details": ""
                    }
                  ]
                }
              ]
            }
          },
          "403": {
            "description": "403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "unauthorizedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "unauthorizedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "UnauthorizedAction",
                      "message": "Not authorized to access this resource. Please check your input again.",
                      "details": ""
                    }
                  ]
                }
              ]
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "415": {
            "description": "The entity of the request is in a format not supported by the requested resource.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "invalidAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "validUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "No job exist with jobId : invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "InvalidStatusJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "invalidStatusAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "validUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Job with id InvalidStatusJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468 can not be updated. Please check if the job is in valid status.",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "invalidAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "validUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Appointment with id invalidAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468 is not present in the job. Please check the input again.",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "InvalidStatusCancelledAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-02T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "validUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Appointment with appointment id InvalidStatusCancelledAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468 is not valid to update. Please check the input again",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "endTime": "2021-01-03T13:18:10.668Z"
                          }
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Appointment start time is required. Please check the input again.",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2021-01-01T10:00:00.000+05:30"
                          }
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Appointment end time is required. Please check the input again.",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2021-01-01T10:00:00.000+05:30",
                            "endTime": "2021-01-03T13:18:10.668Z"
                          }
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "ISO8601 time 2021-01-01T10:00:00.000+05:30 is not in UTC format. Please provide time in UTC",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2021-01-01T10-00:00.000Z",
                            "endTime": "2021-01-03T13:18:10.668Z"
                          }
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Could not parse given time input 2021-01-01T10-00:00.000Z. Please provide time in ISO8601 format",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "9999-01-01T10:00:00.000Z",
                            "endTime": "2021-01-03T13:18:10.668Z"
                          }
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Appointment start time should not be in future. Please check the input again",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-01T10:00:00.000+05:30",
                            "endTime": "9999-01-03T13:18:10.668Z"
                          }
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Appointment end time should not be in future. Please check the input again",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2020-01-04T10:00:00.000+05:30",
                            "endTime": "2020-01-03T13:18:10.668Z"
                          }
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Appointment end time should be after start time. Please check the input again.",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentResources": [
                            {
                              "resourceId": "InValidResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "One or more resources provided is invalid. Please check the input again.",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "appointmentResources": [
                            {
                              "resourceId": "ResourceIdNotExist-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "One or more resources provided does not exist or is deleted. Please check the input again.",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "InvalidUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Input document id does not exist. Please check the input",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "UploadDestinationIdExpired-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Input document parameters are invalid. Please check the input.",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "InvalidDocumentTypeUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Document failed to meet content type restrictions. Please review document uploaded",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "InvalidDocumentLengthUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Failed to retrieve document content length. Please review document uploaded",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "ExceededDcoumentLengthUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Document failed to meet content length restrictions. Please review document uploaded",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "DocumentNotUploadedUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Document encrypted not found or exist. Please review document uploaded",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "IncorrectEncryptedDocumentUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Document failed to decrypt or decipher. Please review the uploaded document",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "validUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468",
                              "contentSha256": "InvalidSHA256GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Document failed to meet sanity check. Could not get a Sha256 Message Digest instance. Please review document uploaded",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "UploadedFileDetectedMalwareUploadeDestinationId-348293-2384982-239847982379",
                              "contentSha256": "validSHA256GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Document failed to meet malware check. Please review document uploaded",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "InValidResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "InValidUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "ne or more resources provided is invalid. Please check the input again.",
                      "details": ""
                    },
                    {
                      "code": "InvalidInput",
                      "message": "Appointment start time is required. Please check the input again.",
                      "details": ""
                    },
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Input document id does not exist. Please check the input",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "InValidUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Appointment start time is required. Please check the input again.",
                      "details": ""
                    },
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Input document id does not exist. Please check the input",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "validUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Appointment start time is required. Please check the input again.",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2022-01-03T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "ResourceIdNotExist-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "validUploadDesitnationID348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "One or more resources provided does not exist or is deleted. Please check the input again.",
                      "details": ""
                    }
                  ]
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468"
                      },
                      "appointmentId": {
                        "value": "validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a"
                      },
                      "body": {
                        "value": {
                          "fulfillmentTime": {
                            "startTime": "2022-01-03T13:18:10.668Z",
                            "endTime": "2022-01-03T13:18:10.668Z"
                          },
                          "appointmentResources": [
                            {
                              "resourceId": "validResourceId-20334421900"
                            },
                            {
                              "resourceId": "validResourceId-82309484378"
                            }
                          ],
                          "fulfillmentDocuments": [
                            {
                              "uploadDestinationId": "UploadedFileDetectedMalwareUploadeDestinationId-348293-2384982-239847982379",
                              "contentSha256": "z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT="
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "code": "InvalidInput",
                      "message": "Failed to process proof of appointment input. Reason: Document failed to meet malware check. Please review document uploaded",
                      "details": ""
                    }
                  ]
                }
              ]
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceResources/{resourceId}/capacity/range": {
      "post": {
        "tags": [
          "service"
        ],
        "description": "Provides capacity slots in a format similar to availability records.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getRangeSlotCapacity",
        "parameters": [
          {
            "name": "resourceId",
            "description": "Resource Identifier.",
            "type": "string",
            "in": "path",
            "required": true,
            "maxLength": 100,
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Request body.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacityQuery"
            }
          },
          {
            "name": "marketplaceIds",
            "description": "An identifier for the marketplace in which the resource operates.",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "name": "nextPageToken",
            "description": "Next page token returned in the response of your previous request.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacity"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY",
                            "AVAILABLE_CAPACITY"
                          ],
                          "startDateTime": "2021-04-04T00:00:00Z",
                          "endDateTime": "2021-04-04T02:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "resourceId": "validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48",
                    "capacities": [
                      {
                        "capacityType": "SCHEDULED_CAPACITY",
                        "slots": [
                          {
                            "startDateTime": "2021-04-04T00:00:00Z",
                            "endDateTime": "2021-04-04T02:00:00Z",
                            "capacity": 1
                          }
                        ]
                      },
                      {
                        "capacityType": "AVAILABLE_CAPACITY",
                        "slots": [
                          {
                            "startDateTime": "2021-04-04T00:00:00Z",
                            "endDateTime": "2021-04-04T01:00:00Z",
                            "capacity": 0
                          },
                          {
                            "startDateTime": "2021-04-04T01:00:00Z",
                            "endDateTime": "2021-04-04T02:00:00Z",
                            "capacity": 1
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f29"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY",
                            "AVAILABLE_CAPACITY"
                          ],
                          "startDateTime": "2022-03-01T00:00:00Z",
                          "endDateTime": "2022-05-30T00:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "resourceId": "validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48",
                    "nextPageToken": "MjAyMi0wNC0wNVQwMDowMDowMFo%3D",
                    "capacities": [
                      {
                        "capacityType": "SCHEDULED_CAPACITY",
                        "slots": [
                          {
                            "startDateTime": "2022-03-01T00:00:00Z",
                            "endDateTime": "2022-04-05T00:00:00Z",
                            "capacity": 1
                          }
                        ]
                      },
                      {
                        "capacityType": "AVAILABLE_CAPACITY",
                        "slots": [
                          {
                            "startDateTime": "2022-03-01T00:00:00Z",
                            "endDateTime": "2022-03-01T10:00:00Z",
                            "capacity": 0
                          },
                          {
                            "startDateTime": "2022-03-01T10:00:00Z",
                            "endDateTime": "2022-04-05T00:00:00Z",
                            "capacity": 1
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f29"
                      },
                      "nextPageToken": {
                        "value": "MjAyMi0wNC0wNVQwMDowMDowMFo%3D"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY",
                            "AVAILABLE_CAPACITY"
                          ],
                          "startDateTime": "2022-03-01T00:00:00Z",
                          "endDateTime": "2022-05-30T00:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "resourceId": "validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48",
                    "capacities": [
                      {
                        "capacityType": "SCHEDULED_CAPACITY",
                        "slots": [
                          {
                            "startDateTime": "2022-04-05T00:00:00Z",
                            "endDateTime": "2022-05-30T00:00:00Z",
                            "capacity": 1
                          }
                        ]
                      },
                      {
                        "capacityType": "AVAILABLE_CAPACITY",
                        "slots": [
                          {
                            "startDateTime": "2022-04-05T00:00:00Z",
                            "endDateTime": "2022-05-30T10:00:00Z",
                            "capacity": 1
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9d267d55-9426-5bfp-cc47-f167gbadfhak32"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "RESERVED_CAPACITY",
                            "AVAILABLE_CAPACITY"
                          ],
                          "startDateTime": "2021-04-04T00:00:00Z",
                          "endDateTime": "2021-04-04T02:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "resourceId": "validResourceId-9d267d55-9426-5bfp-cc47-f167gbadfhak32",
                    "capacities": [
                      {
                        "capacityType": "AVAILABLE_CAPACITY",
                        "slots": [
                          {
                            "startDateTime": "2021-04-04T00:00:00Z",
                            "endDateTime": "2021-04-04T01:00:00Z",
                            "capacity": 0
                          },
                          {
                            "startDateTime": "2021-04-04T01:00:00Z",
                            "endDateTime": "2021-04-04T02:00:00Z",
                            "capacity": 1
                          }
                        ]
                      },
                      {
                        "capacityType": "RESERVED_CAPACITY",
                        "slots": [
                          {
                            "startDateTime": "2021-04-04T00:00:00Z",
                            "endDateTime": "2021-04-04T01:00:00Z",
                            "capacity": 1
                          },
                          {
                            "startDateTime": "2021-04-04T01:00:00Z",
                            "endDateTime": "2021-04-04T02:00:00Z",
                            "capacity": 0
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY"
                          ],
                          "startDateTime": "2021-04-04T00:00:00Z",
                          "endDateTime": "2021-04-04T02:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "This is invalid input",
                        "details": "Received the following errors: [Missing or invalid request parameters: [resourceId]]"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48a"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY"
                          ],
                          "startDateTime": "2021-04-04T00:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "This is invalid input",
                        "details": "Received the following errors: [startDateTime or endDateTime are not present]"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48b"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY"
                          ],
                          "startDateTime": "2021-04-04T02:00:00Z",
                          "endDateTime": "2021-04-04T00:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "This is invalid input",
                        "details": "Received the following errors: [endDateTime should be after Start Time]"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48c"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY"
                          ],
                          "startDateTime": "2021-0",
                          "endDateTime": "2021-04-04T00:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "This is invalid input",
                        "details": "Received the following errors: [startDateTime is not a valid ISO date/time object]"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/RangeSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceResources/{resourceId}/capacity/fixed": {
      "post": {
        "tags": [
          "service"
        ],
        "description": "Provides capacity in fixed-size slots. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getFixedSlotCapacity",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "description": "Resource Identifier.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacityQuery"
            }
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "An identifier for the marketplace in which the resource operates.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "name": "nextPageToken",
            "in": "query",
            "description": "Next page token returned in the response of your previous request.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacity"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9e378g66-9537-6ggq-dd48-f167gb969f48"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY",
                            "RESERVED_CAPACITY"
                          ],
                          "startDateTime": "2021-04-04T00:00:00Z",
                          "endDateTime": "2021-04-04T02:00:00Z",
                          "slotDuration": 30
                        }
                      }
                    }
                  },
                  "response": {
                    "resourceId": "validResourceId-9e378g66-9537-6ggq-dd48-f167gb969f48",
                    "slotDuration": 30,
                    "capacities": [
                      {
                        "startDateTime": "2021-04-04T00:00:00Z",
                        "scheduledCapacity": 1,
                        "reservedCapacity": 1
                      },
                      {
                        "startDateTime": "2021-04-04T00:30:00Z",
                        "scheduledCapacity": 1,
                        "reservedCapacity": 0
                      },
                      {
                        "startDateTime": "2021-04-04T01:00:00Z",
                        "scheduledCapacity": 0,
                        "reservedCapacity": 0
                      },
                      {
                        "startDateTime": "2021-04-04T01:30:00Z",
                        "scheduledCapacity": 0,
                        "reservedCapacity": 0
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY"
                          ],
                          "startDateTime": "2021-04-04T00:00:00Z",
                          "endDateTime": "2021-04-04T02:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "This is invalid input",
                        "details": "Received the following errors: [Missing or invalid request parameters: [resourceId]]"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9d267d55-9dfa-5bfp-cc47-f167gb969f48a"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY"
                          ],
                          "startDateTime": "2021-04-04T00:00:00Z",
                          "endDateTime": "2021-04-04T02:00:00Z",
                          "slotDuration": 400
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "This is invalid input",
                        "details": "Received the following errors: [Slot duration is not valid, it should be a multiple of 5 and within allowed range.]"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9e378g66-9537-6ggq-dd48-f1klmb969f48"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY"
                          ],
                          "startDateTime": "2021-04-04T02:00:00Z",
                          "endDateTime": "2021-04-04T00:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "This is invalid input",
                        "details": "Received the following errors: [endDateTime should be after Start Time]"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "resourceId": {
                          "value": "validResourceId-9e378g66-9537-6ggq-dd48-f1klmb969f482"
                        },
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY"
                          ],
                          "startDateTime": "2021-04-04T00:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "This is invalid input",
                        "details": "Received the following errors: [startDateTime or endDateTime are not present]"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9e378g66-9537-6ggq-dd48-f1klmb969f483"
                      },
                      "body": {
                        "value": {
                          "capacityTypes": [
                            "SCHEDULED_CAPACITY"
                          ],
                          "startDateTime": "2021-0",
                          "endDateTime": "2021-04-04T00:00:00Z"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "This is invalid input",
                        "details": "Received the following errors: [startDateTime is not a valid ISO date/time object]"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/FixedSlotCapacityErrors"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceResources/{resourceId}/schedules": {
      "put": {
        "tags": [
          "service"
        ],
        "description": "Update the schedule of the given resource.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateSchedule",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "description": "Resource (store) Identifier",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schedule details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateScheduleRequest"
            }
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "An identifier for the marketplace in which the resource operates.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/UpdateScheduleResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36"
                      },
                      "body": {
                        "value": {
                          "schedules": [
                            {
                              "startTime": "2020-01-01T00:00:00.00-07",
                              "endTime": "2020-01-01T23:59:00.00-07",
                              "recurrence": {
                                "endTime": "2020-01-06T23:59:00.00-07",
                                "daysOfWeek": [
                                  "MONDAY",
                                  "TUESDAY",
                                  "WEDNESDAY",
                                  "THURSDAY",
                                  "FRIDAY"
                                ]
                              }
                            },
                            {
                              "startTime": "2020-01-11T00:00:00.00-07",
                              "endTime": "2020-01-11T23:59:00.00-07",
                              "recurrence": {
                                "endTime": "2020-01-16T23:59:00.00-07",
                                "daysOfWeek": [
                                  "MONDAY",
                                  "TUESDAY",
                                  "WEDNESDAY"
                                ]
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {}
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36"
                      },
                      "body": {
                        "value": {
                          "schedules": [
                            {
                              "startTime": "2020-01-01T12:00:00.00-07",
                              "endTime": "2020-01-01T23:59:00.00-07",
                              "recurrence": {
                                "endTime": "2020-01-06T23:59:00.00-07",
                                "daysOfWeek": [
                                  "MONDAY",
                                  "TUESDAY",
                                  "WEDNESDAY",
                                  "THURSDAY",
                                  "FRIDAY"
                                ]
                              }
                            },
                            {
                              "startTime": "2020-01-11T00:00:00.00-07",
                              "endTime": "2020-01-11T23:59:00.00-07",
                              "recurrence": {
                                "endTime": "2020-01-16T23:59:00.00-07",
                                "daysOfWeek": [
                                  "MONDAY",
                                  "TUESDAY",
                                  "WEDNESDAY"
                                ]
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": [
                      {
                        "availability": {
                          "startTime": "2020-01-01T12:00:00.00-07",
                          "endTime": "2020-01-01T23:59:00.00-07",
                          "recurrence": {
                            "endTime": "2020-01-06T23:59:00.00-07",
                            "daysOfWeek": [
                              "MONDAY",
                              "TUESDAY",
                              "WEDNESDAY",
                              "THURSDAY",
                              "FRIDAY"
                            ]
                          }
                        },
                        "warnings": [
                          {
                            "code": "ScheduleOverride",
                            "message": "This AvailabilityRecord will override the current schedule as the time-ranges overlap"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "invalidResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36"
                      },
                      "body": {
                        "value": {
                          "schedules": [
                            {
                              "startTime": "2020-01-01T00:00:00.00-07",
                              "endTime": "2020-01-01T23:59:00.00-07",
                              "recurrence": {
                                "endTime": "2020-01-06T23:59:00.00-07",
                                "daysOfWeek": [
                                  "MONDAY",
                                  "TUESDAY",
                                  "WEDNESDAY",
                                  "THURSDAY",
                                  "FRIDAY"
                                ]
                              }
                            },
                            {
                              "startTime": "2020-01-11T00:00:00.00-07",
                              "endTime": "2020-01-11T23:59:00.00-07",
                              "recurrence": {
                                "endTime": "2020-01-16T23:59:00.00-07",
                                "daysOfWeek": [
                                  "MONDAY",
                                  "TUESDAY",
                                  "WEDNESDAY"
                                ]
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Invalid request parameters: [resourceId]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/UpdateScheduleResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "null"
                      },
                      "body": {
                        "value": {
                          "schedules": []
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Missing or invalid request parameters: [resourceId]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "resourceId": {
                        "value": "validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36"
                      },
                      "body": {
                        "value": {
                          "schedules": []
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Missing or invalid request parameters: [schedule]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/UpdateScheduleResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/UpdateScheduleResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/UpdateScheduleResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/UpdateScheduleResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/UpdateScheduleResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/UpdateScheduleResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/UpdateScheduleResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/reservation": {
      "post": {
        "tags": [
          "service"
        ],
        "description": "Create a reservation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createReservation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Reservation details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReservationRequest"
            }
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "An identifier for the marketplace in which the resource operates.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/CreateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "resourceId": "validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36",
                          "reservation": {
                            "availability": {
                              "startTime": "2020-04-01T10:00:00.00-07",
                              "endTime": "2020-04-01T11:00:00.00-07"
                            },
                            "type": "BREAK"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "reservation": {
                        "reservationId": "457"
                      }
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "resourceId": "invalidResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36",
                          "reservation": {
                            "availability": {
                              "startTime": "2020-04-01T10:00:00.00-07",
                              "endTime": "2020-04-01T11:00:00.00-07"
                            },
                            "type": "BREAK"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Invalid request parameters: [resourceId]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "resourceId": "null",
                          "reservation": {}
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Missing or invalid request parameters: [resourceId]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "resourceId": "validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36",
                          "reservation": {}
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Missing or invalid request parameters: [reservation]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateReservationResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/reservation/{reservationId}": {
      "put": {
        "tags": [
          "service"
        ],
        "description": "Update a reservation.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "updateReservation",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "Reservation Identifier",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Reservation details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateReservationRequest"
            }
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "An identifier for the marketplace in which the resource operates.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/UpdateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reservationId": {
                        "value": "456"
                      },
                      "body": {
                        "value": {
                          "resourceId": "validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36",
                          "reservation": {
                            "availability": {
                              "startTime": "2020-04-01T10:00:00.00-07",
                              "endTime": "2020-04-01T11:00:00.00-07"
                            },
                            "type": "BREAK"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "reservation": {
                        "reservationId": "457"
                      }
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "reservationId": {
                        "value": "456"
                      },
                      "body": {
                        "value": {
                          "resourceId": "invalidResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36",
                          "reservation": {
                            "availability": {
                              "startTime": "2020-04-01T10:00:00.00-07",
                              "endTime": "2020-04-01T11:00:00.00-07"
                            },
                            "type": "BREAK"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Invalid request parameters: [resourceId]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/UpdateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "resourceId": "null",
                          "reservation": {}
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Missing or invalid request parameters: [resourceId]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "resourceId": "validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36",
                          "reservation": {}
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Missing or invalid request parameters: [reservation]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/UpdateReservationResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The reservation specified does not exist.",
            "schema": {
              "$ref": "#/definitions/UpdateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reservationId": {
                        "value": "not-existent-456"
                      },
                      "body": {
                        "value": {
                          "resourceId": "invalidResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36",
                          "reservation": {
                            "availability": {
                              "startTime": "2020-04-01T10:00:00.00-07",
                              "endTime": "2020-04-01T11:00:00.00-07"
                            },
                            "type": "BREAK"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Could not find reservation with ID: [not-existent-456]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/UpdateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/UpdateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/UpdateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/UpdateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/UpdateReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service"
        ],
        "description": "Cancel a reservation. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "cancelReservation",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "Reservation Identifier",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "An identifier for the marketplace in which the resource operates.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/CancelReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reservationId": {
                        "value": "validReservationId-9c156c44-8315-4aeb-bb36-e056fa827e36"
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CancelReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reservationId": {
                        "value": "invalidReservationId-a654baa-8315-4aeb-bb36-e056fa827e36"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Missing or invalid request parameters: [reservationId]",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found.",
            "schema": {
              "$ref": "#/definitions/CancelReservationResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "404": {
            "description": "The reservation specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CancelReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "reservationId": {
                        "value": "nonExistingReservationId-a3726c44-8315-4aeb-bb36-e056fa827e36"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "message": "Reservation does not exist",
                        "code": "InvalidInput"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CancelReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "415": {
            "description": "The entity of the request is in a format not supported by the requested resource.",
            "schema": {
              "$ref": "#/definitions/CancelReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CancelReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "500": {
            "description": "Encountered an unexpected condition which prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CancelReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CancelReservationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/serviceJobs/{serviceJobId}/appointmentSlots": {
      "get": {
        "tags": [
          "service"
        ],
        "description": "Gets appointment slots for the service associated with the service job id specified.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getAppointmmentSlotsByJobId",
        "parameters": [
          {
            "name": "serviceJobId",
            "in": "path",
            "description": "A service job identifier to retrive appointment slots for associated service.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "An identifier for the marketplace in which the resource operates.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "A time from which the appointment slots will be retrieved. The specified time must be in ISO 8601 format. If `startTime` is provided, `endTime` should also be provided. Default value is as per business configuration.",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "A time up to which the appointment slots will be retrieved. The specified time must be in ISO 8601 format. If `endTime` is provided, `startTime` should also be provided. Default value is as per business configuration. Maximum range of appointment slots can be 90 days.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJob-9c156c44-8315-4aeb-bb36-e056fa827e36"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "startTime": "2021-04-04T00:00:00Z",
                      "endTime": "2021-04-04T02:00:00Z",
                      "schedulingType": "REAL_TIME_SCHEDULING",
                      "appointmentSlots": [
                        {
                          "startTime": "2021-04-04T00:00:00Z",
                          "endTime": "2021-04-04T01:0:00Z",
                          "capacity": 20
                        },
                        {
                          "startTime": "2021-04-04T01:00:00Z",
                          "endTime": "2021-04-04T02:0:00Z",
                          "capacity": 0
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJob-9c156c44-8315-4aeb-bb36-e056fa827e36"
                      },
                      "startTime": {
                        "value": "2021-04-04T00:00:00Z"
                      },
                      "endTime": {
                        "value": "2021-04-04T02:00:00Z"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "startTime": "2021-04-04T00:00:00Z",
                      "endTime": "2021-04-04T02:00:00Z",
                      "schedulingType": "REAL_TIME_SCHEDULING",
                      "appointmentSlots": [
                        {
                          "startTime": "2021-04-04T00:00:00Z",
                          "endTime": "2021-04-04T01:0:00Z",
                          "capacity": 20
                        },
                        {
                          "startTime": "2021-04-04T01:00:00Z",
                          "endTime": "2021-04-04T02:0:00Z",
                          "capacity": 0
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "nullJobId"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [serviceJobId]"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJob-9c156c44-8315-4aeb-bb36-e056fa827e36"
                      },
                      "endTime": {
                        "value": "20-21-04-04T01:00:00Z"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "End Time is not a valid ISO date/time object"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "serviceJobId": {
                        "value": "validJob-9c156c44-8315-4aeb-bb36-e056fa827e36"
                      },
                      "startTime": {
                        "value": "2021-04-04T05:00:00Z"
                      },
                      "endTime": {
                        "value": "2021-04-04T02:00:00Z"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "End Time should be after Start Time"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/appointmentSlots": {
      "get": {
        "tags": [
          "service"
        ],
        "description": "Gets appointment slots as per the service context specified.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 20 | 40 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getAppointmentSlots",
        "parameters": [
          {
            "name": "asin",
            "in": "query",
            "description": "ASIN associated with the service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Store identifier defining the region scope to retrive appointment slots.",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "An identifier for the marketplace for which appointment slots are queried",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "A time from which the appointment slots will be retrieved. The specified time must be in ISO 8601 format. If `startTime` is provided, `endTime` should also be provided. Default value is as per business configuration.",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "A time up to which the appointment slots will be retrieved. The specified time must be in ISO 8601 format. If `endTime` is provided, `startTime` should also be provided. Default value is as per business configuration. Maximum range of appointment slots can be 90 days.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "B07BB1RGT5"
                      },
                      "storeId": {
                        "value": "53694163-6dc8-4f80-b6b1-ec47b7b9747e"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "startTime": "2021-04-04T00:00:00Z",
                      "endTime": "2021-04-04T02:00:00Z",
                      "schedulingType": "REAL_TIME_SCHEDULING",
                      "appointmentSlots": [
                        {
                          "startTime": "2021-04-04T00:00:00Z",
                          "endTime": "2021-04-04T01:0:00Z",
                          "capacity": 20
                        },
                        {
                          "startTime": "2021-04-04T01:00:00Z",
                          "endTime": "2021-04-04T02:0:00Z",
                          "capacity": 0
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "B07BB1RGT6"
                      },
                      "storeId": {
                        "value": "53694163-6dc8-4f80-b6b1-ec47b7b9747f"
                      },
                      "startTime": {
                        "value": "2021-04-04T00:00:00Z"
                      },
                      "endTime": {
                        "value": "2021-04-04T02:00:00Z"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "startTime": "2021-04-04T00:00:00Z",
                      "endTime": "2021-04-04T02:00:00Z",
                      "schedulingType": "NON_REAL_TIME_SCHEDULING",
                      "appointmentSlots": [
                        {
                          "startTime": "2021-04-04T00:00:00Z",
                          "endTime": "2021-04-04T01:0:00Z",
                          "capacity": 20
                        },
                        {
                          "startTime": "2021-04-04T01:00:00Z",
                          "endTime": "2021-04-04T02:0:00Z",
                          "capacity": 0
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "nullValue"
                      },
                      "storeId": {
                        "value": "53694163-6dc8-4f80-b6b1-ec47b7b9747e"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [asin]"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "B07BB1RGT5"
                      },
                      "storeId": {
                        "value": "53694163-6dc8-4f80-b6b1-ec47b7b9747e"
                      },
                      "endTime": {
                        "value": "20-21-04-04T01:00:00Z"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Range End Time is not a valid ISO date/time object"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "asin": {
                        "value": "B07BB1RGT5"
                      },
                      "storeId": {
                        "value": "53694163-6dc8-4f80-b6b1-ec47b7b9747e"
                      },
                      "startTime": {
                        "value": "2021-04-04T05:00:00Z"
                      },
                      "endTime": {
                        "value": "2021-04-04T02:00:00Z"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Range End Time should be after Range Start Time"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetAppointmentSlotsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/service/v1/documents": {
      "post": {
        "tags": [
          "service"
        ],
        "description": "Creates an upload destination.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createServiceDocumentUploadDestination",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Upload document operation input details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceUploadDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created an upload destination for the given resource.",
            "schema": {
              "$ref": "#/definitions/CreateServiceDocumentUploadDestination"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-requestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "contentType": "PNG",
                          "contentLength": 1386437,
                          "contentMD5": "97WrSKv9ffHkDopCdB32mw=="
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "encryptionDetails": {
                        "standard": "AES",
                        "initializationVector": "paPlpo1iBBLmyOhU0mIo5g==",
                        "key": "PDuDJm2l+0ydObrRpS48tB+t2qbtOmWhSEOiFWKnH2k="
                      },
                      "uploadDestinationId": "amzn1.tortuga.3.15ba627d-8e24-42ad-89d1-5eb01f5ba0af.T15MXQRST78UTC<->amzn1.tortuga.1.token.DizquVc+EoX/lWAV/7WTlw==",
                      "url": "https://tortuga-devo.s3-us-west-2.amazonaws.com/%2FThirtyDays/amzn1.tortuga.3.15ba627d-8e24-42ad-89d1-5eb01f5ba0af.T15MXQRST78UTC?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20210108T103450Z&X-Amz-SignedHeaders=content-type%3Bhost&X-Amz-Expires=300&X-Amz-Credential=AKIAUR3X5C6O5CADVWED%2F20210108%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Signature=dd2fefe6c6102aba14bab1481b33cf07dcc0385bd49f7eb5796d77b082ea5ba3"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateServiceDocumentUploadDestination"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {}
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [contentType, contentLength].",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "contentType": "PNG"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [contentLength].",
                        "details": ""
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "contentLength": 123
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Missing or invalid request parameters: [contentType].",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateServiceDocumentUploadDestination"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateServiceDocumentUploadDestination"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateServiceDocumentUploadDestination"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          },
          "415": {
            "description": "The request's Content-Type header is invalid.",
            "schema": {
              "$ref": "#/definitions/CreateServiceDocumentUploadDestination"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-requestid": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/CreateServiceDocumentUploadDestination"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "contentType": "PNGr",
                          "contentLength": 1386437,
                          "contentMD5": "97WrSKv9ffHkDopCdB32mw=="
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "contentType parameter is invalid. Use one of ['TIFF', 'JPG', 'PNG', 'JPEG', 'GIF', 'PDF']",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateServiceDocumentUploadDestination"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-requestid": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateServiceDocumentUploadDestination"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateServiceDocumentUploadDestination"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n**Note:** For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference id."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/fba/outbound/brazil/v0/shipments/{shipmentId}": {
      "get": {
        "tags": [
          "shipmentInvoice"
        ],
        "description": "Returns the shipment details required to issue an invoice for the specified shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1.133 | 25 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipmentDetails",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "The identifier for the shipment. Get this value from the FBAOutboundShipmentStatus notification. For information about subscribing to notifications, see the [Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId1"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "WarehouseId": "wID1234",
                      "AmazonOrderId": "222-333-4444333",
                      "AmazonShipmentId": "F4385943758",
                      "PurchaseDate": "2020-10-07T17:36:47.470Z",
                      "ShippingAddress": {
                        "Name": "User Address1",
                        "AddressLine1": "123 any st",
                        "City": "Ann Arbor",
                        "County": "Washtenaw",
                        "StateOrRegion": "MI",
                        "PostalCode": "48104",
                        "CountryCode": "US",
                        "Phone": "333-444-5555",
                        "AddressType": "Residential"
                      },
                      "PaymentMethodDetails": [
                        "GiftCertificate"
                      ],
                      "MarketplaceId": "ATV943520DER",
                      "SellerId": "TEST34509GOGM",
                      "BuyerName": "1",
                      "BuyerCounty": "Washtenaw",
                      "BuyerTaxInfo": {
                        "CompanyLegalName": "Buyer Company",
                        "TaxingRegion": "MI",
                        "TaxClassifications": [
                          {
                            "Name": "Millage",
                            "Value": "10"
                          }
                        ]
                      },
                      "MarketplaceTaxInfo": {
                        "CompanyLegalName": "Seller Legal Company Name",
                        "TaxingRegion": "SP",
                        "TaxClassifications": [
                          {
                            "Name": "CNPJ",
                            "Value": "15436940000103"
                          }
                        ]
                      },
                      "SellerDisplayName": "Seller Display Name in the marketplace",
                      "ShipmentItems": [
                        {
                          "ASIN": "BKUO9348543",
                          "SellerSKU": "BKUO9348543SKU",
                          "OrderItemId": "23423424",
                          "Title": "Pencil",
                          "QuantityOrdered": 1,
                          "ItemPrice": {
                            "CurrencyCode": "USD",
                            "Amount": "100"
                          },
                          "ShippingPrice": {
                            "CurrencyCode": "USD",
                            "Amount": "20"
                          },
                          "GiftWrapPrice": {
                            "CurrencyCode": "USD",
                            "Amount": "1"
                          },
                          "ShippingDiscount": {
                            "CurrencyCode": "USD",
                            "Amount": "10"
                          },
                          "PromotionDiscount": {
                            "CurrencyCode": "USD",
                            "Amount": "10"
                          },
                          "SerialNumbers": [
                            "23424",
                            "23423"
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BadShipId"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Shipment ID",
                        "details": "'BadShipId' is an invalid ShipmentID"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/fba/outbound/brazil/v0/shipments/{shipmentId}/invoice": {
      "post": {
        "tags": [
          "shipmentInvoice"
        ],
        "description": "Submits a shipment invoice document for a given shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1.133 | 25 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "submitInvoice",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "The identifier for the shipment.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId1"
                      },
                      "body": {
                        "value": {
                          "InvoiceContent": "SGF2ZSB0byBkZWFsIHdpdGggQmFzZTY0IGZvcm1hdD8=",
                          "ContentMD5Value": "9906bd8f227f6a43f1e27db4b9258ad4"
                        }
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BadIDForShipment"
                      },
                      "body": {
                        "value": {
                          "InvoiceContent": "NonBase64EncodedValue",
                          "ContentMD5Value": "8f6df519a2125946820bc34a561164c2"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Shipment ID is invalid",
                        "details": "InvoiceContent fails encoding. Shipment 'BadIDForShipment' does not exist"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/fba/outbound/brazil/v0/shipments/{shipmentId}/invoice/status": {
      "get": {
        "tags": [
          "shipmentInvoice"
        ],
        "description": "Returns the invoice status for the shipment you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1.133 | 25 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getInvoiceStatus",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "The shipment identifier for the shipment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetInvoiceStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "shipmentId1"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "Shipments": {
                        "AmazonShipmentId": "shipmentId1",
                        "InvoiceStatus": "Accepted"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetInvoiceStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "shipmentId": {
                        "value": "BadShipId"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Shipment ID",
                        "details": "'BadShipId' is an invalid ShipmentID"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetInvoiceStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetInvoiceStatusResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetInvoiceStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetInvoiceStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetInvoiceStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetInvoiceStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetInvoiceStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "Unique request reference identifier.",
                "type": "string"
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/shipments/rates": {
      "post": {
        "tags": [
          "shipping"
        ],
        "description": "Returns the available shipping service offerings.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getRates",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetRatesRequest"
            }
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetRatesResponse"
            },
            "examples": {
              "application/json": {
                "requestToken": "6DCCEDD3FF961C15FEB94F342D41C",
                "rates": [
                  {
                    "rateId": "F4B68849F969E239FF9FCA9C12E35",
                    "carrierId": "FOOSHIPGRD",
                    "carrierName": "FOO SHIP GRD",
                    "billedWeight": {
                      "value": 5,
                      "unit": "GRAMS"
                    },
                    "totalCharge": {
                      "value": 7,
                      "unit": "USD"
                    },
                    "serviceId": "FOORSID",
                    "serviceName": "FOO RS ID",
                    "promise": {
                      "deliveryWindow": {
                        "start": "2018-08-24T08:22:30.737Z",
                        "end": "2018-08-24T20:22:30.737Z"
                      },
                      "pickupWindow": {
                        "start": "2018-08-23T08:22:30.737Z",
                        "end": "2018-08-23T20:22:30.737Z"
                      }
                    },
                    "supportedDocumentSpecifications": [
                      {
                        "format": "PNG",
                        "size": {
                          "length": 6,
                          "width": 4,
                          "unit": "INCH"
                        },
                        "printOptions": [
                          {
                            "supportedDPIs": [
                              300,
                              203
                            ],
                            "supportedPageLayouts": [
                              "LEFT",
                              "RIGHT"
                            ],
                            "supportedFileJoiningOptions": [
                              true,
                              false
                            ],
                            "supportedDocumentDetails": [
                              {
                                "name": "LABEL",
                                "isMandatory": true
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "format": "ZPL",
                        "size": {
                          "length": 6,
                          "width": 4,
                          "unit": "INCH"
                        },
                        "printOptions": [
                          {
                            "supportedDPIs": [
                              300,
                              203
                            ],
                            "supportedPageLayouts": [
                              "LEFT",
                              "RIGHT"
                            ],
                            "supportedFileJoiningOptions": [
                              true,
                              false
                            ],
                            "supportedDocumentDetails": [
                              {
                                "name": "LABEL",
                                "isMandatory": true
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "availableValueAddedServiceGroups": [
                      {
                        "groupId": "SIG_VERIFICATION",
                        "groupDescription": "Signature Verification",
                        "isRequired": true,
                        "valueAddedServices": [
                          {
                            "id": "CUST_SIG_VERIFICATION",
                            "name": "Customer Signature Verification",
                            "cost": {
                              "unit": "USD",
                              "value": 2
                            }
                          }
                        ]
                      }
                    ],
                    "requiresAdditionalInputs": false,
                    "rateItemList": [
                      {
                        "rateItemCharge": {
                          "unit": "INR",
                          "value": "2.00000"
                        },
                        "rateItemID": "BASE_RATE",
                        "rateItemNameLocalization": "Base Rate",
                        "rateItemType": "MANDATORY"
                      },
                      {
                        "rateItemCharge": {
                          "unit": "INR",
                          "value": "1.20000"
                        },
                        "rateItemID": "DELIVERY_CONFIRMATION",
                        "rateItemNameLocalization": "Delivery Confirmation",
                        "rateItemType": "INCLUDED"
                      },
                      {
                        "rateItemCharge": {
                          "unit": "INR",
                          "value": "2.00"
                        },
                        "rateItemID": "VAT",
                        "rateItemNameLocalization": "VAT",
                        "rateItemType": "MANDATORY"
                      }
                    ],
                    "paymentType": "PAY_THROUGH_AMAZON"
                  }
                ],
                "ineligibleRates": [
                  {
                    "carrierId": "FOOSTDGRD",
                    "serviceId": "FOO8420430",
                    "carrierName": "FOOSTDGRD",
                    "serviceName": "FOO8420430",
                    "ineligibilityReasons": [
                      {
                        "code": "NO_COVERAGE",
                        "message": "Required shipping network coverage doesn't exist for the offering"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "ChannelDetails object cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      },
      "parameters": []
    },
    "/shipping/v2/shipments/directPurchase": {
      "post": {
        "tags": [
          "shipping"
        ],
        "description": "Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "directPurchaseShipment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DirectPurchaseRequest"
            }
          },
          {
            "name": "x-amzn-IdempotencyKey",
            "description": "A unique value which the server uses to recognize subsequent retries of the same request.",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "description": "The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA).\nThe secondary language subtag is almost always a regional designation.\nThis does not support additional subtags beyond the primary and secondary language subtags.\n",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DirectPurchaseResponse"
            },
            "examples": {
              "application/json": {
                "shipmentId": "445454-3232-3232",
                "packageDocumentDetailList": [
                  {
                    "packageClientReferenceId": "ASUSDI-45343854",
                    "trackingId": "T1234567",
                    "packageDocuments": [
                      {
                        "type": "LABEL",
                        "format": "PNG",
                        "contents": ""
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              },
              "x-amzn-IdempotencyKey": {
                "type": "string",
                "description": "A unique value which the server uses to recognize subsequent retries of the same request."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "ChannelDetails object cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/shipments": {
      "post": {
        "tags": [
          "shipping"
        ],
        "description": "Purchases a shipping service and returns purchase related details and documents.\n\nNote: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to \"TOKEN_EXPIRED\". If you receive this error response, you must get the rates for the shipment again.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "purchaseShipment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseShipmentRequest"
            }
          },
          {
            "name": "x-amzn-IdempotencyKey",
            "description": "A unique value which the server uses to recognize subsequent retries of the same request.",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PurchaseShipmentResponse"
            },
            "examples": {
              "application/json": {
                "shipmentId": "87852211788104",
                "packageDocumentDetails": [
                  {
                    "packageClientReferenceId": "abcd",
                    "packageDocuments": [
                      {
                        "type": "LABEL",
                        "format": "PNG",
                        "contents": "sdioadaiosfhdodsaiufhouafhoudfhdouahfac=="
                      }
                    ],
                    "trackingId": 1578648261977
                  }
                ],
                "promise": {
                  "pickupWindow": {
                    "start": "2019-12-11T07:09:05.513Z",
                    "end": "2019-12-11T09:09:05.513Z"
                  },
                  "deliveryWindow": {
                    "start": "2019-12-13T07:09:05.513Z",
                    "end": "2019-12-13T09:09:05.513Z"
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "RateId cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      },
      "parameters": []
    },
    "/shipping/v2/oneClickShipment": {
      "post": {
        "tags": [
          "shipping"
        ],
        "description": "Purchases a shipping service identifier and returns purchase-related details and documents.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "oneClickShipment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneClickShipmentRequest"
            }
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/OneClickShipmentResponse"
            },
            "examples": {
              "application/json": {
                "shipmentId": "87852211788104",
                "packageDocumentDetails": [
                  {
                    "packageClientReferenceId": "#abcd",
                    "packageDocuments": [
                      {
                        "type": "LABEL",
                        "format": "PNG",
                        "contents": "sdioadaiosfhdodsaiufhouafhoudfhdouahfac=="
                      }
                    ],
                    "trackingId": 1578648261977
                  }
                ],
                "promise": {
                  "pickupWindow": {
                    "start": "2019-12-11T07:09:05.513Z",
                    "end": "2019-12-11T09:09:05.513Z"
                  },
                  "deliveryWindow": {
                    "start": "2019-12-13T07:09:05.513Z",
                    "end": "2019-12-13T09:09:05.513Z"
                  }
                },
                "carrier": {
                  "id": "AMZN_UK",
                  "name": "Amazon Shipping"
                },
                "service": {
                  "id": "SWA-UK-PREM",
                  "name": "Amazon Shipping One Day"
                },
                "totalCharge": {
                  "unit": "GBP",
                  "value": 4.76
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "ServiceId cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      },
      "parameters": []
    },
    "/shipping/v2/tracking": {
      "get": {
        "tags": [
          "shipping"
        ],
        "description": "Returns tracking information for a purchased shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getTracking",
        "parameters": [
          {
            "name": "trackingId",
            "in": "query",
            "description": "A carrier-generated tracking identifier originally returned by the purchaseShipment operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "carrierId",
            "in": "query",
            "description": "A carrier identifier originally returned by the getRates operation for the selected rate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetTrackingResponse"
            },
            "examples": {
              "application/json": {
                "trackingId": "23AA47DE2B3B6",
                "alternateLegTrackingId": "null",
                "eventHistory": [
                  {
                    "eventCode": "ReadyForReceive",
                    "location": {
                      "postalCode": "4883493",
                      "countryCode": "CC"
                    },
                    "eventTime": "2019-12-11T07:09:05.513Z"
                  }
                ],
                "promisedDeliveryDate": "2019-12-12T13:09:05.513Z",
                "summary": {
                  "status": "PreTransit"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "CarrierId is missing in the request"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      },
      "parameters": []
    },
    "/shipping/v2/shipments/{shipmentId}/documents": {
      "get": {
        "tags": [
          "shipping"
        ],
        "description": "Returns the shipping documents associated with a package in a shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShipmentDocuments",
        "parameters": [
          {
            "name": "shipmentId",
            "description": "The shipment identifier originally returned by the purchaseShipment operation.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packageClientReferenceId",
            "in": "query",
            "description": "The package client reference identifier originally provided in the request body parameter for the getRates operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "description": "The file format of the document. Must be one of the supported formats returned by the getRates operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dpi",
            "in": "query",
            "description": "The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation.",
            "required": false,
            "type": "number"
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDocumentsResponse"
            },
            "examples": {
              "application/json": {
                "shipmentId": "445454-3232-3232",
                "packageDocumentDetail": {
                  "packageClientReferenceId": "ASUSDI-45343854",
                  "trackingId": "T1234567",
                  "packageDocuments": [
                    {
                      "type": "LABEL",
                      "format": "PNG",
                      "contents": "sdioadaiosfhdodsaiufhouafhoudfhdouahfac=="
                    }
                  ]
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "shipmentId is missing in the request"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      },
      "parameters": []
    },
    "/shipping/v2/shipments/{shipmentId}/cancel": {
      "put": {
        "tags": [
          "shipping"
        ],
        "description": "Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "cancelShipment1",
        "parameters": [
          {
            "name": "shipmentId",
            "description": "The shipment identifier originally returned by the purchaseShipment operation.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CancelShipmentResponse"
            },
            "examples": {
              "application/json": {}
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "ShipmentId cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      },
      "parameters": []
    },
    "/shipping/v2/shipments/additionalInputs/schema": {
      "get": {
        "tags": [
          "shipping"
        ],
        "description": "Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getAdditionalInputs",
        "parameters": [
          {
            "name": "requestToken",
            "in": "query",
            "description": "The request token returned in the response to the getRates operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rateId",
            "in": "query",
            "description": "The rate identifier for the shipping offering (rate) returned in the response to the getRates operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetAdditionalInputsResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "Additional inputs for Shipping Offering",
                  "type": "object",
                  "properties": {
                    "harmonizedSystemCode": {
                      "type": "string",
                      "description": "Harmonized System's commodity code for an item."
                    },
                    "packageClientReferenceId": {
                      "type": "string",
                      "description": "Unique identifier for the item."
                    }
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "requestToken": {
                        "value": "amzn1.rq.123456789.101"
                      },
                      "rateId": {
                        "value": "122324234543535321345436534321423423523452345"
                      }
                    }
                  },
                  "response": {
                    "payload": {}
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "RequestToken cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "requestToken": {
                        "value": "null"
                      },
                      "rateId": {
                        "value": "2314346237423894905834905890346890789075"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidRequest",
                        "message": "Request is missing or has invalid parameters",
                        "details": "RequestToken cannot be null"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/carrierAccountFormInputs": {
      "get": {
        "tags": [
          "shipping"
        ],
        "description": "This API will return a list of input schema required to register a shipper account with the carrier. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getCarrierAccountFormInputs",
        "parameters": [
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetCarrierAccountFormInputsResponse"
            },
            "examples": {
              "application/json": {
                "linkableCarriers": [
                  {
                    "carrierId": "FedEx",
                    "linkableAccountTypes": [
                      {
                        "accountTypeId": "",
                        "carrierAccountInputs": [
                          {
                            "descriptionLocalizationKey": "accountNumberDescriptionString",
                            "inputType": "TEXTBOX",
                            "isConfidential": true,
                            "isHidden": false,
                            "isMandatory": true,
                            "name": "ACCOUNT_NUMBER",
                            "validationMetadata": [
                              {
                                "errorMessage": "stringId4",
                                "validationStrategy": "MIN_LENGTH",
                                "value": "5"
                              },
                              {
                                "errorMessage": "stringId5",
                                "validationStrategy": "MAX_LENGTH",
                                "value": "35"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "RequestToken cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/carrierAccounts": {
      "put": {
        "tags": [
          "shipping"
        ],
        "description": "This API will return Get all carrier accounts for a merchant. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getCarrierAccounts",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCarrierAccountsRequest"
            }
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetCarrierAccountsResponse"
            },
            "examples": {
              "application/json": {
                "activeAccounts": [
                  {
                    "accountId": "XX",
                    "carrierId": "FedEx"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "RequestToken cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/carrierAccounts/{carrierId}": {
      "put": {
        "tags": [
          "shipping"
        ],
        "description": "This API associates/links the specified carrier account with the merchant. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "linkCarrierAccount",
        "parameters": [
          {
            "name": "carrierId",
            "description": "The unique identifier associated with the carrier account.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkCarrierAccountRequest"
            }
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/LinkCarrierAccountResponse"
            },
            "examples": {
              "application/json": {
                "registrationStatus": "ACTIVE"
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "RequestToken cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/carrierAccounts/{carrierId}/unlink": {
      "put": {
        "tags": [
          "shipping"
        ],
        "description": "This API Unlink the specified carrier account with the merchant. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "unlinkCarrierAccount",
        "parameters": [
          {
            "name": "carrierId",
            "description": "carrier Id to unlink with merchant.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnlinkCarrierAccountRequest"
            }
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/UnlinkCarrierAccountResponse"
            },
            "examples": {
              "application/json": {
                "merchantId": "",
                "isUnlinked": true
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "RequestToken cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/collectionForms": {
      "post": {
        "tags": [
          "shipping"
        ],
        "description": "This API  Call to generate the collection form. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "generateCollectionForm",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateCollectionFormRequest"
            }
          },
          {
            "name": "x-amzn-IdempotencyKey",
            "description": "A unique value which the server uses to recognize subsequent retries of the same request.",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GenerateCollectionFormResponse"
            },
            "examples": {
              "application/json": {
                "collectionsFormDocument": {
                  "base64EncodedContent": "VGhpcyBpcyBzb21lIHRleHQgdG8gY29udmVydCB2aWEgQ3J5cHQu",
                  "documentFormat": "application/pdf"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "RequestToken cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/collectionForms/history": {
      "put": {
        "tags": [
          "shipping"
        ],
        "description": "This API Call to get the history of the previously generated collection forms. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getCollectionFormHistory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCollectionFormHistoryRequest"
            }
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetCollectionFormHistoryResponse"
            },
            "examples": {
              "application/json": {
                "collectionFormsHistoryRecordList": [
                  {
                    "carrierName": "USPS",
                    "creationDate": 1650163712052,
                    "generationStatus": "COMPLETED",
                    "collectionFormId": "2c631e32-2538-3431-889e-008b6f5a6f11",
                    "shipFromAddress": "<**-redacted-**>"
                  }
                ],
                "lastRefreshedDate": "April 17 2022 06:20 PM PDT"
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "RequestToken cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/unmanifestedShipments": {
      "put": {
        "tags": [
          "shipping"
        ],
        "description": "This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments\n        with an eligible carrier for manifesting shall be returned. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getUnmanifestedShipments",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetUnmanifestedShipmentsRequest"
            }
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetUnmanifestedShipmentsResponse"
            },
            "examples": {
              "application/json": {
                "unmanifestedCarrierInformationList": [
                  {
                    "carrierId": "USPS",
                    "carrierName": "USPS",
                    "unmanifestedShipmentLocationList": [
                      {
                        "address": "<**-redacted-**>",
                        "lastManifestDate": 1650163712052
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "RequestToken cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/collectionForms/{collectionFormId}": {
      "get": {
        "tags": [
          "shipping"
        ],
        "description": "This API reprint a collection form. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getCollectionForm",
        "parameters": [
          {
            "name": "collectionFormId",
            "in": "path",
            "description": "collection form Id to reprint a collection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetCollectionFormResponse"
            },
            "examples": {
              "application/json": {
                "collectionsFormDocument": {
                  "base64EncodedContent": "VGhpcyBpcyBzb21lIHRleHQgdG8gY29udmVydCB2aWEgQ3J5cHQu",
                  "documentFormat": "application/pdf"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "RequestToken cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/shipping/v2/accessPoints": {
      "get": {
        "tags": [
          "shipping"
        ],
        "description": "Returns a list of access points in proximity of input postal code.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getAccessPoints",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accessPointTypes",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "HELIX",
                "CAMPUS_LOCKER",
                "OMNI_LOCKER",
                "ODIN_LOCKER",
                "DOBBY_LOCKER",
                "CORE_LOCKER",
                "3P",
                "CAMPUS_ROOM"
              ]
            },
            "x-docgen-enum-table-extension": [
              {
                "value": "HELIX",
                "description": "Counter, aka Helix, is an assisted access point where customers interact with a store associate to collect or return packages. Counter stores do not have Locker"
              },
              {
                "value": "CAMPUS_LOCKER",
                "description": "It denotes a physical Locker present at Locker+ stores"
              },
              {
                "value": "OMNI_LOCKER",
                "description": "Omni lockers are similar to core lockers installed at apartment buildings. Core and Omni will have common base hardware platform"
              },
              {
                "value": "ODIN_LOCKER",
                "description": "Odin lockers rely on Bluetooth connection as there is no screen or scanner on the locker. Drivers, customers, and even technicians can interact with the locker using an app (different depending on the user)."
              },
              {
                "value": "DOBBY_LOCKER",
                "description": "Dobby lockers are Odin lockers installed at apartment complexes and available only to residents."
              },
              {
                "value": "CORE_LOCKER",
                "description": "Core lockers are the traditional and initial style of lockers when Hub was launched. Core lockers have a screen, keypad and scanner.  Customer either enter their pickup code using the Locker screen or scan pickup code barcode to pick up their package."
              },
              {
                "value": "3P",
                "description": "Networks that are owned end-to-end by commercial carriers (CC - e.g. DHL, UPS, DPD and Postal organizations), who operate both the transportation leg and the access point aspect. These networks offer a range of pickup points including: 3P Lockers, legacy Postal Offices, 3P Counters (e.g. Gas Stations and Retail Outlets - supermarkets, bookstores, news-stands etc)."
              },
              {
                "value": "CAMPUS_ROOM",
                "description": "Locker+, formerly known as Campus, are attended, physical stores, where the Locker is used dynamically by the staff to keep packages ready for customer pickup. Locker+ store can have multiple Lockers installed,"
              }
            ],
            "collectionFormat": "csv",
            "x-example": "HELIX"
          },
          {
            "in": "query",
            "name": "countryCode",
            "required": true,
            "type": "string",
            "collectionFormat": "csv",
            "x-example": "US"
          },
          {
            "in": "query",
            "name": "postalCode",
            "required": true,
            "type": "string",
            "collectionFormat": "csv",
            "x-example": "EX332JL"
          },
          {
            "name": "x-amzn-shipping-business-id",
            "in": "header",
            "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
            "required": false,
            "type": "string",
            "enum": [
              "AmazonShipping_US",
              "AmazonShipping_IN",
              "AmazonShipping_UK",
              "AmazonShipping_UAE",
              "AmazonShipping_SA",
              "AmazonShipping_EG",
              "AmazonShipping_IT",
              "AmazonShipping_ES",
              "AmazonShipping_FR",
              "AmazonShipping_JP"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "AmazonShipping_US",
                "description": "The United States Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IN",
                "description": "The India Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UK",
                "description": "The United Kingdom Amazon shipping business."
              },
              {
                "value": "AmazonShipping_UAE",
                "description": "The United Arab Emirates Amazon shipping business."
              },
              {
                "value": "AmazonShipping_SA",
                "description": "The Saudi Arabia Amazon shipping business."
              },
              {
                "value": "AmazonShipping_EG",
                "description": "The Egypt Amazon shipping business."
              },
              {
                "value": "AmazonShipping_IT",
                "description": "The Italy Amazon shipping business."
              },
              {
                "value": "AmazonShipping_ES",
                "description": "The Spain Amazon shipping business."
              },
              {
                "value": "AmazonShipping_FR",
                "description": "The France Amazon shipping business."
              },
              {
                "value": "AmazonShipping_JP",
                "description": "The Japan Amazon shipping business."
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetAccessPointsResponse"
            },
            "examples": {
              "application/json": {
                "HELIX": {
                  "accessPointId": "00046c4b-bb0a-4c03-831e-5633e142f16a",
                  "name": "Amazon Hub Counter - Co-op Braunton",
                  "timezone": "Europe/London",
                  "type": "HELIX",
                  "accessibilityAttributes": {
                    "distance": "21.200000762939453",
                    "driveTime": "0.0"
                  },
                  "address": {
                    "addressObject": {
                      "addressLine1": "Exeter Road",
                      "city": "Braunton",
                      "countryCode": "GB",
                      "zipOrPostalCode": "EX33 2JL"
                    },
                    "geocode": {
                      "latitude": "51.1076671",
                      "longitude": "-4.1607301"
                    }
                  },
                  "exceptionOperatingHours": [
                    {
                      "dateRange": {
                        "endDate": "1.6932672E9",
                        "startDate": "1.6931808E9"
                      },
                      "operatingHours": {
                        "closingTime": {
                          "hourOfDay": 0,
                          "minuteOfHour": 0,
                          "secondOfMinute": 0
                        },
                        "midDayClosures": [],
                        "openingTime": {
                          "hourOfDay": 0,
                          "minuteOfHour": 0,
                          "secondOfMinute": 0
                        }
                      }
                    }
                  ],
                  "assistanceType": "STAFF_ASSISTED",
                  "score": "0.6688068509101868",
                  "standardOperatingHours": {
                    "WEDNESDAY": {
                      "closingTime": {
                        "hourOfDay": 22,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      },
                      "midDayClosures": [],
                      "openingTime": {
                        "hourOfDay": 7,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      }
                    },
                    "MONDAY": {
                      "closingTime": {
                        "hourOfDay": 22,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      },
                      "midDayClosures": [],
                      "openingTime": {
                        "hourOfDay": 7,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      }
                    },
                    "THURSDAY": {
                      "closingTime": {
                        "hourOfDay": 22,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      },
                      "midDayClosures": [],
                      "openingTime": {
                        "hourOfDay": 7,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      }
                    },
                    "SUNDAY": {
                      "closingTime": {
                        "hourOfDay": 22,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      },
                      "midDayClosures": [],
                      "openingTime": {
                        "hourOfDay": 7,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      }
                    },
                    "TUESDAY": {
                      "closingTime": {
                        "hourOfDay": 22,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      },
                      "midDayClosures": [],
                      "openingTime": {
                        "hourOfDay": 7,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      }
                    },
                    "FRIDAY": {
                      "closingTime": {
                        "hourOfDay": 22,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      },
                      "midDayClosures": [],
                      "openingTime": {
                        "hourOfDay": 7,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      }
                    },
                    "SATURDAY": {
                      "closingTime": {
                        "hourOfDay": 22,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      },
                      "midDayClosures": [],
                      "openingTime": {
                        "hourOfDay": 7,
                        "minuteOfHour": 0,
                        "secondOfMinute": 0
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "Request is missing or has invalid parameters",
                    "details": "Access Point types cannot be null"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Unauthorized",
                    "message": "You don't have access to the requested response or the credentials are invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "NotFound",
                    "message": "The requested resource is invalid or doesn't exist"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload size is greater than maximum accepted size."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request payload format is not supported."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "TooManyRequests",
                    "message": "The total number of requests exceeded your allowed limit."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InternalError",
                    "message": "Something went wrong while processing the request."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "ServiceUnavailable",
                    "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      },
      "parameters": []
    },
    "/solicitations/v1/orders/{amazonOrderId}": {
      "get": {
        "tags": [
          "solicitations"
        ],
        "description": "Returns a list of solicitation types that are available for an order that you specify. A solicitation type is represented by an actions object, which contains a path and query parameter(s). You can use the path and parameter(s) to call an operation that sends a solicitation. Currently only the productReviewAndSellerFeedbackSolicitation solicitation type is available.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getSolicitationActionsForOrder",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which you want a list of available solicitation types.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns hypermedia links under the _links.actions key that specify which solicitation actions are allowed for the order.",
            "schema": {
              "$ref": "#/definitions/GetSolicitationActionsForOrderResponse"
            },
            "examples": {
              "application/hal+json": {
                "_links": {
                  "actions": [
                    {
                      "href": "/solicitations/v1/orders/903-1671087-0812628/solicitations/productReviewAndSellerFeedback?marketplaceIds=ATVPDKIKX0DER",
                      "name": "productReviewAndSellerFeedback"
                    }
                  ],
                  "self": {
                    "href": "/solicitations/v1/orders/903-1671087-0812628?marketplaceIds=ATVPDKIKX0DER"
                  }
                },
                "_embedded": {
                  "actions": [
                    {
                      "_links": {
                        "schema": {
                          "href": "/solicitations/v1/orders/903-1671087-0812628/solicitations/productReviewAndSellerFeedback/schema",
                          "name": "productReviewAndSellerFeedback"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      },
                      "marketplaceIds": {
                        "value": [
                          "ATVPDKIKX0DER"
                        ]
                      }
                    }
                  },
                  "response": {
                    "_links": {
                      "actions": [
                        {
                          "href": "/solicitations/v1/orders/123-1234567-1234567/solicitations/productReviewAndSellerFeedback?marketplaceIds=ATVPDKIKX0DER",
                          "name": "productReviewAndSellerFeedback"
                        }
                      ],
                      "self": {
                        "href": "/solicitations/v1/orders/123-1234567-1234567?marketplaceIds=ATVPDKIKX0DER"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetSolicitationActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetSolicitationActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetSolicitationActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/GetSolicitationActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetSolicitationActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetSolicitationActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetSolicitationActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetSolicitationActionsForOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/solicitations/v1/orders/{amazonOrderId}/solicitations/productReviewAndSellerFeedback": {
      "post": {
        "tags": [
          "solicitations"
        ],
        "description": "Sends a solicitation to a buyer asking for seller feedback and a product review for the specified order. Send only one productReviewAndSellerFeedback or free form proactive message per order.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 5 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createProductReviewAndSellerFeedbackSolicitation",
        "parameters": [
          {
            "name": "amazonOrderId",
            "in": "path",
            "description": "An Amazon order identifier. This specifies the order for which a solicitation is sent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          }
        ],
        "responses": {
          "201": {
            "description": "The message was created for the order.",
            "schema": {
              "$ref": "#/definitions/CreateProductReviewAndSellerFeedbackSolicitationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "amazonOrderId": {
                        "value": "123-1234567-1234567"
                      }
                    }
                  },
                  "response": {}
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateProductReviewAndSellerFeedbackSolicitationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateProductReviewAndSellerFeedbackSolicitationResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateProductReviewAndSellerFeedbackSolicitationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateProductReviewAndSellerFeedbackSolicitationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateProductReviewAndSellerFeedbackSolicitationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateProductReviewAndSellerFeedbackSolicitationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateProductReviewAndSellerFeedbackSolicitationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateProductReviewAndSellerFeedbackSolicitationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/supplySources/2020-07-01/supplySources": {
      "get": {
        "tags": [
          "supplySources"
        ],
        "description": "The path to retrieve paginated supply sources.",
        "operationId": "getSupplySources",
        "parameters": [
          {
            "name": "nextPageToken",
            "in": "query",
            "description": "The pagination token to retrieve a specific page of results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of supply sources to return per paginated request.",
            "required": false,
            "default": 10,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "supplySources": [
                      {
                        "supplySourceId": "ed85fcf9-798c-4b63-a47e-8d4f0d273ddb",
                        "supplySourceCode": "owner_s2cs_test_010101_aaaas",
                        "alias": "alias_jksjdkf_aaaas",
                        "address": {
                          "addressLine1": "addresline 1234 010101 asaaab",
                          "city": "Red",
                          "stateOrRegion": "string",
                          "postalCode": "99999",
                          "countryCode": "US"
                        }
                      }
                    ],
                    "nextPageToken": "eyJzMl9zb3J0X2tleSI6eyJzIjoic3VwcGx5U291cmNlQ29kZSNvd25lcl9zMmNzX3Rlc3RfMDEwMTAxX2FhYWFzIiwibiI6bnVsbCwiYiI6bnVsbCwibSI6bnVsbCwibCI6bnVsbCwiYnMiOm51bGwsIm5zIjpudWxsLCJzcyI6bnVsbCwibnVsbCI6bnVsbCwiYm9vbCI6bnVsbH0sInMyX3ByaW1hcnlfa2V5Ijp7InMiOiJvd25lciNNZXJjaGFudDpBMU1QWVFRSjVUVThRVSIsIm4iOm51bGwsImIiOm51bGwsIm0iOm51bGwsImwiOm51bGwsImJzIjpudWxsLCJucyI6bnVsbCwic3MiOm51bGwsIm51bGwiOm51bGwsImJvb2wiOm51bGx9LCJsc2lTS0xpdmVDcmVhdGVkVGltZSI6eyJzIjpudWxsLCJuIjoiMTU5NzEyNjU2MSIsImIiOm51bGwsIm0iOm51bGwsImwiOm51bGwsImJzIjpudWxsLCJucyI6bnVsbCwic3MiOm51bGwsIm51bGwiOm51bGwsImJvb2wiOm51bGx9fQ=="
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/GetSupplySourcesResponse"
            }
          },
          "400": {
            "description": "The request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "pageSize": {
                        "value": 3
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid or malformed address Id.",
                        "details": "1012"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "An error that indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "The temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "supplySources"
        ],
        "description": "Create a new supply source.",
        "operationId": "createSupplySource",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "description": "A request to create a supply source.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSupplySourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "supplySourceId": "ed85fcf9-798c-4b63-a47e-8d4f0d273ddb",
                    "supplySourceCode": "owner_s2cs_test_010101_aaaas"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CreateSupplySourceResponse"
            }
          },
          "400": {
            "description": "The request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "supplySourceCode": "owner_s2cs_test_010101_aaaab",
                          "alias": "alias_jksjdkf_aaaab",
                          "address": {
                            "name": "name",
                            "addressLine1": "addresline 1234 010101 asaaab",
                            "city": "Red",
                            "county": "King",
                            "stateOrRegion": "string",
                            "postalCode": "99999",
                            "countryCode": "US",
                            "phone": "string"
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Supply Source with given Code already exists",
                        "details": "1004"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "An error that indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "The temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/supplySources/2020-07-01/supplySources/{supplySourceId}": {
      "get": {
        "tags": [
          "supplySources"
        ],
        "description": "Retrieve a supply source.",
        "operationId": "getSupplySource",
        "parameters": [
          {
            "name": "supplySourceId",
            "in": "path",
            "description": "The unique identifier of a supply source.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "supplySourceId": "cbc976e5-1e55-4d33-855b-35e6254f5a58",
                    "supplySourceCode": "test-gw-435dgh2o39",
                    "alias": "test-gw-ssss",
                    "status": "Inactive",
                    "address": {
                      "addressLine1": "tst-addressLine1-423",
                      "addressLine2": "tes-addressLine2-gew",
                      "addressLine3": "Rufus",
                      "city": "Gekl",
                      "county": "",
                      "district": "",
                      "stateOrRegion": "WA",
                      "postalCode": "59202",
                      "countryCode": "US"
                    },
                    "configuration": {
                      "operationalConfiguration": {
                        "contactDetails": {
                          "primary": {
                            "email": "test324@gmail.com",
                            "phone": "4813924781"
                          }
                        },
                        "throughputConfig": {
                          "throughputCap": {
                            "value": 1,
                            "timeUnit": "Days"
                          },
                          "throughputUnit": "ORDER"
                        },
                        "handlingTime": {
                          "value": 1,
                          "timeUnit": "Hours"
                        },
                        "operatingHoursByDay": {
                          "monday": [
                            {
                              "startTime": "00:59",
                              "endTime": "06:01"
                            }
                          ],
                          "tuesday": [
                            {
                              "startTime": "19:03",
                              "endTime": "23:25"
                            }
                          ],
                          "wednesday": [
                            {
                              "startTime": "00:00",
                              "endTime": "00:00"
                            }
                          ],
                          "thursday": [
                            {
                              "startTime": "00:00",
                              "endTime": "00:00"
                            }
                          ],
                          "friday": [
                            {
                              "startTime": "00:00",
                              "endTime": "00:00"
                            }
                          ],
                          "saturday": [
                            {
                              "startTime": "00:00",
                              "endTime": "00:00"
                            }
                          ],
                          "sunday": [
                            {
                              "startTime": "00:00",
                              "endTime": "00:00"
                            }
                          ]
                        }
                      },
                      "timezone": "Africa/Accra"
                    },
                    "capabilities": {
                      "outbound": {
                        "isSupported": true,
                        "operationalConfiguration": {
                          "contactDetails": {
                            "primary": {
                              "email": "tet@gmail.com",
                              "phone": "4281937491"
                            }
                          },
                          "throughputConfig": {
                            "throughputCap": {
                              "value": 1,
                              "timeUnit": "Days"
                            },
                            "throughputUnit": "ORDER"
                          },
                          "handlingTime": {
                            "value": 1,
                            "timeUnit": "Hours"
                          },
                          "operatingHoursByDay": {
                            "monday": [
                              {
                                "startTime": "00:43",
                                "endTime": "04:05"
                              }
                            ],
                            "tuesday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ],
                            "wednesday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ],
                            "thursday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ],
                            "friday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ],
                            "saturday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ],
                            "sunday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ]
                          }
                        },
                        "deliveryChannel": {
                          "isSupported": false,
                          "operationalConfiguration": {
                            "contactDetails": {
                              "primary": {
                                "email": "",
                                "phone": ""
                              }
                            },
                            "throughputConfig": {
                              "throughputCap": {
                                "value": 1,
                                "timeUnit": "Days"
                              },
                              "throughputUnit": "ORDER"
                            },
                            "handlingTime": {
                              "value": 1,
                              "timeUnit": "Hours"
                            }
                          }
                        },
                        "pickupChannel": {
                          "isSupported": true,
                          "inventoryHoldPeriod": {
                            "value": 452,
                            "timeUnit": "Minutes"
                          },
                          "operationalConfiguration": {
                            "contactDetails": {
                              "primary": {
                                "email": "yre4@gmail.com",
                                "phone": "4381232840"
                              }
                            },
                            "throughputConfig": {
                              "throughputCap": {
                                "value": 1,
                                "timeUnit": "Days"
                              },
                              "throughputUnit": "ORDER"
                            },
                            "handlingTime": {
                              "value": 1,
                              "timeUnit": "Hours"
                            }
                          }
                        }
                      },
                      "services": {
                        "isSupported": true,
                        "operationalConfiguration": {
                          "contactDetails": {
                            "primary": {
                              "email": "testservices@gmail.com",
                              "phone": "4281937491"
                            }
                          },
                          "operatingHoursByDay": {
                            "monday": [
                              {
                                "startTime": "00:43",
                                "endTime": "04:05"
                              }
                            ],
                            "tuesday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ],
                            "wednesday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ],
                            "thursday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ],
                            "friday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ],
                            "saturday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ],
                            "sunday": [
                              {
                                "startTime": "00:00",
                                "endTime": "00:00"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "createdAt": "1.596578152E9",
                    "updatedAt": "1.596842808E9"
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SupplySource"
            }
          },
          "400": {
            "description": "The request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "supplySourceId": {
                        "value": "cbc976e5-1e55-4d33-855b-35e6254f5a5"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid Input",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "An error that indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "The temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "supplySources"
        ],
        "description": "Update the configuration and capabilities of a supply source.",
        "operationId": "updateSupplySource",
        "parameters": [
          {
            "name": "supplySourceId",
            "in": "path",
            "description": "The unique identitier of a supply source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateSupplySourceRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {}
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "400": {
            "description": "The request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "supplySourceId": {
                        "value": "cf146560-392a-43e6-bf99-2ca3b5d42b5c"
                      },
                      "body": {
                        "value": {
                          "alias": "test-config",
                          "configuration": {
                            "operationalConfiguration": {
                              "contactDetails": {
                                "primary": {
                                  "email": "111@gmail.com",
                                  "phone": "111"
                                }
                              },
                              "operatingHoursByDay": {
                                "monday": [
                                  {
                                    "startTime": "01:30",
                                    "endTime": "02:40"
                                  }
                                ],
                                "tuesday": [
                                  {
                                    "startTime": "2:00",
                                    "endTime": "2:00"
                                  }
                                ]
                              },
                              "throughputConfig": {
                                "throughputCap": {
                                  "value": 17,
                                  "timeUnit": "Hours"
                                }
                              },
                              "handlingTime": {
                                "value": 1,
                                "timeUnit": "Hours"
                              }
                            },
                            "timezone": "Africa/Accra"
                          },
                          "capabilities": {
                            "outbound": {
                              "isSupported": true,
                              "operationalConfiguration": {
                                "contactDetails": {
                                  "primary": {
                                    "email": "outbound@gmail.com",
                                    "phone": "222"
                                  }
                                },
                                "operatingHoursByDay": {
                                  "wednesday": [
                                    {
                                      "startTime": "03:30",
                                      "endTime": "03:40"
                                    }
                                  ],
                                  "thursday": [
                                    {
                                      "startTime": "4:00",
                                      "endTime": "4:00"
                                    }
                                  ]
                                },
                                "throughputConfig": {
                                  "throughputCap": {
                                    "value": 10,
                                    "timeUnit": "Hours"
                                  }
                                },
                                "handlingTime": {
                                  "value": 1,
                                  "timeUnit": "Hours"
                                }
                              },
                              "returnLocation": {
                                "addressWithContact": {
                                  "address": {
                                    "addressLine1": "returnLocation",
                                    "countryCode": "na"
                                  },
                                  "contactDetails": {
                                    "primary": {
                                      "email": "returnLocation@gmail.com",
                                      "phone": "333"
                                    }
                                  }
                                },
                                "supplySourceId": "cbb1658a-949e-4c42-9d29-6c38ac1c4746"
                              },
                              "deliveryChannel": {
                                "isSupported": true,
                                "operationalConfiguration": {
                                  "contactDetails": {
                                    "primary": {
                                      "email": "deliveryChannel@gmail.com",
                                      "phone": "444"
                                    }
                                  },
                                  "operatingHoursByDay": {
                                    "friday": [
                                      {
                                        "startTime": "03:30",
                                        "endTime": "03:40"
                                      }
                                    ],
                                    "thursday": [
                                      {
                                        "startTime": "4:00",
                                        "endTime": "4:00"
                                      }
                                    ]
                                  },
                                  "throughputConfig": {
                                    "throughputCap": {
                                      "value": 4,
                                      "timeUnit": "Hours"
                                    }
                                  },
                                  "handlingTime": {
                                    "value": 1,
                                    "timeUnit": "Hours"
                                  }
                                }
                              },
                              "pickupChannel": {
                                "isSupported": true,
                                "inventoryHoldPeriod": {
                                  "value": 4,
                                  "timeUnit": "Minutes"
                                },
                                "operationalConfiguration": {
                                  "contactDetails": {
                                    "primary": {
                                      "email": "pickupChannel@gmail.com",
                                      "phone": "555"
                                    }
                                  },
                                  "operatingHoursByDay": {
                                    "saturday": [
                                      {
                                        "startTime": "12:30",
                                        "endTime": "03:40"
                                      }
                                    ],
                                    "sunday": [
                                      {
                                        "startTime": "5:00",
                                        "endTime": "23:30"
                                      }
                                    ]
                                  },
                                  "throughputConfig": {
                                    "throughputCap": {
                                      "value": 3,
                                      "timeUnit": "Hours"
                                    }
                                  },
                                  "handlingTime": {
                                    "value": 1,
                                    "timeUnit": "Hours"
                                  }
                                }
                              }
                            },
                            "services": {
                              "isSupported": true,
                              "operationalConfiguration": {
                                "contactDetails": {
                                  "primary": {
                                    "email": "services@gmail.com",
                                    "phone": "222"
                                  }
                                },
                                "operatingHoursByDay": {
                                  "wednesday": [
                                    {
                                      "startTime": "03:30",
                                      "endTime": "03:40"
                                    }
                                  ],
                                  "thursday": [
                                    {
                                      "startTime": "4:00",
                                      "endTime": "4:00"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Supply Source has been archived and cannot be modified.",
                        "details": "1005"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "An error that indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "The temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "supplySources"
        ],
        "description": "Archive a supply source, making it inactive. Cannot be undone.",
        "operationId": "archiveSupplySource",
        "parameters": [
          {
            "name": "supplySourceId",
            "in": "path",
            "description": "The unique identifier of a supply source.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {}
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "400": {
            "description": "The request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "supplySourceId": {
                        "value": "cf146560-392a-43e6-bf99-2ca3b5d42b5c"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Supply Source has been archived and cannot be modified.",
                        "details": "1005"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "The temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/supplySources/2020-07-01/supplySources/{supplySourceId}/status": {
      "put": {
        "tags": [
          "supplySources"
        ],
        "description": "Update the status of a supply source.",
        "operationId": "updateSupplySourceStatus",
        "parameters": [
          {
            "name": "supplySourceId",
            "in": "path",
            "description": "The unique identifier of a supply source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateSupplySourceStatusRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {}
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "400": {
            "description": "The request has missing or invalid parameters and cannot be parsed.",
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "supplySourceId": {
                        "value": "cf146560-392a-43e6-bf99-2ca3b5d42b5c"
                      },
                      "body": {
                        "value": {
                          "status": "Inactive"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Supply Source has been archived and cannot be modified.",
                        "details": "1005"
                      }
                    ]
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "supplySourceId": {
                        "value": "cf146560-392a-43e6-bf99-2ca3b5d42b5c"
                      },
                      "body": {
                        "value": {
                          "status": "Active"
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Supply Source has been archived and cannot be modified.",
                        "details": "1005"
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "The temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "description": "The unique request reference ID.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    },
    "/tokens/2021-03-01/restrictedDataToken": {
      "post": {
        "operationId": "createRestrictedDataToken",
        "tags": [
          "tokens"
        ],
        "description": "Returns a Restricted Data Token (RDT) for one or more restricted resources that you specify. A restricted resource is the HTTP method and path from a restricted operation that returns Personally Identifiable Information (PII), plus a dataElements value that indicates the type of PII requested. See the Tokens API Use Case Guide for a list of restricted operations. Use the RDT returned here as the access token in subsequent calls to the corresponding restricted operations.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The restricted data token request details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRestrictedDataTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateRestrictedDataTokenResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "targetApplication": "amzn1.sellerapps.app.target-application",
                          "restrictedResources": [
                            {
                              "method": "GET",
                              "path": "/orders/v0/orders/{orderId}/address"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "restrictedDataToken": "Atz.sprdt|IQEBLjAsAhRmHjNgHpi0U-Dme37rR6CuUpSR",
                    "expiresIn": 3600
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "restrictedResources": [
                            {
                              "method": "GET",
                              "path": "/orders/v0/orders/943-12-123434/address"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "restrictedDataToken": "Atz.sprdt|AODFNESLjAsAhRmHjNgHpi0U-Dme37rR6CuUpSR",
                    "expiresIn": 3600
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "targetApplication": "amzn1.sellerapps.app.target-application",
                          "restrictedResources": [
                            {
                              "method": "",
                              "path": "/orders/v1/orders/902-1845936-5435065/address"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidRequest",
                        "message": "Request is missing or has invalid parameters",
                        "details": "Resource not provided."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned.",
                "type": "string"
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/uploads/2020-11-01/uploadDestinations/{resource}": {
      "post": {
        "tags": [
          "uploads"
        ],
        "description": "Creates an upload destination, returning the information required to upload a file to the destination and to programmatically access the file.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createUploadDestinationForResource",
        "parameters": [
          {
            "name": "marketplaceIds",
            "in": "query",
            "description": "A list of marketplace identifiers. This specifies the marketplaces where the upload will be available. Only one marketplace can be specified.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1
          },
          {
            "name": "contentMD5",
            "in": "query",
            "description": "An MD5 hash of the content to be submitted to the upload destination. This value is used to determine if the data has been corrupted or tampered with during transit.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "path",
            "description": "The resource for the upload destination that you are creating. For example, if you are creating an upload destination for the createLegalDisclosure operation of the Messaging API, the `{resource}` would be `/messaging/v1/orders/{amazonOrderId}/messages/legalDisclosure`, and the entire path would be `/uploads/2020-11-01/uploadDestinations/messaging/v1/orders/{amazonOrderId}/messages/legalDisclosure`. If you are creating an upload destination for an Aplus content document, the `{resource}` would be `aplus/2020-11-01/contentDocuments` and the path would be `/uploads/v1/uploadDestinations/aplus/2020-11-01/contentDocuments`.",
            "required": true,
            "type": "string",
            "x-amazon-spds-greedy-path-parameter": true
          },
          {
            "name": "contentType",
            "in": "query",
            "description": "The content type of the file to be uploaded.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateUploadDestinationResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "uploadDestinationId": "5d4e42b5-1d6e-44e8-a89c-2abfca0625bb",
                  "url": "https://s3.amazonaws.com/buyer-seller-messaging-test-draft-attachment-namarketplace/%2F067/5d4e42b5-1d6e-44e8-a89c-2abfca0625bb?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20190701T214102Z&X-Amz-SignedHeaders=content-md5%3Bhost%3Bx-amz-server-side-encryption&X-Amz-Expires=900&X-Amz-Credential=AKIAW5VUA47ENEOYT7RC%2F20190701%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=d4f85c5f1a32a788a8d54e3f00a2a08af45be5b83551cdd81c82ae353dfcdfd4",
                  "headers": {
                    "Content-MD5": "5d41402abc4b2a76b9719d911017c592",
                    "x-amz-server-side-encryption": "aws:kms"
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CreateUploadDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CreateUploadDestinationResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/CreateUploadDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/CreateUploadDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/CreateUploadDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CreateUploadDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CreateUploadDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CreateUploadDestinationResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/vendor/directFulfillment/inventory/v1/warehouses/{warehouseId}/items": {
      "post": {
        "tags": [
          "updateInventory"
        ],
        "description": "Submits inventory updates for the specified warehouse for either a partial or full feed of inventory items.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "submitInventoryUpdate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitInventoryUpdateRequest"
            },
            "description": "The request body containing the inventory update data to submit."
          },
          {
            "name": "warehouseId",
            "in": "path",
            "description": "Identifier for the warehouse for which to update inventory.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SubmitInventoryUpdateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "inventory": {
                            "sellingParty": {
                              "partyId": "VENDORID"
                            },
                            "isFullUpdate": false,
                            "items": [
                              {
                                "buyerProductIdentifier": "ABCD4562",
                                "vendorProductIdentifier": "7Q89K11",
                                "availableQuantity": {
                                  "amount": 10,
                                  "unitOfMeasure": "Each"
                                },
                                "isObsolete": false
                              },
                              {
                                "buyerProductIdentifier": "ABCD4563",
                                "vendorProductIdentifier": "7Q89K12",
                                "availableQuantity": {
                                  "amount": 15,
                                  "unitOfMeasure": "Each"
                                },
                                "isObsolete": false
                              },
                              {
                                "buyerProductIdentifier": "ABCD4564",
                                "vendorProductIdentifier": "7Q89K13",
                                "availableQuantity": {
                                  "amount": 20,
                                  "unitOfMeasure": "Each"
                                },
                                "isObsolete": false
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "transactionId": "20190905010908-8a3b6901-ef20-412f-9270-21c021796605"
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {}
                    }
                  },
                  "response": {
                    "payload": {
                      "transactionId": "mock-TransactionId-20190905010908-8a3b6901-ef20-412f-9270-21c021796605"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/SubmitInventoryUpdateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "warehouseId": {
                        "value": "DUMMYCODE"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid transmission ID.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/SubmitInventoryUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/SubmitInventoryUpdateResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/SubmitInventoryUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/SubmitInventoryUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/SubmitInventoryUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/SubmitInventoryUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/SubmitInventoryUpdateResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/vendor/directFulfillment/orders/2021-12-28/purchaseOrders": {
      "get": {
        "tags": [
          "vendorOrders"
        ],
        "description": "Returns a list of purchase orders created during the time frame that you specify. You define the time frame using the createdAfter and createdBefore parameters. You must use both parameters. You can choose to get only the purchase order numbers by setting the includeDetails parameter to false. In that case, the operation returns a list of purchase order numbers. You can then call the getOrder operation to return the details of a specific order.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getOrders1",
        "parameters": [
          {
            "name": "shipFromPartyId",
            "in": "query",
            "description": "The vendor warehouse identifier for the fulfillment warehouse. If not specified, the result will contain orders for all warehouses.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Returns only the purchase orders that match the specified status. If not specified, the result will contain orders that match any status.",
            "required": false,
            "type": "string",
            "enum": [
              "NEW",
              "SHIPPED",
              "ACCEPTED",
              "CANCELLED"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "NEW",
                "description": "Status for newly created purchase orders."
              },
              {
                "value": "SHIPPED",
                "description": "Status for purchase orders that are already shipped."
              },
              {
                "value": "ACCEPTED",
                "description": "Status for purchase orders accepted by vendors."
              },
              {
                "value": "CANCELLED",
                "description": "Status for cancelled purchase orders."
              }
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The limit to the number of purchase orders returned.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Purchase orders that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Purchase orders that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort the list in ascending or descending order by order creation date.",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Sort in ascending order by order creation date."
              },
              {
                "value": "DESC",
                "description": "Sort in descending order by order creation date."
              }
            ]
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "Used for pagination when there are more orders than the specified result size limit. The token value is returned in the previous API call.",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeDetails",
            "in": "query",
            "description": "When true, returns the complete purchase order details. Otherwise, only purchase order numbers are returned.",
            "required": false,
            "type": "string",
            "default": "true",
            "format": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/OrderList"
            },
            "examples": {
              "pagination": {
                "nextToken": "MDAwMDAwMDAwMQ=="
              },
              "orders": [
                {
                  "purchaseOrderNumber": "2JK3S9VC",
                  "orderDetails": {
                    "customerOrderNumber": "123-ABC",
                    "orderDate": "2020-02-20T13:51:00Z",
                    "orderStatus": "NEW",
                    "shipmentDetails": {
                      "isPriorityShipment": false,
                      "isScheduledDeliveryShipment": false,
                      "isPslipRequired": true,
                      "isGift": false,
                      "shipMethod": "UPS_2ND",
                      "shipmentDates": {
                        "requiredShipDate": "2020-02-21T00:00:00Z",
                        "promisedDeliveryDate": "2020-02-24T00:00:00Z"
                      },
                      "messageToCustomer": "This shipment completes your order. You can always check the status of your orders from the \"Your Account\" link at the top of each page of our site.Thank you for shopping at Amazon.com"
                    },
                    "taxTotal": {
                      "taxLineItem": [
                        {
                          "taxRate": "0.1",
                          "taxAmount": {
                            "currencyCode": "USD",
                            "amount": "190"
                          },
                          "type": "TOTAL"
                        }
                      ]
                    },
                    "sellingParty": {
                      "partyId": "999US"
                    },
                    "shipFromParty": {
                      "partyId": "ABCD"
                    },
                    "shipToParty": {
                      "name": "ABCD",
                      "attention": "ABCD",
                      "addressLine1": "123 XYZ Street",
                      "addressLine2": "Apt 5",
                      "city": "San Jose",
                      "stateOrRegion": "CA",
                      "postalCode": "94086",
                      "countryCode": "USA"
                    },
                    "billToParty": {
                      "partyId": "ABCD"
                    },
                    "items": [
                      {
                        "itemSequenceNumber": "00001",
                        "buyerProductIdentifier": "B07DFVDRAB",
                        "vendorProductIdentifier": "8806098286500",
                        "title": "LG 8 kg Inverter Wi-Fi Fully-Automatic Front Loading Washing Machine (FHT1408SWS, STS-VCM, Inbuilt Heater)",
                        "orderedQuantity": {
                          "amount": 1,
                          "unitOfMeasure": "EACH"
                        },
                        "netPrice": {
                          "currencyCode": "USD",
                          "amount": "500"
                        },
                        "taxDetails": {
                          "taxLineItem": [
                            {
                              "taxRate": "0.1",
                              "taxAmount": {
                                "currencyCode": "USD",
                                "amount": "50"
                              },
                              "type": "TOTAL"
                            }
                          ]
                        },
                        "buyerCustomizedInfo": {
                          "customizedUrl": "aHR0cHM6Ly8xcC1kZi1wdWJsaWMtZGF0YS5zMy5hbWF6b25hd3MuY29tLzExMS0xMjYwNzQ1LTYyOTE0MTZfNTgzNjIxNTQwMTM1NjEuemlw"
                        }
                      },
                      {
                        "itemSequenceNumber": "00002",
                        "buyerProductIdentifier": "B07DFYF5AB",
                        "vendorProductIdentifier": "8806098286123",
                        "title": "LG 6.5 kg Inverter Fully-Automatic Front Loading Washing Machine (FHT1065SNW, Blue and White, Inbuilt Heater)",
                        "orderedQuantity": {
                          "amount": 2,
                          "unitOfMeasure": "EACH"
                        },
                        "netPrice": {
                          "currencyCode": "USD",
                          "amount": "700"
                        },
                        "taxDetails": {
                          "taxLineItem": [
                            {
                              "taxRate": "0.1",
                              "taxAmount": {
                                "currencyCode": "USD",
                                "amount": "140"
                              },
                              "type": "TOTAL"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/orders/2021-12-28/purchaseOrders/{purchaseOrderNumber}": {
      "get": {
        "tags": [
          "vendorOrders"
        ],
        "description": "Returns purchase order information for the purchaseOrderNumber that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getOrder1",
        "parameters": [
          {
            "name": "purchaseOrderNumber",
            "in": "path",
            "description": "The order identifier for the purchase order that you want. Formatting Notes: alpha-numeric code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "examples": {
              "application/json": {
                "purchaseOrderNumber": "2JK3S9VC",
                "orderDetails": {
                  "customerOrderNumber": "123-ABC",
                  "orderDate": "2020-02-20T13:51:00Z",
                  "orderStatus": "NEW",
                  "shipmentDetails": {
                    "isPriorityShipment": false,
                    "isScheduledDeliveryShipment": false,
                    "isPslipRequired": true,
                    "isGift": false,
                    "shipMethod": "UPS_2ND",
                    "shipmentDates": {
                      "requiredShipDate": "2020-02-21T00:00:00Z",
                      "promisedDeliveryDate": "2020-02-24T00:00:00Z"
                    },
                    "messageToCustomer": "This shipment completes your order. You can always check the status of your orders from the \"Your Account\" link at the top of each page of our site.Thank you for shopping at Amazon.com"
                  },
                  "taxTotal": {
                    "taxLineItem": [
                      {
                        "taxAmount": {
                          "currencyCode": "USD",
                          "amount": "190"
                        },
                        "type": "TOTAL"
                      }
                    ]
                  },
                  "sellingParty": {
                    "partyId": "999US"
                  },
                  "shipFromParty": {
                    "partyId": "ABCD"
                  },
                  "shipToParty": {
                    "name": "ABCD",
                    "attention": "ABCD",
                    "addressLine1": "123 XYZ Street",
                    "addressLine2": "Apt 5",
                    "city": "San Jose",
                    "stateOrRegion": "CA",
                    "postalCode": "94086",
                    "countryCode": "USA"
                  },
                  "billToParty": {
                    "partyId": "ABCD"
                  },
                  "items": [
                    {
                      "itemSequenceNumber": "00001",
                      "buyerProductIdentifier": "B07DFVDRAB",
                      "vendorProductIdentifier": "8806098286500",
                      "title": "LG 8 kg Inverter Wi-Fi Fully-Automatic Front Loading Washing Machine (FHT1408SWS, STS-VCM, Inbuilt Heater)",
                      "orderedQuantity": {
                        "amount": 1,
                        "unitOfMeasure": "EACH"
                      },
                      "netPrice": {
                        "currencyCode": "USD",
                        "amount": "500"
                      },
                      "taxDetails": {
                        "taxLineItem": [
                          {
                            "taxRate": "0.1",
                            "taxAmount": {
                              "currencyCode": "USD",
                              "amount": "50"
                            },
                            "type": "TOTAL"
                          }
                        ]
                      },
                      "buyerCustomizedInfo": {
                        "customizedUrl": "aHR0cHM6Ly8xcC1kZi1wdWJsaWMtZGF0YS5zMy5hbWF6b25hd3MuY29tLzExMS0xMjYwNzQ1LTYyOTE0MTZfNTgzNjIxNTQwMTM1NjEuemlw"
                      }
                    },
                    {
                      "itemSequenceNumber": "00002",
                      "buyerProductIdentifier": "B07DFYF5AB",
                      "vendorProductIdentifier": "8806098286123",
                      "title": "LG 6.5 kg Inverter Fully-Automatic Front Loading Washing Machine (FHT1065SNW, Blue and White, Inbuilt Heater)",
                      "orderedQuantity": {
                        "amount": 2,
                        "unitOfMeasure": "EACH"
                      },
                      "netPrice": {
                        "currencyCode": "USD",
                        "amount": "700"
                      },
                      "taxDetails": {
                        "taxLineItem": [
                          {
                            "taxRate": "0.1",
                            "taxAmount": {
                              "currencyCode": "USD",
                              "amount": "140"
                            },
                            "type": "TOTAL"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/orders/2021-12-28/acknowledgements": {
      "post": {
        "tags": [
          "vendorOrders"
        ],
        "description": "Submits acknowledgements for one or more purchase orders.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "submitAcknowledgement",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementRequest"
            },
            "description": "The request body containing the acknowledgement to an order"
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TransactionId"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/payments/v1/invoices": {
      "post": {
        "tags": [
          "vendorInvoice"
        ],
        "description": "Submits one or more invoices for a vendor's direct fulfillment orders.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "submitInvoice1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The request body containing one or more invoices for vendor orders.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "invoices": [
                            {
                              "invoiceNumber": "0092590411",
                              "invoiceDate": "2020-03-13T11:16:24Z",
                              "remitToParty": {
                                "partyId": "YourVendorCode",
                                "address": {
                                  "name": "vendor name",
                                  "addressLine1": "vendor address 1",
                                  "addressLine2": "vendor address 2",
                                  "addressLine3": "vendor address 3",
                                  "city": "DECity",
                                  "county": "Schwabing",
                                  "district": "München",
                                  "stateOrRegion": "Bayern",
                                  "postalCode": "DEPostCode",
                                  "countryCode": "DE"
                                },
                                "taxRegistrationDetails": [
                                  {
                                    "taxRegistrationType": "VAT",
                                    "taxRegistrationNumber": "DE123456789"
                                  }
                                ]
                              },
                              "shipFromParty": {
                                "partyId": "ABCD"
                              },
                              "billToParty": {
                                "partyId": "5450534005838",
                                "address": {
                                  "name": "Amazon EU SARL",
                                  "addressLine1": "Marcel-Breuer-Str. 12",
                                  "city": "München",
                                  "county": "Schwabing",
                                  "district": "München",
                                  "stateOrRegion": "Bayern",
                                  "postalCode": "80807",
                                  "countryCode": "DE"
                                },
                                "taxRegistrationDetails": [
                                  {
                                    "taxRegistrationType": "VAT",
                                    "taxRegistrationNumber": "DE814584193",
                                    "taxRegistrationAddress": {
                                      "name": "Amazon EU SARL",
                                      "addressLine1": "Marcel-Breuer-Str. 12",
                                      "city": "München",
                                      "stateOrRegion": "Bayern",
                                      "postalCode": "80807",
                                      "countryCode": "DE"
                                    },
                                    "taxRegistrationMessage": "txmessage"
                                  }
                                ]
                              },
                              "shipToCountryCode": "DE",
                              "paymentTermsCode": "Basic",
                              "invoiceTotal": {
                                "currencyCode": "EUR",
                                "amount": "1428.00"
                              },
                              "taxTotals": [
                                {
                                  "taxType": "CGST",
                                  "taxRate": "0.19",
                                  "taxAmount": {
                                    "currencyCode": "EUR",
                                    "amount": "228.00"
                                  },
                                  "taxableAmount": {
                                    "currencyCode": "EUR",
                                    "amount": "1200.00"
                                  }
                                }
                              ],
                              "items": [
                                {
                                  "itemSequenceNumber": "1",
                                  "buyerProductIdentifier": "B00IVLAABC",
                                  "invoicedQuantity": {
                                    "amount": 1,
                                    "unitOfMeasure": "Each"
                                  },
                                  "netCost": {
                                    "currencyCode": "EUR",
                                    "amount": "1200.00"
                                  },
                                  "purchaseOrderNumber": "D3rC3KTxG",
                                  "vendorOrderNumber": "0092590411",
                                  "hsnCode": "76.06.92.99.00",
                                  "taxDetails": [
                                    {
                                      "taxType": "CGST",
                                      "taxRate": "0.19",
                                      "taxAmount": {
                                        "currencyCode": "EUR",
                                        "amount": "228.00"
                                      },
                                      "taxableAmount": {
                                        "currencyCode": "EUR",
                                        "amount": "1200.00"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "transactionId": "20190905010908-8a3b6901-ef20-412f-9270-21c021796605"
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {}
                    }
                  },
                  "response": {
                    "payload": {
                      "transactionId": "mock-TransactionId-20190905010908-8a3b6901-ef20-412f-9270-21c021796605"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "invoices": [
                            {
                              "invoiceNumber": "TestInvoice400",
                              "invoiceDate": "2020-08.13"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "The value '2020-03.13' of element 'invoiceDate' is not valid.",
                        "details": ""
                      },
                      {
                        "code": "InvalidInput",
                        "message": "The content of element 'invoice' is not complete. One of '{invoiceNumber, referenceNumber}' is expected.",
                        "details": ""
                      },
                      {
                        "code": "InvalidInput",
                        "message": "'2020-03.13' is not a valid value for 'dateTime'.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoiceResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/vendor/directFulfillment/shipping/2021-12-28/shippingLabels": {
      "get": {
        "tags": [
          "vendorShippingLabels"
        ],
        "description": "Returns a list of shipping labels created during the time frame that you specify. You define that time frame using the createdAfter and createdBefore parameters. You must use both of these parameters. The date range to search must not be more than 7 days.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShippingLabels",
        "parameters": [
          {
            "name": "shipFromPartyId",
            "in": "query",
            "description": "The vendor warehouseId for order fulfillment. If not specified, the result will contain orders for all warehouses.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The limit to the number of records returned.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Shipping labels that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Shipping labels that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort ASC or DESC by order creation date.",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Sort in ascending order by order creation date."
              },
              {
                "value": "DESC",
                "description": "Sort in descending order by order creation date."
              }
            ]
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "Used for pagination when there are more ship labels than the specified result size limit. The token value is returned in the previous API call.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ShippingLabelList"
            },
            "examples": {
              "pagination": {
                "nextToken": "MDAwMDAwMDAwMQ=="
              },
              "shippingLabels": [
                {
                  "purchaseOrderNumber": "2JK3S9VCE",
                  "sellingParty": {
                    "partyId": "999US"
                  },
                  "shipFromParty": {
                    "partyId": "ABCD"
                  },
                  "labelFormat": "PNG",
                  "labelData": [
                    {
                      "packageIdentifier": "PKG001",
                      "trackingNumber": "1Z6A34Y60369738804",
                      "shipMethod": "UPS_GR_RES",
                      "shipMethodName": "UPS Ground Residential",
                      "content": "Base 64 encoded string goes here "
                    }
                  ]
                },
                {
                  "purchaseOrderNumber": "2JK3S9VD",
                  "sellingParty": {
                    "partyId": "999US"
                  },
                  "shipFromParty": {
                    "partyId": "ABCD"
                  },
                  "labelFormat": "PNG",
                  "labelData": [
                    {
                      "packageIdentifier": "PKG002",
                      "trackingNumber": "1Z6A34Y60369738805",
                      "shipMethod": "UPS_GR_RES",
                      "shipMethodName": "UPS Ground Residential",
                      "content": "Base 64 encoded string goes here "
                    }
                  ]
                }
              ]
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request is invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      },
      "post": {
        "tags": [
          "vendorShippingLabels"
        ],
        "description": "Creates a shipping label for a purchase order and returns a transactionId for reference.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "submitShippingLabelRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitShippingLabelsRequest"
            },
            "description": "Request body containing the shipping labels data."
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TransactionReference"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/shipping/2021-12-28/shippingLabels/{purchaseOrderNumber}": {
      "get": {
        "tags": [
          "vendorShippingLabels"
        ],
        "description": "Returns a shipping label for the purchaseOrderNumber that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getShippingLabel",
        "parameters": [
          {
            "name": "purchaseOrderNumber",
            "in": "path",
            "description": "The purchase order number for which you want to return the shipping label and should be the same purchaseOrderNumber as received in the order.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ShippingLabel"
            },
            "examples": {
              "application/json": {
                "purchaseOrderNumber": "2JK3S9VC",
                "sellingParty": {
                  "partyId": "999US"
                },
                "shipFromParty": {
                  "partyId": "ABCD"
                },
                "labelFormat": "PNG",
                "labelData": [
                  {
                    "packageIdentifier": "PKG001",
                    "trackingNumber": "1Z6A34Y60369738804",
                    "shipMethod": "UPS_GR_RES",
                    "shipMethodName": "UPS Ground Residential",
                    "content": ""
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      },
      "post": {
        "tags": [
          "vendorShippingLabels"
        ],
        "description": "Creates shipping labels for a purchase order and returns the labels.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "createShippingLabels",
        "parameters": [
          {
            "name": "purchaseOrderNumber",
            "in": "path",
            "description": "The purchase order number for which you want to return the shipping labels. It should be the same purchaseOrderNumber as received in the order.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+$"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "The request payload containing parameters for creating shipping labels.",
            "schema": {
              "$ref": "#/definitions/CreateShippingLabelsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ShippingLabel"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "409": {
            "description": "The request conflicts with the current state of the resource (shipment).",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/shipping/2021-12-28/shipmentConfirmations": {
      "post": {
        "tags": [
          "vendorShipping"
        ],
        "description": "Submits one or more shipment confirmations for vendor orders.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "submitShipmentConfirmations",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsRequest"
            },
            "description": "Request body containing the shipment confirmations data."
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TransactionReference"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/shipping/2021-12-28/shipmentStatusUpdates": {
      "post": {
        "tags": [
          "vendorShipping"
        ],
        "description": "This operation is only to be used by Vendor-Own-Carrier (VOC) vendors. Calling this API submits a shipment status update for the package that a vendor has shipped. It will provide the Amazon customer visibility on their order, when the package is outside of Amazon Network visibility.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "submitShipmentStatusUpdates",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitShipmentStatusUpdatesRequest"
            },
            "description": "Request body containing the shipment status update data."
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TransactionReference"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/shipping/2021-12-28/customerInvoices": {
      "get": {
        "tags": [
          "customerInvoices"
        ],
        "description": "Returns a list of customer invoices created during a time frame that you specify. You define the time frame using the createdAfter and createdBefore parameters. You must use both of these parameters. The date range to search must be no more than 7 days.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getCustomerInvoices",
        "parameters": [
          {
            "name": "shipFromPartyId",
            "in": "query",
            "description": "The vendor warehouseId for order fulfillment. If not specified, the result will contain orders for all warehouses.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The limit to the number of records returned",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Orders that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Orders that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort ASC or DESC by order creation date.",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Sort in ascending order by order creation date."
              },
              {
                "value": "DESC",
                "description": "Sort in descending order by order creation date."
              }
            ]
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "Used for pagination when there are more orders than the specified result size limit. The token value is returned in the previous API call.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceList"
            },
            "examples": {
              "payload": {
                "pagination": {
                  "nextToken": "MDAwMDAwMDAwMQ=="
                },
                "customerInvoices": [
                  {
                    "purchaseOrderNumber": "PO98676856",
                    "content": "base 64 content goes here"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request is invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/shipping/2021-12-28/customerInvoices/{purchaseOrderNumber}": {
      "get": {
        "tags": [
          "customerInvoices"
        ],
        "description": "Returns a customer invoice based on the purchaseOrderNumber that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getCustomerInvoice",
        "parameters": [
          {
            "name": "purchaseOrderNumber",
            "in": "path",
            "description": "Purchase order number of the shipment for which to return the invoice.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            },
            "examples": {
              "application/json": {
                "purchaseOrderNumber": "PO98676856",
                "content": "base 64 encoded string"
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/shipping/2021-12-28/packingSlips": {
      "get": {
        "tags": [
          "vendorShipping"
        ],
        "description": "Returns a list of packing slips for the purchase orders that match the criteria specified. Date range to search must not be more than 7 days.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getPackingSlips",
        "parameters": [
          {
            "name": "shipFromPartyId",
            "in": "query",
            "description": "The vendor warehouseId for order fulfillment. If not specified the result will contain orders for all warehouses.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The limit to the number of records returned",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Packing slips that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Packing slips that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort ASC or DESC by packing slip creation date.",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Sort in ascending order by packing slip creation date."
              },
              {
                "value": "DESC",
                "description": "Sort in descending order by packing slip creation date."
              }
            ]
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "Used for pagination when there are more packing slips than the specified result size limit. The token value is returned in the previous API call.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PackingSlipList"
            },
            "examples": {
              "application/json": {
                "pagination": {
                  "nextToken": "NEBxNEBxNEBxNR=="
                },
                "packingSlips": [
                  {
                    "purchaseOrderNumber": "UvgABdBjQ",
                    "content": "",
                    "contentType": "application/pdf"
                  },
                  {
                    "purchaseOrderNumber": "VvgCDdBjR",
                    "content": "",
                    "contentType": "application/pdf"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request is invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/shipping/2021-12-28/packingSlips/{purchaseOrderNumber}": {
      "get": {
        "tags": [
          "vendorShipping"
        ],
        "description": "Returns a packing slip based on the purchaseOrderNumber that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getPackingSlip",
        "parameters": [
          {
            "name": "purchaseOrderNumber",
            "in": "path",
            "description": "The purchaseOrderNumber for the packing slip you want.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PackingSlip"
            },
            "examples": {
              "application/json": {
                "purchaseOrderNumber": "UvgABdBjQ",
                "content": "",
                "contentType": "application/pdf"
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/shipping/2021-12-28/containerLabel": {
      "post": {
        "tags": [
          "createContainerLabel"
        ],
        "description": "Creates container (pallet) label for provided shipment package association",
        "operationId": "createContainerLabel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateContainerLabelRequest"
            },
            "description": "Request body containing the container label data."
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CreateContainerLabelResponse"
            },
            "examples": {
              "containerLabel": {
                "containerTrackingNumber": "TBA134335066000",
                "content": "Base 64 encoded string goes here ",
                "format": "PNG"
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "x-amzn-api-sandbox": {
          "dynamic": {}
        }
      }
    },
    "/vendor/directFulfillment/transactions/2021-12-28/transactions/{transactionId}": {
      "get": {
        "tags": [
          "vendorTransaction"
        ],
        "description": "Returns the status of the transaction indicated by the specified transactionId.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getTransactionStatus",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "Previously returned in the response to the POST request of a specific transaction.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TransactionStatus"
            },
            "examples": {
              "application/json": {
                "transactionStatus": {
                  "transactionId": "20190108091302-6ca0ac50-d06e-45f5-a1e2-eb448eadac50",
                  "status": "Processing"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "x-amzn-api-sandbox": {
        "dynamic": {}
      },
      "parameters": []
    },
    "/vendor/payments/v1/invoices": {
      "post": {
        "tags": [
          "Vendor Invoices"
        ],
        "description": "Submit new invoices to Amazon.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "submitInvoices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitInvoicesRequest",
              "example": {
                "payload": {
                  "invoices": [
                    {
                      "invoiceType": "Invoice",
                      "id": "0136981234",
                      "date": "2019-07-24T21:17:59.821Z",
                      "remitToParty": {
                        "partyId": "XYZ12345",
                        "address": {
                          "name": "ANYCOMPANY MANUFACTURING",
                          "addressLine1": "123 ANY STREET",
                          "city": "ANYTOWN",
                          "stateOrRegion": "AZ",
                          "postalOrZipCode": "12345",
                          "countryCode": "USA"
                        },
                        "taxRegistrationDetails": [
                          {
                            "taxRegistrationType": "VAT",
                            "taxRegistrationNumber": "VENDORVATID"
                          }
                        ]
                      },
                      "shipToParty": {
                        "partyId": "XYZ12345",
                        "address": {
                          "name": "ANYCOMPANY MANUFACTURING",
                          "addressLine1": "123 ANY STREET",
                          "city": "ANYTOWN",
                          "stateOrRegion": "AZ",
                          "countryCode": "USA"
                        }
                      },
                      "shipFromParty": {
                        "partyId": "XYZ12345",
                        "address": {
                          "name": "ANYCOMPANY MANUFACTURING",
                          "addressLine1": "123 ANY STREET",
                          "city": "ANYTOWN",
                          "stateOrRegion": "AZ",
                          "postalOrZipCode": "12345",
                          "countryCode": "USA"
                        }
                      },
                      "billToParty": {
                        "partyId": "XYZ12345",
                        "address": {
                          "name": "ANYCOMPANY MANUFACTURING",
                          "addressLine1": "123 ANY STREET",
                          "addressLine2": "",
                          "city": "ANYTOWN",
                          "stateOrRegion": "AZ",
                          "postalOrZipCode": "12345",
                          "countryCode": "USA"
                        },
                        "taxRegistrationDetails": [
                          {
                            "taxRegistrationType": "VAT",
                            "taxRegistrationNumber": "AMAZONVATNUMBER"
                          }
                        ]
                      },
                      "paymentTerms": {
                        "type": "Basic",
                        "discountPercent": "5",
                        "discountDueDays": 15,
                        "netDueDays": 30
                      },
                      "invoiceTotal": {
                        "currencyCode": "INR",
                        "amount": "259678.39"
                      },
                      "taxDetails": [
                        {
                          "taxType": "SGST",
                          "taxRate": "9",
                          "taxAmount": {
                            "currencyCode": "INR",
                            "amount": "19697.98"
                          },
                          "taxableAmount": {
                            "currencyCode": "INR",
                            "amount": "218866.43"
                          }
                        },
                        {
                          "taxType": "CGST",
                          "taxRate": "9",
                          "taxAmount": {
                            "currencyCode": "INR",
                            "amount": "19697.98"
                          },
                          "taxableAmount": {
                            "currencyCode": "INR",
                            "amount": "218866.43"
                          }
                        }
                      ],
                      "chargeDetails": [
                        {
                          "type": "Freight",
                          "description": "Freight Charges",
                          "chargeAmount": {
                            "currencyCode": "INR",
                            "amount": "1200.00"
                          },
                          "taxDetails": [
                            {
                              "taxType": "CGST",
                              "taxRate": "9",
                              "taxAmount": {
                                "currencyCode": "INR",
                                "amount": "108.00"
                              },
                              "taxableAmount": {
                                "currencyCode": "INR",
                                "amount": "1200.00"
                              }
                            },
                            {
                              "taxType": "SGST",
                              "taxRate": "9",
                              "taxAmount": {
                                "currencyCode": "INR",
                                "amount": "108.00"
                              },
                              "taxableAmount": {
                                "currencyCode": "INR",
                                "amount": "1200.00"
                              }
                            }
                          ]
                        }
                      ],
                      "items": [
                        {
                          "itemSequenceNumber": 1,
                          "amazonProductIdentifier": "ABC123434",
                          "vendorProductIdentifier": "809281-5100",
                          "invoicedQuantity": {
                            "amount": 2,
                            "unitOfMeasure": "Eaches"
                          },
                          "netCost": {
                            "currencyCode": "INR",
                            "amount": "21060.34"
                          },
                          "purchaseOrderNumber": "3DY3TK6T",
                          "hsnCode": "76.06.92.99.00",
                          "taxDetails": [
                            {
                              "taxType": "SGST",
                              "taxRate": "9",
                              "taxAmount": {
                                "currencyCode": "INR",
                                "amount": "1895.43"
                              },
                              "taxableAmount": {
                                "currencyCode": "INR",
                                "amount": "21060.34"
                              }
                            },
                            {
                              "taxType": "CGST",
                              "taxRate": "9",
                              "taxAmount": {
                                "currencyCode": "INR",
                                "amount": "1895.43"
                              },
                              "taxableAmount": {
                                "currencyCode": "INR",
                                "amount": "21060.34"
                              }
                            }
                          ],
                          "chargeDetails": [
                            {
                              "type": "Freight",
                              "description": "Freight Charges",
                              "chargeAmount": {
                                "currencyCode": "INR",
                                "amount": "600.00"
                              }
                            }
                          ]
                        },
                        {
                          "itemSequenceNumber": 2,
                          "amazonProductIdentifier": "ABC123435",
                          "vendorProductIdentifier": "795000-0001",
                          "invoicedQuantity": {
                            "amount": 3,
                            "unitOfMeasure": "Eaches"
                          },
                          "netCost": {
                            "currencyCode": "INR",
                            "amount": "58915.25"
                          },
                          "purchaseOrderNumber": "3DY3TK6T",
                          "taxDetails": [
                            {
                              "taxType": "SGST",
                              "taxRate": "9",
                              "taxAmount": {
                                "currencyCode": "INR",
                                "amount": "5302.37"
                              },
                              "taxableAmount": {
                                "currencyCode": "INR",
                                "amount": "58915.25"
                              }
                            },
                            {
                              "taxType": "CGST",
                              "taxRate": "9",
                              "taxAmount": {
                                "currencyCode": "INR",
                                "amount": "5302.37"
                              },
                              "taxableAmount": {
                                "currencyCode": "INR",
                                "amount": "58915.25"
                              }
                            }
                          ],
                          "chargeDetails": [
                            {
                              "type": "Freight",
                              "description": "Freight Charges",
                              "chargeAmount": {
                                "currencyCode": "INR",
                                "amount": "600.00"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "description": "The request body containing the invoice data to submit."
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoicesResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "transactionId": "20190904171225-e1275c33-d75b-4bfe-b95c-15a9abfc09cc"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "invoices": [
                            {
                              "id": "TestInvoice202",
                              "date": "2020-06-08T12:00:00.000Z",
                              "billToParty": {
                                "partyId": "TES1"
                              },
                              "invoiceType": "Invoice",
                              "remitToParty": {
                                "partyId": "ABCDE"
                              },
                              "invoiceTotal": {
                                "amount": "112.05",
                                "currencyCode": "USD"
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "transactionId": "20190904171225-e1275c33-d75b-4bfe-b95c-15a9abfc09cc"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoicesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "invoices": [
                            {
                              "invoiceType": "Invoic"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Value 'Invoic' is not valid with respect to enumeration '[CreditNote, Invoice]'. It must be a value from the enumeration.",
                        "details": ""
                      },
                      {
                        "code": "InvalidInput",
                        "message": "The value 'Invoic' of element 'invoiceType' is not valid.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoicesResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/SubmitInvoicesResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "submitInvoices"
      }
    },
    "/vendor/orders/v1/purchaseOrders": {
      "get": {
        "tags": [
          "vendorOrders"
        ],
        "description": "Returns a list of purchase orders created or changed during the time frame that you specify. You define the time frame using the `createdAfter`, `createdBefore`, `changedAfter` and `changedBefore` parameters. The date range to search must not be more than 7 days. You can choose to get only the purchase order numbers by setting `includeDetails` to false. You can then use the `getPurchaseOrder` operation to receive details for a specific purchase order.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getPurchaseOrders",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The limit to the number of records returned. Default value is 100 records.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Purchase orders that became available after this time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Purchase orders that became available before this time will be included in the result. Must be in ISO-8601 date/time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort in ascending or descending order by purchase order creation date.",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Sort in ascending order by purchase order creation date."
              },
              {
                "value": "DESC",
                "description": "Sort in descending order by purchase order creation date."
              }
            ]
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "Used for pagination when there is more purchase orders than the specified result size limit. The token value is returned in the previous API call",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeDetails",
            "in": "query",
            "description": "When true, returns purchase orders with complete details. Otherwise, only purchase order numbers are returned. Default value is true.",
            "required": false,
            "type": "string",
            "format": "boolean"
          },
          {
            "name": "changedAfter",
            "in": "query",
            "description": "Purchase orders that changed after this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "changedBefore",
            "in": "query",
            "description": "Purchase orders that changed before this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "poItemState",
            "in": "query",
            "description": "Current state of the purchase order item. If this value is Cancelled, this API will return purchase orders which have one or more items cancelled by Amazon with updated item quantity as zero.",
            "required": false,
            "type": "string",
            "enum": [
              "Cancelled"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "Cancelled",
                "description": "Status for order items cancelled by vendors."
              }
            ]
          },
          {
            "name": "isPOChanged",
            "in": "query",
            "description": "When true, returns purchase orders which were modified after the order was placed. Vendors are required to pull the changed purchase order and fulfill the updated purchase order and not the original one. Default value is false.",
            "required": false,
            "type": "string",
            "format": "boolean"
          },
          {
            "name": "purchaseOrderState",
            "in": "query",
            "description": "Filters purchase orders based on the purchase order state.",
            "required": false,
            "type": "string",
            "enum": [
              "New",
              "Acknowledged",
              "Closed"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "New",
                "description": "Status of the orders that are newly created."
              },
              {
                "value": "Acknowledged",
                "description": "Status of the orders acknowledged by vendors."
              },
              {
                "value": "Closed",
                "description": "Status of the orders that are completed."
              }
            ]
          },
          {
            "name": "orderingVendorCode",
            "in": "query",
            "description": "Filters purchase orders based on the specified ordering vendor code. This value should be same as 'sellingParty.partyId' in the purchase order. If not included in the filter, all purchase orders for all of the vendor codes that exist in the vendor group used to authorize the API client application are returned.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersResponse"
            },
            "examples": {
              "payload": {
                "pagination": {
                  "nextToken": "MDAwMDAwMDAwAQ=="
                },
                "orders": [
                  {
                    "purchaseOrderNumber": "L8266355",
                    "purchaseOrderState": "New",
                    "orderDetails": {
                      "purchaseOrderDate": "2019-05-23T10:00:00Z",
                      "purchaseOrderChangedDate": "2019-05-24T16:05:00Z",
                      "purchaseOrderStateChangedDate": "2019-05-23T10:00:00Z",
                      "purchaseOrderType": "RegularOrder",
                      "importDetails": {
                        "methodOfPayment": "PaidByBuyer",
                        "internationalCommercialTerms": "ExWorks",
                        "portOfDelivery": "YANTIAN, CHINA",
                        "importContainers": "1-40'HC, 1-20'",
                        "shippingInstructions": "PREFERENCE IS PALLET-LOAD, BUT IF CONTAINERS ARE FLOOR-LOADED, THEN PLEASE DO CLAMP-LOAD OR STRAIGHT FLOOR-LOAD. DO NOT USE SLIP SHEET FOR THIS FC DESTINATION. PAYMENT TERMS ARE PER CONTAINER."
                      },
                      "dealCode": "BTS",
                      "paymentMethod": "Invoice",
                      "buyingParty": {
                        "partyId": "ABCD",
                        "address": {
                          "name": "APPARIO RETAIL PVT.LTD.",
                          "addressLine1": "3APPARIO RETAIL PVT.LTD.- C/O. AMAZON SELLER SERVIC",
                          "city": "Siddhapudur",
                          "stateOrRegion": "Tamil Nadu",
                          "postalCode": "641044",
                          "countryCode": "IN",
                          "phone": "206-266-8000"
                        }
                      },
                      "sellingParty": {
                        "partyId": "TEST1"
                      },
                      "shipToParty": {
                        "partyId": "ABCD",
                        "address": {
                          "name": "APPARIO RETAIL PVT.LTD.",
                          "addressLine1": "3APPARIO RETAIL PVT.LTD.- C/O. AMAZON SELLER SERVIC",
                          "city": "Siddhapudur",
                          "stateOrRegion": "Tamil Nadu",
                          "postalCode": "641044",
                          "countryCode": "IN",
                          "phone": "206-266-8000"
                        }
                      },
                      "billToParty": {
                        "partyId": "ABCD",
                        "address": {
                          "name": "APPARIO RETAIL PVT.LTD.",
                          "addressLine1": "3APPARIO RETAIL PVT.LTD.- C/O. AMAZON SELLER SERVIC",
                          "city": "Siddhapudur",
                          "stateOrRegion": "Tamil Nadu",
                          "postalCode": "641044",
                          "countryCode": "IN",
                          "phone": "206-266-8000"
                        }
                      },
                      "taxInfo": {
                        "taxType": "GST",
                        "taxRegistrationNumber": "098522PCA6346DTEDD"
                      }
                    },
                    "deliveryWindow": "2019-05-23T10:00:00Z--2019-05-30T10:00:00Z",
                    "items": [
                      {
                        "itemSequenceNumber": "1",
                        "amazonProductIdentifier": "ABC123434",
                        "vendorProductIdentifier": "028877454078",
                        "orderedQuantity": {
                          "amount": 2,
                          "unitOfMeasure": "Cases",
                          "unitSize": 10
                        },
                        "isBackOrderAllowed": true,
                        "netCost": {
                          "amount": "1800",
                          "currencyCode": "INR",
                          "unitOfMeasure": "POUNDS"
                        },
                        "listPrice": {
                          "amount": "2000",
                          "currencyCode": "INR",
                          "unitOfMeasure": "POUNDS"
                        }
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "createdBefore": {
                        "value": "2019-09-21T00:00:00"
                      },
                      "createdAfter": {
                        "value": "2019-08-20T14:00:00"
                      },
                      "includeDetails": {
                        "value": "true"
                      },
                      "limit": {
                        "value": 2
                      },
                      "sortOrder": {
                        "value": "DESC"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "pagination": {
                        "nextToken": "MDAwMDAwMDAwMQ=="
                      },
                      "orders": [
                        {
                          "purchaseOrderNumber": "2JK3S9VC",
                          "purchaseOrderState": "New",
                          "orderDetails": {
                            "purchaseOrderDate": "2019-08-20T15:51:00Z",
                            "purchaseOrderChangedDate": "2019-08-22T16:05:00Z",
                            "purchaseOrderStateChangedDate": "2019-08-20T15:51:00Z",
                            "purchaseOrderType": "RegularOrder",
                            "paymentMethod": "Invoice",
                            "buyingParty": {
                              "partyId": "ABCD"
                            },
                            "sellingParty": {
                              "partyId": "999US"
                            },
                            "shipToParty": {
                              "partyId": "ABCD"
                            },
                            "billToParty": {
                              "partyId": "ABCD"
                            },
                            "shipWindow": "2019-08-21T07:00:00Z--2019-08-27T07:00:00Z",
                            "items": [
                              {
                                "itemSequenceNumber": "1",
                                "amazonProductIdentifier": "B07DFVDRAB",
                                "vendorProductIdentifier": "8806098286500",
                                "orderedQuantity": {
                                  "amount": 1,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": false,
                                "netCost": {
                                  "amount": "346.27",
                                  "currencyCode": "USD"
                                },
                                "listPrice": {
                                  "amount": "346.27",
                                  "currencyCode": "USD"
                                }
                              },
                              {
                                "itemSequenceNumber": "2",
                                "amazonProductIdentifier": "B07DFYF5AB",
                                "vendorProductIdentifier": "8806098286123",
                                "orderedQuantity": {
                                  "amount": 2,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": false,
                                "netCost": {
                                  "amount": "229.47",
                                  "currencyCode": "USD"
                                },
                                "listPrice": {
                                  "amount": "229.47",
                                  "currencyCode": "USD"
                                }
                              },
                              {
                                "itemSequenceNumber": "3",
                                "amazonProductIdentifier": "B07MC84QAB",
                                "vendorProductIdentifier": "8806098095123",
                                "orderedQuantity": {
                                  "amount": 13,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": false,
                                "netCost": {
                                  "amount": "412.71",
                                  "currencyCode": "USD"
                                },
                                "listPrice": {
                                  "amount": "412.71",
                                  "currencyCode": "USD"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "purchaseOrderNumber": "3TRD2IAB",
                          "purchaseOrderState": "New",
                          "orderDetails": {
                            "purchaseOrderDate": "2019-08-20T16:29:00Z",
                            "purchaseOrderChangedDate": "2019-08-20T16:50:00Z",
                            "purchaseOrderStateChangedDate": "2019-08-20T16:29:00Z",
                            "purchaseOrderType": "RegularOrder",
                            "importDetails": {
                              "importContainers": "2-20'HC,1-45',1-45'HC",
                              "internationalCommercialTerms": "FreeOnBoard",
                              "methodOfPayment": "PrepaidBySeller",
                              "portOfDelivery": "INDIA",
                              "shippingInstructions": "PREFERENCE IS PALLET-LOAD, BUT IF CONTAINERS ARE FLOOR-LOADED"
                            },
                            "paymentMethod": "Invoice",
                            "buyingParty": {
                              "partyId": "ABC1"
                            },
                            "sellingParty": {
                              "partyId": "998US"
                            },
                            "shipToParty": {
                              "partyId": "ABC1"
                            },
                            "billToParty": {
                              "partyId": "ABC1"
                            },
                            "shipWindow": "2019-08-21T07:00:00Z--2019-08-27T07:00:00Z",
                            "items": [
                              {
                                "itemSequenceNumber": "1",
                                "amazonProductIdentifier": "B01LNRIIAB",
                                "vendorProductIdentifier": "B01LNRIIAB",
                                "orderedQuantity": {
                                  "amount": 5,
                                  "unitOfMeasure": "CASES",
                                  "unitSize": 10
                                },
                                "isBackOrderAllowed": true,
                                "netCost": {
                                  "amount": "94.97",
                                  "currencyCode": "USD",
                                  "unitOfMeasure": "POUNDS"
                                },
                                "listPrice": {
                                  "amount": "94.97",
                                  "currencyCode": "USD",
                                  "unitOfMeasure": "POUNDS"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "createdBefore": {
                        "value": "2019-08-21T00:00:00"
                      },
                      "createdAfter": {
                        "value": "2019-08-20T14:00:00"
                      },
                      "includeDetails": {
                        "value": "false"
                      },
                      "sortOrder": {
                        "value": "DESC"
                      },
                      "nextToken": {
                        "value": "MDAwMDAwMDAwMQ=="
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "orders": [
                        {
                          "purchaseOrderNumber": "2JK3S9XY",
                          "purchaseOrderState": "New"
                        },
                        {
                          "purchaseOrderNumber": "3TRD2ABC",
                          "purchaseOrderState": "Acknowledged"
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "changedBefore": {
                        "value": "2020-05-27T13:00:00"
                      },
                      "changedAfter": {
                        "value": "2020-05-25T13:00:00"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "orders": [
                        {
                          "purchaseOrderNumber": "TestPO2",
                          "purchaseOrderState": "New",
                          "orderDetails": {
                            "purchaseOrderDate": "2020-05-25T19:29:23Z",
                            "purchaseOrderChangedDate": "2020-05-26T16:00:00Z",
                            "purchaseOrderStateChangedDate": "2020-05-25T19:29:23Z",
                            "purchaseOrderType": "RegularOrder",
                            "paymentMethod": "Invoice",
                            "buyingParty": {
                              "partyId": "ABCD"
                            },
                            "sellingParty": {
                              "partyId": "API01"
                            },
                            "shipToParty": {
                              "partyId": "ABCD"
                            },
                            "billToParty": {
                              "partyId": "ABCD"
                            },
                            "shipWindow": "2020-05-26T07:00:00Z--2020-05-29T07:00:00Z",
                            "items": [
                              {
                                "itemSequenceNumber": "1",
                                "amazonProductIdentifier": "B01XYZ3Z00",
                                "vendorProductIdentifier": "8806093095123",
                                "orderedQuantity": {
                                  "amount": 20,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": true,
                                "netCost": {
                                  "currencyCode": "USD",
                                  "amount": "70"
                                },
                                "listPrice": {
                                  "currencyCode": "USD",
                                  "amount": "70"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "purchaseOrderNumber": "TestPO1",
                          "purchaseOrderState": "Acknowledged",
                          "orderDetails": {
                            "purchaseOrderDate": "2020-05-26T18:49:20Z",
                            "purchaseOrderChangedDate": "2020-05-27T06:30:00Z",
                            "purchaseOrderStateChangedDate": "2020-05-26T19:10:00Z",
                            "purchaseOrderType": "RegularOrder",
                            "paymentMethod": "Invoice",
                            "buyingParty": {
                              "partyId": "ABCD"
                            },
                            "sellingParty": {
                              "partyId": "999US"
                            },
                            "shipToParty": {
                              "partyId": "ABCD"
                            },
                            "billToParty": {
                              "partyId": "ABCD"
                            },
                            "shipWindow": "2020-05-27T07:00:00Z--2020-05-30T07:00:00Z",
                            "items": [
                              {
                                "itemSequenceNumber": "1",
                                "amazonProductIdentifier": "B01XYZ3Z00",
                                "vendorProductIdentifier": "8806093095123",
                                "orderedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": true,
                                "netCost": {
                                  "currencyCode": "USD",
                                  "amount": "70"
                                },
                                "listPrice": {
                                  "currencyCode": "USD",
                                  "amount": "70"
                                }
                              },
                              {
                                "itemSequenceNumber": "2",
                                "amazonProductIdentifier": "B01XYZ3Z01",
                                "vendorProductIdentifier": "8806098095124",
                                "orderedQuantity": {
                                  "amount": 10,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": true,
                                "netCost": {
                                  "currencyCode": "USD",
                                  "amount": "15"
                                },
                                "listPrice": {
                                  "currencyCode": "USD",
                                  "amount": "15"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "changedBefore": {
                        "value": "2020-05-25T13:00:00"
                      },
                      "changedAfter": {
                        "value": "2020-05-27T13:00:00"
                      },
                      "poItemState": {
                        "value": "Cancelled"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "orders": [
                        {
                          "purchaseOrderNumber": "TestPO1",
                          "purchaseOrderState": "Acknowledged",
                          "orderDetails": {
                            "purchaseOrderDate": "2020-05-26T18:49:20Z",
                            "purchaseOrderChangedDate": "2020-05-27T06:30:00Z",
                            "purchaseOrderStateChangedDate": "2020-05-26T19:10:00Z",
                            "purchaseOrderType": "RegularOrder",
                            "paymentMethod": "Invoice",
                            "buyingParty": {
                              "partyId": "ABCD"
                            },
                            "sellingParty": {
                              "partyId": "999US"
                            },
                            "shipToParty": {
                              "partyId": "ABCD"
                            },
                            "billToParty": {
                              "partyId": "ABCD"
                            },
                            "shipWindow": "2020-05-27T07:00:00Z--2020-05-29T07:00:00Z",
                            "items": [
                              {
                                "itemSequenceNumber": "1",
                                "amazonProductIdentifier": "B01XYZ3Z00",
                                "vendorProductIdentifier": "8806098095123",
                                "orderedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": true,
                                "netCost": {
                                  "currencyCode": "USD",
                                  "amount": "70"
                                },
                                "listPrice": {
                                  "currencyCode": "USD",
                                  "amount": "70"
                                }
                              },
                              {
                                "itemSequenceNumber": "2",
                                "amazonProductIdentifier": "B01XYZ3Z01",
                                "vendorProductIdentifier": "8806098095124",
                                "orderedQuantity": {
                                  "amount": 10,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": true,
                                "netCost": {
                                  "currencyCode": "USD",
                                  "amount": "15"
                                },
                                "listPrice": {
                                  "currencyCode": "USD",
                                  "amount": "15"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "createdBefore": {
                        "value": "2020-05-26T13:00:00"
                      },
                      "createdAfter": {
                        "value": "2020-05-25T13:00:00"
                      },
                      "isPOChanged": {
                        "value": "true"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "orders": [
                        {
                          "purchaseOrderNumber": "TestPO2",
                          "purchaseOrderState": "New",
                          "orderDetails": {
                            "purchaseOrderDate": "2020-05-25T19:29:23Z",
                            "purchaseOrderChangedDate": "2020-05-26T16:00:00Z",
                            "purchaseOrderStateChangedDate": "2020-05-25T19:29:23Z",
                            "purchaseOrderType": "RegularOrder",
                            "paymentMethod": "Invoice",
                            "buyingParty": {
                              "partyId": "ABCD"
                            },
                            "sellingParty": {
                              "partyId": "API01"
                            },
                            "shipToParty": {
                              "partyId": "ABCD"
                            },
                            "billToParty": {
                              "partyId": "ABCD"
                            },
                            "shipWindow": "2020-05-26T07:00:00Z--2020-05-29T07:00:00Z",
                            "items": [
                              {
                                "itemSequenceNumber": "1",
                                "amazonProductIdentifier": "B01XYZ3Z00",
                                "vendorProductIdentifier": "8806093095123",
                                "orderedQuantity": {
                                  "amount": 20,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": true,
                                "netCost": {
                                  "currencyCode": "USD",
                                  "amount": "70"
                                },
                                "listPrice": {
                                  "currencyCode": "USD",
                                  "amount": "70"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "createdBefore": {
                        "value": "2020-05-27T13:00:00"
                      },
                      "createdAfter": {
                        "value": "2020-05-25T13:00:00"
                      },
                      "purchaseOrderState": {
                        "value": "New"
                      },
                      "orderingVendorCode": {
                        "value": "API01"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "orders": [
                        {
                          "purchaseOrderNumber": "TestPO2",
                          "purchaseOrderState": "New",
                          "orderDetails": {
                            "purchaseOrderDate": "2020-05-25T19:29:23Z",
                            "purchaseOrderChangedDate": "2020-05-26T06:00:00Z",
                            "purchaseOrderStateChangedDate": "2020-05-25T19:29:23Z",
                            "purchaseOrderType": "RegularOrder",
                            "paymentMethod": "Invoice",
                            "buyingParty": {
                              "partyId": "ABCD"
                            },
                            "sellingParty": {
                              "partyId": "API01"
                            },
                            "shipToParty": {
                              "partyId": "ABCD"
                            },
                            "billToParty": {
                              "partyId": "ABCD"
                            },
                            "shipWindow": "2020-05-26T07:00:00Z--2020-05-29T07:00:00Z",
                            "items": [
                              {
                                "itemSequenceNumber": "1",
                                "amazonProductIdentifier": "B01XYZ3Z00",
                                "vendorProductIdentifier": "8806093095123",
                                "orderedQuantity": {
                                  "amount": 20,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": true,
                                "netCost": {
                                  "currencyCode": "USD",
                                  "amount": "70"
                                },
                                "listPrice": {
                                  "currencyCode": "USD",
                                  "amount": "70"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "purchaseOrderNumber": "TestPO3",
                          "purchaseOrderState": "New",
                          "orderDetails": {
                            "purchaseOrderDate": "2020-05-26T18:05:23Z",
                            "purchaseOrderStateChangedDate": "2020-05-26T18:05:23Z",
                            "purchaseOrderType": "RegularOrder",
                            "paymentMethod": "Invoice",
                            "buyingParty": {
                              "partyId": "ABCF"
                            },
                            "sellingParty": {
                              "partyId": "API01"
                            },
                            "shipToParty": {
                              "partyId": "ABCF"
                            },
                            "billToParty": {
                              "partyId": "ABCF"
                            },
                            "shipWindow": "2020-05-26T07:00:00Z--2020-06-03T07:00:00Z",
                            "items": [
                              {
                                "itemSequenceNumber": "1",
                                "amazonProductIdentifier": "B01XYZ3Z02",
                                "vendorProductIdentifier": "8806093095125",
                                "orderedQuantity": {
                                  "amount": 10,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": true,
                                "netCost": {
                                  "currencyCode": "USD",
                                  "amount": "50"
                                },
                                "listPrice": {
                                  "currencyCode": "USD",
                                  "amount": "50"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": {
                      "pagination": {
                        "nextToken": "MDAwMDAwMDAwMQ=="
                      },
                      "orders": [
                        {
                          "purchaseOrderNumber": "mock-purchaseOrderNumber1",
                          "orderDetails": {
                            "purchaseOrderDate": "2019-08-14T13:51:00Z",
                            "purchaseOrderType": "RegularOrder",
                            "paymentMethod": "Invoice",
                            "buyingParty": {
                              "partyId": "ABCD"
                            },
                            "sellingParty": {
                              "partyId": "999US"
                            },
                            "shipToParty": {
                              "partyId": "ABCD"
                            },
                            "billToParty": {
                              "partyId": "ABCD"
                            },
                            "items": [
                              {
                                "itemSequenceNumber": "00001",
                                "amazonProductIdentifier": "B07DFVDRAB",
                                "vendorProductIdentifier": "8806098286500",
                                "orderedQuantity": {
                                  "amount": 1,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": false,
                                "listPrice": {
                                  "amount": "34366.27",
                                  "currencyCode": "INR"
                                }
                              },
                              {
                                "itemSequenceNumber": "00002",
                                "amazonProductIdentifier": "B07DFYF5AB",
                                "vendorProductIdentifier": "8806098286123",
                                "orderedQuantity": {
                                  "amount": 2,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": false,
                                "listPrice": {
                                  "amount": "22798.47",
                                  "currencyCode": "INR"
                                }
                              },
                              {
                                "itemSequenceNumber": "00003",
                                "amazonProductIdentifier": "B07MC84QAB",
                                "vendorProductIdentifier": "8806098095123",
                                "orderedQuantity": {
                                  "amount": 13,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "isBackOrderAllowed": false,
                                "listPrice": {
                                  "amount": "4362.71",
                                  "currencyCode": "INR"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "purchaseOrderNumber": "mock-purchaseOrderNumber2",
                          "orderDetails": {
                            "purchaseOrderDate": "2019-08-13T06:29:00Z",
                            "purchaseOrderType": "RegularOrder",
                            "importDetails": {
                              "importContainers": "2-20'HC,1-45',1-45'HC",
                              "internationalCommercialTerms": "FreeOnBoard",
                              "methodOfPayment": "PrepaidBySeller",
                              "portOfDelivery": "INDIA",
                              "shippingInstructions": "PREFERENCE IS PALLET-LOAD, BUT IF CONTAINERS ARE FLOOR-LOADED"
                            },
                            "paymentMethod": "Invoice",
                            "buyingParty": {
                              "partyId": "ABC1"
                            },
                            "sellingParty": {
                              "partyId": "999US"
                            },
                            "shipToParty": {
                              "partyId": "ABC1"
                            },
                            "billToParty": {
                              "partyId": "ABC1"
                            },
                            "items": [
                              {
                                "itemSequenceNumber": "00001",
                                "amazonProductIdentifier": "B01LNRIIAB",
                                "vendorProductIdentifier": "B01LNRIIAB",
                                "orderedQuantity": {
                                  "amount": 24,
                                  "unitOfMeasure": "Cases",
                                  "unitSize": 5
                                },
                                "isBackOrderAllowed": true,
                                "netCost": {
                                  "amount": "94.97",
                                  "currencyCode": "INR",
                                  "unitOfMeasure": "POUNDS"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersResponse"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request is invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "createdBefore": {
                        "value": "2019-09-2100:00:00"
                      },
                      "createdAfter": {
                        "value": "2019-08-20T14:00:00"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidRequest",
                        "message": "The request is invalid.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/vendor/orders/v1/purchaseOrders/{purchaseOrderNumber}": {
      "get": {
        "tags": [
          "vendorOrders"
        ],
        "description": "Returns a purchase order based on the `purchaseOrderNumber` value that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getPurchaseOrder",
        "parameters": [
          {
            "name": "purchaseOrderNumber",
            "in": "path",
            "description": "The purchase order identifier for the order that you want. Formatting Notes: 8-character alpha-numeric code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrderResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "purchaseOrderNumber": "TestPO3",
                  "purchaseOrderState": "New",
                  "orderDetails": {
                    "purchaseOrderDate": "2020-05-26T18:05:23Z",
                    "purchaseOrderStateChangedDate": "2020-05-26T18:05:23Z",
                    "purchaseOrderType": "RegularOrder",
                    "paymentMethod": "Invoice",
                    "buyingParty": {
                      "partyId": "ABCF"
                    },
                    "sellingParty": {
                      "partyId": "API01"
                    },
                    "shipToParty": {
                      "partyId": "ABCF"
                    },
                    "billToParty": {
                      "partyId": "ABCF"
                    },
                    "shipWindow": "2020-05-26T07:00:00Z--2020-06-03T07:00:00Z",
                    "items": [
                      {
                        "itemSequenceNumber": "1",
                        "amazonProductIdentifier": "B01XYZ3Z02",
                        "vendorProductIdentifier": "8806093095125",
                        "orderedQuantity": {
                          "amount": 10,
                          "unitOfMeasure": "Eaches",
                          "unitSize": 1
                        },
                        "isBackOrderAllowed": true,
                        "netCost": {
                          "currencyCode": "USD",
                          "amount": "50"
                        },
                        "listPrice": {
                          "currencyCode": "USD",
                          "amount": "50"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "purchaseOrderNumber": {
                        "value": "4Z32PABC"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "purchaseOrderNumber": "4Z32PABC",
                      "purchaseOrderState": "Closed",
                      "orderDetails": {
                        "purchaseOrderDate": "2019-07-26T11:10:00Z",
                        "purchaseOrderStateChangedDate": "2019-08-25T19:29:23Z",
                        "purchaseOrderType": "RegularOrder",
                        "paymentMethod": "Invoice",
                        "buyingParty": {
                          "partyId": "ABCD"
                        },
                        "sellingParty": {
                          "partyId": "999US"
                        },
                        "shipToParty": {
                          "partyId": "ABCD"
                        },
                        "billToParty": {
                          "partyId": "ABCD"
                        },
                        "shipWindow": "2019-07-26T07:00:00Z--2019-08-03T07:00:00Z",
                        "items": [
                          {
                            "itemSequenceNumber": "1",
                            "amazonProductIdentifier": "B0748G1ABC",
                            "vendorProductIdentifier": "0017817748000",
                            "orderedQuantity": {
                              "amount": 37,
                              "unitOfMeasure": "Eaches",
                              "unitSize": 1
                            },
                            "isBackOrderAllowed": false,
                            "netCost": {
                              "amount": "140",
                              "currencyCode": "USD"
                            },
                            "listPrice": {
                              "amount": "140",
                              "currencyCode": "USD"
                            }
                          },
                          {
                            "itemSequenceNumber": "2",
                            "amazonProductIdentifier": "B0748JMABC",
                            "vendorProductIdentifier": "0017817748000",
                            "orderedQuantity": {
                              "amount": 24,
                              "unitOfMeasure": "Eaches",
                              "unitSize": 1
                            },
                            "isBackOrderAllowed": false,
                            "netCost": {
                              "amount": "15.62",
                              "currencyCode": "USD"
                            },
                            "listPrice": {
                              "amount": "15.62",
                              "currencyCode": "USD"
                            }
                          },
                          {
                            "itemSequenceNumber": "3",
                            "amazonProductIdentifier": "B076SDSABC",
                            "vendorProductIdentifier": "0017817755000",
                            "orderedQuantity": {
                              "amount": 1,
                              "unitOfMeasure": "Eaches",
                              "unitSize": 1
                            },
                            "isBackOrderAllowed": false,
                            "netCost": {
                              "amount": "110.00",
                              "currencyCode": "USD"
                            },
                            "listPrice": {
                              "amount": "110.00",
                              "currencyCode": "USD"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": {
                      "purchaseOrderNumber": "mock-purchaseOrderNumber",
                      "orderDetails": {
                        "purchaseOrderDate": "2019-07-26T11:10:00Z",
                        "purchaseOrderType": "RegularOrder",
                        "paymentMethod": "Invoice",
                        "buyingParty": {
                          "partyId": "ABCD"
                        },
                        "sellingParty": {
                          "partyId": "999US"
                        },
                        "shipToParty": {
                          "partyId": "ABCD"
                        },
                        "billToParty": {
                          "partyId": "ABCD"
                        },
                        "items": [
                          {
                            "itemSequenceNumber": "00001",
                            "amazonProductIdentifier": "B0748G1ABC",
                            "vendorProductIdentifier": "0017817748000",
                            "orderedQuantity": {
                              "amount": 37,
                              "unitOfMeasure": "Eaches",
                              "unitSize": 1
                            },
                            "isBackOrderAllowed": false,
                            "netCost": {
                              "amount": "14162.00",
                              "currencyCode": "INR"
                            }
                          },
                          {
                            "itemSequenceNumber": "00002",
                            "amazonProductIdentifier": "B0748JMABC",
                            "vendorProductIdentifier": "0017817748000",
                            "orderedQuantity": {
                              "amount": 24,
                              "unitOfMeasure": "Eaches",
                              "unitSize": 1
                            },
                            "isBackOrderAllowed": false,
                            "netCost": {
                              "amount": "14162.00",
                              "currencyCode": "INR"
                            }
                          },
                          {
                            "itemSequenceNumber": "00003",
                            "amazonProductIdentifier": "B076SDSABC",
                            "vendorProductIdentifier": "0017817755000",
                            "orderedQuantity": {
                              "amount": 1,
                              "unitOfMeasure": "Eaches",
                              "unitSize": 1
                            },
                            "isBackOrderAllowed": false,
                            "netCost": {
                              "amount": "14162.00",
                              "currencyCode": "INR"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "purchaseOrderNumber": {
                        "value": "null"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidRequest",
                        "message": "Request is missing or has invalid parameters",
                        "details": "purchaseOrderNumber cannot be null"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrderResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrderResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/vendor/orders/v1/acknowledgements": {
      "post": {
        "tags": [
          "vendorOrders"
        ],
        "description": "Submits acknowledgements for one or more purchase orders.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "submitAcknowledgement1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Submits acknowledgements for one or more purchase orders from a vendor.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "transactionId": "20190827182357-8725bde9-c61c-49f9-86ac-46efd82d4da5"
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "acknowledgements": [
                            {
                              "purchaseOrderNumber": "TestOrder202",
                              "sellingParty": {
                                "partyId": "API01"
                              },
                              "acknowledgementDate": "2021-03-12T17:35:26.308Z",
                              "items": [
                                {
                                  "vendorProductIdentifier": "028877454078",
                                  "orderedQuantity": {
                                    "amount": 10
                                  },
                                  "netCost": {
                                    "amount": "10.2"
                                  },
                                  "itemAcknowledgements": [
                                    {
                                      "acknowledgementCode": "Accepted",
                                      "acknowledgedQuantity": {
                                        "amount": 10
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "transactionId": "20190827182357-8725bde9-c61c-49f9-86ac-46efd82d4da5"
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {}
                    }
                  },
                  "response": {
                    "payload": {
                      "transactionId": "mock-TransactionId-20190827182357-8725bde9-c61c-49f9-86ac-46efd82d4da5"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "acknowledgements": [
                            {
                              "purchaseOrderNumber": "TestOrder400",
                              "sellingParty": {}
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "The content of element 'sellingParty' is not complete. One of '{partyId, address, taxInfo}' is expected.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/SubmitAcknowledgementResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/vendor/orders/v1/purchaseOrdersStatus": {
      "get": {
        "tags": [
          "vendorOrders"
        ],
        "description": "Returns purchase order statuses based on the filters that you specify. Date range to search must not be more than 7 days. You can return a list of purchase order statuses using the available filters, or a single purchase order status by providing the purchase order number.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getPurchaseOrdersStatus",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The limit to the number of records returned. Default value is 100 records.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort in ascending or descending order by purchase order creation date.",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Sort in ascending order by purchase order creation date."
              },
              {
                "value": "DESC",
                "description": "Sort in descending order by purchase order creation date."
              }
            ]
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "Used for pagination when there are more purchase orders than the specified result size limit.",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Purchase orders that became available after this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Purchase orders that became available before this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Purchase orders for which the last purchase order update happened after this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Purchase orders for which the last purchase order update happened before this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "purchaseOrderNumber",
            "in": "query",
            "description": "Provides purchase order status for the specified purchase order number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "purchaseOrderStatus",
            "in": "query",
            "description": "Filters purchase orders based on the specified purchase order status. If not included in filter, this will return purchase orders for all statuses.",
            "required": false,
            "type": "string",
            "enum": [
              "OPEN",
              "CLOSED"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "OPEN",
                "description": "Buyer has not yet received all of the items in the purchase order."
              },
              {
                "value": "CLOSED",
                "description": "Buyer has received all of the items in the purchase order."
              }
            ]
          },
          {
            "name": "itemConfirmationStatus",
            "in": "query",
            "description": "Filters purchase orders based on their item confirmation status. If the item confirmation status is not included in the filter, purchase orders for all confirmation statuses are included.",
            "required": false,
            "type": "string",
            "enum": [
              "ACCEPTED",
              "PARTIALLY_ACCEPTED",
              "REJECTED",
              "UNCONFIRMED"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ACCEPTED",
                "description": "Provides a list of orders that has at least one item fully accepted by vendors."
              },
              {
                "value": "PARTIALLY_ACCEPTED",
                "description": "Provides a list of orders that has at least one item partially accepted by vendors."
              },
              {
                "value": "REJECTED",
                "description": "Provides a list of orders that has at least one item rejected by vendors."
              },
              {
                "value": "UNCONFIRMED",
                "description": "Provides a list of orders that has at least one item yet to be confirmed by vendors."
              }
            ]
          },
          {
            "name": "itemReceiveStatus",
            "in": "query",
            "description": "Filters purchase orders based on the purchase order's item receive status. If the item receive status is not included in the filter, purchase orders for all receive statuses are included.",
            "required": false,
            "type": "string",
            "enum": [
              "NOT_RECEIVED",
              "PARTIALLY_RECEIVED",
              "RECEIVED"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "NOT_RECEIVED",
                "description": "Provides a list of orders that have at least one item not received by the buyer."
              },
              {
                "value": "PARTIALLY_RECEIVED",
                "description": "Provides a list of orders that have at least one item not received by the buyer."
              },
              {
                "value": "RECEIVED",
                "description": "Provides a list of orders that have at least one item fully received by the buyer."
              }
            ]
          },
          {
            "name": "orderingVendorCode",
            "in": "query",
            "description": "Filters purchase orders based on the specified ordering vendor code. This value should be same as 'sellingParty.partyId' in the purchase order. If not included in filter, all purchase orders for all the vendor codes that exist in the vendor group used to authorize API client application are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "shipToPartyId",
            "in": "query",
            "description": "Filters purchase orders for a specific buyer's Fulfillment Center/warehouse by providing ship to location id here. This value should be same as 'shipToParty.partyId' in the purchase order. If not included in filter, this will return purchase orders for all the buyer's warehouses used for vendor group purchase orders.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "createdBefore": {
                        "value": "2020-08-18T00:00:00"
                      },
                      "createdAfter": {
                        "value": "2020-08-17T14:00:00"
                      },
                      "limit": {
                        "value": 1
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "pagination": {
                        "nextToken": "MDAwMDAwMDAwMZ=="
                      },
                      "ordersStatus": [
                        {
                          "purchaseOrderNumber": "2JK3S9VB",
                          "purchaseOrderStatus": "OPEN",
                          "purchaseOrderDate": "2020-08-17T20:24:58.193Z",
                          "lastUpdatedDate": "2020-08-17T21:05:58.193Z",
                          "sellingParty": {
                            "partyId": "999US"
                          },
                          "shipToParty": {
                            "partyId": "ABCD"
                          },
                          "itemStatus": [
                            {
                              "itemSequenceNumber": "1",
                              "buyerProductIdentifier": "B07DFVDRAB",
                              "vendorProductIdentifier": "8806098286500",
                              "netCost": {
                                "amount": "346.27",
                                "currencyCode": "USD"
                              },
                              "listPrice": {
                                "amount": "346.27",
                                "currencyCode": "USD"
                              },
                              "orderedQuantity": {
                                "orderedQuantity": {
                                  "amount": 1,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "orderedQuantityDetails": [
                                  {
                                    "updatedDate": "2020-08-17T20:24:58.193Z",
                                    "orderedQuantity": {
                                      "amount": 1,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "acknowledgementStatus": {
                                "confirmationStatus": "ACCEPTED",
                                "acceptedQuantity": {
                                  "amount": 1,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "rejectedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "acknowledgementStatusDetails": [
                                  {
                                    "acknowledgementDate": "2020-08-17T21:05:58.193Z",
                                    "acceptedQuantity": {
                                      "amount": 1,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    },
                                    "rejectedQuantity": {
                                      "amount": 0,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "receivingStatus": {
                                "receiveStatus": "RECEIVED",
                                "receivedQuantity": {
                                  "amount": 1,
                                  "unitOfMeasure": "Cases",
                                  "unitSize": 1
                                },
                                "lastReceiveDate": "2020-08-28T21:06:23.193Z"
                              }
                            },
                            {
                              "itemSequenceNumber": "2",
                              "buyerProductIdentifier": "B07DFYF5AB",
                              "vendorProductIdentifier": "8806098286123",
                              "netCost": {
                                "amount": "229.47",
                                "currencyCode": "USD"
                              },
                              "listPrice": {
                                "amount": "229.47",
                                "currencyCode": "USD"
                              },
                              "orderedQuantity": {
                                "orderedQuantity": {
                                  "amount": 20,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "orderedQuantityDetails": [
                                  {
                                    "updatedDate": "2020-08-17T20:35:00.00Z",
                                    "orderedQuantity": {
                                      "amount": 5,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  },
                                  {
                                    "updatedDate": "2020-08-17T20:24:58.193Z",
                                    "orderedQuantity": {
                                      "amount": 15,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "acknowledgementStatus": {
                                "confirmationStatus": "PARTIALLY_ACCEPTED",
                                "acceptedQuantity": {
                                  "amount": 15,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "rejectedQuantity": {
                                  "amount": 5,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "acknowledgementStatusDetails": [
                                  {
                                    "acknowledgementDate": "2020-08-17T21:05:58.193Z",
                                    "acceptedQuantity": {
                                      "amount": 15,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    },
                                    "rejectedQuantity": {
                                      "amount": 5,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "receivingStatus": {
                                "receiveStatus": "PARTIALLY_RECEIVED",
                                "receivedQuantity": {
                                  "amount": 10,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "lastReceiveDate": "2020-08-30T21:05:58.193Z"
                              }
                            },
                            {
                              "itemSequenceNumber": "3",
                              "buyerProductIdentifier": "B07DFYF5XY",
                              "vendorProductIdentifier": "8806098286789",
                              "netCost": {
                                "amount": "20",
                                "currencyCode": "USD"
                              },
                              "listPrice": {
                                "amount": "20",
                                "currencyCode": "USD"
                              },
                              "orderedQuantity": {
                                "orderedQuantity": {
                                  "amount": 5,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "orderedQuantityDetails": [
                                  {
                                    "updatedDate": "2020-08-17T20:24:58.193Z",
                                    "orderedQuantity": {
                                      "amount": 5,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "acknowledgementStatus": {
                                "confirmationStatus": "REJECTED",
                                "acceptedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "rejectedQuantity": {
                                  "amount": 5,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "acknowledgementStatusDetails": [
                                  {
                                    "acknowledgementDate": "2020-08-17T21:05:58.193Z",
                                    "rejectedQuantity": {
                                      "amount": 5,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "receivingStatus": {
                                "receiveStatus": "NOT_RECEIVED",
                                "receivedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "purchaseOrderNumber": {
                        "value": "TestPO2"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ordersStatus": [
                        {
                          "purchaseOrderNumber": "TestPO2",
                          "purchaseOrderStatus": "OPEN",
                          "purchaseOrderDate": "2020-08-17T00:24:00.00Z",
                          "lastUpdatedDate": "2020-08-17T00:24:00.00Z",
                          "sellingParty": {
                            "partyId": "API01"
                          },
                          "shipToParty": {
                            "partyId": "ABC09"
                          },
                          "itemStatus": [
                            {
                              "itemSequenceNumber": "1",
                              "buyerProductIdentifier": "B01XYZ3Z00",
                              "vendorProductIdentifier": "8806093095123",
                              "netCost": {
                                "currencyCode": "USD",
                                "amount": "70"
                              },
                              "listPrice": {
                                "currencyCode": "USD",
                                "amount": "70"
                              },
                              "orderedQuantity": {
                                "orderedQuantity": {
                                  "amount": 10,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "orderedQuantityDetails": [
                                  {
                                    "updatedDate": "2020-08-17T00:24:00.00Z",
                                    "orderedQuantity": {
                                      "amount": 10,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "acknowledgementStatus": {
                                "confirmationStatus": "UNCONFIRMED",
                                "acceptedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "rejectedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              },
                              "receivingStatus": {
                                "receiveStatus": "NOT_RECEIVED",
                                "receivedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "updatedBefore": {
                        "value": "2020-08-18T00:00:00.00Z"
                      },
                      "updatedAfter": {
                        "value": "2020-08-16T00:00:00.00Z"
                      },
                      "itemConfirmationStatus": {
                        "value": "UNCONFIRMED"
                      },
                      "purchaseOrderStatus": {
                        "value": "OPEN"
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "ordersStatus": [
                        {
                          "purchaseOrderNumber": "TestPO2",
                          "purchaseOrderStatus": "OPEN",
                          "purchaseOrderDate": "2020-08-17T00:24:00.00Z",
                          "lastUpdatedDate": "2020-08-17T00:24:00.00Z",
                          "sellingParty": {
                            "partyId": "API01"
                          },
                          "shipToParty": {
                            "partyId": "ABC09"
                          },
                          "itemStatus": [
                            {
                              "itemSequenceNumber": "1",
                              "buyerProductIdentifier": "B01XYZ3Z00",
                              "vendorProductIdentifier": "8806093095123",
                              "netCost": {
                                "currencyCode": "USD",
                                "amount": "70"
                              },
                              "listPrice": {
                                "currencyCode": "USD",
                                "amount": "70"
                              },
                              "orderedQuantity": {
                                "orderedQuantity": {
                                  "amount": 10,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "orderedQuantityDetails": [
                                  {
                                    "updatedDate": "2020-08-17T00:24:00.00Z",
                                    "orderedQuantity": {
                                      "amount": 10,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "acknowledgementStatus": {
                                "confirmationStatus": "UNCONFIRMED",
                                "acceptedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "rejectedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              },
                              "receivingStatus": {
                                "receiveStatus": "NOT_RECEIVED",
                                "receivedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              }
                            }
                          ]
                        },
                        {
                          "purchaseOrderNumber": "TestPO1",
                          "purchaseOrderStatus": "OPEN",
                          "purchaseOrderDate": "2020-08-15T05:24:00.00Z",
                          "lastUpdatedDate": "2020-08-17T05:07:00.00Z",
                          "sellingParty": {
                            "partyId": "API01"
                          },
                          "shipToParty": {
                            "partyId": "ABC09"
                          },
                          "itemStatus": [
                            {
                              "itemSequenceNumber": "1",
                              "buyerProductIdentifier": "B01XYZ3Z123",
                              "vendorProductIdentifier": "8806093095999",
                              "netCost": {
                                "currencyCode": "USD",
                                "amount": "25"
                              },
                              "listPrice": {
                                "currencyCode": "USD",
                                "amount": "25"
                              },
                              "orderedQuantity": {
                                "orderedQuantity": {
                                  "amount": 100,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "orderedQuantityDetails": [
                                  {
                                    "updatedDate": "2020-08-17T05:07:00.00Z",
                                    "cancelledQuantity": {
                                      "amount": 50,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  },
                                  {
                                    "updatedDate": "2020-08-15T05:24:00.00Z",
                                    "orderedQuantity": {
                                      "amount": 150,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "acknowledgementStatus": {
                                "confirmationStatus": "UNCONFIRMED",
                                "acceptedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "rejectedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              },
                              "receivingStatus": {
                                "receiveStatus": "NOT_RECEIVED",
                                "receivedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {}
                  },
                  "response": {
                    "payload": {
                      "ordersStatus": [
                        {
                          "purchaseOrderNumber": "mock-purchaseOrderNumber1",
                          "purchaseOrderStatus": "OPEN",
                          "purchaseOrderDate": "2020-08-17T00:24:00.00Z",
                          "lastUpdatedDate": "2020-08-17T00:24:00.00Z",
                          "sellingParty": {
                            "partyId": "API01"
                          },
                          "shipToParty": {
                            "partyId": "ABC09"
                          },
                          "itemStatus": [
                            {
                              "itemSequenceNumber": "1",
                              "buyerProductIdentifier": "B01XYZ3Z00",
                              "vendorProductIdentifier": "8806093095123",
                              "netCost": {
                                "currencyCode": "USD",
                                "amount": "70"
                              },
                              "listPrice": {
                                "currencyCode": "USD",
                                "amount": "70"
                              },
                              "orderedQuantity": {
                                "orderedQuantity": {
                                  "amount": 10,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "orderedQuantityDetails": [
                                  {
                                    "updatedDate": "2020-08-17T00:24:00.00Z",
                                    "orderedQuantity": {
                                      "amount": 10,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "acknowledgementStatus": {
                                "confirmationStatus": "UNCONFIRMED",
                                "acceptedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "rejectedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              },
                              "receivingStatus": {
                                "receiveStatus": "NOT_RECEIVED",
                                "receivedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              }
                            }
                          ]
                        },
                        {
                          "purchaseOrderNumber": "mock-purchaseOrderNumber2",
                          "purchaseOrderStatus": "OPEN",
                          "purchaseOrderDate": "2020-08-15T05:24:00.00Z",
                          "lastUpdatedDate": "2020-08-17T05:07:00.00Z",
                          "sellingParty": {
                            "partyId": "API01"
                          },
                          "shipToParty": {
                            "partyId": "ABC09"
                          },
                          "itemStatus": [
                            {
                              "itemSequenceNumber": "1",
                              "buyerProductIdentifier": "B01XYZ3Z123",
                              "vendorProductIdentifier": "8806093095999",
                              "netCost": {
                                "currencyCode": "USD",
                                "amount": "25"
                              },
                              "listPrice": {
                                "currencyCode": "USD",
                                "amount": "25"
                              },
                              "orderedQuantity": {
                                "orderedQuantity": {
                                  "amount": 100,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "orderedQuantityDetails": [
                                  {
                                    "updatedDate": "2020-08-17T05:07:00.00Z",
                                    "cancelledQuantity": {
                                      "amount": 50,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  },
                                  {
                                    "updatedDate": "2020-08-15T05:24:00.00Z",
                                    "orderedQuantity": {
                                      "amount": 150,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    }
                                  }
                                ]
                              },
                              "acknowledgementStatus": {
                                "confirmationStatus": "UNCONFIRMED",
                                "acceptedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "rejectedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              },
                              "receivingStatus": {
                                "receiveStatus": "NOT_RECEIVED",
                                "receivedQuantity": {
                                  "amount": 0,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "updatedBefore": {
                        "value": "2019-09-2100:00:00"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidRequest",
                        "message": "The request is invalid.",
                        "details": ""
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersStatusResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersStatusResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersStatusResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersStatusResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersStatusResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetPurchaseOrdersStatusResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/vendor/shipping/v1/shipmentConfirmations": {
      "post": {
        "tags": [
          "Vendor Shipments"
        ],
        "description": "Submits one or more shipment confirmations for vendor orders.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "SubmitShipmentConfirmations",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A request to submit shipment confirmation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "transactionId": {
                    "description": "GUID assigned by Amazon to identify this transaction. It will be used in Transaction Status API as reference to get status of this transaction.",
                    "type": "string"
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "body": {
                        "value": {
                          "shipmentConfirmations": [
                            {
                              "shipmentIdentifier": "TestShipmentConfirmation202",
                              "shipmentConfirmationDate": "2021-03-11T12:38:23.388Z",
                              "sellingParty": {
                                "partyId": "ABCD1"
                              },
                              "shipFromParty": {
                                "partyId": "EFGH1"
                              },
                              "shipToParty": {
                                "partyId": "JKL1"
                              },
                              "shipmentConfirmationType": "Original",
                              "shippedItems": [
                                {
                                  "itemSequenceNumber": "001",
                                  "shippedQuantity": {
                                    "amount": 100,
                                    "unitOfMeasure": "Eaches"
                                  },
                                  "itemDetails": {
                                    "purchaseOrderNumber": "TestOrder202"
                                  }
                                },
                                {
                                  "itemSequenceNumber": "002",
                                  "shippedQuantity": {
                                    "amount": 100,
                                    "unitOfMeasure": "Cases",
                                    "totalWeight": {
                                      "amount": "332.8",
                                      "unitOfMeasure": "POUNDS"
                                    }
                                  },
                                  "itemDetails": {
                                    "purchaseOrderNumber": "TestOrder202"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  },
                  "response": {
                    "payload": {
                      "transactionId": "20190905010908-8a3b6901-ef20-412f-9270-21c021796605"
                    }
                  }
                },
                {
                  "request": {
                    "parameters": {
                      "body": {}
                    }
                  },
                  "response": {
                    "payload": {
                      "transactionId": "mock-TransactionId-20190905010908-8a3b6901-ef20-412f-9270-21c021796605"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "body": {
                      "value": {
                        "shipmentConfirmations": [
                          {
                            "shipmentIdentifier": "MOCKSHIPMENTID"
                          }
                        ]
                      }
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "InvalidInput",
                      "message": "Invalid Shipment ID"
                    }
                  ]
                }
              }
            ]
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "SubmitShipmentConfirmations"
      }
    },
    "/vendor/shipping/v1/shipments": {
      "post": {
        "tags": [
          "Vendor Shipments"
        ],
        "description": "Submits one or more shipment request for vendor Orders.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "SubmitShipments",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A request to submit shipment request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitShipments"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "body": {
                      "value": {
                        "shipments": [
                          {
                            "vendorShipmentIdentifier": "00050003",
                            "buyerReferenceNumber": "1234567",
                            "transactionType": "New",
                            "transactionDate": "2019-08-07T19:56:45.632",
                            "shipmentFreightTerm": "Collect",
                            "sellingParty": {
                              "partyId": "PQRSS"
                            },
                            "shipFromParty": {
                              "address": {
                                "name": "ABC electronics warehouse",
                                "addressLine1": "DEF 1st street",
                                "city": "Lisses",
                                "stateOrRegion": "abcland",
                                "postalCode": "91090",
                                "countryCode": "DE"
                              },
                              "partyId": "999US"
                            },
                            "shipToParty": {
                              "partyId": "ABCDF"
                            },
                            "shipmentMeasurements": {
                              "totalCartonCount": 30,
                              "totalPalletStackable": 30,
                              "totalPalletNonStackable": 30,
                              "shipmentWeight": {
                                "unitOfMeasure": "Kg",
                                "value": "120.45"
                              },
                              "shipmentVolume": {
                                "unitOfMeasure": "CuFt",
                                "value": "2.4"
                              }
                            },
                            "collectFreightPickupDetails": {
                              "requestedPickUp": "2019-08-07T19:56:45.632"
                            },
                            "purchaseOrders": [
                              {
                                "purchaseOrderNumber": "1BBBAAAA",
                                "items": [
                                  {
                                    "itemSequenceNumber": "001",
                                    "vendorProductIdentifier": "9782700001659",
                                    "buyerProductIdentifier": "9782700001610",
                                    "shippedQuantity": {
                                      "amount": 100,
                                      "unitOfMeasure": "Eaches",
                                      "unitSize": 1
                                    },
                                    "maximumRetailPrice": {
                                      "currencyCode": "USD",
                                      "amount": "90.80"
                                    }
                                  },
                                  {
                                    "itemSequenceNumber": "002",
                                    "vendorProductIdentifier": "9782700001600",
                                    "buyerProductIdentifier": "9782700001680",
                                    "shippedQuantity": {
                                      "amount": 100,
                                      "unitOfMeasure": "Cases",
                                      "unitSize": 1,
                                      "totalWeight": {
                                        "amount": "182.3",
                                        "unitOfMeasure": "POUNDS"
                                      }
                                    },
                                    "maximumRetailPrice": {
                                      "currencyCode": "USD",
                                      "amount": "10000"
                                    }
                                  }
                                ]
                              }
                            ],
                            "importDetails": {
                              "methodOfPayment": "PaidByBuyer",
                              "sealNumber": "0010101",
                              "route": {
                                "stops": [
                                  {
                                    "functionCode": "PortOfDischarge",
                                    "locationIdentification": {
                                      "type": "string",
                                      "locationCode": "string",
                                      "countryCode": "US"
                                    },
                                    "arrivalTime": "2021-07-12T22:22:25.038Z",
                                    "departureTime": "2021-07-12T22:22:25.038Z"
                                  }
                                ]
                              },
                              "importContainers": "string",
                              "billableWeight": {
                                "unitOfMeasure": "G",
                                "value": "string"
                              },
                              "estimatedShipByDate": "2021-07-12T22:22:25.038Z"
                            },
                            "containers": [
                              {
                                "containerType": "carton",
                                "containerSequenceNumber": "001",
                                "containerIdentifiers": [
                                  {
                                    "containerIdentificationType": "SSCC",
                                    "containerIdentificationNumber": "4251245123534"
                                  }
                                ],
                                "trackingNumber": "1Z69663R0347795889",
                                "dimensions": {
                                  "length": "12",
                                  "width": "12",
                                  "height": "12",
                                  "unitOfMeasure": "IN"
                                },
                                "weight": {
                                  "unitOfMeasure": "KG",
                                  "value": "10"
                                },
                                "packedItems": [
                                  {
                                    "itemSequenceNumber": "001",
                                    "buyerProductIdentifier": "B07DFVDRAA",
                                    "vendorProductIdentifier": "12312412421",
                                    "packedQuantity": {
                                      "amount": 1,
                                      "unitOfMeasure": "Each"
                                    },
                                    "itemDetails": {
                                      "purchaseOrderNumber": "MBvnLr0fw",
                                      "lotNumber": "10101010",
                                      "expiry": {
                                        "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                        "expiryDate": "2021-07-12T22:22:25.038Z",
                                        "expiryAfterDuration": {
                                          "durationUnit": "Days",
                                          "durationValue": 0
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "containerType": "pallet",
                                "containerSequenceNumber": "002",
                                "containerIdentifiers": [
                                  {
                                    "containerIdentificationType": "SSCC",
                                    "containerIdentificationNumber": "ATR123213216"
                                  }
                                ],
                                "trackingNumber": "TRACK12345",
                                "dimensions": {
                                  "length": "12",
                                  "width": "12",
                                  "height": "12",
                                  "unitOfMeasure": "IN"
                                },
                                "weight": {
                                  "unitOfMeasure": "KG",
                                  "value": "10"
                                },
                                "tier": 2,
                                "block": 2,
                                "innerContainersDetails": {
                                  "containerCount": 10,
                                  "containerSequenceNumbers": [
                                    {
                                      "containerSequenceNumber": "002"
                                    },
                                    {
                                      "containerSequenceNumber": "003"
                                    }
                                  ]
                                },
                                "packedItems": [
                                  {
                                    "itemSequenceNumber": "001",
                                    "buyerProductIdentifier": "B07DFVDRAA",
                                    "vendorProductIdentifier": "12312412421",
                                    "packedQuantity": {
                                      "amount": 1,
                                      "unitOfMeasure": "Each"
                                    },
                                    "itemDetails": {
                                      "purchaseOrderNumber": "MBvnLr0fw",
                                      "lotNumber": "101001",
                                      "expiry": {
                                        "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                        "expiryDate": "2021-07-12T22:22:25.038Z",
                                        "expiryAfterDuration": {
                                          "durationUnit": "Days",
                                          "durationValue": 0
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "transportationDetails": {
                              "shipMode": "LessThanTruckLoad",
                              "transportationMode": "Road",
                              "shippedDate": "2019-08-07T19:56:45.632",
                              "estimatedDeliveryDate": "2019-08-07T19:56:45.632",
                              "shipmentDeliveryDate": "2019-08-07T19:56:45.632",
                              "carrierDetails": {
                                "name": "UPS",
                                "phone": "1234567890",
                                "email": "abc@xyz.com",
                                "code": "string",
                                "shipmentReferenceNumber": "TRACK123123"
                              },
                              "billOfLadingNumber": "1234567890"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "response": {
                  "payload": {
                    "transactionId": "mock-TransactionId-5a3066ab-e904-42bd-b6ae-bc70ca1c37e6-20210728234390"
                  }
                }
              },
              {
                "request": {
                  "parameters": {
                    "body": {
                      "value": {
                        "shipments": [
                          {
                            "vendorShipmentIdentifier": "00050003",
                            "buyerReferenceNumber": "1234567",
                            "transactionType": "Cancel",
                            "transactionDate": "2019-08-07T19:56:45.632",
                            "shipmentFreightTerm": "Collect",
                            "sellingParty": {
                              "partyId": "PQRSS"
                            },
                            "shipFromParty": {
                              "address": {
                                "name": "ABC electronics warehouse",
                                "addressLine1": "DEF 1st street",
                                "city": "Lisses",
                                "stateOrRegion": "abcland",
                                "postalCode": "91090",
                                "countryCode": "DE"
                              },
                              "partyId": "999US"
                            },
                            "shipToParty": {
                              "partyId": "ABCDF"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "response": {
                  "payload": {
                    "transactionId": "mock-TransactionId-5a3066ab-e904-42bd-b6ae-bc70ca1c37e6-20210728234390"
                  }
                }
              },
              {
                "request": {
                  "parameters": {
                    "body": {}
                  }
                },
                "response": {
                  "payload": {
                    "transactionId": "mock-TransactionId-a3066ab-e904-42bd-b6ae-bc70ca1c37e6-20210728234395"
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "body": {
                      "value": {
                        "shipments": [
                          {
                            "vendorShipmentIdentifier": "MOCKSHIPID"
                          }
                        ]
                      }
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "InvalidInput",
                      "message": "Invalid Vendor Shipment ID"
                    }
                  ]
                }
              }
            ]
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/SubmitShipmentConfirmationsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "SubmitShipments"
      },
      "get": {
        "tags": [
          "Vendor Shipments"
        ],
        "description": "Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "GetShipmentDetails",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The limit to the number of records returned. Default value is 50 records.",
            "required": false,
            "type": "integer",
            "maximum": 50,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort in ascending or descending order by purchase order creation date.",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Sort in ascending order by shipment creation date."
              },
              {
                "value": "DESC",
                "description": "Sort in descending order by shipment creation date."
              }
            ]
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "Used for pagination when there are more shipments than the specified result size limit.",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Get Shipment Details that became available after this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Get Shipment Details that became available before this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "shipmentConfirmedBefore",
            "in": "query",
            "description": "Get Shipment Details by passing Shipment confirmed create Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "shipmentConfirmedAfter",
            "in": "query",
            "description": "Get Shipment Details by passing Shipment confirmed create Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "packageLabelCreatedBefore",
            "in": "query",
            "description": "Get Shipment Details by passing Package label create Date by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "packageLabelCreatedAfter",
            "in": "query",
            "description": "Get Shipment Details by passing Package label create Date After by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "shippedBefore",
            "in": "query",
            "description": "Get Shipment Details by passing Shipped Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "shippedAfter",
            "in": "query",
            "description": "Get Shipment Details by passing Shipped Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "estimatedDeliveryBefore",
            "in": "query",
            "description": "Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "estimatedDeliveryAfter",
            "in": "query",
            "description": "Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "shipmentDeliveryBefore",
            "in": "query",
            "description": "Get Shipment Details by passing Shipment Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "shipmentDeliveryAfter",
            "in": "query",
            "description": "Get Shipment Details by passing Shipment Delivery Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "requestedPickUpBefore",
            "in": "query",
            "description": "Get Shipment Details by passing Before Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "requestedPickUpAfter",
            "in": "query",
            "description": "Get Shipment Details by passing After Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "scheduledPickUpBefore",
            "in": "query",
            "description": "Get Shipment Details by passing Before scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "scheduledPickUpAfter",
            "in": "query",
            "description": "Get Shipment Details by passing After Scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "currentShipmentStatus",
            "in": "query",
            "description": "Get Shipment Details by passing Current shipment status.",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendorShipmentIdentifier",
            "in": "query",
            "description": "Get Shipment Details by passing Vendor Shipment ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "buyerReferenceNumber",
            "in": "query",
            "description": "Get Shipment Details by passing buyer Reference ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "buyerWarehouseCode",
            "in": "query",
            "description": "Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sellerWarehouseCode",
            "in": "query",
            "description": "Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "pagination": {
                    "nextToken": "MDAwMDAwMDAwMQ=="
                  },
                  "shipments": [
                    {
                      "vendorShipmentIdentifier": "00050003",
                      "buyerReferenceNumber": "1234567",
                      "currentShipmentStatus": "CarrierAssigned",
                      "currentshipmentStatusDate": "2019-08-09T19:56:45.632",
                      "shipmentStatusDetails": [
                        {
                          "shipmentStatus": "CarrierAssigned",
                          "shipmentStatusDate": "2019-08-09T19:56:45.632"
                        },
                        {
                          "shipmentStatus": "TransportationRequested",
                          "shipmentStatusDate": "2019-07-07T19:56:45.632"
                        },
                        {
                          "shipmentStatus": "Created",
                          "shipmentStatusDate": "2019-07-06T19:56:45.632"
                        }
                      ],
                      "shipmentCreateDate": "2019-07-07T19:56:45.632",
                      "shipmentConfirmDate": "2019-08-07T19:56:45.632",
                      "packageLabelCreateDate": "2019-08-07T19:56:45.632",
                      "shipmentFreightTerm": "Collect",
                      "sellingParty": {
                        "partyId": "998US"
                      },
                      "shipFromParty": {
                        "address": {
                          "name": "ABC electronics warehouse",
                          "addressLine1": "DEF 1st street",
                          "city": "Lisses",
                          "stateOrRegion": "abcland",
                          "postalCode": "91090",
                          "countryCode": "DE"
                        },
                        "partyId": "ABCD12"
                      },
                      "shipToParty": {
                        "partyId": "999US"
                      },
                      "shipmentMeasurements": {
                        "totalCartonCount": 30,
                        "totalPalletStackable": 30,
                        "totalPalletNonStackable": 30,
                        "shipmentWeight": {
                          "unitOfMeasure": "Kg",
                          "value": "120.45"
                        },
                        "shipmentVolume": {
                          "unitOfMeasure": "CuFt",
                          "value": "2.4"
                        }
                      },
                      "collectFreightPickupDetails": {
                        "requestedPickUp": "2019-08-07T19:56:45.632",
                        "scheduledPickUp": "2019-08-07T19:56:45.632",
                        "carrierAssignmentDate": "2019-08-07T19:56:45.632"
                      },
                      "purchaseOrders": [
                        {
                          "purchaseOrderNumber": "1BBBAAAA",
                          "purchaseOrderDate": "2019-08-06T19:56:45.632",
                          "shipWindow": "08/25/2021 - 08/31/2021",
                          "items": [
                            {
                              "itemSequenceNumber": "001",
                              "vendorProductIdentifier": "9782700001659",
                              "buyerProductIdentifier": "9782700001690",
                              "shippedQuantity": {
                                "amount": 100,
                                "unitOfMeasure": "Eaches",
                                "unitSize": 1
                              },
                              "maximumRetailPrice": {
                                "currencyCode": "USD",
                                "amount": "12345"
                              }
                            },
                            {
                              "itemSequenceNumber": "002",
                              "vendorProductIdentifier": "9782700001600",
                              "buyerProductIdentifier": "9782700001680",
                              "shippedQuantity": {
                                "amount": 100,
                                "unitOfMeasure": "Cases",
                                "unitSize": 1,
                                "totalWeight": {
                                  "amount": "182.3",
                                  "unitOfMeasure": "POUNDS"
                                }
                              },
                              "maximumRetailPrice": {
                                "currencyCode": "USD",
                                "amount": "10000"
                              }
                            }
                          ]
                        }
                      ],
                      "importDetails": {
                        "methodOfPayment": "PaidByBuyer",
                        "sealNumber": "1232142132",
                        "route": {
                          "stops": [
                            {
                              "functionCode": "PortOfDischarge",
                              "locationIdentification": {
                                "type": "string",
                                "locationCode": "string",
                                "countryCode": "US"
                              },
                              "arrivalTime": "2021-07-12T22:22:25.038Z",
                              "departureTime": "2021-07-12T22:22:25.038Z"
                            }
                          ]
                        },
                        "importContainers": "string",
                        "billableWeight": {
                          "unitOfMeasure": "G",
                          "value": "10"
                        },
                        "estimatedShipByDate": "2021-07-12T22:22:25.038Z",
                        "handlingInstructions": "Oversized"
                      },
                      "containers": [
                        {
                          "containerType": "carton",
                          "containerSequenceNumber": "001",
                          "containerIdentifiers": [
                            {
                              "containerIdentificationType": "SSCC",
                              "containerIdentificationNumber": "213124134213"
                            }
                          ],
                          "trackingNumber": "XXXX",
                          "dimensions": {
                            "length": "12",
                            "width": "12",
                            "height": "12",
                            "unitOfMeasure": "IN"
                          },
                          "weight": {
                            "unitOfMeasure": "KG",
                            "value": "10"
                          },
                          "packedItems": [
                            {
                              "itemSequenceNumber": "001",
                              "buyerProductIdentifier": "B07DFVDRAA",
                              "vendorProductIdentifier": "12312412421",
                              "packedQuantity": {
                                "amount": 1,
                                "unitOfMeasure": "Each"
                              },
                              "itemDetails": {
                                "purchaseOrderNumber": "string",
                                "lotNumber": "string",
                                "expiry": {
                                  "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                  "expiryDate": "2021-07-12T22:22:25.038Z",
                                  "expiryAfterDuration": {
                                    "durationUnit": "Days",
                                    "durationValue": 0
                                  }
                                }
                              }
                            },
                            {
                              "containerType": "pallet",
                              "containerSequenceNumber": "002",
                              "containerIdentifiers": [
                                {
                                  "containerIdentificationType": "SSCC",
                                  "containerIdentificationNumber": "ARK123214214213"
                                }
                              ],
                              "trackingNumber": "TRACK001",
                              "dimensions": {
                                "length": "12",
                                "width": "12",
                                "height": "12",
                                "unitOfMeasure": "IN"
                              },
                              "weight": {
                                "unitOfMeasure": "KG",
                                "value": "10"
                              },
                              "tier": 2,
                              "block": 2,
                              "innerContainersDetails": {
                                "containerCount": 10,
                                "containerSequenceNumbers": [
                                  {
                                    "containerSequenceNumber": "002"
                                  },
                                  {
                                    "containerSequenceNumber": "003"
                                  }
                                ]
                              },
                              "packedItems": [
                                {
                                  "itemSequenceNumber": "001",
                                  "buyerProductIdentifier": "B07DFVDRAA",
                                  "vendorProductIdentifier": "12312412421",
                                  "packedQuantity": {
                                    "amount": 1,
                                    "unitOfMeasure": "Each"
                                  },
                                  "itemDetails": {
                                    "purchaseOrderNumber": "string",
                                    "lotNumber": "string",
                                    "expiry": {
                                      "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                      "expiryDate": "2021-07-12T22:22:25.038Z",
                                      "expiryAfterDuration": {
                                        "durationUnit": "Days",
                                        "durationValue": 0
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "transportationDetails": {
                        "shipMode": "LessThanTruckLoad",
                        "transportationMode": "Road",
                        "shippedDate": "2019-08-07T19:56:45.632",
                        "estimatedDeliveryDate": "2019-08-07T19:56:45.632",
                        "shipmentDeliveryDate": "2019-08-07T19:56:45.632",
                        "carrierDetails": {
                          "name": "UPS",
                          "phone": "1234567890",
                          "email": "abc@xyz.com",
                          "code": "string",
                          "shipmentReferenceNumber": "TRACK001"
                        },
                        "billOfLadingNumber": "string"
                      }
                    }
                  ]
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "vendorShipmentIdentifier": {
                      "value": "12345678"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "pagination": {
                      "nextToken": "MDAwMDAwMDAwMQ=="
                    },
                    "shipments": [
                      {
                        "vendorShipmentIdentifier": "00050003",
                        "buyerReferenceNumber": "1234567",
                        "currentShipmentStatus": "Created",
                        "currentshipmentStatusDate": "2019-08-07T19:56:45.632",
                        "shipmentStatusDetails": [
                          {
                            "shipmentStatus": "Created",
                            "shipmentStatusDate": "2019-08-07T19:56:45.632"
                          }
                        ],
                        "shipmentCreateDate": "2019-07-07T19:56:45.632",
                        "shipmentConfirmDate": "2019-08-07T19:56:45.632",
                        "packageLabelCreateDate": "2019-08-07T19:56:45.632",
                        "shipmentFreightTerm": "Collect",
                        "sellingParty": {
                          "partyId": "998US"
                        },
                        "shipFromParty": {
                          "address": {
                            "name": "ABC electronics warehouse",
                            "addressLine1": "DEF 1st street",
                            "city": "Lisses",
                            "stateOrRegion": "abcland",
                            "postalCode": "91090",
                            "countryCode": "DE"
                          },
                          "partyId": "ABCD12"
                        },
                        "shipToParty": {
                          "partyId": "999US"
                        },
                        "shipmentMeasurements": {
                          "totalCartonCount": 30,
                          "totalPalletStackable": 30,
                          "totalPalletNonStackable": 30,
                          "shipmentWeight": {
                            "unitOfMeasure": "Kg",
                            "value": "120.45"
                          },
                          "shipmentVolume": {
                            "unitOfMeasure": "CuFt",
                            "value": "2.4"
                          }
                        },
                        "collectFreightPickupDetails": {
                          "requestedPickUp": "2019-08-07T19:56:45.632",
                          "scheduledPickUp": "2019-08-07T19:56:45.632",
                          "carrierAssignmentDate": "2019-08-07T19:56:45.632"
                        },
                        "purchaseOrders": [
                          {
                            "purchaseOrderNumber": "1BBBAAAA",
                            "purchaseOrderDate": "2019-08-07T19:56:45.632",
                            "shipWindow": "08/25/2021 - 08/31/2021",
                            "items": [
                              {
                                "itemSequenceNumber": "001",
                                "vendorProductIdentifier": "9782700001659",
                                "buyerProductIdentifier": "9782700001690",
                                "shippedQuantity": {
                                  "amount": 100,
                                  "unitOfMeasure": "Eaches",
                                  "unitSize": 1
                                },
                                "maximumRetailPrice": {
                                  "currencyCode": "USD",
                                  "amount": "12345"
                                }
                              },
                              {
                                "itemSequenceNumber": "002",
                                "vendorProductIdentifier": "9782700001600",
                                "buyerProductIdentifier": "9782700001680",
                                "shippedQuantity": {
                                  "amount": 100,
                                  "unitOfMeasure": "Cases",
                                  "unitSize": 1,
                                  "totalWeight": {
                                    "amount": "182.3",
                                    "unitOfMeasure": "POUNDS"
                                  }
                                },
                                "maximumRetailPrice": {
                                  "currencyCode": "USD",
                                  "amount": "10000"
                                }
                              }
                            ]
                          }
                        ],
                        "importDetails": {
                          "methodOfPayment": "PaidByBuyer",
                          "sealNumber": "1232142132",
                          "route": {
                            "stops": [
                              {
                                "functionCode": "PortOfDischarge",
                                "locationIdentification": {
                                  "type": "string",
                                  "locationCode": "string",
                                  "countryCode": "US"
                                },
                                "arrivalTime": "2021-07-12T22:22:25.038Z",
                                "departureTime": "2021-07-12T22:22:25.038Z"
                              }
                            ]
                          },
                          "importContainers": "string",
                          "billableWeight": {
                            "unitOfMeasure": "G",
                            "value": "10"
                          },
                          "estimatedShipByDate": "2021-07-12T22:22:25.038Z",
                          "handlingInstructions": "Oversized"
                        },
                        "containers": [
                          {
                            "containerType": "carton",
                            "containerSequenceNumber": "001",
                            "containerIdentifiers": [
                              {
                                "containerIdentificationType": "SSCC",
                                "containerIdentificationNumber": "213124134213"
                              }
                            ],
                            "trackingNumber": "XXXX",
                            "dimensions": {
                              "length": "12",
                              "width": "12",
                              "height": "12",
                              "unitOfMeasure": "IN"
                            },
                            "weight": {
                              "unitOfMeasure": "KG",
                              "value": "10"
                            },
                            "packedItems": [
                              {
                                "itemSequenceNumber": "001",
                                "buyerProductIdentifier": "B07DFVDRAA",
                                "vendorProductIdentifier": "12312412421",
                                "packedQuantity": {
                                  "amount": 1,
                                  "unitOfMeasure": "Each"
                                },
                                "itemDetails": {
                                  "purchaseOrderNumber": "string",
                                  "lotNumber": "string",
                                  "expiry": {
                                    "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                    "expiryDate": "2021-07-12T22:22:25.038Z",
                                    "expiryAfterDuration": {
                                      "durationUnit": "Days",
                                      "durationValue": 0
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "containerType": "pallet",
                            "containerSequenceNumber": "002",
                            "containerIdentifiers": [
                              {
                                "containerIdentificationType": "SSCC",
                                "containerIdentificationNumber": "ARK123214214213"
                              }
                            ],
                            "trackingNumber": "TRACK001",
                            "dimensions": {
                              "length": "12",
                              "width": "12",
                              "height": "12",
                              "unitOfMeasure": "IN"
                            },
                            "weight": {
                              "unitOfMeasure": "KG",
                              "value": "10"
                            },
                            "tier": 2,
                            "block": 2,
                            "innerContainersDetails": {
                              "containerCount": 10,
                              "containerSequenceNumbers": [
                                {
                                  "containerSequenceNumber": "002"
                                },
                                {
                                  "containerSequenceNumber": "003"
                                }
                              ]
                            },
                            "packedItems": [
                              {
                                "itemSequenceNumber": "001",
                                "buyerProductIdentifier": "B07DFVDRAA",
                                "vendorProductIdentifier": "12312412421",
                                "packedQuantity": {
                                  "amount": 1,
                                  "unitOfMeasure": "Each"
                                },
                                "itemDetails": {
                                  "purchaseOrderNumber": "123142341",
                                  "lotNumber": "A12312412",
                                  "expiry": {
                                    "manufacturerDate": "2021-07-12T22:22:25.038Z",
                                    "expiryDate": "2021-07-12T22:22:25.038Z",
                                    "expiryAfterDuration": {
                                      "durationUnit": "Days",
                                      "durationValue": 0
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "transportationDetails": {
                          "shipMode": "LessThanTruckLoad",
                          "transportationMode": "Road",
                          "shippedDate": "2019-08-07T19:56:45.632",
                          "estimatedDeliveryDate": "2019-08-07T19:56:45.632",
                          "shipmentDeliveryDate": "2019-08-07T19:56:45.632",
                          "carrierDetails": {
                            "name": "UPS",
                            "phone": "1234567890",
                            "email": "abc@xyz.com",
                            "code": "1-1231",
                            "shipmentReferenceNumber": "TRACK001"
                          },
                          "billOfLadingNumber": "12534233421"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "vendorShipmentIdentifier": {
                      "value": "null"
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "InvalidRequest",
                      "message": "Request is missing or has invalid parameters",
                      "details": "vendor Shipment Identifier cannot be null"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetShipmentDetailsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "GetShipmentDetails"
      }
    },
    "/vendor/shipping/v1/transportLabels": {
      "get": {
        "tags": [
          "Vendor Shipments"
        ],
        "description": "Returns transport Labels based on the filters that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "GetShipmentLabels",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The limit to the number of records returned. Default value is 50 records.",
            "required": false,
            "type": "integer",
            "maximum": 50,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort in ascending or descending order by transport label creation date.",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "x-docgen-enum-table-extension": [
              {
                "value": "ASC",
                "description": "Sort in ascending order by transport label creation date."
              },
              {
                "value": "DESC",
                "description": "Sort in descending order by transport label creation date."
              }
            ]
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "Used for pagination when there are more transport label than the specified result size limit.",
            "required": false,
            "type": "string"
          },
          {
            "name": "labelCreatedAfter",
            "in": "query",
            "description": "transport Labels that became available after this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "labelcreatedBefore",
            "in": "query",
            "description": "transport Labels that became available before this timestamp will be included in the result. Must be in ISO-8601 date/time format.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "buyerReferenceNumber",
            "in": "query",
            "description": "Get transport labels by passing Buyer Reference Number to retreive the corresponding transport label.",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendorShipmentIdentifier",
            "in": "query",
            "description": "Get transport labels by passing Vendor Shipment ID to retreive the corresponding transport label.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sellerWarehouseCode",
            "in": "query",
            "description": "Get Shipping labels based Vendor Warehouse code. This value should be same as 'shipFromParty.partyId' in the Shipment.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetShipmentLabels"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "pagination": {
                    "nextToken": "MDAwMDAwMDAwMQ=="
                  },
                  "transportLabels": [
                    {
                      "labelCreateDateTime": "1628505423212",
                      "shipmentInformation": {
                        "vendorDetails": {
                          "sellingParty": {
                            "partyId": "WHF47"
                          },
                          "vendorShipmentId": "7822"
                        },
                        "buyerReferenceNumber": "14511336331",
                        "shipToParty": {
                          "partyId": "LAX9"
                        },
                        "shipFromParty": {
                          "partyId": "0-55767831",
                          "address": {
                            "name": "Wheeler Bros., Inc. HQ",
                            "addressLine1": "384 Drum Ave",
                            "addressLine2": "",
                            "addressLine3": "",
                            "city": "Somerset",
                            "stateOrRegion": "PA",
                            "postalCode": "15501",
                            "countryCode": "US"
                          }
                        },
                        "masterTrackingId": "1ZR873R70319165935",
                        "totalLabelCount": 1,
                        "shipMode": "SmallParcel"
                      },
                      "labelData": [
                        {
                          "labelSequenceNumber": 1,
                          "labelFormat": "PDF",
                          "carrierCode": "UPSN",
                          "trackingId": "1ZR873R70319165935",
                          "label": ""
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "vendorShipmentIdentifier": {
                      "value": "12345678"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "pagination": {
                      "nextToken": "MDAwMDAwMDAwMQ=="
                    },
                    "transportLabels": [
                      {
                        "labelCreateDateTime": "1628505423212",
                        "shipmentInformation": {
                          "vendorDetails": {
                            "sellingParty": {
                              "partyId": "WHF47"
                            },
                            "vendorShipmentId": "7822"
                          },
                          "buyerReferenceNumber": "14511336331",
                          "shipToParty": {
                            "partyId": "LAX9"
                          },
                          "shipFromParty": {
                            "partyId": "0-55767831",
                            "address": {
                              "name": "Wheeler Bros., Inc. HQ",
                              "addressLine1": "384 Drum Ave",
                              "addressLine2": "Suite 123",
                              "addressLine3": "DOOR 1",
                              "city": "Somerset",
                              "stateOrRegion": "PA",
                              "postalCode": "15501",
                              "countryCode": "US"
                            }
                          },
                          "masterTrackingId": "1ZR873R70319165935",
                          "totalLabelCount": 1,
                          "shipMode": "SmallParcel"
                        },
                        "labelData": [
                          {
                            "labelSequenceNumber": 1,
                            "labelFormat": "PDF",
                            "carrierCode": "UPSN",
                            "trackingId": "1ZR873R70319165935",
                            "label": ""
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentLabels"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidRequest",
                    "message": "The request is invalid."
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "vendorShipmentIdentifier": {
                      "value": "null"
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "InvalidRequest",
                      "message": "Request is missing or has invalid parameters",
                      "details": "vendor Shipment Identifier cannot be null"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetShipmentLabels"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetShipmentLabels"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetShipmentLabels"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetShipmentLabels"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetShipmentLabels"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetShipmentLabels"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetShipmentLabels"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        },
        "summary": "GetShipmentLabels"
      }
    },
    "/vendor/transactions/v1/transactions/{transactionId}": {
      "get": {
        "tags": [
          "vendorTransaction"
        ],
        "description": "Returns the status of the transaction that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
        "operationId": "getTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "The GUID provided by Amazon in the 'transactionId' field in response to the post request of a specific transaction.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            },
            "examples": {
              "application/json": {
                "payload": {
                  "transactionStatus": {
                    "transactionId": "20190108091302-6ca0ac50-d06e-45f5-a1e2-eb448eadac50",
                    "status": "Processing"
                  }
                }
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "transactionId": {
                      "value": "20190904190535-eef8cad8-418e-4ed3-ac72-789e2ee6214a"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "transactionStatus": {
                      "transactionId": "20190904190535-eef8cad8-418e-4ed3-ac72-789e2ee6214a",
                      "status": "Processing"
                    }
                  }
                }
              },
              {
                "request": {
                  "parameters": {
                    "transactionId": {
                      "value": "20190918190535-eef8cad8-418e-456f-ac72-789e2ee6813c"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "transactionStatus": {
                      "transactionId": "20190918190535-eef8cad8-418e-456f-ac72-789e2ee6813c",
                      "status": "Failure",
                      "errors": [
                        {
                          "code": "INVALID_ORDER_ID",
                          "message": "Invalid order ID."
                        }
                      ]
                    }
                  }
                }
              },
              {
                "request": {
                  "parameters": {}
                },
                "response": {
                  "payload": {
                    "transactionStatus": {
                      "transactionId": "20190904190535-eef8cad8-418e-4ed3-ac72-789e2ee6214a",
                      "status": "Processing"
                    }
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "transactionId": {
                      "value": "Tran0904190535-eef8cad8-418e-4ed3-ac72-789e2ee6214a"
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "InvalidInput",
                      "message": "Invalid transmission ID.",
                      "details": ""
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      },
      "parameters": []
    }
  },
  "x-components": {}
}