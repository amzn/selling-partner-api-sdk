name: Create Release

on:
  workflow_dispatch:
    inputs:
      newVersionNumber:
        type: string
        description: New version number
        required: true
      currentVersionNumber:
        type: string
        description: Current version number
        required: true

jobs:
  build-php:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: json, curl, simplexml, spl, pcre
          coverage: xdebug

      - name: Validate composer.json and composer.lock
        working-directory: ./php
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: php/vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        working-directory: ./php
        run: composer install --prefer-dist --no-progress

      - name: Create .env file to test SP-API endpoints
        working-directory: ./php
        run: |
          echo "SP_API_CLIENT_ID=${{ secrets.SP_API_CLIENT_ID }}" >> .env
          echo "SP_API_CLIENT_SECRET=${{ secrets.SP_API_CLIENT_SECRET }}" >> .env
          echo "SP_API_REFRESH_TOKEN=${{ secrets.SP_API_REFRESH_TOKEN }}" >> .env
          echo "SP_API_ENDPOINT=https://api.amazon.com/auth/o2/token" >> .env
          echo "SP_API_ENDPOINT_HOST=https://sandbox.sellingpartnerapi-na.amazon.com" >> .env
          echo "SP_API_MARKETPLACE=ATVPDKIKX0DER" >> .env
          echo "VENDOR_API_CLIENT_ID=${{ secrets.VENDOR_API_CLIENT_ID }}" >> .env
          echo "VENDOR_API_CLIENT_SECRET=${{ secrets.VENDOR_API_CLIENT_SECRET }}" >> .env
          echo "VENDOR_API_REFRESH_TOKEN=${{ secrets.VENDOR_API_REFRESH_TOKEN }}" >> .env
          echo "VENDOR_API_ENDPOINT=https://api.amazon.com/auth/o2/token" >> .env
          echo "VENDOR_API_ENDPOINT_HOST=https://sandbox.sellingpartnerapi-na.amazon.com" >> .env
          echo "VENDOR_API_MARKETPLACE=A2Q3Y263D00KWC" >> .env

      - name: Test with PHPUnit and cleanup
        working-directory: ./php
        run: |
          if ! vendor/bin/phpunit sdk/test/Api --testdox; then
            echo "Tests failed"
            exit 1
          fi

      - name: Cleanup test files
        if: success()
        working-directory: ./php
        run: |
            cd sdk
            rm -rf test
            echo "Test directory removed"
            rm -rf phpunit.xml.dist
            echo "PHPUnit config file removed"

  build-java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'corretto'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build SDK jar with Gradle
        working-directory: java/sdk
        run: ./gradlew fatJar

  create-release:
    needs: [build-php, build-java]
    if: |
      always() &&
      needs.build-php.result == 'success' &&
      needs.build-java.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create or update tag
        uses: actions/github-script@v5
        with:
          script: |
            try {
              // Try to delete existing tag if it exists
              try {
                await github.rest.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "tags/${{ github.event.inputs.currentVersionNumber }}"
                });
                console.log('Deleted existing tag');
              } catch (error) {
                // Ignore error if tag doesn't exist
                console.log('No existing tag to delete');
              }
              
              // Create new tag
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "refs/tags/${{ github.event.inputs.currentVersionNumber }}",
                sha: context.sha
              });
            } catch (error) {
              core.setFailed(`Failed to create tag: ${error.message}`);
            }

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            java/sdk/build/libs/selling-partner-api-java-sdk-0.1.0.jar
          tag_name: ${{ github.event.inputs.currentVersionNumber }}

      - name: Update PHP version
        working-directory: ./php
        run: |
          sed -i 's/"version": "${{ github.event.inputs.currentVersionNumber }}"/"version": "${{ github.event.inputs.newVersionNumber }}"/' composer.json

      - name: Update Java version
        working-directory: java/config
        run: |
          sed -i '/"artifactVersion": "${{ github.event.inputs.currentVersionNumber }}"/s/"${{ github.event.inputs.currentVersionNumber }}"/"${{ github.event.inputs.newVersionNumber }}"/' config.json

      - name: Create PR
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: Update PHP and Java SDKs
          title: 'Bump version'
          body: |
            Bump version after current version has been released.
          branch: feature/bump-version
          assignees: leonardonakagawa
          reviewers: leonardonakagawa
          token: ${{ secrets.NAKAGLEO_PAT }}
